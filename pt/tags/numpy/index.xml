<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>numpy on Phelipe Teles</title>
    <link>https://phelipetls.github.io/pt/tags/numpy/</link>
    <description>Recent content in numpy on Phelipe Teles</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Conteúdo licenciado sob a licença Creative Commons Attribution 4.0 International</copyright>
    <lastBuildDate>Sun, 04 Aug 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://phelipetls.github.io/pt/tags/numpy/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Processo de Gram-Schmidt com NumPy</title>
      <link>https://phelipetls.github.io/pt/posts/gram-schmidt/</link>
      <pubDate>Sun, 04 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://phelipetls.github.io/pt/posts/gram-schmidt/</guid>
      <description>Em Álgebra Linear, processo de Gram-Schmidt é um algoritmo usado para tornar um conjunto de vetores perpendiculares entre si (o que também se conhece por ortogonalização).</description>
    </item>
    
    <item>
      <title>Método de Newton</title>
      <link>https://phelipetls.github.io/pt/posts/metodo-de-newton/</link>
      <pubDate>Sun, 17 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://phelipetls.github.io/pt/posts/metodo-de-newton/</guid>
      <description>O Método de Newton é um conhecido algoritmo para chegar a soluções númericas de uma equação, normalmente uma para a qual a solução não é tão trivial.</description>
    </item>
    
    <item>
      <title>Três algoritmos para a sequência de Fibonacci</title>
      <link>https://phelipetls.github.io/pt/posts/tres-algoritmos-para-a-sequencia-de-fibonacci/</link>
      <pubDate>Sun, 03 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://phelipetls.github.io/pt/posts/tres-algoritmos-para-a-sequencia-de-fibonacci/</guid>
      <description>A sequência de fibonacci é uma velha conhecida dos que estudam programação. Por isso, esse post não deve soar tão estimulante para pessoas que trabalham com programação há muito tempo, mas prometo que algo ainda pode ser aproveitado.</description>
    </item>
    
    <item>
      <title>Puzzle do cavalo no tabuleiro infinito com NumPy</title>
      <link>https://phelipetls.github.io/pt/posts/puzzle-do-cavalo-no-tabuleiro-infinito-com-numpy/</link>
      <pubDate>Mon, 18 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>https://phelipetls.github.io/pt/posts/puzzle-do-cavalo-no-tabuleiro-infinito-com-numpy/</guid>
      <description>Para estrear o blog, escolhi explorar um puzzle probabilístico, que vi no blog do David Robinson, que consiste em estimar a probabilidade de um cavalo voltar à sua posição inicial após ter saltado aleatoriamente 20 vezes num tabuleiro de xadrez infinito (sendo os 8 possíveis saltos igualmente prováveis).</description>
    </item>
    
  </channel>
</rss>
