import{k as f,D as v,b as h}from"./floating-ui.dom.browser.min.b9202534.js";import"./ThemeSelect.astro_astro_type_script_index_0_lang.a8b55151.js";const d=document.querySelector("[data-blog-post-container]"),a=document.querySelector("[data-toggle-toc]"),i=document.querySelector("[data-blog-post-toc-container]"),u=localStorage.getItem("__preferred_toc_state");u!==null&&(u==="open"?p():b());function p(){d?.setAttribute("data-toc","open"),localStorage.setItem("__preferred_toc_state","open"),a.setAttribute("aria-label",a.dataset.closedTocLabel??"")}function b(){d?.setAttribute("data-toc","closed"),localStorage.setItem("__preferred_toc_state","closed"),a.setAttribute("aria-label",a.dataset.openTocLabel??"")}a?.addEventListener("click",()=>{d.dataset.toc==="open"?(b(),i?.addEventListener("transitionend",()=>{i.classList.add("invisible")},{once:!0})):(p(),i?.classList.remove("invisible"))});for(const e of document.querySelectorAll("[data-codeblock] pre.twoslash data-lsp"))e.addEventListener("mouseover",async r=>{if(!r.target)return;const t=document.createElement("div"),o=r.target;t.setAttribute("role","tooltip");const n="twoslash-lsp-tooltip";t.setAttribute("id",n),o.setAttribute("aria-describedby",n);const{x:c,y:m}=await f(o,t,{placement:"bottom-start",middleware:[v(8),h()]});Object.assign(t.style,{left:`${c}px`,top:`${m}px`});const g=o.getAttribute("lsp");t.textContent=g,t.classList.add("font-mono","absolute","bg-gray-700","text-white","text-left","p-2","text-sm","whitespace-pre-wrap"),document.body.append(t),o.addEventListener("mouseout",()=>{t.remove(),o.removeAttribute("aria-describedby")},{once:!0})});const l=document.querySelector("nav[data-toc-wrapper] ol"),s=l?.closest("[data-toc-wrapper]"),y=document.querySelector("[data-blog-post]"),A=l?.querySelector("li");function I(e){e.setAttribute("data-active","")}function S(e){e.removeAttribute("data-active")}function T(){l?.querySelectorAll("li").forEach(S)}function _(e){const r=e.getAttribute("id"),t=l?.querySelector(`li a[href="#${r}"]`);return t?t.closest("li"):null}const q=new IntersectionObserver(e=>{e.forEach(r=>{if(!s)return null;const t=r.target;if(r.isIntersecting){const o=_(t);if(!o)return null;T(),I(o);const n=s.getBoundingClientRect(),c=o.getBoundingClientRect();if(o===A){s.scrollTop=0;return}if(n.top>c.top){s.scrollTop-=n.top-c.top;return}c.bottom>n.bottom&&(s.scrollTop+=c.bottom-n.bottom)}})},{threshold:1}),w=y.querySelectorAll("h2, h3, h4, h4, h6");for(const e of w)q.observe(e);
