(() => {
  var __create = Object.create;
  var __defProp = Object.defineProperty;
  var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
  var __getOwnPropNames = Object.getOwnPropertyNames;
  var __getProtoOf = Object.getPrototypeOf;
  var __hasOwnProp = Object.prototype.hasOwnProperty;
  var __markAsModule = (target) => __defProp(target, "__esModule", { value: true });
  var __commonJS = (cb, mod) => function __require() {
    return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
  };
  var __reExport = (target, module, copyDefault, desc) => {
    if (module && typeof module === "object" || typeof module === "function") {
      for (let key of __getOwnPropNames(module))
        if (!__hasOwnProp.call(target, key) && (copyDefault || key !== "default"))
          __defProp(target, key, { get: () => module[key], enumerable: !(desc = __getOwnPropDesc(module, key)) || desc.enumerable });
    }
    return target;
  };
  var __toESM = (module, isNodeMode) => {
    return __reExport(__markAsModule(__defProp(module != null ? __create(__getProtoOf(module)) : {}, "default", !isNodeMode && module && module.__esModule ? { get: () => module.default, enumerable: true } : { value: module, enumerable: true })), module);
  };

  // node_modules/dommatrix/dist/dommatrix.js
  var require_dommatrix = __commonJS({
    "node_modules/dommatrix/dist/dommatrix.js"(exports, module) {
      (function(global2, factory) {
        typeof exports === "object" && typeof module !== "undefined" ? module.exports = factory() : typeof define === "function" && define.amd ? define(factory) : (global2 = typeof globalThis !== "undefined" ? globalThis : global2 || self, global2.CSSMatrix = factory());
      })(exports, function() {
        "use strict";
        function fromArray(array) {
          var m = new CSSMatrix();
          var a = Array.from(array);
          if (!a.every(function(n) {
            return !Number.isNaN(n);
          })) {
            throw TypeError('CSSMatrix: "' + array + '" must only have numbers.');
          }
          if (a.length === 16) {
            var m11 = a[0];
            var m12 = a[1];
            var m13 = a[2];
            var m14 = a[3];
            var m21 = a[4];
            var m22 = a[5];
            var m23 = a[6];
            var m24 = a[7];
            var m31 = a[8];
            var m32 = a[9];
            var m33 = a[10];
            var m34 = a[11];
            var m41 = a[12];
            var m42 = a[13];
            var m43 = a[14];
            var m44 = a[15];
            m.m11 = m11;
            m.a = m11;
            m.m21 = m21;
            m.c = m21;
            m.m31 = m31;
            m.m41 = m41;
            m.e = m41;
            m.m12 = m12;
            m.b = m12;
            m.m22 = m22;
            m.d = m22;
            m.m32 = m32;
            m.m42 = m42;
            m.f = m42;
            m.m13 = m13;
            m.m23 = m23;
            m.m33 = m33;
            m.m43 = m43;
            m.m14 = m14;
            m.m24 = m24;
            m.m34 = m34;
            m.m44 = m44;
          } else if (a.length === 6) {
            var M11 = a[0];
            var M12 = a[1];
            var M21 = a[2];
            var M22 = a[3];
            var M41 = a[4];
            var M42 = a[5];
            m.m11 = M11;
            m.a = M11;
            m.m12 = M12;
            m.b = M12;
            m.m21 = M21;
            m.c = M21;
            m.m22 = M22;
            m.d = M22;
            m.m41 = M41;
            m.e = M41;
            m.m42 = M42;
            m.f = M42;
          } else {
            throw new TypeError("CSSMatrix: expecting an Array of 6/16 values.");
          }
          return m;
        }
        function fromMatrix(m) {
          var keys = Object.keys(new CSSMatrix());
          if (typeof m === "object" && keys.every(function(k) {
            return k in m;
          })) {
            return fromArray([
              m.m11,
              m.m12,
              m.m13,
              m.m14,
              m.m21,
              m.m22,
              m.m23,
              m.m24,
              m.m31,
              m.m32,
              m.m33,
              m.m34,
              m.m41,
              m.m42,
              m.m43,
              m.m44
            ]);
          }
          throw TypeError('CSSMatrix: "' + JSON.stringify(m) + '" is not a DOMMatrix / CSSMatrix / JSON compatible object.');
        }
        function fromString(source) {
          if (typeof source !== "string") {
            throw TypeError('CSSMatrix: "' + source + '" is not a string.');
          }
          var str = String(source).replace(/\s/g, "");
          var m = new CSSMatrix();
          var invalidStringError = 'CSSMatrix: invalid transform string "' + source + '"';
          str.split(")").filter(function(f) {
            return f;
          }).forEach(function(tf) {
            var ref = tf.split("(");
            var prop = ref[0];
            var value = ref[1];
            if (!value) {
              throw TypeError(invalidStringError);
            }
            var components = value.split(",").map(function(n) {
              return n.includes("rad") ? parseFloat(n) * (180 / Math.PI) : parseFloat(n);
            });
            var x = components[0];
            var y = components[1];
            var z = components[2];
            var a = components[3];
            var xyz = [x, y, z];
            var xyza = [x, y, z, a];
            if (prop === "perspective" && x && [y, z].every(function(n) {
              return n === void 0;
            })) {
              m.m34 = -1 / x;
            } else if (prop.includes("matrix") && [6, 16].includes(components.length) && components.every(function(n) {
              return !Number.isNaN(+n);
            })) {
              var values = components.map(function(n) {
                return Math.abs(n) < 1e-6 ? 0 : n;
              });
              m = m.multiply(fromArray(values));
            } else if (prop === "translate3d" && xyz.every(function(n) {
              return !Number.isNaN(+n);
            })) {
              m = m.translate(x, y, z);
            } else if (prop === "translate" && x && z === void 0) {
              m = m.translate(x, y || 0, 0);
            } else if (prop === "rotate3d" && xyza.every(function(n) {
              return !Number.isNaN(+n);
            }) && a) {
              m = m.rotateAxisAngle(x, y, z, a);
            } else if (prop === "rotate" && x && [y, z].every(function(n) {
              return n === void 0;
            })) {
              m = m.rotate(0, 0, x);
            } else if (prop === "scale3d" && xyz.every(function(n) {
              return !Number.isNaN(+n);
            }) && xyz.some(function(n) {
              return n !== 1;
            })) {
              m = m.scale(x, y, z);
            } else if (prop === "scale" && !Number.isNaN(x) && x !== 1 && z === void 0) {
              var nosy = Number.isNaN(+y);
              var sy = nosy ? x : y;
              m = m.scale(x, sy, 1);
            } else if (prop === "skew" && (x || !Number.isNaN(x) && y) && z === void 0) {
              m = m.skew(x, y || 0);
            } else if (/[XYZ]/.test(prop) && x && [y, z].every(function(n) {
              return n === void 0;
            }) && ["translate", "rotate", "scale", "skew"].some(function(p) {
              return prop.includes(p);
            })) {
              if (["skewX", "skewY"].includes(prop)) {
                m = m[prop](x);
              } else {
                var fn = prop.replace(/[XYZ]/, "");
                var axis = prop.replace(fn, "");
                var idx = ["X", "Y", "Z"].indexOf(axis);
                var def = fn === "scale" ? 1 : 0;
                var axeValues = [
                  idx === 0 ? x : def,
                  idx === 1 ? x : def,
                  idx === 2 ? x : def
                ];
                m = m[fn].apply(m, axeValues);
              }
            } else {
              throw TypeError(invalidStringError);
            }
          });
          return m;
        }
        function toArray(m, is2D) {
          if (is2D) {
            return [m.a, m.b, m.c, m.d, m.e, m.f];
          }
          return [
            m.m11,
            m.m12,
            m.m13,
            m.m14,
            m.m21,
            m.m22,
            m.m23,
            m.m24,
            m.m31,
            m.m32,
            m.m33,
            m.m34,
            m.m41,
            m.m42,
            m.m43,
            m.m44
          ];
        }
        function Translate(x, y, z) {
          var m = new CSSMatrix();
          m.m41 = x;
          m.e = x;
          m.m42 = y;
          m.f = y;
          m.m43 = z;
          return m;
        }
        function Rotate(rx, ry, rz) {
          var m = new CSSMatrix();
          var degToRad = Math.PI / 180;
          var radX = rx * degToRad;
          var radY = ry * degToRad;
          var radZ = rz * degToRad;
          var cosx = Math.cos(radX);
          var sinx = -Math.sin(radX);
          var cosy = Math.cos(radY);
          var siny = -Math.sin(radY);
          var cosz = Math.cos(radZ);
          var sinz = -Math.sin(radZ);
          var m11 = cosy * cosz;
          var m12 = -cosy * sinz;
          m.m11 = m11;
          m.a = m11;
          m.m12 = m12;
          m.b = m12;
          m.m13 = siny;
          var m21 = sinx * siny * cosz + cosx * sinz;
          m.m21 = m21;
          m.c = m21;
          var m22 = cosx * cosz - sinx * siny * sinz;
          m.m22 = m22;
          m.d = m22;
          m.m23 = -sinx * cosy;
          m.m31 = sinx * sinz - cosx * siny * cosz;
          m.m32 = sinx * cosz + cosx * siny * sinz;
          m.m33 = cosx * cosy;
          return m;
        }
        function RotateAxisAngle(x, y, z, alpha) {
          var m = new CSSMatrix();
          var length = Math.sqrt(x * x + y * y + z * z);
          if (length === 0) {
            return m;
          }
          var X = x / length;
          var Y = y / length;
          var Z = z / length;
          var angle = alpha * (Math.PI / 360);
          var sinA = Math.sin(angle);
          var cosA = Math.cos(angle);
          var sinA2 = sinA * sinA;
          var x2 = X * X;
          var y2 = Y * Y;
          var z2 = Z * Z;
          var m11 = 1 - 2 * (y2 + z2) * sinA2;
          m.m11 = m11;
          m.a = m11;
          var m12 = 2 * (X * Y * sinA2 + Z * sinA * cosA);
          m.m12 = m12;
          m.b = m12;
          m.m13 = 2 * (X * Z * sinA2 - Y * sinA * cosA);
          var m21 = 2 * (Y * X * sinA2 - Z * sinA * cosA);
          m.m21 = m21;
          m.c = m21;
          var m22 = 1 - 2 * (z2 + x2) * sinA2;
          m.m22 = m22;
          m.d = m22;
          m.m23 = 2 * (Y * Z * sinA2 + X * sinA * cosA);
          m.m31 = 2 * (Z * X * sinA2 + Y * sinA * cosA);
          m.m32 = 2 * (Z * Y * sinA2 - X * sinA * cosA);
          m.m33 = 1 - 2 * (x2 + y2) * sinA2;
          return m;
        }
        function Scale(x, y, z) {
          var m = new CSSMatrix();
          m.m11 = x;
          m.a = x;
          m.m22 = y;
          m.d = y;
          m.m33 = z;
          return m;
        }
        function Skew(angleX, angleY) {
          var m = new CSSMatrix();
          if (angleX) {
            var radX = angleX * Math.PI / 180;
            var tX = Math.tan(radX);
            m.m21 = tX;
            m.c = tX;
          }
          if (angleY) {
            var radY = angleY * Math.PI / 180;
            var tY = Math.tan(radY);
            m.m12 = tY;
            m.b = tY;
          }
          return m;
        }
        function SkewX(angle) {
          return Skew(angle, 0);
        }
        function SkewY(angle) {
          return Skew(0, angle);
        }
        function Multiply(m1, m2) {
          var m11 = m2.m11 * m1.m11 + m2.m12 * m1.m21 + m2.m13 * m1.m31 + m2.m14 * m1.m41;
          var m12 = m2.m11 * m1.m12 + m2.m12 * m1.m22 + m2.m13 * m1.m32 + m2.m14 * m1.m42;
          var m13 = m2.m11 * m1.m13 + m2.m12 * m1.m23 + m2.m13 * m1.m33 + m2.m14 * m1.m43;
          var m14 = m2.m11 * m1.m14 + m2.m12 * m1.m24 + m2.m13 * m1.m34 + m2.m14 * m1.m44;
          var m21 = m2.m21 * m1.m11 + m2.m22 * m1.m21 + m2.m23 * m1.m31 + m2.m24 * m1.m41;
          var m22 = m2.m21 * m1.m12 + m2.m22 * m1.m22 + m2.m23 * m1.m32 + m2.m24 * m1.m42;
          var m23 = m2.m21 * m1.m13 + m2.m22 * m1.m23 + m2.m23 * m1.m33 + m2.m24 * m1.m43;
          var m24 = m2.m21 * m1.m14 + m2.m22 * m1.m24 + m2.m23 * m1.m34 + m2.m24 * m1.m44;
          var m31 = m2.m31 * m1.m11 + m2.m32 * m1.m21 + m2.m33 * m1.m31 + m2.m34 * m1.m41;
          var m32 = m2.m31 * m1.m12 + m2.m32 * m1.m22 + m2.m33 * m1.m32 + m2.m34 * m1.m42;
          var m33 = m2.m31 * m1.m13 + m2.m32 * m1.m23 + m2.m33 * m1.m33 + m2.m34 * m1.m43;
          var m34 = m2.m31 * m1.m14 + m2.m32 * m1.m24 + m2.m33 * m1.m34 + m2.m34 * m1.m44;
          var m41 = m2.m41 * m1.m11 + m2.m42 * m1.m21 + m2.m43 * m1.m31 + m2.m44 * m1.m41;
          var m42 = m2.m41 * m1.m12 + m2.m42 * m1.m22 + m2.m43 * m1.m32 + m2.m44 * m1.m42;
          var m43 = m2.m41 * m1.m13 + m2.m42 * m1.m23 + m2.m43 * m1.m33 + m2.m44 * m1.m43;
          var m44 = m2.m41 * m1.m14 + m2.m42 * m1.m24 + m2.m43 * m1.m34 + m2.m44 * m1.m44;
          return fromArray([
            m11,
            m12,
            m13,
            m14,
            m21,
            m22,
            m23,
            m24,
            m31,
            m32,
            m33,
            m34,
            m41,
            m42,
            m43,
            m44
          ]);
        }
        var CSSMatrix = function CSSMatrix2() {
          var args = [], len = arguments.length;
          while (len--)
            args[len] = arguments[len];
          var m = this;
          m.a = 1;
          m.b = 0;
          m.c = 0;
          m.d = 1;
          m.e = 0;
          m.f = 0;
          m.m11 = 1;
          m.m12 = 0;
          m.m13 = 0;
          m.m14 = 0;
          m.m21 = 0;
          m.m22 = 1;
          m.m23 = 0;
          m.m24 = 0;
          m.m31 = 0;
          m.m32 = 0;
          m.m33 = 1;
          m.m34 = 0;
          m.m41 = 0;
          m.m42 = 0;
          m.m43 = 0;
          m.m44 = 1;
          if (args.length) {
            var ARGS = [16, 6].some(function(l) {
              return l === args.length;
            }) ? args : args[0];
            return m.setMatrixValue(ARGS);
          }
          return m;
        };
        var prototypeAccessors = { isIdentity: { configurable: true }, is2D: { configurable: true } };
        prototypeAccessors.isIdentity.get = function() {
          var m = this;
          return m.m11 === 1 && m.m12 === 0 && m.m13 === 0 && m.m14 === 0 && m.m21 === 0 && m.m22 === 1 && m.m23 === 0 && m.m24 === 0 && m.m31 === 0 && m.m32 === 0 && m.m33 === 1 && m.m34 === 0 && m.m41 === 0 && m.m42 === 0 && m.m43 === 0 && m.m44 === 1;
        };
        prototypeAccessors.is2D.get = function() {
          var m = this;
          return m.m31 === 0 && m.m32 === 0 && m.m33 === 1 && m.m34 === 0 && m.m43 === 0 && m.m44 === 1;
        };
        CSSMatrix.prototype.setMatrixValue = function setMatrixValue(source) {
          var m = this;
          if (typeof source === "string" && source.length && source !== "none") {
            return fromString(source);
          }
          if ([Array, Float64Array, Float32Array].some(function(a) {
            return source instanceof a;
          })) {
            return fromArray(source);
          }
          if ([CSSMatrix, DOMMatrix, Object].some(function(a) {
            return source instanceof a;
          })) {
            return fromMatrix(source);
          }
          return m;
        };
        CSSMatrix.prototype.toFloat32Array = function toFloat32Array(is2D) {
          return Float32Array.from(toArray(this, is2D));
        };
        CSSMatrix.prototype.toFloat64Array = function toFloat64Array(is2D) {
          return Float64Array.from(toArray(this, is2D));
        };
        CSSMatrix.prototype.toString = function toString() {
          var m = this;
          var is2D = m.is2D;
          var values = m.toFloat64Array(is2D).join(", ");
          var type = is2D ? "matrix" : "matrix3d";
          return type + "(" + values + ")";
        };
        CSSMatrix.prototype.toJSON = function toJSON() {
          var m = this;
          var is2D = m.is2D;
          var isIdentity = m.isIdentity;
          return Object.assign({}, m, { is2D, isIdentity });
        };
        CSSMatrix.prototype.multiply = function multiply(m2) {
          return Multiply(this, m2);
        };
        CSSMatrix.prototype.translate = function translate(x, y, z) {
          var X = x;
          var Y = y;
          var Z = z;
          if (Y === void 0) {
            Y = 0;
          }
          if (Z === void 0) {
            Z = 0;
          }
          return Multiply(this, Translate(X, Y, Z));
        };
        CSSMatrix.prototype.scale = function scale(x, y, z) {
          var X = x;
          var Y = y;
          var Z = z;
          if (Y === void 0) {
            Y = x;
          }
          if (Z === void 0) {
            Z = 1;
          }
          return Multiply(this, Scale(X, Y, Z));
        };
        CSSMatrix.prototype.rotate = function rotate(rx, ry, rz) {
          var RX = rx;
          var RY = ry || 0;
          var RZ = rz || 0;
          if (typeof rx === "number" && ry === void 0 && rz === void 0) {
            RZ = RX;
            RX = 0;
            RY = 0;
          }
          return Multiply(this, Rotate(RX, RY, RZ));
        };
        CSSMatrix.prototype.rotateAxisAngle = function rotateAxisAngle(x, y, z, angle) {
          if ([x, y, z, angle].some(function(n) {
            return Number.isNaN(+n);
          })) {
            throw new TypeError("CSSMatrix: expecting 4 values");
          }
          return Multiply(this, RotateAxisAngle(x, y, z, angle));
        };
        CSSMatrix.prototype.skewX = function skewX(angle) {
          return Multiply(this, SkewX(angle));
        };
        CSSMatrix.prototype.skewY = function skewY(angle) {
          return Multiply(this, SkewY(angle));
        };
        CSSMatrix.prototype.skew = function skew(angleX, angleY) {
          return Multiply(this, Skew(angleX, angleY));
        };
        CSSMatrix.prototype.transformPoint = function transformPoint(t) {
          var m = this;
          var x = m.m11 * t.x + m.m21 * t.y + m.m31 * t.z + m.m41 * t.w;
          var y = m.m12 * t.x + m.m22 * t.y + m.m32 * t.z + m.m42 * t.w;
          var z = m.m13 * t.x + m.m23 * t.y + m.m33 * t.z + m.m43 * t.w;
          var w = m.m14 * t.x + m.m24 * t.y + m.m34 * t.z + m.m44 * t.w;
          return t instanceof DOMPoint ? new DOMPoint(x, y, z, w) : {
            x,
            y,
            z,
            w
          };
        };
        Object.defineProperties(CSSMatrix.prototype, prototypeAccessors);
        Object.assign(CSSMatrix, {
          Translate,
          Rotate,
          RotateAxisAngle,
          Scale,
          SkewX,
          SkewY,
          Skew,
          Multiply,
          fromArray,
          fromMatrix,
          fromString,
          toArray
        });
        var version = "1.0.3";
        var Version = version;
        Object.assign(CSSMatrix, { Version });
        return CSSMatrix;
      });
    }
  });

  // node_modules/web-streams-polyfill/dist/ponyfill.js
  var require_ponyfill = __commonJS({
    "node_modules/web-streams-polyfill/dist/ponyfill.js"(exports, module) {
      (function(global2, factory) {
        typeof exports === "object" && typeof module !== "undefined" ? factory(exports) : typeof define === "function" && define.amd ? define(["exports"], factory) : (global2 = typeof globalThis !== "undefined" ? globalThis : global2 || self, factory(global2.WebStreamsPolyfill = {}));
      })(exports, function(exports2) {
        "use strict";
        var SymbolPolyfill = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? Symbol : function(description) {
          return "Symbol(" + description + ")";
        };
        function noop() {
          return void 0;
        }
        function getGlobals() {
          if (typeof self !== "undefined") {
            return self;
          } else if (typeof window !== "undefined") {
            return window;
          } else if (typeof global !== "undefined") {
            return global;
          }
          return void 0;
        }
        var globals = getGlobals();
        function typeIsObject(x) {
          return typeof x === "object" && x !== null || typeof x === "function";
        }
        var rethrowAssertionErrorRejection = noop;
        var originalPromise = Promise;
        var originalPromiseThen = Promise.prototype.then;
        var originalPromiseResolve = Promise.resolve.bind(originalPromise);
        var originalPromiseReject = Promise.reject.bind(originalPromise);
        function newPromise(executor) {
          return new originalPromise(executor);
        }
        function promiseResolvedWith(value) {
          return originalPromiseResolve(value);
        }
        function promiseRejectedWith(reason) {
          return originalPromiseReject(reason);
        }
        function PerformPromiseThen(promise, onFulfilled, onRejected) {
          return originalPromiseThen.call(promise, onFulfilled, onRejected);
        }
        function uponPromise(promise, onFulfilled, onRejected) {
          PerformPromiseThen(PerformPromiseThen(promise, onFulfilled, onRejected), void 0, rethrowAssertionErrorRejection);
        }
        function uponFulfillment(promise, onFulfilled) {
          uponPromise(promise, onFulfilled);
        }
        function uponRejection(promise, onRejected) {
          uponPromise(promise, void 0, onRejected);
        }
        function transformPromiseWith(promise, fulfillmentHandler, rejectionHandler) {
          return PerformPromiseThen(promise, fulfillmentHandler, rejectionHandler);
        }
        function setPromiseIsHandledToTrue(promise) {
          PerformPromiseThen(promise, void 0, rethrowAssertionErrorRejection);
        }
        var queueMicrotask = function() {
          var globalQueueMicrotask = globals && globals.queueMicrotask;
          if (typeof globalQueueMicrotask === "function") {
            return globalQueueMicrotask;
          }
          var resolvedPromise = promiseResolvedWith(void 0);
          return function(fn) {
            return PerformPromiseThen(resolvedPromise, fn);
          };
        }();
        function reflectCall(F, V, args) {
          if (typeof F !== "function") {
            throw new TypeError("Argument is not a function");
          }
          return Function.prototype.apply.call(F, V, args);
        }
        function promiseCall(F, V, args) {
          try {
            return promiseResolvedWith(reflectCall(F, V, args));
          } catch (value) {
            return promiseRejectedWith(value);
          }
        }
        var QUEUE_MAX_ARRAY_SIZE = 16384;
        var SimpleQueue = function() {
          function SimpleQueue2() {
            this._cursor = 0;
            this._size = 0;
            this._front = {
              _elements: [],
              _next: void 0
            };
            this._back = this._front;
            this._cursor = 0;
            this._size = 0;
          }
          Object.defineProperty(SimpleQueue2.prototype, "length", {
            get: function() {
              return this._size;
            },
            enumerable: false,
            configurable: true
          });
          SimpleQueue2.prototype.push = function(element) {
            var oldBack = this._back;
            var newBack = oldBack;
            if (oldBack._elements.length === QUEUE_MAX_ARRAY_SIZE - 1) {
              newBack = {
                _elements: [],
                _next: void 0
              };
            }
            oldBack._elements.push(element);
            if (newBack !== oldBack) {
              this._back = newBack;
              oldBack._next = newBack;
            }
            ++this._size;
          };
          SimpleQueue2.prototype.shift = function() {
            var oldFront = this._front;
            var newFront = oldFront;
            var oldCursor = this._cursor;
            var newCursor = oldCursor + 1;
            var elements = oldFront._elements;
            var element = elements[oldCursor];
            if (newCursor === QUEUE_MAX_ARRAY_SIZE) {
              newFront = oldFront._next;
              newCursor = 0;
            }
            --this._size;
            this._cursor = newCursor;
            if (oldFront !== newFront) {
              this._front = newFront;
            }
            elements[oldCursor] = void 0;
            return element;
          };
          SimpleQueue2.prototype.forEach = function(callback) {
            var i = this._cursor;
            var node = this._front;
            var elements = node._elements;
            while (i !== elements.length || node._next !== void 0) {
              if (i === elements.length) {
                node = node._next;
                elements = node._elements;
                i = 0;
                if (elements.length === 0) {
                  break;
                }
              }
              callback(elements[i]);
              ++i;
            }
          };
          SimpleQueue2.prototype.peek = function() {
            var front = this._front;
            var cursor = this._cursor;
            return front._elements[cursor];
          };
          return SimpleQueue2;
        }();
        function ReadableStreamReaderGenericInitialize(reader, stream) {
          reader._ownerReadableStream = stream;
          stream._reader = reader;
          if (stream._state === "readable") {
            defaultReaderClosedPromiseInitialize(reader);
          } else if (stream._state === "closed") {
            defaultReaderClosedPromiseInitializeAsResolved(reader);
          } else {
            defaultReaderClosedPromiseInitializeAsRejected(reader, stream._storedError);
          }
        }
        function ReadableStreamReaderGenericCancel(reader, reason) {
          var stream = reader._ownerReadableStream;
          return ReadableStreamCancel(stream, reason);
        }
        function ReadableStreamReaderGenericRelease(reader) {
          if (reader._ownerReadableStream._state === "readable") {
            defaultReaderClosedPromiseReject(reader, new TypeError("Reader was released and can no longer be used to monitor the stream's closedness"));
          } else {
            defaultReaderClosedPromiseResetToRejected(reader, new TypeError("Reader was released and can no longer be used to monitor the stream's closedness"));
          }
          reader._ownerReadableStream._reader = void 0;
          reader._ownerReadableStream = void 0;
        }
        function readerLockException(name) {
          return new TypeError("Cannot " + name + " a stream using a released reader");
        }
        function defaultReaderClosedPromiseInitialize(reader) {
          reader._closedPromise = newPromise(function(resolve, reject) {
            reader._closedPromise_resolve = resolve;
            reader._closedPromise_reject = reject;
          });
        }
        function defaultReaderClosedPromiseInitializeAsRejected(reader, reason) {
          defaultReaderClosedPromiseInitialize(reader);
          defaultReaderClosedPromiseReject(reader, reason);
        }
        function defaultReaderClosedPromiseInitializeAsResolved(reader) {
          defaultReaderClosedPromiseInitialize(reader);
          defaultReaderClosedPromiseResolve(reader);
        }
        function defaultReaderClosedPromiseReject(reader, reason) {
          if (reader._closedPromise_reject === void 0) {
            return;
          }
          setPromiseIsHandledToTrue(reader._closedPromise);
          reader._closedPromise_reject(reason);
          reader._closedPromise_resolve = void 0;
          reader._closedPromise_reject = void 0;
        }
        function defaultReaderClosedPromiseResetToRejected(reader, reason) {
          defaultReaderClosedPromiseInitializeAsRejected(reader, reason);
        }
        function defaultReaderClosedPromiseResolve(reader) {
          if (reader._closedPromise_resolve === void 0) {
            return;
          }
          reader._closedPromise_resolve(void 0);
          reader._closedPromise_resolve = void 0;
          reader._closedPromise_reject = void 0;
        }
        var AbortSteps = SymbolPolyfill("[[AbortSteps]]");
        var ErrorSteps = SymbolPolyfill("[[ErrorSteps]]");
        var CancelSteps = SymbolPolyfill("[[CancelSteps]]");
        var PullSteps = SymbolPolyfill("[[PullSteps]]");
        var NumberIsFinite = Number.isFinite || function(x) {
          return typeof x === "number" && isFinite(x);
        };
        var MathTrunc = Math.trunc || function(v) {
          return v < 0 ? Math.ceil(v) : Math.floor(v);
        };
        function isDictionary(x) {
          return typeof x === "object" || typeof x === "function";
        }
        function assertDictionary(obj, context) {
          if (obj !== void 0 && !isDictionary(obj)) {
            throw new TypeError(context + " is not an object.");
          }
        }
        function assertFunction(x, context) {
          if (typeof x !== "function") {
            throw new TypeError(context + " is not a function.");
          }
        }
        function isObject(x) {
          return typeof x === "object" && x !== null || typeof x === "function";
        }
        function assertObject(x, context) {
          if (!isObject(x)) {
            throw new TypeError(context + " is not an object.");
          }
        }
        function assertRequiredArgument(x, position, context) {
          if (x === void 0) {
            throw new TypeError("Parameter " + position + " is required in '" + context + "'.");
          }
        }
        function assertRequiredField(x, field, context) {
          if (x === void 0) {
            throw new TypeError(field + " is required in '" + context + "'.");
          }
        }
        function convertUnrestrictedDouble(value) {
          return Number(value);
        }
        function censorNegativeZero(x) {
          return x === 0 ? 0 : x;
        }
        function integerPart(x) {
          return censorNegativeZero(MathTrunc(x));
        }
        function convertUnsignedLongLongWithEnforceRange(value, context) {
          var lowerBound = 0;
          var upperBound = Number.MAX_SAFE_INTEGER;
          var x = Number(value);
          x = censorNegativeZero(x);
          if (!NumberIsFinite(x)) {
            throw new TypeError(context + " is not a finite number");
          }
          x = integerPart(x);
          if (x < lowerBound || x > upperBound) {
            throw new TypeError(context + " is outside the accepted range of " + lowerBound + " to " + upperBound + ", inclusive");
          }
          if (!NumberIsFinite(x) || x === 0) {
            return 0;
          }
          return x;
        }
        function assertReadableStream(x, context) {
          if (!IsReadableStream(x)) {
            throw new TypeError(context + " is not a ReadableStream.");
          }
        }
        function AcquireReadableStreamDefaultReader(stream) {
          return new ReadableStreamDefaultReader(stream);
        }
        function ReadableStreamAddReadRequest(stream, readRequest) {
          stream._reader._readRequests.push(readRequest);
        }
        function ReadableStreamFulfillReadRequest(stream, chunk, done) {
          var reader = stream._reader;
          var readRequest = reader._readRequests.shift();
          if (done) {
            readRequest._closeSteps();
          } else {
            readRequest._chunkSteps(chunk);
          }
        }
        function ReadableStreamGetNumReadRequests(stream) {
          return stream._reader._readRequests.length;
        }
        function ReadableStreamHasDefaultReader(stream) {
          var reader = stream._reader;
          if (reader === void 0) {
            return false;
          }
          if (!IsReadableStreamDefaultReader(reader)) {
            return false;
          }
          return true;
        }
        var ReadableStreamDefaultReader = function() {
          function ReadableStreamDefaultReader2(stream) {
            assertRequiredArgument(stream, 1, "ReadableStreamDefaultReader");
            assertReadableStream(stream, "First parameter");
            if (IsReadableStreamLocked(stream)) {
              throw new TypeError("This stream has already been locked for exclusive reading by another reader");
            }
            ReadableStreamReaderGenericInitialize(this, stream);
            this._readRequests = new SimpleQueue();
          }
          Object.defineProperty(ReadableStreamDefaultReader2.prototype, "closed", {
            get: function() {
              if (!IsReadableStreamDefaultReader(this)) {
                return promiseRejectedWith(defaultReaderBrandCheckException("closed"));
              }
              return this._closedPromise;
            },
            enumerable: false,
            configurable: true
          });
          ReadableStreamDefaultReader2.prototype.cancel = function(reason) {
            if (reason === void 0) {
              reason = void 0;
            }
            if (!IsReadableStreamDefaultReader(this)) {
              return promiseRejectedWith(defaultReaderBrandCheckException("cancel"));
            }
            if (this._ownerReadableStream === void 0) {
              return promiseRejectedWith(readerLockException("cancel"));
            }
            return ReadableStreamReaderGenericCancel(this, reason);
          };
          ReadableStreamDefaultReader2.prototype.read = function() {
            if (!IsReadableStreamDefaultReader(this)) {
              return promiseRejectedWith(defaultReaderBrandCheckException("read"));
            }
            if (this._ownerReadableStream === void 0) {
              return promiseRejectedWith(readerLockException("read from"));
            }
            var resolvePromise;
            var rejectPromise;
            var promise = newPromise(function(resolve, reject) {
              resolvePromise = resolve;
              rejectPromise = reject;
            });
            var readRequest = {
              _chunkSteps: function(chunk) {
                return resolvePromise({ value: chunk, done: false });
              },
              _closeSteps: function() {
                return resolvePromise({ value: void 0, done: true });
              },
              _errorSteps: function(e) {
                return rejectPromise(e);
              }
            };
            ReadableStreamDefaultReaderRead(this, readRequest);
            return promise;
          };
          ReadableStreamDefaultReader2.prototype.releaseLock = function() {
            if (!IsReadableStreamDefaultReader(this)) {
              throw defaultReaderBrandCheckException("releaseLock");
            }
            if (this._ownerReadableStream === void 0) {
              return;
            }
            if (this._readRequests.length > 0) {
              throw new TypeError("Tried to release a reader lock when that reader has pending read() calls un-settled");
            }
            ReadableStreamReaderGenericRelease(this);
          };
          return ReadableStreamDefaultReader2;
        }();
        Object.defineProperties(ReadableStreamDefaultReader.prototype, {
          cancel: { enumerable: true },
          read: { enumerable: true },
          releaseLock: { enumerable: true },
          closed: { enumerable: true }
        });
        if (typeof SymbolPolyfill.toStringTag === "symbol") {
          Object.defineProperty(ReadableStreamDefaultReader.prototype, SymbolPolyfill.toStringTag, {
            value: "ReadableStreamDefaultReader",
            configurable: true
          });
        }
        function IsReadableStreamDefaultReader(x) {
          if (!typeIsObject(x)) {
            return false;
          }
          if (!Object.prototype.hasOwnProperty.call(x, "_readRequests")) {
            return false;
          }
          return x instanceof ReadableStreamDefaultReader;
        }
        function ReadableStreamDefaultReaderRead(reader, readRequest) {
          var stream = reader._ownerReadableStream;
          stream._disturbed = true;
          if (stream._state === "closed") {
            readRequest._closeSteps();
          } else if (stream._state === "errored") {
            readRequest._errorSteps(stream._storedError);
          } else {
            stream._readableStreamController[PullSteps](readRequest);
          }
        }
        function defaultReaderBrandCheckException(name) {
          return new TypeError("ReadableStreamDefaultReader.prototype." + name + " can only be used on a ReadableStreamDefaultReader");
        }
        var _a;
        var AsyncIteratorPrototype;
        if (typeof SymbolPolyfill.asyncIterator === "symbol") {
          AsyncIteratorPrototype = (_a = {}, _a[SymbolPolyfill.asyncIterator] = function() {
            return this;
          }, _a);
          Object.defineProperty(AsyncIteratorPrototype, SymbolPolyfill.asyncIterator, { enumerable: false });
        }
        var ReadableStreamAsyncIteratorImpl = function() {
          function ReadableStreamAsyncIteratorImpl2(reader, preventCancel) {
            this._ongoingPromise = void 0;
            this._isFinished = false;
            this._reader = reader;
            this._preventCancel = preventCancel;
          }
          ReadableStreamAsyncIteratorImpl2.prototype.next = function() {
            var _this = this;
            var nextSteps = function() {
              return _this._nextSteps();
            };
            this._ongoingPromise = this._ongoingPromise ? transformPromiseWith(this._ongoingPromise, nextSteps, nextSteps) : nextSteps();
            return this._ongoingPromise;
          };
          ReadableStreamAsyncIteratorImpl2.prototype.return = function(value) {
            var _this = this;
            var returnSteps = function() {
              return _this._returnSteps(value);
            };
            return this._ongoingPromise ? transformPromiseWith(this._ongoingPromise, returnSteps, returnSteps) : returnSteps();
          };
          ReadableStreamAsyncIteratorImpl2.prototype._nextSteps = function() {
            var _this = this;
            if (this._isFinished) {
              return Promise.resolve({ value: void 0, done: true });
            }
            var reader = this._reader;
            if (reader._ownerReadableStream === void 0) {
              return promiseRejectedWith(readerLockException("iterate"));
            }
            var resolvePromise;
            var rejectPromise;
            var promise = newPromise(function(resolve, reject) {
              resolvePromise = resolve;
              rejectPromise = reject;
            });
            var readRequest = {
              _chunkSteps: function(chunk) {
                _this._ongoingPromise = void 0;
                queueMicrotask(function() {
                  return resolvePromise({ value: chunk, done: false });
                });
              },
              _closeSteps: function() {
                _this._ongoingPromise = void 0;
                _this._isFinished = true;
                ReadableStreamReaderGenericRelease(reader);
                resolvePromise({ value: void 0, done: true });
              },
              _errorSteps: function(reason) {
                _this._ongoingPromise = void 0;
                _this._isFinished = true;
                ReadableStreamReaderGenericRelease(reader);
                rejectPromise(reason);
              }
            };
            ReadableStreamDefaultReaderRead(reader, readRequest);
            return promise;
          };
          ReadableStreamAsyncIteratorImpl2.prototype._returnSteps = function(value) {
            if (this._isFinished) {
              return Promise.resolve({ value, done: true });
            }
            this._isFinished = true;
            var reader = this._reader;
            if (reader._ownerReadableStream === void 0) {
              return promiseRejectedWith(readerLockException("finish iterating"));
            }
            if (!this._preventCancel) {
              var result = ReadableStreamReaderGenericCancel(reader, value);
              ReadableStreamReaderGenericRelease(reader);
              return transformPromiseWith(result, function() {
                return { value, done: true };
              });
            }
            ReadableStreamReaderGenericRelease(reader);
            return promiseResolvedWith({ value, done: true });
          };
          return ReadableStreamAsyncIteratorImpl2;
        }();
        var ReadableStreamAsyncIteratorPrototype = {
          next: function() {
            if (!IsReadableStreamAsyncIterator(this)) {
              return promiseRejectedWith(streamAsyncIteratorBrandCheckException("next"));
            }
            return this._asyncIteratorImpl.next();
          },
          return: function(value) {
            if (!IsReadableStreamAsyncIterator(this)) {
              return promiseRejectedWith(streamAsyncIteratorBrandCheckException("return"));
            }
            return this._asyncIteratorImpl.return(value);
          }
        };
        if (AsyncIteratorPrototype !== void 0) {
          Object.setPrototypeOf(ReadableStreamAsyncIteratorPrototype, AsyncIteratorPrototype);
        }
        function AcquireReadableStreamAsyncIterator(stream, preventCancel) {
          var reader = AcquireReadableStreamDefaultReader(stream);
          var impl = new ReadableStreamAsyncIteratorImpl(reader, preventCancel);
          var iterator = Object.create(ReadableStreamAsyncIteratorPrototype);
          iterator._asyncIteratorImpl = impl;
          return iterator;
        }
        function IsReadableStreamAsyncIterator(x) {
          if (!typeIsObject(x)) {
            return false;
          }
          if (!Object.prototype.hasOwnProperty.call(x, "_asyncIteratorImpl")) {
            return false;
          }
          try {
            return x._asyncIteratorImpl instanceof ReadableStreamAsyncIteratorImpl;
          } catch (_a2) {
            return false;
          }
        }
        function streamAsyncIteratorBrandCheckException(name) {
          return new TypeError("ReadableStreamAsyncIterator." + name + " can only be used on a ReadableSteamAsyncIterator");
        }
        var NumberIsNaN = Number.isNaN || function(x) {
          return x !== x;
        };
        function CreateArrayFromList(elements) {
          return elements.slice();
        }
        function CopyDataBlockBytes(dest, destOffset, src, srcOffset, n) {
          new Uint8Array(dest).set(new Uint8Array(src, srcOffset, n), destOffset);
        }
        function TransferArrayBuffer(O) {
          return O;
        }
        function IsDetachedBuffer(O) {
          return false;
        }
        function ArrayBufferSlice(buffer, begin, end) {
          if (buffer.slice) {
            return buffer.slice(begin, end);
          }
          var length = end - begin;
          var slice = new ArrayBuffer(length);
          CopyDataBlockBytes(slice, 0, buffer, begin, length);
          return slice;
        }
        function IsNonNegativeNumber(v) {
          if (typeof v !== "number") {
            return false;
          }
          if (NumberIsNaN(v)) {
            return false;
          }
          if (v < 0) {
            return false;
          }
          return true;
        }
        function CloneAsUint8Array(O) {
          var buffer = ArrayBufferSlice(O.buffer, O.byteOffset, O.byteOffset + O.byteLength);
          return new Uint8Array(buffer);
        }
        function DequeueValue(container) {
          var pair = container._queue.shift();
          container._queueTotalSize -= pair.size;
          if (container._queueTotalSize < 0) {
            container._queueTotalSize = 0;
          }
          return pair.value;
        }
        function EnqueueValueWithSize(container, value, size) {
          if (!IsNonNegativeNumber(size) || size === Infinity) {
            throw new RangeError("Size must be a finite, non-NaN, non-negative number.");
          }
          container._queue.push({ value, size });
          container._queueTotalSize += size;
        }
        function PeekQueueValue(container) {
          var pair = container._queue.peek();
          return pair.value;
        }
        function ResetQueue(container) {
          container._queue = new SimpleQueue();
          container._queueTotalSize = 0;
        }
        var ReadableStreamBYOBRequest = function() {
          function ReadableStreamBYOBRequest2() {
            throw new TypeError("Illegal constructor");
          }
          Object.defineProperty(ReadableStreamBYOBRequest2.prototype, "view", {
            get: function() {
              if (!IsReadableStreamBYOBRequest(this)) {
                throw byobRequestBrandCheckException("view");
              }
              return this._view;
            },
            enumerable: false,
            configurable: true
          });
          ReadableStreamBYOBRequest2.prototype.respond = function(bytesWritten) {
            if (!IsReadableStreamBYOBRequest(this)) {
              throw byobRequestBrandCheckException("respond");
            }
            assertRequiredArgument(bytesWritten, 1, "respond");
            bytesWritten = convertUnsignedLongLongWithEnforceRange(bytesWritten, "First parameter");
            if (this._associatedReadableByteStreamController === void 0) {
              throw new TypeError("This BYOB request has been invalidated");
            }
            if (IsDetachedBuffer(this._view.buffer))
              ;
            ReadableByteStreamControllerRespond(this._associatedReadableByteStreamController, bytesWritten);
          };
          ReadableStreamBYOBRequest2.prototype.respondWithNewView = function(view) {
            if (!IsReadableStreamBYOBRequest(this)) {
              throw byobRequestBrandCheckException("respondWithNewView");
            }
            assertRequiredArgument(view, 1, "respondWithNewView");
            if (!ArrayBuffer.isView(view)) {
              throw new TypeError("You can only respond with array buffer views");
            }
            if (this._associatedReadableByteStreamController === void 0) {
              throw new TypeError("This BYOB request has been invalidated");
            }
            if (IsDetachedBuffer(view.buffer))
              ;
            ReadableByteStreamControllerRespondWithNewView(this._associatedReadableByteStreamController, view);
          };
          return ReadableStreamBYOBRequest2;
        }();
        Object.defineProperties(ReadableStreamBYOBRequest.prototype, {
          respond: { enumerable: true },
          respondWithNewView: { enumerable: true },
          view: { enumerable: true }
        });
        if (typeof SymbolPolyfill.toStringTag === "symbol") {
          Object.defineProperty(ReadableStreamBYOBRequest.prototype, SymbolPolyfill.toStringTag, {
            value: "ReadableStreamBYOBRequest",
            configurable: true
          });
        }
        var ReadableByteStreamController = function() {
          function ReadableByteStreamController2() {
            throw new TypeError("Illegal constructor");
          }
          Object.defineProperty(ReadableByteStreamController2.prototype, "byobRequest", {
            get: function() {
              if (!IsReadableByteStreamController(this)) {
                throw byteStreamControllerBrandCheckException("byobRequest");
              }
              return ReadableByteStreamControllerGetBYOBRequest(this);
            },
            enumerable: false,
            configurable: true
          });
          Object.defineProperty(ReadableByteStreamController2.prototype, "desiredSize", {
            get: function() {
              if (!IsReadableByteStreamController(this)) {
                throw byteStreamControllerBrandCheckException("desiredSize");
              }
              return ReadableByteStreamControllerGetDesiredSize(this);
            },
            enumerable: false,
            configurable: true
          });
          ReadableByteStreamController2.prototype.close = function() {
            if (!IsReadableByteStreamController(this)) {
              throw byteStreamControllerBrandCheckException("close");
            }
            if (this._closeRequested) {
              throw new TypeError("The stream has already been closed; do not close it again!");
            }
            var state = this._controlledReadableByteStream._state;
            if (state !== "readable") {
              throw new TypeError("The stream (in " + state + " state) is not in the readable state and cannot be closed");
            }
            ReadableByteStreamControllerClose(this);
          };
          ReadableByteStreamController2.prototype.enqueue = function(chunk) {
            if (!IsReadableByteStreamController(this)) {
              throw byteStreamControllerBrandCheckException("enqueue");
            }
            assertRequiredArgument(chunk, 1, "enqueue");
            if (!ArrayBuffer.isView(chunk)) {
              throw new TypeError("chunk must be an array buffer view");
            }
            if (chunk.byteLength === 0) {
              throw new TypeError("chunk must have non-zero byteLength");
            }
            if (chunk.buffer.byteLength === 0) {
              throw new TypeError("chunk's buffer must have non-zero byteLength");
            }
            if (this._closeRequested) {
              throw new TypeError("stream is closed or draining");
            }
            var state = this._controlledReadableByteStream._state;
            if (state !== "readable") {
              throw new TypeError("The stream (in " + state + " state) is not in the readable state and cannot be enqueued to");
            }
            ReadableByteStreamControllerEnqueue(this, chunk);
          };
          ReadableByteStreamController2.prototype.error = function(e) {
            if (e === void 0) {
              e = void 0;
            }
            if (!IsReadableByteStreamController(this)) {
              throw byteStreamControllerBrandCheckException("error");
            }
            ReadableByteStreamControllerError(this, e);
          };
          ReadableByteStreamController2.prototype[CancelSteps] = function(reason) {
            ReadableByteStreamControllerClearPendingPullIntos(this);
            ResetQueue(this);
            var result = this._cancelAlgorithm(reason);
            ReadableByteStreamControllerClearAlgorithms(this);
            return result;
          };
          ReadableByteStreamController2.prototype[PullSteps] = function(readRequest) {
            var stream = this._controlledReadableByteStream;
            if (this._queueTotalSize > 0) {
              var entry = this._queue.shift();
              this._queueTotalSize -= entry.byteLength;
              ReadableByteStreamControllerHandleQueueDrain(this);
              var view = new Uint8Array(entry.buffer, entry.byteOffset, entry.byteLength);
              readRequest._chunkSteps(view);
              return;
            }
            var autoAllocateChunkSize = this._autoAllocateChunkSize;
            if (autoAllocateChunkSize !== void 0) {
              var buffer = void 0;
              try {
                buffer = new ArrayBuffer(autoAllocateChunkSize);
              } catch (bufferE) {
                readRequest._errorSteps(bufferE);
                return;
              }
              var pullIntoDescriptor = {
                buffer,
                bufferByteLength: autoAllocateChunkSize,
                byteOffset: 0,
                byteLength: autoAllocateChunkSize,
                bytesFilled: 0,
                elementSize: 1,
                viewConstructor: Uint8Array,
                readerType: "default"
              };
              this._pendingPullIntos.push(pullIntoDescriptor);
            }
            ReadableStreamAddReadRequest(stream, readRequest);
            ReadableByteStreamControllerCallPullIfNeeded(this);
          };
          return ReadableByteStreamController2;
        }();
        Object.defineProperties(ReadableByteStreamController.prototype, {
          close: { enumerable: true },
          enqueue: { enumerable: true },
          error: { enumerable: true },
          byobRequest: { enumerable: true },
          desiredSize: { enumerable: true }
        });
        if (typeof SymbolPolyfill.toStringTag === "symbol") {
          Object.defineProperty(ReadableByteStreamController.prototype, SymbolPolyfill.toStringTag, {
            value: "ReadableByteStreamController",
            configurable: true
          });
        }
        function IsReadableByteStreamController(x) {
          if (!typeIsObject(x)) {
            return false;
          }
          if (!Object.prototype.hasOwnProperty.call(x, "_controlledReadableByteStream")) {
            return false;
          }
          return x instanceof ReadableByteStreamController;
        }
        function IsReadableStreamBYOBRequest(x) {
          if (!typeIsObject(x)) {
            return false;
          }
          if (!Object.prototype.hasOwnProperty.call(x, "_associatedReadableByteStreamController")) {
            return false;
          }
          return x instanceof ReadableStreamBYOBRequest;
        }
        function ReadableByteStreamControllerCallPullIfNeeded(controller) {
          var shouldPull = ReadableByteStreamControllerShouldCallPull(controller);
          if (!shouldPull) {
            return;
          }
          if (controller._pulling) {
            controller._pullAgain = true;
            return;
          }
          controller._pulling = true;
          var pullPromise = controller._pullAlgorithm();
          uponPromise(pullPromise, function() {
            controller._pulling = false;
            if (controller._pullAgain) {
              controller._pullAgain = false;
              ReadableByteStreamControllerCallPullIfNeeded(controller);
            }
          }, function(e) {
            ReadableByteStreamControllerError(controller, e);
          });
        }
        function ReadableByteStreamControllerClearPendingPullIntos(controller) {
          ReadableByteStreamControllerInvalidateBYOBRequest(controller);
          controller._pendingPullIntos = new SimpleQueue();
        }
        function ReadableByteStreamControllerCommitPullIntoDescriptor(stream, pullIntoDescriptor) {
          var done = false;
          if (stream._state === "closed") {
            done = true;
          }
          var filledView = ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor);
          if (pullIntoDescriptor.readerType === "default") {
            ReadableStreamFulfillReadRequest(stream, filledView, done);
          } else {
            ReadableStreamFulfillReadIntoRequest(stream, filledView, done);
          }
        }
        function ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor) {
          var bytesFilled = pullIntoDescriptor.bytesFilled;
          var elementSize = pullIntoDescriptor.elementSize;
          return new pullIntoDescriptor.viewConstructor(pullIntoDescriptor.buffer, pullIntoDescriptor.byteOffset, bytesFilled / elementSize);
        }
        function ReadableByteStreamControllerEnqueueChunkToQueue(controller, buffer, byteOffset, byteLength) {
          controller._queue.push({ buffer, byteOffset, byteLength });
          controller._queueTotalSize += byteLength;
        }
        function ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor) {
          var elementSize = pullIntoDescriptor.elementSize;
          var currentAlignedBytes = pullIntoDescriptor.bytesFilled - pullIntoDescriptor.bytesFilled % elementSize;
          var maxBytesToCopy = Math.min(controller._queueTotalSize, pullIntoDescriptor.byteLength - pullIntoDescriptor.bytesFilled);
          var maxBytesFilled = pullIntoDescriptor.bytesFilled + maxBytesToCopy;
          var maxAlignedBytes = maxBytesFilled - maxBytesFilled % elementSize;
          var totalBytesToCopyRemaining = maxBytesToCopy;
          var ready = false;
          if (maxAlignedBytes > currentAlignedBytes) {
            totalBytesToCopyRemaining = maxAlignedBytes - pullIntoDescriptor.bytesFilled;
            ready = true;
          }
          var queue = controller._queue;
          while (totalBytesToCopyRemaining > 0) {
            var headOfQueue = queue.peek();
            var bytesToCopy = Math.min(totalBytesToCopyRemaining, headOfQueue.byteLength);
            var destStart = pullIntoDescriptor.byteOffset + pullIntoDescriptor.bytesFilled;
            CopyDataBlockBytes(pullIntoDescriptor.buffer, destStart, headOfQueue.buffer, headOfQueue.byteOffset, bytesToCopy);
            if (headOfQueue.byteLength === bytesToCopy) {
              queue.shift();
            } else {
              headOfQueue.byteOffset += bytesToCopy;
              headOfQueue.byteLength -= bytesToCopy;
            }
            controller._queueTotalSize -= bytesToCopy;
            ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, bytesToCopy, pullIntoDescriptor);
            totalBytesToCopyRemaining -= bytesToCopy;
          }
          return ready;
        }
        function ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, size, pullIntoDescriptor) {
          pullIntoDescriptor.bytesFilled += size;
        }
        function ReadableByteStreamControllerHandleQueueDrain(controller) {
          if (controller._queueTotalSize === 0 && controller._closeRequested) {
            ReadableByteStreamControllerClearAlgorithms(controller);
            ReadableStreamClose(controller._controlledReadableByteStream);
          } else {
            ReadableByteStreamControllerCallPullIfNeeded(controller);
          }
        }
        function ReadableByteStreamControllerInvalidateBYOBRequest(controller) {
          if (controller._byobRequest === null) {
            return;
          }
          controller._byobRequest._associatedReadableByteStreamController = void 0;
          controller._byobRequest._view = null;
          controller._byobRequest = null;
        }
        function ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller) {
          while (controller._pendingPullIntos.length > 0) {
            if (controller._queueTotalSize === 0) {
              return;
            }
            var pullIntoDescriptor = controller._pendingPullIntos.peek();
            if (ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor)) {
              ReadableByteStreamControllerShiftPendingPullInto(controller);
              ReadableByteStreamControllerCommitPullIntoDescriptor(controller._controlledReadableByteStream, pullIntoDescriptor);
            }
          }
        }
        function ReadableByteStreamControllerPullInto(controller, view, readIntoRequest) {
          var stream = controller._controlledReadableByteStream;
          var elementSize = 1;
          if (view.constructor !== DataView) {
            elementSize = view.constructor.BYTES_PER_ELEMENT;
          }
          var ctor = view.constructor;
          var buffer = TransferArrayBuffer(view.buffer);
          var pullIntoDescriptor = {
            buffer,
            bufferByteLength: buffer.byteLength,
            byteOffset: view.byteOffset,
            byteLength: view.byteLength,
            bytesFilled: 0,
            elementSize,
            viewConstructor: ctor,
            readerType: "byob"
          };
          if (controller._pendingPullIntos.length > 0) {
            controller._pendingPullIntos.push(pullIntoDescriptor);
            ReadableStreamAddReadIntoRequest(stream, readIntoRequest);
            return;
          }
          if (stream._state === "closed") {
            var emptyView = new ctor(pullIntoDescriptor.buffer, pullIntoDescriptor.byteOffset, 0);
            readIntoRequest._closeSteps(emptyView);
            return;
          }
          if (controller._queueTotalSize > 0) {
            if (ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor)) {
              var filledView = ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor);
              ReadableByteStreamControllerHandleQueueDrain(controller);
              readIntoRequest._chunkSteps(filledView);
              return;
            }
            if (controller._closeRequested) {
              var e = new TypeError("Insufficient bytes to fill elements in the given buffer");
              ReadableByteStreamControllerError(controller, e);
              readIntoRequest._errorSteps(e);
              return;
            }
          }
          controller._pendingPullIntos.push(pullIntoDescriptor);
          ReadableStreamAddReadIntoRequest(stream, readIntoRequest);
          ReadableByteStreamControllerCallPullIfNeeded(controller);
        }
        function ReadableByteStreamControllerRespondInClosedState(controller, firstDescriptor) {
          var stream = controller._controlledReadableByteStream;
          if (ReadableStreamHasBYOBReader(stream)) {
            while (ReadableStreamGetNumReadIntoRequests(stream) > 0) {
              var pullIntoDescriptor = ReadableByteStreamControllerShiftPendingPullInto(controller);
              ReadableByteStreamControllerCommitPullIntoDescriptor(stream, pullIntoDescriptor);
            }
          }
        }
        function ReadableByteStreamControllerRespondInReadableState(controller, bytesWritten, pullIntoDescriptor) {
          ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, bytesWritten, pullIntoDescriptor);
          if (pullIntoDescriptor.bytesFilled < pullIntoDescriptor.elementSize) {
            return;
          }
          ReadableByteStreamControllerShiftPendingPullInto(controller);
          var remainderSize = pullIntoDescriptor.bytesFilled % pullIntoDescriptor.elementSize;
          if (remainderSize > 0) {
            var end = pullIntoDescriptor.byteOffset + pullIntoDescriptor.bytesFilled;
            var remainder = ArrayBufferSlice(pullIntoDescriptor.buffer, end - remainderSize, end);
            ReadableByteStreamControllerEnqueueChunkToQueue(controller, remainder, 0, remainder.byteLength);
          }
          pullIntoDescriptor.bytesFilled -= remainderSize;
          ReadableByteStreamControllerCommitPullIntoDescriptor(controller._controlledReadableByteStream, pullIntoDescriptor);
          ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller);
        }
        function ReadableByteStreamControllerRespondInternal(controller, bytesWritten) {
          var firstDescriptor = controller._pendingPullIntos.peek();
          ReadableByteStreamControllerInvalidateBYOBRequest(controller);
          var state = controller._controlledReadableByteStream._state;
          if (state === "closed") {
            ReadableByteStreamControllerRespondInClosedState(controller);
          } else {
            ReadableByteStreamControllerRespondInReadableState(controller, bytesWritten, firstDescriptor);
          }
          ReadableByteStreamControllerCallPullIfNeeded(controller);
        }
        function ReadableByteStreamControllerShiftPendingPullInto(controller) {
          var descriptor = controller._pendingPullIntos.shift();
          return descriptor;
        }
        function ReadableByteStreamControllerShouldCallPull(controller) {
          var stream = controller._controlledReadableByteStream;
          if (stream._state !== "readable") {
            return false;
          }
          if (controller._closeRequested) {
            return false;
          }
          if (!controller._started) {
            return false;
          }
          if (ReadableStreamHasDefaultReader(stream) && ReadableStreamGetNumReadRequests(stream) > 0) {
            return true;
          }
          if (ReadableStreamHasBYOBReader(stream) && ReadableStreamGetNumReadIntoRequests(stream) > 0) {
            return true;
          }
          var desiredSize = ReadableByteStreamControllerGetDesiredSize(controller);
          if (desiredSize > 0) {
            return true;
          }
          return false;
        }
        function ReadableByteStreamControllerClearAlgorithms(controller) {
          controller._pullAlgorithm = void 0;
          controller._cancelAlgorithm = void 0;
        }
        function ReadableByteStreamControllerClose(controller) {
          var stream = controller._controlledReadableByteStream;
          if (controller._closeRequested || stream._state !== "readable") {
            return;
          }
          if (controller._queueTotalSize > 0) {
            controller._closeRequested = true;
            return;
          }
          if (controller._pendingPullIntos.length > 0) {
            var firstPendingPullInto = controller._pendingPullIntos.peek();
            if (firstPendingPullInto.bytesFilled > 0) {
              var e = new TypeError("Insufficient bytes to fill elements in the given buffer");
              ReadableByteStreamControllerError(controller, e);
              throw e;
            }
          }
          ReadableByteStreamControllerClearAlgorithms(controller);
          ReadableStreamClose(stream);
        }
        function ReadableByteStreamControllerEnqueue(controller, chunk) {
          var stream = controller._controlledReadableByteStream;
          if (controller._closeRequested || stream._state !== "readable") {
            return;
          }
          var buffer = chunk.buffer;
          var byteOffset = chunk.byteOffset;
          var byteLength = chunk.byteLength;
          var transferredBuffer = TransferArrayBuffer(buffer);
          if (controller._pendingPullIntos.length > 0) {
            var firstPendingPullInto = controller._pendingPullIntos.peek();
            if (IsDetachedBuffer(firstPendingPullInto.buffer))
              ;
            firstPendingPullInto.buffer = TransferArrayBuffer(firstPendingPullInto.buffer);
          }
          ReadableByteStreamControllerInvalidateBYOBRequest(controller);
          if (ReadableStreamHasDefaultReader(stream)) {
            if (ReadableStreamGetNumReadRequests(stream) === 0) {
              ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);
            } else {
              if (controller._pendingPullIntos.length > 0) {
                ReadableByteStreamControllerShiftPendingPullInto(controller);
              }
              var transferredView = new Uint8Array(transferredBuffer, byteOffset, byteLength);
              ReadableStreamFulfillReadRequest(stream, transferredView, false);
            }
          } else if (ReadableStreamHasBYOBReader(stream)) {
            ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);
            ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller);
          } else {
            ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);
          }
          ReadableByteStreamControllerCallPullIfNeeded(controller);
        }
        function ReadableByteStreamControllerError(controller, e) {
          var stream = controller._controlledReadableByteStream;
          if (stream._state !== "readable") {
            return;
          }
          ReadableByteStreamControllerClearPendingPullIntos(controller);
          ResetQueue(controller);
          ReadableByteStreamControllerClearAlgorithms(controller);
          ReadableStreamError(stream, e);
        }
        function ReadableByteStreamControllerGetBYOBRequest(controller) {
          if (controller._byobRequest === null && controller._pendingPullIntos.length > 0) {
            var firstDescriptor = controller._pendingPullIntos.peek();
            var view = new Uint8Array(firstDescriptor.buffer, firstDescriptor.byteOffset + firstDescriptor.bytesFilled, firstDescriptor.byteLength - firstDescriptor.bytesFilled);
            var byobRequest = Object.create(ReadableStreamBYOBRequest.prototype);
            SetUpReadableStreamBYOBRequest(byobRequest, controller, view);
            controller._byobRequest = byobRequest;
          }
          return controller._byobRequest;
        }
        function ReadableByteStreamControllerGetDesiredSize(controller) {
          var state = controller._controlledReadableByteStream._state;
          if (state === "errored") {
            return null;
          }
          if (state === "closed") {
            return 0;
          }
          return controller._strategyHWM - controller._queueTotalSize;
        }
        function ReadableByteStreamControllerRespond(controller, bytesWritten) {
          var firstDescriptor = controller._pendingPullIntos.peek();
          var state = controller._controlledReadableByteStream._state;
          if (state === "closed") {
            if (bytesWritten !== 0) {
              throw new TypeError("bytesWritten must be 0 when calling respond() on a closed stream");
            }
          } else {
            if (bytesWritten === 0) {
              throw new TypeError("bytesWritten must be greater than 0 when calling respond() on a readable stream");
            }
            if (firstDescriptor.bytesFilled + bytesWritten > firstDescriptor.byteLength) {
              throw new RangeError("bytesWritten out of range");
            }
          }
          firstDescriptor.buffer = TransferArrayBuffer(firstDescriptor.buffer);
          ReadableByteStreamControllerRespondInternal(controller, bytesWritten);
        }
        function ReadableByteStreamControllerRespondWithNewView(controller, view) {
          var firstDescriptor = controller._pendingPullIntos.peek();
          var state = controller._controlledReadableByteStream._state;
          if (state === "closed") {
            if (view.byteLength !== 0) {
              throw new TypeError("The view's length must be 0 when calling respondWithNewView() on a closed stream");
            }
          } else {
            if (view.byteLength === 0) {
              throw new TypeError("The view's length must be greater than 0 when calling respondWithNewView() on a readable stream");
            }
          }
          if (firstDescriptor.byteOffset + firstDescriptor.bytesFilled !== view.byteOffset) {
            throw new RangeError("The region specified by view does not match byobRequest");
          }
          if (firstDescriptor.bufferByteLength !== view.buffer.byteLength) {
            throw new RangeError("The buffer of view has different capacity than byobRequest");
          }
          if (firstDescriptor.bytesFilled + view.byteLength > firstDescriptor.byteLength) {
            throw new RangeError("The region specified by view is larger than byobRequest");
          }
          var viewByteLength = view.byteLength;
          firstDescriptor.buffer = TransferArrayBuffer(view.buffer);
          ReadableByteStreamControllerRespondInternal(controller, viewByteLength);
        }
        function SetUpReadableByteStreamController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, autoAllocateChunkSize) {
          controller._controlledReadableByteStream = stream;
          controller._pullAgain = false;
          controller._pulling = false;
          controller._byobRequest = null;
          controller._queue = controller._queueTotalSize = void 0;
          ResetQueue(controller);
          controller._closeRequested = false;
          controller._started = false;
          controller._strategyHWM = highWaterMark;
          controller._pullAlgorithm = pullAlgorithm;
          controller._cancelAlgorithm = cancelAlgorithm;
          controller._autoAllocateChunkSize = autoAllocateChunkSize;
          controller._pendingPullIntos = new SimpleQueue();
          stream._readableStreamController = controller;
          var startResult = startAlgorithm();
          uponPromise(promiseResolvedWith(startResult), function() {
            controller._started = true;
            ReadableByteStreamControllerCallPullIfNeeded(controller);
          }, function(r) {
            ReadableByteStreamControllerError(controller, r);
          });
        }
        function SetUpReadableByteStreamControllerFromUnderlyingSource(stream, underlyingByteSource, highWaterMark) {
          var controller = Object.create(ReadableByteStreamController.prototype);
          var startAlgorithm = function() {
            return void 0;
          };
          var pullAlgorithm = function() {
            return promiseResolvedWith(void 0);
          };
          var cancelAlgorithm = function() {
            return promiseResolvedWith(void 0);
          };
          if (underlyingByteSource.start !== void 0) {
            startAlgorithm = function() {
              return underlyingByteSource.start(controller);
            };
          }
          if (underlyingByteSource.pull !== void 0) {
            pullAlgorithm = function() {
              return underlyingByteSource.pull(controller);
            };
          }
          if (underlyingByteSource.cancel !== void 0) {
            cancelAlgorithm = function(reason) {
              return underlyingByteSource.cancel(reason);
            };
          }
          var autoAllocateChunkSize = underlyingByteSource.autoAllocateChunkSize;
          if (autoAllocateChunkSize === 0) {
            throw new TypeError("autoAllocateChunkSize must be greater than 0");
          }
          SetUpReadableByteStreamController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, autoAllocateChunkSize);
        }
        function SetUpReadableStreamBYOBRequest(request, controller, view) {
          request._associatedReadableByteStreamController = controller;
          request._view = view;
        }
        function byobRequestBrandCheckException(name) {
          return new TypeError("ReadableStreamBYOBRequest.prototype." + name + " can only be used on a ReadableStreamBYOBRequest");
        }
        function byteStreamControllerBrandCheckException(name) {
          return new TypeError("ReadableByteStreamController.prototype." + name + " can only be used on a ReadableByteStreamController");
        }
        function AcquireReadableStreamBYOBReader(stream) {
          return new ReadableStreamBYOBReader(stream);
        }
        function ReadableStreamAddReadIntoRequest(stream, readIntoRequest) {
          stream._reader._readIntoRequests.push(readIntoRequest);
        }
        function ReadableStreamFulfillReadIntoRequest(stream, chunk, done) {
          var reader = stream._reader;
          var readIntoRequest = reader._readIntoRequests.shift();
          if (done) {
            readIntoRequest._closeSteps(chunk);
          } else {
            readIntoRequest._chunkSteps(chunk);
          }
        }
        function ReadableStreamGetNumReadIntoRequests(stream) {
          return stream._reader._readIntoRequests.length;
        }
        function ReadableStreamHasBYOBReader(stream) {
          var reader = stream._reader;
          if (reader === void 0) {
            return false;
          }
          if (!IsReadableStreamBYOBReader(reader)) {
            return false;
          }
          return true;
        }
        var ReadableStreamBYOBReader = function() {
          function ReadableStreamBYOBReader2(stream) {
            assertRequiredArgument(stream, 1, "ReadableStreamBYOBReader");
            assertReadableStream(stream, "First parameter");
            if (IsReadableStreamLocked(stream)) {
              throw new TypeError("This stream has already been locked for exclusive reading by another reader");
            }
            if (!IsReadableByteStreamController(stream._readableStreamController)) {
              throw new TypeError("Cannot construct a ReadableStreamBYOBReader for a stream not constructed with a byte source");
            }
            ReadableStreamReaderGenericInitialize(this, stream);
            this._readIntoRequests = new SimpleQueue();
          }
          Object.defineProperty(ReadableStreamBYOBReader2.prototype, "closed", {
            get: function() {
              if (!IsReadableStreamBYOBReader(this)) {
                return promiseRejectedWith(byobReaderBrandCheckException("closed"));
              }
              return this._closedPromise;
            },
            enumerable: false,
            configurable: true
          });
          ReadableStreamBYOBReader2.prototype.cancel = function(reason) {
            if (reason === void 0) {
              reason = void 0;
            }
            if (!IsReadableStreamBYOBReader(this)) {
              return promiseRejectedWith(byobReaderBrandCheckException("cancel"));
            }
            if (this._ownerReadableStream === void 0) {
              return promiseRejectedWith(readerLockException("cancel"));
            }
            return ReadableStreamReaderGenericCancel(this, reason);
          };
          ReadableStreamBYOBReader2.prototype.read = function(view) {
            if (!IsReadableStreamBYOBReader(this)) {
              return promiseRejectedWith(byobReaderBrandCheckException("read"));
            }
            if (!ArrayBuffer.isView(view)) {
              return promiseRejectedWith(new TypeError("view must be an array buffer view"));
            }
            if (view.byteLength === 0) {
              return promiseRejectedWith(new TypeError("view must have non-zero byteLength"));
            }
            if (view.buffer.byteLength === 0) {
              return promiseRejectedWith(new TypeError("view's buffer must have non-zero byteLength"));
            }
            if (IsDetachedBuffer(view.buffer))
              ;
            if (this._ownerReadableStream === void 0) {
              return promiseRejectedWith(readerLockException("read from"));
            }
            var resolvePromise;
            var rejectPromise;
            var promise = newPromise(function(resolve, reject) {
              resolvePromise = resolve;
              rejectPromise = reject;
            });
            var readIntoRequest = {
              _chunkSteps: function(chunk) {
                return resolvePromise({ value: chunk, done: false });
              },
              _closeSteps: function(chunk) {
                return resolvePromise({ value: chunk, done: true });
              },
              _errorSteps: function(e) {
                return rejectPromise(e);
              }
            };
            ReadableStreamBYOBReaderRead(this, view, readIntoRequest);
            return promise;
          };
          ReadableStreamBYOBReader2.prototype.releaseLock = function() {
            if (!IsReadableStreamBYOBReader(this)) {
              throw byobReaderBrandCheckException("releaseLock");
            }
            if (this._ownerReadableStream === void 0) {
              return;
            }
            if (this._readIntoRequests.length > 0) {
              throw new TypeError("Tried to release a reader lock when that reader has pending read() calls un-settled");
            }
            ReadableStreamReaderGenericRelease(this);
          };
          return ReadableStreamBYOBReader2;
        }();
        Object.defineProperties(ReadableStreamBYOBReader.prototype, {
          cancel: { enumerable: true },
          read: { enumerable: true },
          releaseLock: { enumerable: true },
          closed: { enumerable: true }
        });
        if (typeof SymbolPolyfill.toStringTag === "symbol") {
          Object.defineProperty(ReadableStreamBYOBReader.prototype, SymbolPolyfill.toStringTag, {
            value: "ReadableStreamBYOBReader",
            configurable: true
          });
        }
        function IsReadableStreamBYOBReader(x) {
          if (!typeIsObject(x)) {
            return false;
          }
          if (!Object.prototype.hasOwnProperty.call(x, "_readIntoRequests")) {
            return false;
          }
          return x instanceof ReadableStreamBYOBReader;
        }
        function ReadableStreamBYOBReaderRead(reader, view, readIntoRequest) {
          var stream = reader._ownerReadableStream;
          stream._disturbed = true;
          if (stream._state === "errored") {
            readIntoRequest._errorSteps(stream._storedError);
          } else {
            ReadableByteStreamControllerPullInto(stream._readableStreamController, view, readIntoRequest);
          }
        }
        function byobReaderBrandCheckException(name) {
          return new TypeError("ReadableStreamBYOBReader.prototype." + name + " can only be used on a ReadableStreamBYOBReader");
        }
        function ExtractHighWaterMark(strategy, defaultHWM) {
          var highWaterMark = strategy.highWaterMark;
          if (highWaterMark === void 0) {
            return defaultHWM;
          }
          if (NumberIsNaN(highWaterMark) || highWaterMark < 0) {
            throw new RangeError("Invalid highWaterMark");
          }
          return highWaterMark;
        }
        function ExtractSizeAlgorithm(strategy) {
          var size = strategy.size;
          if (!size) {
            return function() {
              return 1;
            };
          }
          return size;
        }
        function convertQueuingStrategy(init, context) {
          assertDictionary(init, context);
          var highWaterMark = init === null || init === void 0 ? void 0 : init.highWaterMark;
          var size = init === null || init === void 0 ? void 0 : init.size;
          return {
            highWaterMark: highWaterMark === void 0 ? void 0 : convertUnrestrictedDouble(highWaterMark),
            size: size === void 0 ? void 0 : convertQueuingStrategySize(size, context + " has member 'size' that")
          };
        }
        function convertQueuingStrategySize(fn, context) {
          assertFunction(fn, context);
          return function(chunk) {
            return convertUnrestrictedDouble(fn(chunk));
          };
        }
        function convertUnderlyingSink(original, context) {
          assertDictionary(original, context);
          var abort = original === null || original === void 0 ? void 0 : original.abort;
          var close = original === null || original === void 0 ? void 0 : original.close;
          var start = original === null || original === void 0 ? void 0 : original.start;
          var type = original === null || original === void 0 ? void 0 : original.type;
          var write = original === null || original === void 0 ? void 0 : original.write;
          return {
            abort: abort === void 0 ? void 0 : convertUnderlyingSinkAbortCallback(abort, original, context + " has member 'abort' that"),
            close: close === void 0 ? void 0 : convertUnderlyingSinkCloseCallback(close, original, context + " has member 'close' that"),
            start: start === void 0 ? void 0 : convertUnderlyingSinkStartCallback(start, original, context + " has member 'start' that"),
            write: write === void 0 ? void 0 : convertUnderlyingSinkWriteCallback(write, original, context + " has member 'write' that"),
            type
          };
        }
        function convertUnderlyingSinkAbortCallback(fn, original, context) {
          assertFunction(fn, context);
          return function(reason) {
            return promiseCall(fn, original, [reason]);
          };
        }
        function convertUnderlyingSinkCloseCallback(fn, original, context) {
          assertFunction(fn, context);
          return function() {
            return promiseCall(fn, original, []);
          };
        }
        function convertUnderlyingSinkStartCallback(fn, original, context) {
          assertFunction(fn, context);
          return function(controller) {
            return reflectCall(fn, original, [controller]);
          };
        }
        function convertUnderlyingSinkWriteCallback(fn, original, context) {
          assertFunction(fn, context);
          return function(chunk, controller) {
            return promiseCall(fn, original, [chunk, controller]);
          };
        }
        function assertWritableStream(x, context) {
          if (!IsWritableStream(x)) {
            throw new TypeError(context + " is not a WritableStream.");
          }
        }
        function isAbortSignal(value) {
          if (typeof value !== "object" || value === null) {
            return false;
          }
          try {
            return typeof value.aborted === "boolean";
          } catch (_a2) {
            return false;
          }
        }
        var supportsAbortController = typeof AbortController === "function";
        function createAbortController() {
          if (supportsAbortController) {
            return new AbortController();
          }
          return void 0;
        }
        var WritableStream = function() {
          function WritableStream2(rawUnderlyingSink, rawStrategy) {
            if (rawUnderlyingSink === void 0) {
              rawUnderlyingSink = {};
            }
            if (rawStrategy === void 0) {
              rawStrategy = {};
            }
            if (rawUnderlyingSink === void 0) {
              rawUnderlyingSink = null;
            } else {
              assertObject(rawUnderlyingSink, "First parameter");
            }
            var strategy = convertQueuingStrategy(rawStrategy, "Second parameter");
            var underlyingSink = convertUnderlyingSink(rawUnderlyingSink, "First parameter");
            InitializeWritableStream(this);
            var type = underlyingSink.type;
            if (type !== void 0) {
              throw new RangeError("Invalid type is specified");
            }
            var sizeAlgorithm = ExtractSizeAlgorithm(strategy);
            var highWaterMark = ExtractHighWaterMark(strategy, 1);
            SetUpWritableStreamDefaultControllerFromUnderlyingSink(this, underlyingSink, highWaterMark, sizeAlgorithm);
          }
          Object.defineProperty(WritableStream2.prototype, "locked", {
            get: function() {
              if (!IsWritableStream(this)) {
                throw streamBrandCheckException$2("locked");
              }
              return IsWritableStreamLocked(this);
            },
            enumerable: false,
            configurable: true
          });
          WritableStream2.prototype.abort = function(reason) {
            if (reason === void 0) {
              reason = void 0;
            }
            if (!IsWritableStream(this)) {
              return promiseRejectedWith(streamBrandCheckException$2("abort"));
            }
            if (IsWritableStreamLocked(this)) {
              return promiseRejectedWith(new TypeError("Cannot abort a stream that already has a writer"));
            }
            return WritableStreamAbort(this, reason);
          };
          WritableStream2.prototype.close = function() {
            if (!IsWritableStream(this)) {
              return promiseRejectedWith(streamBrandCheckException$2("close"));
            }
            if (IsWritableStreamLocked(this)) {
              return promiseRejectedWith(new TypeError("Cannot close a stream that already has a writer"));
            }
            if (WritableStreamCloseQueuedOrInFlight(this)) {
              return promiseRejectedWith(new TypeError("Cannot close an already-closing stream"));
            }
            return WritableStreamClose(this);
          };
          WritableStream2.prototype.getWriter = function() {
            if (!IsWritableStream(this)) {
              throw streamBrandCheckException$2("getWriter");
            }
            return AcquireWritableStreamDefaultWriter(this);
          };
          return WritableStream2;
        }();
        Object.defineProperties(WritableStream.prototype, {
          abort: { enumerable: true },
          close: { enumerable: true },
          getWriter: { enumerable: true },
          locked: { enumerable: true }
        });
        if (typeof SymbolPolyfill.toStringTag === "symbol") {
          Object.defineProperty(WritableStream.prototype, SymbolPolyfill.toStringTag, {
            value: "WritableStream",
            configurable: true
          });
        }
        function AcquireWritableStreamDefaultWriter(stream) {
          return new WritableStreamDefaultWriter(stream);
        }
        function CreateWritableStream(startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, highWaterMark, sizeAlgorithm) {
          if (highWaterMark === void 0) {
            highWaterMark = 1;
          }
          if (sizeAlgorithm === void 0) {
            sizeAlgorithm = function() {
              return 1;
            };
          }
          var stream = Object.create(WritableStream.prototype);
          InitializeWritableStream(stream);
          var controller = Object.create(WritableStreamDefaultController.prototype);
          SetUpWritableStreamDefaultController(stream, controller, startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, highWaterMark, sizeAlgorithm);
          return stream;
        }
        function InitializeWritableStream(stream) {
          stream._state = "writable";
          stream._storedError = void 0;
          stream._writer = void 0;
          stream._writableStreamController = void 0;
          stream._writeRequests = new SimpleQueue();
          stream._inFlightWriteRequest = void 0;
          stream._closeRequest = void 0;
          stream._inFlightCloseRequest = void 0;
          stream._pendingAbortRequest = void 0;
          stream._backpressure = false;
        }
        function IsWritableStream(x) {
          if (!typeIsObject(x)) {
            return false;
          }
          if (!Object.prototype.hasOwnProperty.call(x, "_writableStreamController")) {
            return false;
          }
          return x instanceof WritableStream;
        }
        function IsWritableStreamLocked(stream) {
          if (stream._writer === void 0) {
            return false;
          }
          return true;
        }
        function WritableStreamAbort(stream, reason) {
          var _a2;
          if (stream._state === "closed" || stream._state === "errored") {
            return promiseResolvedWith(void 0);
          }
          stream._writableStreamController._abortReason = reason;
          (_a2 = stream._writableStreamController._abortController) === null || _a2 === void 0 ? void 0 : _a2.abort();
          var state = stream._state;
          if (state === "closed" || state === "errored") {
            return promiseResolvedWith(void 0);
          }
          if (stream._pendingAbortRequest !== void 0) {
            return stream._pendingAbortRequest._promise;
          }
          var wasAlreadyErroring = false;
          if (state === "erroring") {
            wasAlreadyErroring = true;
            reason = void 0;
          }
          var promise = newPromise(function(resolve, reject) {
            stream._pendingAbortRequest = {
              _promise: void 0,
              _resolve: resolve,
              _reject: reject,
              _reason: reason,
              _wasAlreadyErroring: wasAlreadyErroring
            };
          });
          stream._pendingAbortRequest._promise = promise;
          if (!wasAlreadyErroring) {
            WritableStreamStartErroring(stream, reason);
          }
          return promise;
        }
        function WritableStreamClose(stream) {
          var state = stream._state;
          if (state === "closed" || state === "errored") {
            return promiseRejectedWith(new TypeError("The stream (in " + state + " state) is not in the writable state and cannot be closed"));
          }
          var promise = newPromise(function(resolve, reject) {
            var closeRequest = {
              _resolve: resolve,
              _reject: reject
            };
            stream._closeRequest = closeRequest;
          });
          var writer = stream._writer;
          if (writer !== void 0 && stream._backpressure && state === "writable") {
            defaultWriterReadyPromiseResolve(writer);
          }
          WritableStreamDefaultControllerClose(stream._writableStreamController);
          return promise;
        }
        function WritableStreamAddWriteRequest(stream) {
          var promise = newPromise(function(resolve, reject) {
            var writeRequest = {
              _resolve: resolve,
              _reject: reject
            };
            stream._writeRequests.push(writeRequest);
          });
          return promise;
        }
        function WritableStreamDealWithRejection(stream, error) {
          var state = stream._state;
          if (state === "writable") {
            WritableStreamStartErroring(stream, error);
            return;
          }
          WritableStreamFinishErroring(stream);
        }
        function WritableStreamStartErroring(stream, reason) {
          var controller = stream._writableStreamController;
          stream._state = "erroring";
          stream._storedError = reason;
          var writer = stream._writer;
          if (writer !== void 0) {
            WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, reason);
          }
          if (!WritableStreamHasOperationMarkedInFlight(stream) && controller._started) {
            WritableStreamFinishErroring(stream);
          }
        }
        function WritableStreamFinishErroring(stream) {
          stream._state = "errored";
          stream._writableStreamController[ErrorSteps]();
          var storedError = stream._storedError;
          stream._writeRequests.forEach(function(writeRequest) {
            writeRequest._reject(storedError);
          });
          stream._writeRequests = new SimpleQueue();
          if (stream._pendingAbortRequest === void 0) {
            WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);
            return;
          }
          var abortRequest = stream._pendingAbortRequest;
          stream._pendingAbortRequest = void 0;
          if (abortRequest._wasAlreadyErroring) {
            abortRequest._reject(storedError);
            WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);
            return;
          }
          var promise = stream._writableStreamController[AbortSteps](abortRequest._reason);
          uponPromise(promise, function() {
            abortRequest._resolve();
            WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);
          }, function(reason) {
            abortRequest._reject(reason);
            WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);
          });
        }
        function WritableStreamFinishInFlightWrite(stream) {
          stream._inFlightWriteRequest._resolve(void 0);
          stream._inFlightWriteRequest = void 0;
        }
        function WritableStreamFinishInFlightWriteWithError(stream, error) {
          stream._inFlightWriteRequest._reject(error);
          stream._inFlightWriteRequest = void 0;
          WritableStreamDealWithRejection(stream, error);
        }
        function WritableStreamFinishInFlightClose(stream) {
          stream._inFlightCloseRequest._resolve(void 0);
          stream._inFlightCloseRequest = void 0;
          var state = stream._state;
          if (state === "erroring") {
            stream._storedError = void 0;
            if (stream._pendingAbortRequest !== void 0) {
              stream._pendingAbortRequest._resolve();
              stream._pendingAbortRequest = void 0;
            }
          }
          stream._state = "closed";
          var writer = stream._writer;
          if (writer !== void 0) {
            defaultWriterClosedPromiseResolve(writer);
          }
        }
        function WritableStreamFinishInFlightCloseWithError(stream, error) {
          stream._inFlightCloseRequest._reject(error);
          stream._inFlightCloseRequest = void 0;
          if (stream._pendingAbortRequest !== void 0) {
            stream._pendingAbortRequest._reject(error);
            stream._pendingAbortRequest = void 0;
          }
          WritableStreamDealWithRejection(stream, error);
        }
        function WritableStreamCloseQueuedOrInFlight(stream) {
          if (stream._closeRequest === void 0 && stream._inFlightCloseRequest === void 0) {
            return false;
          }
          return true;
        }
        function WritableStreamHasOperationMarkedInFlight(stream) {
          if (stream._inFlightWriteRequest === void 0 && stream._inFlightCloseRequest === void 0) {
            return false;
          }
          return true;
        }
        function WritableStreamMarkCloseRequestInFlight(stream) {
          stream._inFlightCloseRequest = stream._closeRequest;
          stream._closeRequest = void 0;
        }
        function WritableStreamMarkFirstWriteRequestInFlight(stream) {
          stream._inFlightWriteRequest = stream._writeRequests.shift();
        }
        function WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream) {
          if (stream._closeRequest !== void 0) {
            stream._closeRequest._reject(stream._storedError);
            stream._closeRequest = void 0;
          }
          var writer = stream._writer;
          if (writer !== void 0) {
            defaultWriterClosedPromiseReject(writer, stream._storedError);
          }
        }
        function WritableStreamUpdateBackpressure(stream, backpressure) {
          var writer = stream._writer;
          if (writer !== void 0 && backpressure !== stream._backpressure) {
            if (backpressure) {
              defaultWriterReadyPromiseReset(writer);
            } else {
              defaultWriterReadyPromiseResolve(writer);
            }
          }
          stream._backpressure = backpressure;
        }
        var WritableStreamDefaultWriter = function() {
          function WritableStreamDefaultWriter2(stream) {
            assertRequiredArgument(stream, 1, "WritableStreamDefaultWriter");
            assertWritableStream(stream, "First parameter");
            if (IsWritableStreamLocked(stream)) {
              throw new TypeError("This stream has already been locked for exclusive writing by another writer");
            }
            this._ownerWritableStream = stream;
            stream._writer = this;
            var state = stream._state;
            if (state === "writable") {
              if (!WritableStreamCloseQueuedOrInFlight(stream) && stream._backpressure) {
                defaultWriterReadyPromiseInitialize(this);
              } else {
                defaultWriterReadyPromiseInitializeAsResolved(this);
              }
              defaultWriterClosedPromiseInitialize(this);
            } else if (state === "erroring") {
              defaultWriterReadyPromiseInitializeAsRejected(this, stream._storedError);
              defaultWriterClosedPromiseInitialize(this);
            } else if (state === "closed") {
              defaultWriterReadyPromiseInitializeAsResolved(this);
              defaultWriterClosedPromiseInitializeAsResolved(this);
            } else {
              var storedError = stream._storedError;
              defaultWriterReadyPromiseInitializeAsRejected(this, storedError);
              defaultWriterClosedPromiseInitializeAsRejected(this, storedError);
            }
          }
          Object.defineProperty(WritableStreamDefaultWriter2.prototype, "closed", {
            get: function() {
              if (!IsWritableStreamDefaultWriter(this)) {
                return promiseRejectedWith(defaultWriterBrandCheckException("closed"));
              }
              return this._closedPromise;
            },
            enumerable: false,
            configurable: true
          });
          Object.defineProperty(WritableStreamDefaultWriter2.prototype, "desiredSize", {
            get: function() {
              if (!IsWritableStreamDefaultWriter(this)) {
                throw defaultWriterBrandCheckException("desiredSize");
              }
              if (this._ownerWritableStream === void 0) {
                throw defaultWriterLockException("desiredSize");
              }
              return WritableStreamDefaultWriterGetDesiredSize(this);
            },
            enumerable: false,
            configurable: true
          });
          Object.defineProperty(WritableStreamDefaultWriter2.prototype, "ready", {
            get: function() {
              if (!IsWritableStreamDefaultWriter(this)) {
                return promiseRejectedWith(defaultWriterBrandCheckException("ready"));
              }
              return this._readyPromise;
            },
            enumerable: false,
            configurable: true
          });
          WritableStreamDefaultWriter2.prototype.abort = function(reason) {
            if (reason === void 0) {
              reason = void 0;
            }
            if (!IsWritableStreamDefaultWriter(this)) {
              return promiseRejectedWith(defaultWriterBrandCheckException("abort"));
            }
            if (this._ownerWritableStream === void 0) {
              return promiseRejectedWith(defaultWriterLockException("abort"));
            }
            return WritableStreamDefaultWriterAbort(this, reason);
          };
          WritableStreamDefaultWriter2.prototype.close = function() {
            if (!IsWritableStreamDefaultWriter(this)) {
              return promiseRejectedWith(defaultWriterBrandCheckException("close"));
            }
            var stream = this._ownerWritableStream;
            if (stream === void 0) {
              return promiseRejectedWith(defaultWriterLockException("close"));
            }
            if (WritableStreamCloseQueuedOrInFlight(stream)) {
              return promiseRejectedWith(new TypeError("Cannot close an already-closing stream"));
            }
            return WritableStreamDefaultWriterClose(this);
          };
          WritableStreamDefaultWriter2.prototype.releaseLock = function() {
            if (!IsWritableStreamDefaultWriter(this)) {
              throw defaultWriterBrandCheckException("releaseLock");
            }
            var stream = this._ownerWritableStream;
            if (stream === void 0) {
              return;
            }
            WritableStreamDefaultWriterRelease(this);
          };
          WritableStreamDefaultWriter2.prototype.write = function(chunk) {
            if (chunk === void 0) {
              chunk = void 0;
            }
            if (!IsWritableStreamDefaultWriter(this)) {
              return promiseRejectedWith(defaultWriterBrandCheckException("write"));
            }
            if (this._ownerWritableStream === void 0) {
              return promiseRejectedWith(defaultWriterLockException("write to"));
            }
            return WritableStreamDefaultWriterWrite(this, chunk);
          };
          return WritableStreamDefaultWriter2;
        }();
        Object.defineProperties(WritableStreamDefaultWriter.prototype, {
          abort: { enumerable: true },
          close: { enumerable: true },
          releaseLock: { enumerable: true },
          write: { enumerable: true },
          closed: { enumerable: true },
          desiredSize: { enumerable: true },
          ready: { enumerable: true }
        });
        if (typeof SymbolPolyfill.toStringTag === "symbol") {
          Object.defineProperty(WritableStreamDefaultWriter.prototype, SymbolPolyfill.toStringTag, {
            value: "WritableStreamDefaultWriter",
            configurable: true
          });
        }
        function IsWritableStreamDefaultWriter(x) {
          if (!typeIsObject(x)) {
            return false;
          }
          if (!Object.prototype.hasOwnProperty.call(x, "_ownerWritableStream")) {
            return false;
          }
          return x instanceof WritableStreamDefaultWriter;
        }
        function WritableStreamDefaultWriterAbort(writer, reason) {
          var stream = writer._ownerWritableStream;
          return WritableStreamAbort(stream, reason);
        }
        function WritableStreamDefaultWriterClose(writer) {
          var stream = writer._ownerWritableStream;
          return WritableStreamClose(stream);
        }
        function WritableStreamDefaultWriterCloseWithErrorPropagation(writer) {
          var stream = writer._ownerWritableStream;
          var state = stream._state;
          if (WritableStreamCloseQueuedOrInFlight(stream) || state === "closed") {
            return promiseResolvedWith(void 0);
          }
          if (state === "errored") {
            return promiseRejectedWith(stream._storedError);
          }
          return WritableStreamDefaultWriterClose(writer);
        }
        function WritableStreamDefaultWriterEnsureClosedPromiseRejected(writer, error) {
          if (writer._closedPromiseState === "pending") {
            defaultWriterClosedPromiseReject(writer, error);
          } else {
            defaultWriterClosedPromiseResetToRejected(writer, error);
          }
        }
        function WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, error) {
          if (writer._readyPromiseState === "pending") {
            defaultWriterReadyPromiseReject(writer, error);
          } else {
            defaultWriterReadyPromiseResetToRejected(writer, error);
          }
        }
        function WritableStreamDefaultWriterGetDesiredSize(writer) {
          var stream = writer._ownerWritableStream;
          var state = stream._state;
          if (state === "errored" || state === "erroring") {
            return null;
          }
          if (state === "closed") {
            return 0;
          }
          return WritableStreamDefaultControllerGetDesiredSize(stream._writableStreamController);
        }
        function WritableStreamDefaultWriterRelease(writer) {
          var stream = writer._ownerWritableStream;
          var releasedError = new TypeError("Writer was released and can no longer be used to monitor the stream's closedness");
          WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, releasedError);
          WritableStreamDefaultWriterEnsureClosedPromiseRejected(writer, releasedError);
          stream._writer = void 0;
          writer._ownerWritableStream = void 0;
        }
        function WritableStreamDefaultWriterWrite(writer, chunk) {
          var stream = writer._ownerWritableStream;
          var controller = stream._writableStreamController;
          var chunkSize = WritableStreamDefaultControllerGetChunkSize(controller, chunk);
          if (stream !== writer._ownerWritableStream) {
            return promiseRejectedWith(defaultWriterLockException("write to"));
          }
          var state = stream._state;
          if (state === "errored") {
            return promiseRejectedWith(stream._storedError);
          }
          if (WritableStreamCloseQueuedOrInFlight(stream) || state === "closed") {
            return promiseRejectedWith(new TypeError("The stream is closing or closed and cannot be written to"));
          }
          if (state === "erroring") {
            return promiseRejectedWith(stream._storedError);
          }
          var promise = WritableStreamAddWriteRequest(stream);
          WritableStreamDefaultControllerWrite(controller, chunk, chunkSize);
          return promise;
        }
        var closeSentinel = {};
        var WritableStreamDefaultController = function() {
          function WritableStreamDefaultController2() {
            throw new TypeError("Illegal constructor");
          }
          Object.defineProperty(WritableStreamDefaultController2.prototype, "abortReason", {
            get: function() {
              if (!IsWritableStreamDefaultController(this)) {
                throw defaultControllerBrandCheckException$2("abortReason");
              }
              return this._abortReason;
            },
            enumerable: false,
            configurable: true
          });
          Object.defineProperty(WritableStreamDefaultController2.prototype, "signal", {
            get: function() {
              if (!IsWritableStreamDefaultController(this)) {
                throw defaultControllerBrandCheckException$2("signal");
              }
              if (this._abortController === void 0) {
                throw new TypeError("WritableStreamDefaultController.prototype.signal is not supported");
              }
              return this._abortController.signal;
            },
            enumerable: false,
            configurable: true
          });
          WritableStreamDefaultController2.prototype.error = function(e) {
            if (e === void 0) {
              e = void 0;
            }
            if (!IsWritableStreamDefaultController(this)) {
              throw defaultControllerBrandCheckException$2("error");
            }
            var state = this._controlledWritableStream._state;
            if (state !== "writable") {
              return;
            }
            WritableStreamDefaultControllerError(this, e);
          };
          WritableStreamDefaultController2.prototype[AbortSteps] = function(reason) {
            var result = this._abortAlgorithm(reason);
            WritableStreamDefaultControllerClearAlgorithms(this);
            return result;
          };
          WritableStreamDefaultController2.prototype[ErrorSteps] = function() {
            ResetQueue(this);
          };
          return WritableStreamDefaultController2;
        }();
        Object.defineProperties(WritableStreamDefaultController.prototype, {
          abortReason: { enumerable: true },
          signal: { enumerable: true },
          error: { enumerable: true }
        });
        if (typeof SymbolPolyfill.toStringTag === "symbol") {
          Object.defineProperty(WritableStreamDefaultController.prototype, SymbolPolyfill.toStringTag, {
            value: "WritableStreamDefaultController",
            configurable: true
          });
        }
        function IsWritableStreamDefaultController(x) {
          if (!typeIsObject(x)) {
            return false;
          }
          if (!Object.prototype.hasOwnProperty.call(x, "_controlledWritableStream")) {
            return false;
          }
          return x instanceof WritableStreamDefaultController;
        }
        function SetUpWritableStreamDefaultController(stream, controller, startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, highWaterMark, sizeAlgorithm) {
          controller._controlledWritableStream = stream;
          stream._writableStreamController = controller;
          controller._queue = void 0;
          controller._queueTotalSize = void 0;
          ResetQueue(controller);
          controller._abortReason = void 0;
          controller._abortController = createAbortController();
          controller._started = false;
          controller._strategySizeAlgorithm = sizeAlgorithm;
          controller._strategyHWM = highWaterMark;
          controller._writeAlgorithm = writeAlgorithm;
          controller._closeAlgorithm = closeAlgorithm;
          controller._abortAlgorithm = abortAlgorithm;
          var backpressure = WritableStreamDefaultControllerGetBackpressure(controller);
          WritableStreamUpdateBackpressure(stream, backpressure);
          var startResult = startAlgorithm();
          var startPromise = promiseResolvedWith(startResult);
          uponPromise(startPromise, function() {
            controller._started = true;
            WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);
          }, function(r) {
            controller._started = true;
            WritableStreamDealWithRejection(stream, r);
          });
        }
        function SetUpWritableStreamDefaultControllerFromUnderlyingSink(stream, underlyingSink, highWaterMark, sizeAlgorithm) {
          var controller = Object.create(WritableStreamDefaultController.prototype);
          var startAlgorithm = function() {
            return void 0;
          };
          var writeAlgorithm = function() {
            return promiseResolvedWith(void 0);
          };
          var closeAlgorithm = function() {
            return promiseResolvedWith(void 0);
          };
          var abortAlgorithm = function() {
            return promiseResolvedWith(void 0);
          };
          if (underlyingSink.start !== void 0) {
            startAlgorithm = function() {
              return underlyingSink.start(controller);
            };
          }
          if (underlyingSink.write !== void 0) {
            writeAlgorithm = function(chunk) {
              return underlyingSink.write(chunk, controller);
            };
          }
          if (underlyingSink.close !== void 0) {
            closeAlgorithm = function() {
              return underlyingSink.close();
            };
          }
          if (underlyingSink.abort !== void 0) {
            abortAlgorithm = function(reason) {
              return underlyingSink.abort(reason);
            };
          }
          SetUpWritableStreamDefaultController(stream, controller, startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, highWaterMark, sizeAlgorithm);
        }
        function WritableStreamDefaultControllerClearAlgorithms(controller) {
          controller._writeAlgorithm = void 0;
          controller._closeAlgorithm = void 0;
          controller._abortAlgorithm = void 0;
          controller._strategySizeAlgorithm = void 0;
        }
        function WritableStreamDefaultControllerClose(controller) {
          EnqueueValueWithSize(controller, closeSentinel, 0);
          WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);
        }
        function WritableStreamDefaultControllerGetChunkSize(controller, chunk) {
          try {
            return controller._strategySizeAlgorithm(chunk);
          } catch (chunkSizeE) {
            WritableStreamDefaultControllerErrorIfNeeded(controller, chunkSizeE);
            return 1;
          }
        }
        function WritableStreamDefaultControllerGetDesiredSize(controller) {
          return controller._strategyHWM - controller._queueTotalSize;
        }
        function WritableStreamDefaultControllerWrite(controller, chunk, chunkSize) {
          try {
            EnqueueValueWithSize(controller, chunk, chunkSize);
          } catch (enqueueE) {
            WritableStreamDefaultControllerErrorIfNeeded(controller, enqueueE);
            return;
          }
          var stream = controller._controlledWritableStream;
          if (!WritableStreamCloseQueuedOrInFlight(stream) && stream._state === "writable") {
            var backpressure = WritableStreamDefaultControllerGetBackpressure(controller);
            WritableStreamUpdateBackpressure(stream, backpressure);
          }
          WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);
        }
        function WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller) {
          var stream = controller._controlledWritableStream;
          if (!controller._started) {
            return;
          }
          if (stream._inFlightWriteRequest !== void 0) {
            return;
          }
          var state = stream._state;
          if (state === "erroring") {
            WritableStreamFinishErroring(stream);
            return;
          }
          if (controller._queue.length === 0) {
            return;
          }
          var value = PeekQueueValue(controller);
          if (value === closeSentinel) {
            WritableStreamDefaultControllerProcessClose(controller);
          } else {
            WritableStreamDefaultControllerProcessWrite(controller, value);
          }
        }
        function WritableStreamDefaultControllerErrorIfNeeded(controller, error) {
          if (controller._controlledWritableStream._state === "writable") {
            WritableStreamDefaultControllerError(controller, error);
          }
        }
        function WritableStreamDefaultControllerProcessClose(controller) {
          var stream = controller._controlledWritableStream;
          WritableStreamMarkCloseRequestInFlight(stream);
          DequeueValue(controller);
          var sinkClosePromise = controller._closeAlgorithm();
          WritableStreamDefaultControllerClearAlgorithms(controller);
          uponPromise(sinkClosePromise, function() {
            WritableStreamFinishInFlightClose(stream);
          }, function(reason) {
            WritableStreamFinishInFlightCloseWithError(stream, reason);
          });
        }
        function WritableStreamDefaultControllerProcessWrite(controller, chunk) {
          var stream = controller._controlledWritableStream;
          WritableStreamMarkFirstWriteRequestInFlight(stream);
          var sinkWritePromise = controller._writeAlgorithm(chunk);
          uponPromise(sinkWritePromise, function() {
            WritableStreamFinishInFlightWrite(stream);
            var state = stream._state;
            DequeueValue(controller);
            if (!WritableStreamCloseQueuedOrInFlight(stream) && state === "writable") {
              var backpressure = WritableStreamDefaultControllerGetBackpressure(controller);
              WritableStreamUpdateBackpressure(stream, backpressure);
            }
            WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);
          }, function(reason) {
            if (stream._state === "writable") {
              WritableStreamDefaultControllerClearAlgorithms(controller);
            }
            WritableStreamFinishInFlightWriteWithError(stream, reason);
          });
        }
        function WritableStreamDefaultControllerGetBackpressure(controller) {
          var desiredSize = WritableStreamDefaultControllerGetDesiredSize(controller);
          return desiredSize <= 0;
        }
        function WritableStreamDefaultControllerError(controller, error) {
          var stream = controller._controlledWritableStream;
          WritableStreamDefaultControllerClearAlgorithms(controller);
          WritableStreamStartErroring(stream, error);
        }
        function streamBrandCheckException$2(name) {
          return new TypeError("WritableStream.prototype." + name + " can only be used on a WritableStream");
        }
        function defaultControllerBrandCheckException$2(name) {
          return new TypeError("WritableStreamDefaultController.prototype." + name + " can only be used on a WritableStreamDefaultController");
        }
        function defaultWriterBrandCheckException(name) {
          return new TypeError("WritableStreamDefaultWriter.prototype." + name + " can only be used on a WritableStreamDefaultWriter");
        }
        function defaultWriterLockException(name) {
          return new TypeError("Cannot " + name + " a stream using a released writer");
        }
        function defaultWriterClosedPromiseInitialize(writer) {
          writer._closedPromise = newPromise(function(resolve, reject) {
            writer._closedPromise_resolve = resolve;
            writer._closedPromise_reject = reject;
            writer._closedPromiseState = "pending";
          });
        }
        function defaultWriterClosedPromiseInitializeAsRejected(writer, reason) {
          defaultWriterClosedPromiseInitialize(writer);
          defaultWriterClosedPromiseReject(writer, reason);
        }
        function defaultWriterClosedPromiseInitializeAsResolved(writer) {
          defaultWriterClosedPromiseInitialize(writer);
          defaultWriterClosedPromiseResolve(writer);
        }
        function defaultWriterClosedPromiseReject(writer, reason) {
          if (writer._closedPromise_reject === void 0) {
            return;
          }
          setPromiseIsHandledToTrue(writer._closedPromise);
          writer._closedPromise_reject(reason);
          writer._closedPromise_resolve = void 0;
          writer._closedPromise_reject = void 0;
          writer._closedPromiseState = "rejected";
        }
        function defaultWriterClosedPromiseResetToRejected(writer, reason) {
          defaultWriterClosedPromiseInitializeAsRejected(writer, reason);
        }
        function defaultWriterClosedPromiseResolve(writer) {
          if (writer._closedPromise_resolve === void 0) {
            return;
          }
          writer._closedPromise_resolve(void 0);
          writer._closedPromise_resolve = void 0;
          writer._closedPromise_reject = void 0;
          writer._closedPromiseState = "resolved";
        }
        function defaultWriterReadyPromiseInitialize(writer) {
          writer._readyPromise = newPromise(function(resolve, reject) {
            writer._readyPromise_resolve = resolve;
            writer._readyPromise_reject = reject;
          });
          writer._readyPromiseState = "pending";
        }
        function defaultWriterReadyPromiseInitializeAsRejected(writer, reason) {
          defaultWriterReadyPromiseInitialize(writer);
          defaultWriterReadyPromiseReject(writer, reason);
        }
        function defaultWriterReadyPromiseInitializeAsResolved(writer) {
          defaultWriterReadyPromiseInitialize(writer);
          defaultWriterReadyPromiseResolve(writer);
        }
        function defaultWriterReadyPromiseReject(writer, reason) {
          if (writer._readyPromise_reject === void 0) {
            return;
          }
          setPromiseIsHandledToTrue(writer._readyPromise);
          writer._readyPromise_reject(reason);
          writer._readyPromise_resolve = void 0;
          writer._readyPromise_reject = void 0;
          writer._readyPromiseState = "rejected";
        }
        function defaultWriterReadyPromiseReset(writer) {
          defaultWriterReadyPromiseInitialize(writer);
        }
        function defaultWriterReadyPromiseResetToRejected(writer, reason) {
          defaultWriterReadyPromiseInitializeAsRejected(writer, reason);
        }
        function defaultWriterReadyPromiseResolve(writer) {
          if (writer._readyPromise_resolve === void 0) {
            return;
          }
          writer._readyPromise_resolve(void 0);
          writer._readyPromise_resolve = void 0;
          writer._readyPromise_reject = void 0;
          writer._readyPromiseState = "fulfilled";
        }
        var NativeDOMException = typeof DOMException !== "undefined" ? DOMException : void 0;
        function isDOMExceptionConstructor(ctor) {
          if (!(typeof ctor === "function" || typeof ctor === "object")) {
            return false;
          }
          try {
            new ctor();
            return true;
          } catch (_a2) {
            return false;
          }
        }
        function createDOMExceptionPolyfill() {
          var ctor = function DOMException2(message, name) {
            this.message = message || "";
            this.name = name || "Error";
            if (Error.captureStackTrace) {
              Error.captureStackTrace(this, this.constructor);
            }
          };
          ctor.prototype = Object.create(Error.prototype);
          Object.defineProperty(ctor.prototype, "constructor", { value: ctor, writable: true, configurable: true });
          return ctor;
        }
        var DOMException$1 = isDOMExceptionConstructor(NativeDOMException) ? NativeDOMException : createDOMExceptionPolyfill();
        function ReadableStreamPipeTo(source, dest, preventClose, preventAbort, preventCancel, signal) {
          var reader = AcquireReadableStreamDefaultReader(source);
          var writer = AcquireWritableStreamDefaultWriter(dest);
          source._disturbed = true;
          var shuttingDown = false;
          var currentWrite = promiseResolvedWith(void 0);
          return newPromise(function(resolve, reject) {
            var abortAlgorithm;
            if (signal !== void 0) {
              abortAlgorithm = function() {
                var error = new DOMException$1("Aborted", "AbortError");
                var actions = [];
                if (!preventAbort) {
                  actions.push(function() {
                    if (dest._state === "writable") {
                      return WritableStreamAbort(dest, error);
                    }
                    return promiseResolvedWith(void 0);
                  });
                }
                if (!preventCancel) {
                  actions.push(function() {
                    if (source._state === "readable") {
                      return ReadableStreamCancel(source, error);
                    }
                    return promiseResolvedWith(void 0);
                  });
                }
                shutdownWithAction(function() {
                  return Promise.all(actions.map(function(action) {
                    return action();
                  }));
                }, true, error);
              };
              if (signal.aborted) {
                abortAlgorithm();
                return;
              }
              signal.addEventListener("abort", abortAlgorithm);
            }
            function pipeLoop() {
              return newPromise(function(resolveLoop, rejectLoop) {
                function next(done) {
                  if (done) {
                    resolveLoop();
                  } else {
                    PerformPromiseThen(pipeStep(), next, rejectLoop);
                  }
                }
                next(false);
              });
            }
            function pipeStep() {
              if (shuttingDown) {
                return promiseResolvedWith(true);
              }
              return PerformPromiseThen(writer._readyPromise, function() {
                return newPromise(function(resolveRead, rejectRead) {
                  ReadableStreamDefaultReaderRead(reader, {
                    _chunkSteps: function(chunk) {
                      currentWrite = PerformPromiseThen(WritableStreamDefaultWriterWrite(writer, chunk), void 0, noop);
                      resolveRead(false);
                    },
                    _closeSteps: function() {
                      return resolveRead(true);
                    },
                    _errorSteps: rejectRead
                  });
                });
              });
            }
            isOrBecomesErrored(source, reader._closedPromise, function(storedError) {
              if (!preventAbort) {
                shutdownWithAction(function() {
                  return WritableStreamAbort(dest, storedError);
                }, true, storedError);
              } else {
                shutdown(true, storedError);
              }
            });
            isOrBecomesErrored(dest, writer._closedPromise, function(storedError) {
              if (!preventCancel) {
                shutdownWithAction(function() {
                  return ReadableStreamCancel(source, storedError);
                }, true, storedError);
              } else {
                shutdown(true, storedError);
              }
            });
            isOrBecomesClosed(source, reader._closedPromise, function() {
              if (!preventClose) {
                shutdownWithAction(function() {
                  return WritableStreamDefaultWriterCloseWithErrorPropagation(writer);
                });
              } else {
                shutdown();
              }
            });
            if (WritableStreamCloseQueuedOrInFlight(dest) || dest._state === "closed") {
              var destClosed_1 = new TypeError("the destination writable stream closed before all data could be piped to it");
              if (!preventCancel) {
                shutdownWithAction(function() {
                  return ReadableStreamCancel(source, destClosed_1);
                }, true, destClosed_1);
              } else {
                shutdown(true, destClosed_1);
              }
            }
            setPromiseIsHandledToTrue(pipeLoop());
            function waitForWritesToFinish() {
              var oldCurrentWrite = currentWrite;
              return PerformPromiseThen(currentWrite, function() {
                return oldCurrentWrite !== currentWrite ? waitForWritesToFinish() : void 0;
              });
            }
            function isOrBecomesErrored(stream, promise, action) {
              if (stream._state === "errored") {
                action(stream._storedError);
              } else {
                uponRejection(promise, action);
              }
            }
            function isOrBecomesClosed(stream, promise, action) {
              if (stream._state === "closed") {
                action();
              } else {
                uponFulfillment(promise, action);
              }
            }
            function shutdownWithAction(action, originalIsError, originalError) {
              if (shuttingDown) {
                return;
              }
              shuttingDown = true;
              if (dest._state === "writable" && !WritableStreamCloseQueuedOrInFlight(dest)) {
                uponFulfillment(waitForWritesToFinish(), doTheRest);
              } else {
                doTheRest();
              }
              function doTheRest() {
                uponPromise(action(), function() {
                  return finalize(originalIsError, originalError);
                }, function(newError) {
                  return finalize(true, newError);
                });
              }
            }
            function shutdown(isError, error) {
              if (shuttingDown) {
                return;
              }
              shuttingDown = true;
              if (dest._state === "writable" && !WritableStreamCloseQueuedOrInFlight(dest)) {
                uponFulfillment(waitForWritesToFinish(), function() {
                  return finalize(isError, error);
                });
              } else {
                finalize(isError, error);
              }
            }
            function finalize(isError, error) {
              WritableStreamDefaultWriterRelease(writer);
              ReadableStreamReaderGenericRelease(reader);
              if (signal !== void 0) {
                signal.removeEventListener("abort", abortAlgorithm);
              }
              if (isError) {
                reject(error);
              } else {
                resolve(void 0);
              }
            }
          });
        }
        var ReadableStreamDefaultController = function() {
          function ReadableStreamDefaultController2() {
            throw new TypeError("Illegal constructor");
          }
          Object.defineProperty(ReadableStreamDefaultController2.prototype, "desiredSize", {
            get: function() {
              if (!IsReadableStreamDefaultController(this)) {
                throw defaultControllerBrandCheckException$1("desiredSize");
              }
              return ReadableStreamDefaultControllerGetDesiredSize(this);
            },
            enumerable: false,
            configurable: true
          });
          ReadableStreamDefaultController2.prototype.close = function() {
            if (!IsReadableStreamDefaultController(this)) {
              throw defaultControllerBrandCheckException$1("close");
            }
            if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(this)) {
              throw new TypeError("The stream is not in a state that permits close");
            }
            ReadableStreamDefaultControllerClose(this);
          };
          ReadableStreamDefaultController2.prototype.enqueue = function(chunk) {
            if (chunk === void 0) {
              chunk = void 0;
            }
            if (!IsReadableStreamDefaultController(this)) {
              throw defaultControllerBrandCheckException$1("enqueue");
            }
            if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(this)) {
              throw new TypeError("The stream is not in a state that permits enqueue");
            }
            return ReadableStreamDefaultControllerEnqueue(this, chunk);
          };
          ReadableStreamDefaultController2.prototype.error = function(e) {
            if (e === void 0) {
              e = void 0;
            }
            if (!IsReadableStreamDefaultController(this)) {
              throw defaultControllerBrandCheckException$1("error");
            }
            ReadableStreamDefaultControllerError(this, e);
          };
          ReadableStreamDefaultController2.prototype[CancelSteps] = function(reason) {
            ResetQueue(this);
            var result = this._cancelAlgorithm(reason);
            ReadableStreamDefaultControllerClearAlgorithms(this);
            return result;
          };
          ReadableStreamDefaultController2.prototype[PullSteps] = function(readRequest) {
            var stream = this._controlledReadableStream;
            if (this._queue.length > 0) {
              var chunk = DequeueValue(this);
              if (this._closeRequested && this._queue.length === 0) {
                ReadableStreamDefaultControllerClearAlgorithms(this);
                ReadableStreamClose(stream);
              } else {
                ReadableStreamDefaultControllerCallPullIfNeeded(this);
              }
              readRequest._chunkSteps(chunk);
            } else {
              ReadableStreamAddReadRequest(stream, readRequest);
              ReadableStreamDefaultControllerCallPullIfNeeded(this);
            }
          };
          return ReadableStreamDefaultController2;
        }();
        Object.defineProperties(ReadableStreamDefaultController.prototype, {
          close: { enumerable: true },
          enqueue: { enumerable: true },
          error: { enumerable: true },
          desiredSize: { enumerable: true }
        });
        if (typeof SymbolPolyfill.toStringTag === "symbol") {
          Object.defineProperty(ReadableStreamDefaultController.prototype, SymbolPolyfill.toStringTag, {
            value: "ReadableStreamDefaultController",
            configurable: true
          });
        }
        function IsReadableStreamDefaultController(x) {
          if (!typeIsObject(x)) {
            return false;
          }
          if (!Object.prototype.hasOwnProperty.call(x, "_controlledReadableStream")) {
            return false;
          }
          return x instanceof ReadableStreamDefaultController;
        }
        function ReadableStreamDefaultControllerCallPullIfNeeded(controller) {
          var shouldPull = ReadableStreamDefaultControllerShouldCallPull(controller);
          if (!shouldPull) {
            return;
          }
          if (controller._pulling) {
            controller._pullAgain = true;
            return;
          }
          controller._pulling = true;
          var pullPromise = controller._pullAlgorithm();
          uponPromise(pullPromise, function() {
            controller._pulling = false;
            if (controller._pullAgain) {
              controller._pullAgain = false;
              ReadableStreamDefaultControllerCallPullIfNeeded(controller);
            }
          }, function(e) {
            ReadableStreamDefaultControllerError(controller, e);
          });
        }
        function ReadableStreamDefaultControllerShouldCallPull(controller) {
          var stream = controller._controlledReadableStream;
          if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(controller)) {
            return false;
          }
          if (!controller._started) {
            return false;
          }
          if (IsReadableStreamLocked(stream) && ReadableStreamGetNumReadRequests(stream) > 0) {
            return true;
          }
          var desiredSize = ReadableStreamDefaultControllerGetDesiredSize(controller);
          if (desiredSize > 0) {
            return true;
          }
          return false;
        }
        function ReadableStreamDefaultControllerClearAlgorithms(controller) {
          controller._pullAlgorithm = void 0;
          controller._cancelAlgorithm = void 0;
          controller._strategySizeAlgorithm = void 0;
        }
        function ReadableStreamDefaultControllerClose(controller) {
          if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(controller)) {
            return;
          }
          var stream = controller._controlledReadableStream;
          controller._closeRequested = true;
          if (controller._queue.length === 0) {
            ReadableStreamDefaultControllerClearAlgorithms(controller);
            ReadableStreamClose(stream);
          }
        }
        function ReadableStreamDefaultControllerEnqueue(controller, chunk) {
          if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(controller)) {
            return;
          }
          var stream = controller._controlledReadableStream;
          if (IsReadableStreamLocked(stream) && ReadableStreamGetNumReadRequests(stream) > 0) {
            ReadableStreamFulfillReadRequest(stream, chunk, false);
          } else {
            var chunkSize = void 0;
            try {
              chunkSize = controller._strategySizeAlgorithm(chunk);
            } catch (chunkSizeE) {
              ReadableStreamDefaultControllerError(controller, chunkSizeE);
              throw chunkSizeE;
            }
            try {
              EnqueueValueWithSize(controller, chunk, chunkSize);
            } catch (enqueueE) {
              ReadableStreamDefaultControllerError(controller, enqueueE);
              throw enqueueE;
            }
          }
          ReadableStreamDefaultControllerCallPullIfNeeded(controller);
        }
        function ReadableStreamDefaultControllerError(controller, e) {
          var stream = controller._controlledReadableStream;
          if (stream._state !== "readable") {
            return;
          }
          ResetQueue(controller);
          ReadableStreamDefaultControllerClearAlgorithms(controller);
          ReadableStreamError(stream, e);
        }
        function ReadableStreamDefaultControllerGetDesiredSize(controller) {
          var state = controller._controlledReadableStream._state;
          if (state === "errored") {
            return null;
          }
          if (state === "closed") {
            return 0;
          }
          return controller._strategyHWM - controller._queueTotalSize;
        }
        function ReadableStreamDefaultControllerHasBackpressure(controller) {
          if (ReadableStreamDefaultControllerShouldCallPull(controller)) {
            return false;
          }
          return true;
        }
        function ReadableStreamDefaultControllerCanCloseOrEnqueue(controller) {
          var state = controller._controlledReadableStream._state;
          if (!controller._closeRequested && state === "readable") {
            return true;
          }
          return false;
        }
        function SetUpReadableStreamDefaultController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, sizeAlgorithm) {
          controller._controlledReadableStream = stream;
          controller._queue = void 0;
          controller._queueTotalSize = void 0;
          ResetQueue(controller);
          controller._started = false;
          controller._closeRequested = false;
          controller._pullAgain = false;
          controller._pulling = false;
          controller._strategySizeAlgorithm = sizeAlgorithm;
          controller._strategyHWM = highWaterMark;
          controller._pullAlgorithm = pullAlgorithm;
          controller._cancelAlgorithm = cancelAlgorithm;
          stream._readableStreamController = controller;
          var startResult = startAlgorithm();
          uponPromise(promiseResolvedWith(startResult), function() {
            controller._started = true;
            ReadableStreamDefaultControllerCallPullIfNeeded(controller);
          }, function(r) {
            ReadableStreamDefaultControllerError(controller, r);
          });
        }
        function SetUpReadableStreamDefaultControllerFromUnderlyingSource(stream, underlyingSource, highWaterMark, sizeAlgorithm) {
          var controller = Object.create(ReadableStreamDefaultController.prototype);
          var startAlgorithm = function() {
            return void 0;
          };
          var pullAlgorithm = function() {
            return promiseResolvedWith(void 0);
          };
          var cancelAlgorithm = function() {
            return promiseResolvedWith(void 0);
          };
          if (underlyingSource.start !== void 0) {
            startAlgorithm = function() {
              return underlyingSource.start(controller);
            };
          }
          if (underlyingSource.pull !== void 0) {
            pullAlgorithm = function() {
              return underlyingSource.pull(controller);
            };
          }
          if (underlyingSource.cancel !== void 0) {
            cancelAlgorithm = function(reason) {
              return underlyingSource.cancel(reason);
            };
          }
          SetUpReadableStreamDefaultController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, sizeAlgorithm);
        }
        function defaultControllerBrandCheckException$1(name) {
          return new TypeError("ReadableStreamDefaultController.prototype." + name + " can only be used on a ReadableStreamDefaultController");
        }
        function ReadableStreamTee(stream, cloneForBranch2) {
          if (IsReadableByteStreamController(stream._readableStreamController)) {
            return ReadableByteStreamTee(stream);
          }
          return ReadableStreamDefaultTee(stream);
        }
        function ReadableStreamDefaultTee(stream, cloneForBranch2) {
          var reader = AcquireReadableStreamDefaultReader(stream);
          var reading = false;
          var readAgain = false;
          var canceled1 = false;
          var canceled2 = false;
          var reason1;
          var reason2;
          var branch1;
          var branch2;
          var resolveCancelPromise;
          var cancelPromise = newPromise(function(resolve) {
            resolveCancelPromise = resolve;
          });
          function pullAlgorithm() {
            if (reading) {
              readAgain = true;
              return promiseResolvedWith(void 0);
            }
            reading = true;
            var readRequest = {
              _chunkSteps: function(chunk) {
                queueMicrotask(function() {
                  readAgain = false;
                  var chunk1 = chunk;
                  var chunk2 = chunk;
                  if (!canceled1) {
                    ReadableStreamDefaultControllerEnqueue(branch1._readableStreamController, chunk1);
                  }
                  if (!canceled2) {
                    ReadableStreamDefaultControllerEnqueue(branch2._readableStreamController, chunk2);
                  }
                  reading = false;
                  if (readAgain) {
                    pullAlgorithm();
                  }
                });
              },
              _closeSteps: function() {
                reading = false;
                if (!canceled1) {
                  ReadableStreamDefaultControllerClose(branch1._readableStreamController);
                }
                if (!canceled2) {
                  ReadableStreamDefaultControllerClose(branch2._readableStreamController);
                }
                if (!canceled1 || !canceled2) {
                  resolveCancelPromise(void 0);
                }
              },
              _errorSteps: function() {
                reading = false;
              }
            };
            ReadableStreamDefaultReaderRead(reader, readRequest);
            return promiseResolvedWith(void 0);
          }
          function cancel1Algorithm(reason) {
            canceled1 = true;
            reason1 = reason;
            if (canceled2) {
              var compositeReason = CreateArrayFromList([reason1, reason2]);
              var cancelResult = ReadableStreamCancel(stream, compositeReason);
              resolveCancelPromise(cancelResult);
            }
            return cancelPromise;
          }
          function cancel2Algorithm(reason) {
            canceled2 = true;
            reason2 = reason;
            if (canceled1) {
              var compositeReason = CreateArrayFromList([reason1, reason2]);
              var cancelResult = ReadableStreamCancel(stream, compositeReason);
              resolveCancelPromise(cancelResult);
            }
            return cancelPromise;
          }
          function startAlgorithm() {
          }
          branch1 = CreateReadableStream(startAlgorithm, pullAlgorithm, cancel1Algorithm);
          branch2 = CreateReadableStream(startAlgorithm, pullAlgorithm, cancel2Algorithm);
          uponRejection(reader._closedPromise, function(r) {
            ReadableStreamDefaultControllerError(branch1._readableStreamController, r);
            ReadableStreamDefaultControllerError(branch2._readableStreamController, r);
            if (!canceled1 || !canceled2) {
              resolveCancelPromise(void 0);
            }
          });
          return [branch1, branch2];
        }
        function ReadableByteStreamTee(stream) {
          var reader = AcquireReadableStreamDefaultReader(stream);
          var reading = false;
          var readAgainForBranch1 = false;
          var readAgainForBranch2 = false;
          var canceled1 = false;
          var canceled2 = false;
          var reason1;
          var reason2;
          var branch1;
          var branch2;
          var resolveCancelPromise;
          var cancelPromise = newPromise(function(resolve) {
            resolveCancelPromise = resolve;
          });
          function forwardReaderError(thisReader) {
            uponRejection(thisReader._closedPromise, function(r) {
              if (thisReader !== reader) {
                return;
              }
              ReadableByteStreamControllerError(branch1._readableStreamController, r);
              ReadableByteStreamControllerError(branch2._readableStreamController, r);
              if (!canceled1 || !canceled2) {
                resolveCancelPromise(void 0);
              }
            });
          }
          function pullWithDefaultReader() {
            if (IsReadableStreamBYOBReader(reader)) {
              ReadableStreamReaderGenericRelease(reader);
              reader = AcquireReadableStreamDefaultReader(stream);
              forwardReaderError(reader);
            }
            var readRequest = {
              _chunkSteps: function(chunk) {
                queueMicrotask(function() {
                  readAgainForBranch1 = false;
                  readAgainForBranch2 = false;
                  var chunk1 = chunk;
                  var chunk2 = chunk;
                  if (!canceled1 && !canceled2) {
                    try {
                      chunk2 = CloneAsUint8Array(chunk);
                    } catch (cloneE) {
                      ReadableByteStreamControllerError(branch1._readableStreamController, cloneE);
                      ReadableByteStreamControllerError(branch2._readableStreamController, cloneE);
                      resolveCancelPromise(ReadableStreamCancel(stream, cloneE));
                      return;
                    }
                  }
                  if (!canceled1) {
                    ReadableByteStreamControllerEnqueue(branch1._readableStreamController, chunk1);
                  }
                  if (!canceled2) {
                    ReadableByteStreamControllerEnqueue(branch2._readableStreamController, chunk2);
                  }
                  reading = false;
                  if (readAgainForBranch1) {
                    pull1Algorithm();
                  } else if (readAgainForBranch2) {
                    pull2Algorithm();
                  }
                });
              },
              _closeSteps: function() {
                reading = false;
                if (!canceled1) {
                  ReadableByteStreamControllerClose(branch1._readableStreamController);
                }
                if (!canceled2) {
                  ReadableByteStreamControllerClose(branch2._readableStreamController);
                }
                if (branch1._readableStreamController._pendingPullIntos.length > 0) {
                  ReadableByteStreamControllerRespond(branch1._readableStreamController, 0);
                }
                if (branch2._readableStreamController._pendingPullIntos.length > 0) {
                  ReadableByteStreamControllerRespond(branch2._readableStreamController, 0);
                }
                if (!canceled1 || !canceled2) {
                  resolveCancelPromise(void 0);
                }
              },
              _errorSteps: function() {
                reading = false;
              }
            };
            ReadableStreamDefaultReaderRead(reader, readRequest);
          }
          function pullWithBYOBReader(view, forBranch2) {
            if (IsReadableStreamDefaultReader(reader)) {
              ReadableStreamReaderGenericRelease(reader);
              reader = AcquireReadableStreamBYOBReader(stream);
              forwardReaderError(reader);
            }
            var byobBranch = forBranch2 ? branch2 : branch1;
            var otherBranch = forBranch2 ? branch1 : branch2;
            var readIntoRequest = {
              _chunkSteps: function(chunk) {
                queueMicrotask(function() {
                  readAgainForBranch1 = false;
                  readAgainForBranch2 = false;
                  var byobCanceled = forBranch2 ? canceled2 : canceled1;
                  var otherCanceled = forBranch2 ? canceled1 : canceled2;
                  if (!otherCanceled) {
                    var clonedChunk = void 0;
                    try {
                      clonedChunk = CloneAsUint8Array(chunk);
                    } catch (cloneE) {
                      ReadableByteStreamControllerError(byobBranch._readableStreamController, cloneE);
                      ReadableByteStreamControllerError(otherBranch._readableStreamController, cloneE);
                      resolveCancelPromise(ReadableStreamCancel(stream, cloneE));
                      return;
                    }
                    if (!byobCanceled) {
                      ReadableByteStreamControllerRespondWithNewView(byobBranch._readableStreamController, chunk);
                    }
                    ReadableByteStreamControllerEnqueue(otherBranch._readableStreamController, clonedChunk);
                  } else if (!byobCanceled) {
                    ReadableByteStreamControllerRespondWithNewView(byobBranch._readableStreamController, chunk);
                  }
                  reading = false;
                  if (readAgainForBranch1) {
                    pull1Algorithm();
                  } else if (readAgainForBranch2) {
                    pull2Algorithm();
                  }
                });
              },
              _closeSteps: function(chunk) {
                reading = false;
                var byobCanceled = forBranch2 ? canceled2 : canceled1;
                var otherCanceled = forBranch2 ? canceled1 : canceled2;
                if (!byobCanceled) {
                  ReadableByteStreamControllerClose(byobBranch._readableStreamController);
                }
                if (!otherCanceled) {
                  ReadableByteStreamControllerClose(otherBranch._readableStreamController);
                }
                if (chunk !== void 0) {
                  if (!byobCanceled) {
                    ReadableByteStreamControllerRespondWithNewView(byobBranch._readableStreamController, chunk);
                  }
                  if (!otherCanceled && otherBranch._readableStreamController._pendingPullIntos.length > 0) {
                    ReadableByteStreamControllerRespond(otherBranch._readableStreamController, 0);
                  }
                }
                if (!byobCanceled || !otherCanceled) {
                  resolveCancelPromise(void 0);
                }
              },
              _errorSteps: function() {
                reading = false;
              }
            };
            ReadableStreamBYOBReaderRead(reader, view, readIntoRequest);
          }
          function pull1Algorithm() {
            if (reading) {
              readAgainForBranch1 = true;
              return promiseResolvedWith(void 0);
            }
            reading = true;
            var byobRequest = ReadableByteStreamControllerGetBYOBRequest(branch1._readableStreamController);
            if (byobRequest === null) {
              pullWithDefaultReader();
            } else {
              pullWithBYOBReader(byobRequest._view, false);
            }
            return promiseResolvedWith(void 0);
          }
          function pull2Algorithm() {
            if (reading) {
              readAgainForBranch2 = true;
              return promiseResolvedWith(void 0);
            }
            reading = true;
            var byobRequest = ReadableByteStreamControllerGetBYOBRequest(branch2._readableStreamController);
            if (byobRequest === null) {
              pullWithDefaultReader();
            } else {
              pullWithBYOBReader(byobRequest._view, true);
            }
            return promiseResolvedWith(void 0);
          }
          function cancel1Algorithm(reason) {
            canceled1 = true;
            reason1 = reason;
            if (canceled2) {
              var compositeReason = CreateArrayFromList([reason1, reason2]);
              var cancelResult = ReadableStreamCancel(stream, compositeReason);
              resolveCancelPromise(cancelResult);
            }
            return cancelPromise;
          }
          function cancel2Algorithm(reason) {
            canceled2 = true;
            reason2 = reason;
            if (canceled1) {
              var compositeReason = CreateArrayFromList([reason1, reason2]);
              var cancelResult = ReadableStreamCancel(stream, compositeReason);
              resolveCancelPromise(cancelResult);
            }
            return cancelPromise;
          }
          function startAlgorithm() {
            return;
          }
          branch1 = CreateReadableByteStream(startAlgorithm, pull1Algorithm, cancel1Algorithm);
          branch2 = CreateReadableByteStream(startAlgorithm, pull2Algorithm, cancel2Algorithm);
          forwardReaderError(reader);
          return [branch1, branch2];
        }
        function convertUnderlyingDefaultOrByteSource(source, context) {
          assertDictionary(source, context);
          var original = source;
          var autoAllocateChunkSize = original === null || original === void 0 ? void 0 : original.autoAllocateChunkSize;
          var cancel = original === null || original === void 0 ? void 0 : original.cancel;
          var pull = original === null || original === void 0 ? void 0 : original.pull;
          var start = original === null || original === void 0 ? void 0 : original.start;
          var type = original === null || original === void 0 ? void 0 : original.type;
          return {
            autoAllocateChunkSize: autoAllocateChunkSize === void 0 ? void 0 : convertUnsignedLongLongWithEnforceRange(autoAllocateChunkSize, context + " has member 'autoAllocateChunkSize' that"),
            cancel: cancel === void 0 ? void 0 : convertUnderlyingSourceCancelCallback(cancel, original, context + " has member 'cancel' that"),
            pull: pull === void 0 ? void 0 : convertUnderlyingSourcePullCallback(pull, original, context + " has member 'pull' that"),
            start: start === void 0 ? void 0 : convertUnderlyingSourceStartCallback(start, original, context + " has member 'start' that"),
            type: type === void 0 ? void 0 : convertReadableStreamType(type, context + " has member 'type' that")
          };
        }
        function convertUnderlyingSourceCancelCallback(fn, original, context) {
          assertFunction(fn, context);
          return function(reason) {
            return promiseCall(fn, original, [reason]);
          };
        }
        function convertUnderlyingSourcePullCallback(fn, original, context) {
          assertFunction(fn, context);
          return function(controller) {
            return promiseCall(fn, original, [controller]);
          };
        }
        function convertUnderlyingSourceStartCallback(fn, original, context) {
          assertFunction(fn, context);
          return function(controller) {
            return reflectCall(fn, original, [controller]);
          };
        }
        function convertReadableStreamType(type, context) {
          type = "" + type;
          if (type !== "bytes") {
            throw new TypeError(context + " '" + type + "' is not a valid enumeration value for ReadableStreamType");
          }
          return type;
        }
        function convertReaderOptions(options, context) {
          assertDictionary(options, context);
          var mode = options === null || options === void 0 ? void 0 : options.mode;
          return {
            mode: mode === void 0 ? void 0 : convertReadableStreamReaderMode(mode, context + " has member 'mode' that")
          };
        }
        function convertReadableStreamReaderMode(mode, context) {
          mode = "" + mode;
          if (mode !== "byob") {
            throw new TypeError(context + " '" + mode + "' is not a valid enumeration value for ReadableStreamReaderMode");
          }
          return mode;
        }
        function convertIteratorOptions(options, context) {
          assertDictionary(options, context);
          var preventCancel = options === null || options === void 0 ? void 0 : options.preventCancel;
          return { preventCancel: Boolean(preventCancel) };
        }
        function convertPipeOptions(options, context) {
          assertDictionary(options, context);
          var preventAbort = options === null || options === void 0 ? void 0 : options.preventAbort;
          var preventCancel = options === null || options === void 0 ? void 0 : options.preventCancel;
          var preventClose = options === null || options === void 0 ? void 0 : options.preventClose;
          var signal = options === null || options === void 0 ? void 0 : options.signal;
          if (signal !== void 0) {
            assertAbortSignal(signal, context + " has member 'signal' that");
          }
          return {
            preventAbort: Boolean(preventAbort),
            preventCancel: Boolean(preventCancel),
            preventClose: Boolean(preventClose),
            signal
          };
        }
        function assertAbortSignal(signal, context) {
          if (!isAbortSignal(signal)) {
            throw new TypeError(context + " is not an AbortSignal.");
          }
        }
        function convertReadableWritablePair(pair, context) {
          assertDictionary(pair, context);
          var readable = pair === null || pair === void 0 ? void 0 : pair.readable;
          assertRequiredField(readable, "readable", "ReadableWritablePair");
          assertReadableStream(readable, context + " has member 'readable' that");
          var writable = pair === null || pair === void 0 ? void 0 : pair.writable;
          assertRequiredField(writable, "writable", "ReadableWritablePair");
          assertWritableStream(writable, context + " has member 'writable' that");
          return { readable, writable };
        }
        var ReadableStream2 = function() {
          function ReadableStream3(rawUnderlyingSource, rawStrategy) {
            if (rawUnderlyingSource === void 0) {
              rawUnderlyingSource = {};
            }
            if (rawStrategy === void 0) {
              rawStrategy = {};
            }
            if (rawUnderlyingSource === void 0) {
              rawUnderlyingSource = null;
            } else {
              assertObject(rawUnderlyingSource, "First parameter");
            }
            var strategy = convertQueuingStrategy(rawStrategy, "Second parameter");
            var underlyingSource = convertUnderlyingDefaultOrByteSource(rawUnderlyingSource, "First parameter");
            InitializeReadableStream(this);
            if (underlyingSource.type === "bytes") {
              if (strategy.size !== void 0) {
                throw new RangeError("The strategy for a byte stream cannot have a size function");
              }
              var highWaterMark = ExtractHighWaterMark(strategy, 0);
              SetUpReadableByteStreamControllerFromUnderlyingSource(this, underlyingSource, highWaterMark);
            } else {
              var sizeAlgorithm = ExtractSizeAlgorithm(strategy);
              var highWaterMark = ExtractHighWaterMark(strategy, 1);
              SetUpReadableStreamDefaultControllerFromUnderlyingSource(this, underlyingSource, highWaterMark, sizeAlgorithm);
            }
          }
          Object.defineProperty(ReadableStream3.prototype, "locked", {
            get: function() {
              if (!IsReadableStream(this)) {
                throw streamBrandCheckException$1("locked");
              }
              return IsReadableStreamLocked(this);
            },
            enumerable: false,
            configurable: true
          });
          ReadableStream3.prototype.cancel = function(reason) {
            if (reason === void 0) {
              reason = void 0;
            }
            if (!IsReadableStream(this)) {
              return promiseRejectedWith(streamBrandCheckException$1("cancel"));
            }
            if (IsReadableStreamLocked(this)) {
              return promiseRejectedWith(new TypeError("Cannot cancel a stream that already has a reader"));
            }
            return ReadableStreamCancel(this, reason);
          };
          ReadableStream3.prototype.getReader = function(rawOptions) {
            if (rawOptions === void 0) {
              rawOptions = void 0;
            }
            if (!IsReadableStream(this)) {
              throw streamBrandCheckException$1("getReader");
            }
            var options = convertReaderOptions(rawOptions, "First parameter");
            if (options.mode === void 0) {
              return AcquireReadableStreamDefaultReader(this);
            }
            return AcquireReadableStreamBYOBReader(this);
          };
          ReadableStream3.prototype.pipeThrough = function(rawTransform, rawOptions) {
            if (rawOptions === void 0) {
              rawOptions = {};
            }
            if (!IsReadableStream(this)) {
              throw streamBrandCheckException$1("pipeThrough");
            }
            assertRequiredArgument(rawTransform, 1, "pipeThrough");
            var transform = convertReadableWritablePair(rawTransform, "First parameter");
            var options = convertPipeOptions(rawOptions, "Second parameter");
            if (IsReadableStreamLocked(this)) {
              throw new TypeError("ReadableStream.prototype.pipeThrough cannot be used on a locked ReadableStream");
            }
            if (IsWritableStreamLocked(transform.writable)) {
              throw new TypeError("ReadableStream.prototype.pipeThrough cannot be used on a locked WritableStream");
            }
            var promise = ReadableStreamPipeTo(this, transform.writable, options.preventClose, options.preventAbort, options.preventCancel, options.signal);
            setPromiseIsHandledToTrue(promise);
            return transform.readable;
          };
          ReadableStream3.prototype.pipeTo = function(destination, rawOptions) {
            if (rawOptions === void 0) {
              rawOptions = {};
            }
            if (!IsReadableStream(this)) {
              return promiseRejectedWith(streamBrandCheckException$1("pipeTo"));
            }
            if (destination === void 0) {
              return promiseRejectedWith("Parameter 1 is required in 'pipeTo'.");
            }
            if (!IsWritableStream(destination)) {
              return promiseRejectedWith(new TypeError("ReadableStream.prototype.pipeTo's first argument must be a WritableStream"));
            }
            var options;
            try {
              options = convertPipeOptions(rawOptions, "Second parameter");
            } catch (e) {
              return promiseRejectedWith(e);
            }
            if (IsReadableStreamLocked(this)) {
              return promiseRejectedWith(new TypeError("ReadableStream.prototype.pipeTo cannot be used on a locked ReadableStream"));
            }
            if (IsWritableStreamLocked(destination)) {
              return promiseRejectedWith(new TypeError("ReadableStream.prototype.pipeTo cannot be used on a locked WritableStream"));
            }
            return ReadableStreamPipeTo(this, destination, options.preventClose, options.preventAbort, options.preventCancel, options.signal);
          };
          ReadableStream3.prototype.tee = function() {
            if (!IsReadableStream(this)) {
              throw streamBrandCheckException$1("tee");
            }
            var branches = ReadableStreamTee(this);
            return CreateArrayFromList(branches);
          };
          ReadableStream3.prototype.values = function(rawOptions) {
            if (rawOptions === void 0) {
              rawOptions = void 0;
            }
            if (!IsReadableStream(this)) {
              throw streamBrandCheckException$1("values");
            }
            var options = convertIteratorOptions(rawOptions, "First parameter");
            return AcquireReadableStreamAsyncIterator(this, options.preventCancel);
          };
          return ReadableStream3;
        }();
        Object.defineProperties(ReadableStream2.prototype, {
          cancel: { enumerable: true },
          getReader: { enumerable: true },
          pipeThrough: { enumerable: true },
          pipeTo: { enumerable: true },
          tee: { enumerable: true },
          values: { enumerable: true },
          locked: { enumerable: true }
        });
        if (typeof SymbolPolyfill.toStringTag === "symbol") {
          Object.defineProperty(ReadableStream2.prototype, SymbolPolyfill.toStringTag, {
            value: "ReadableStream",
            configurable: true
          });
        }
        if (typeof SymbolPolyfill.asyncIterator === "symbol") {
          Object.defineProperty(ReadableStream2.prototype, SymbolPolyfill.asyncIterator, {
            value: ReadableStream2.prototype.values,
            writable: true,
            configurable: true
          });
        }
        function CreateReadableStream(startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, sizeAlgorithm) {
          if (highWaterMark === void 0) {
            highWaterMark = 1;
          }
          if (sizeAlgorithm === void 0) {
            sizeAlgorithm = function() {
              return 1;
            };
          }
          var stream = Object.create(ReadableStream2.prototype);
          InitializeReadableStream(stream);
          var controller = Object.create(ReadableStreamDefaultController.prototype);
          SetUpReadableStreamDefaultController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, sizeAlgorithm);
          return stream;
        }
        function CreateReadableByteStream(startAlgorithm, pullAlgorithm, cancelAlgorithm) {
          var stream = Object.create(ReadableStream2.prototype);
          InitializeReadableStream(stream);
          var controller = Object.create(ReadableByteStreamController.prototype);
          SetUpReadableByteStreamController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, 0, void 0);
          return stream;
        }
        function InitializeReadableStream(stream) {
          stream._state = "readable";
          stream._reader = void 0;
          stream._storedError = void 0;
          stream._disturbed = false;
        }
        function IsReadableStream(x) {
          if (!typeIsObject(x)) {
            return false;
          }
          if (!Object.prototype.hasOwnProperty.call(x, "_readableStreamController")) {
            return false;
          }
          return x instanceof ReadableStream2;
        }
        function IsReadableStreamLocked(stream) {
          if (stream._reader === void 0) {
            return false;
          }
          return true;
        }
        function ReadableStreamCancel(stream, reason) {
          stream._disturbed = true;
          if (stream._state === "closed") {
            return promiseResolvedWith(void 0);
          }
          if (stream._state === "errored") {
            return promiseRejectedWith(stream._storedError);
          }
          ReadableStreamClose(stream);
          var reader = stream._reader;
          if (reader !== void 0 && IsReadableStreamBYOBReader(reader)) {
            reader._readIntoRequests.forEach(function(readIntoRequest) {
              readIntoRequest._closeSteps(void 0);
            });
            reader._readIntoRequests = new SimpleQueue();
          }
          var sourceCancelPromise = stream._readableStreamController[CancelSteps](reason);
          return transformPromiseWith(sourceCancelPromise, noop);
        }
        function ReadableStreamClose(stream) {
          stream._state = "closed";
          var reader = stream._reader;
          if (reader === void 0) {
            return;
          }
          defaultReaderClosedPromiseResolve(reader);
          if (IsReadableStreamDefaultReader(reader)) {
            reader._readRequests.forEach(function(readRequest) {
              readRequest._closeSteps();
            });
            reader._readRequests = new SimpleQueue();
          }
        }
        function ReadableStreamError(stream, e) {
          stream._state = "errored";
          stream._storedError = e;
          var reader = stream._reader;
          if (reader === void 0) {
            return;
          }
          defaultReaderClosedPromiseReject(reader, e);
          if (IsReadableStreamDefaultReader(reader)) {
            reader._readRequests.forEach(function(readRequest) {
              readRequest._errorSteps(e);
            });
            reader._readRequests = new SimpleQueue();
          } else {
            reader._readIntoRequests.forEach(function(readIntoRequest) {
              readIntoRequest._errorSteps(e);
            });
            reader._readIntoRequests = new SimpleQueue();
          }
        }
        function streamBrandCheckException$1(name) {
          return new TypeError("ReadableStream.prototype." + name + " can only be used on a ReadableStream");
        }
        function convertQueuingStrategyInit(init, context) {
          assertDictionary(init, context);
          var highWaterMark = init === null || init === void 0 ? void 0 : init.highWaterMark;
          assertRequiredField(highWaterMark, "highWaterMark", "QueuingStrategyInit");
          return {
            highWaterMark: convertUnrestrictedDouble(highWaterMark)
          };
        }
        var byteLengthSizeFunction = function(chunk) {
          return chunk.byteLength;
        };
        try {
          Object.defineProperty(byteLengthSizeFunction, "name", {
            value: "size",
            configurable: true
          });
        } catch (_a2) {
        }
        var ByteLengthQueuingStrategy = function() {
          function ByteLengthQueuingStrategy2(options) {
            assertRequiredArgument(options, 1, "ByteLengthQueuingStrategy");
            options = convertQueuingStrategyInit(options, "First parameter");
            this._byteLengthQueuingStrategyHighWaterMark = options.highWaterMark;
          }
          Object.defineProperty(ByteLengthQueuingStrategy2.prototype, "highWaterMark", {
            get: function() {
              if (!IsByteLengthQueuingStrategy(this)) {
                throw byteLengthBrandCheckException("highWaterMark");
              }
              return this._byteLengthQueuingStrategyHighWaterMark;
            },
            enumerable: false,
            configurable: true
          });
          Object.defineProperty(ByteLengthQueuingStrategy2.prototype, "size", {
            get: function() {
              if (!IsByteLengthQueuingStrategy(this)) {
                throw byteLengthBrandCheckException("size");
              }
              return byteLengthSizeFunction;
            },
            enumerable: false,
            configurable: true
          });
          return ByteLengthQueuingStrategy2;
        }();
        Object.defineProperties(ByteLengthQueuingStrategy.prototype, {
          highWaterMark: { enumerable: true },
          size: { enumerable: true }
        });
        if (typeof SymbolPolyfill.toStringTag === "symbol") {
          Object.defineProperty(ByteLengthQueuingStrategy.prototype, SymbolPolyfill.toStringTag, {
            value: "ByteLengthQueuingStrategy",
            configurable: true
          });
        }
        function byteLengthBrandCheckException(name) {
          return new TypeError("ByteLengthQueuingStrategy.prototype." + name + " can only be used on a ByteLengthQueuingStrategy");
        }
        function IsByteLengthQueuingStrategy(x) {
          if (!typeIsObject(x)) {
            return false;
          }
          if (!Object.prototype.hasOwnProperty.call(x, "_byteLengthQueuingStrategyHighWaterMark")) {
            return false;
          }
          return x instanceof ByteLengthQueuingStrategy;
        }
        var countSizeFunction = function() {
          return 1;
        };
        try {
          Object.defineProperty(countSizeFunction, "name", {
            value: "size",
            configurable: true
          });
        } catch (_a2) {
        }
        var CountQueuingStrategy = function() {
          function CountQueuingStrategy2(options) {
            assertRequiredArgument(options, 1, "CountQueuingStrategy");
            options = convertQueuingStrategyInit(options, "First parameter");
            this._countQueuingStrategyHighWaterMark = options.highWaterMark;
          }
          Object.defineProperty(CountQueuingStrategy2.prototype, "highWaterMark", {
            get: function() {
              if (!IsCountQueuingStrategy(this)) {
                throw countBrandCheckException("highWaterMark");
              }
              return this._countQueuingStrategyHighWaterMark;
            },
            enumerable: false,
            configurable: true
          });
          Object.defineProperty(CountQueuingStrategy2.prototype, "size", {
            get: function() {
              if (!IsCountQueuingStrategy(this)) {
                throw countBrandCheckException("size");
              }
              return countSizeFunction;
            },
            enumerable: false,
            configurable: true
          });
          return CountQueuingStrategy2;
        }();
        Object.defineProperties(CountQueuingStrategy.prototype, {
          highWaterMark: { enumerable: true },
          size: { enumerable: true }
        });
        if (typeof SymbolPolyfill.toStringTag === "symbol") {
          Object.defineProperty(CountQueuingStrategy.prototype, SymbolPolyfill.toStringTag, {
            value: "CountQueuingStrategy",
            configurable: true
          });
        }
        function countBrandCheckException(name) {
          return new TypeError("CountQueuingStrategy.prototype." + name + " can only be used on a CountQueuingStrategy");
        }
        function IsCountQueuingStrategy(x) {
          if (!typeIsObject(x)) {
            return false;
          }
          if (!Object.prototype.hasOwnProperty.call(x, "_countQueuingStrategyHighWaterMark")) {
            return false;
          }
          return x instanceof CountQueuingStrategy;
        }
        function convertTransformer(original, context) {
          assertDictionary(original, context);
          var flush = original === null || original === void 0 ? void 0 : original.flush;
          var readableType = original === null || original === void 0 ? void 0 : original.readableType;
          var start = original === null || original === void 0 ? void 0 : original.start;
          var transform = original === null || original === void 0 ? void 0 : original.transform;
          var writableType = original === null || original === void 0 ? void 0 : original.writableType;
          return {
            flush: flush === void 0 ? void 0 : convertTransformerFlushCallback(flush, original, context + " has member 'flush' that"),
            readableType,
            start: start === void 0 ? void 0 : convertTransformerStartCallback(start, original, context + " has member 'start' that"),
            transform: transform === void 0 ? void 0 : convertTransformerTransformCallback(transform, original, context + " has member 'transform' that"),
            writableType
          };
        }
        function convertTransformerFlushCallback(fn, original, context) {
          assertFunction(fn, context);
          return function(controller) {
            return promiseCall(fn, original, [controller]);
          };
        }
        function convertTransformerStartCallback(fn, original, context) {
          assertFunction(fn, context);
          return function(controller) {
            return reflectCall(fn, original, [controller]);
          };
        }
        function convertTransformerTransformCallback(fn, original, context) {
          assertFunction(fn, context);
          return function(chunk, controller) {
            return promiseCall(fn, original, [chunk, controller]);
          };
        }
        var TransformStream = function() {
          function TransformStream2(rawTransformer, rawWritableStrategy, rawReadableStrategy) {
            if (rawTransformer === void 0) {
              rawTransformer = {};
            }
            if (rawWritableStrategy === void 0) {
              rawWritableStrategy = {};
            }
            if (rawReadableStrategy === void 0) {
              rawReadableStrategy = {};
            }
            if (rawTransformer === void 0) {
              rawTransformer = null;
            }
            var writableStrategy = convertQueuingStrategy(rawWritableStrategy, "Second parameter");
            var readableStrategy = convertQueuingStrategy(rawReadableStrategy, "Third parameter");
            var transformer = convertTransformer(rawTransformer, "First parameter");
            if (transformer.readableType !== void 0) {
              throw new RangeError("Invalid readableType specified");
            }
            if (transformer.writableType !== void 0) {
              throw new RangeError("Invalid writableType specified");
            }
            var readableHighWaterMark = ExtractHighWaterMark(readableStrategy, 0);
            var readableSizeAlgorithm = ExtractSizeAlgorithm(readableStrategy);
            var writableHighWaterMark = ExtractHighWaterMark(writableStrategy, 1);
            var writableSizeAlgorithm = ExtractSizeAlgorithm(writableStrategy);
            var startPromise_resolve;
            var startPromise = newPromise(function(resolve) {
              startPromise_resolve = resolve;
            });
            InitializeTransformStream(this, startPromise, writableHighWaterMark, writableSizeAlgorithm, readableHighWaterMark, readableSizeAlgorithm);
            SetUpTransformStreamDefaultControllerFromTransformer(this, transformer);
            if (transformer.start !== void 0) {
              startPromise_resolve(transformer.start(this._transformStreamController));
            } else {
              startPromise_resolve(void 0);
            }
          }
          Object.defineProperty(TransformStream2.prototype, "readable", {
            get: function() {
              if (!IsTransformStream(this)) {
                throw streamBrandCheckException("readable");
              }
              return this._readable;
            },
            enumerable: false,
            configurable: true
          });
          Object.defineProperty(TransformStream2.prototype, "writable", {
            get: function() {
              if (!IsTransformStream(this)) {
                throw streamBrandCheckException("writable");
              }
              return this._writable;
            },
            enumerable: false,
            configurable: true
          });
          return TransformStream2;
        }();
        Object.defineProperties(TransformStream.prototype, {
          readable: { enumerable: true },
          writable: { enumerable: true }
        });
        if (typeof SymbolPolyfill.toStringTag === "symbol") {
          Object.defineProperty(TransformStream.prototype, SymbolPolyfill.toStringTag, {
            value: "TransformStream",
            configurable: true
          });
        }
        function InitializeTransformStream(stream, startPromise, writableHighWaterMark, writableSizeAlgorithm, readableHighWaterMark, readableSizeAlgorithm) {
          function startAlgorithm() {
            return startPromise;
          }
          function writeAlgorithm(chunk) {
            return TransformStreamDefaultSinkWriteAlgorithm(stream, chunk);
          }
          function abortAlgorithm(reason) {
            return TransformStreamDefaultSinkAbortAlgorithm(stream, reason);
          }
          function closeAlgorithm() {
            return TransformStreamDefaultSinkCloseAlgorithm(stream);
          }
          stream._writable = CreateWritableStream(startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, writableHighWaterMark, writableSizeAlgorithm);
          function pullAlgorithm() {
            return TransformStreamDefaultSourcePullAlgorithm(stream);
          }
          function cancelAlgorithm(reason) {
            TransformStreamErrorWritableAndUnblockWrite(stream, reason);
            return promiseResolvedWith(void 0);
          }
          stream._readable = CreateReadableStream(startAlgorithm, pullAlgorithm, cancelAlgorithm, readableHighWaterMark, readableSizeAlgorithm);
          stream._backpressure = void 0;
          stream._backpressureChangePromise = void 0;
          stream._backpressureChangePromise_resolve = void 0;
          TransformStreamSetBackpressure(stream, true);
          stream._transformStreamController = void 0;
        }
        function IsTransformStream(x) {
          if (!typeIsObject(x)) {
            return false;
          }
          if (!Object.prototype.hasOwnProperty.call(x, "_transformStreamController")) {
            return false;
          }
          return x instanceof TransformStream;
        }
        function TransformStreamError(stream, e) {
          ReadableStreamDefaultControllerError(stream._readable._readableStreamController, e);
          TransformStreamErrorWritableAndUnblockWrite(stream, e);
        }
        function TransformStreamErrorWritableAndUnblockWrite(stream, e) {
          TransformStreamDefaultControllerClearAlgorithms(stream._transformStreamController);
          WritableStreamDefaultControllerErrorIfNeeded(stream._writable._writableStreamController, e);
          if (stream._backpressure) {
            TransformStreamSetBackpressure(stream, false);
          }
        }
        function TransformStreamSetBackpressure(stream, backpressure) {
          if (stream._backpressureChangePromise !== void 0) {
            stream._backpressureChangePromise_resolve();
          }
          stream._backpressureChangePromise = newPromise(function(resolve) {
            stream._backpressureChangePromise_resolve = resolve;
          });
          stream._backpressure = backpressure;
        }
        var TransformStreamDefaultController = function() {
          function TransformStreamDefaultController2() {
            throw new TypeError("Illegal constructor");
          }
          Object.defineProperty(TransformStreamDefaultController2.prototype, "desiredSize", {
            get: function() {
              if (!IsTransformStreamDefaultController(this)) {
                throw defaultControllerBrandCheckException("desiredSize");
              }
              var readableController = this._controlledTransformStream._readable._readableStreamController;
              return ReadableStreamDefaultControllerGetDesiredSize(readableController);
            },
            enumerable: false,
            configurable: true
          });
          TransformStreamDefaultController2.prototype.enqueue = function(chunk) {
            if (chunk === void 0) {
              chunk = void 0;
            }
            if (!IsTransformStreamDefaultController(this)) {
              throw defaultControllerBrandCheckException("enqueue");
            }
            TransformStreamDefaultControllerEnqueue(this, chunk);
          };
          TransformStreamDefaultController2.prototype.error = function(reason) {
            if (reason === void 0) {
              reason = void 0;
            }
            if (!IsTransformStreamDefaultController(this)) {
              throw defaultControllerBrandCheckException("error");
            }
            TransformStreamDefaultControllerError(this, reason);
          };
          TransformStreamDefaultController2.prototype.terminate = function() {
            if (!IsTransformStreamDefaultController(this)) {
              throw defaultControllerBrandCheckException("terminate");
            }
            TransformStreamDefaultControllerTerminate(this);
          };
          return TransformStreamDefaultController2;
        }();
        Object.defineProperties(TransformStreamDefaultController.prototype, {
          enqueue: { enumerable: true },
          error: { enumerable: true },
          terminate: { enumerable: true },
          desiredSize: { enumerable: true }
        });
        if (typeof SymbolPolyfill.toStringTag === "symbol") {
          Object.defineProperty(TransformStreamDefaultController.prototype, SymbolPolyfill.toStringTag, {
            value: "TransformStreamDefaultController",
            configurable: true
          });
        }
        function IsTransformStreamDefaultController(x) {
          if (!typeIsObject(x)) {
            return false;
          }
          if (!Object.prototype.hasOwnProperty.call(x, "_controlledTransformStream")) {
            return false;
          }
          return x instanceof TransformStreamDefaultController;
        }
        function SetUpTransformStreamDefaultController(stream, controller, transformAlgorithm, flushAlgorithm) {
          controller._controlledTransformStream = stream;
          stream._transformStreamController = controller;
          controller._transformAlgorithm = transformAlgorithm;
          controller._flushAlgorithm = flushAlgorithm;
        }
        function SetUpTransformStreamDefaultControllerFromTransformer(stream, transformer) {
          var controller = Object.create(TransformStreamDefaultController.prototype);
          var transformAlgorithm = function(chunk) {
            try {
              TransformStreamDefaultControllerEnqueue(controller, chunk);
              return promiseResolvedWith(void 0);
            } catch (transformResultE) {
              return promiseRejectedWith(transformResultE);
            }
          };
          var flushAlgorithm = function() {
            return promiseResolvedWith(void 0);
          };
          if (transformer.transform !== void 0) {
            transformAlgorithm = function(chunk) {
              return transformer.transform(chunk, controller);
            };
          }
          if (transformer.flush !== void 0) {
            flushAlgorithm = function() {
              return transformer.flush(controller);
            };
          }
          SetUpTransformStreamDefaultController(stream, controller, transformAlgorithm, flushAlgorithm);
        }
        function TransformStreamDefaultControllerClearAlgorithms(controller) {
          controller._transformAlgorithm = void 0;
          controller._flushAlgorithm = void 0;
        }
        function TransformStreamDefaultControllerEnqueue(controller, chunk) {
          var stream = controller._controlledTransformStream;
          var readableController = stream._readable._readableStreamController;
          if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(readableController)) {
            throw new TypeError("Readable side is not in a state that permits enqueue");
          }
          try {
            ReadableStreamDefaultControllerEnqueue(readableController, chunk);
          } catch (e) {
            TransformStreamErrorWritableAndUnblockWrite(stream, e);
            throw stream._readable._storedError;
          }
          var backpressure = ReadableStreamDefaultControllerHasBackpressure(readableController);
          if (backpressure !== stream._backpressure) {
            TransformStreamSetBackpressure(stream, true);
          }
        }
        function TransformStreamDefaultControllerError(controller, e) {
          TransformStreamError(controller._controlledTransformStream, e);
        }
        function TransformStreamDefaultControllerPerformTransform(controller, chunk) {
          var transformPromise = controller._transformAlgorithm(chunk);
          return transformPromiseWith(transformPromise, void 0, function(r) {
            TransformStreamError(controller._controlledTransformStream, r);
            throw r;
          });
        }
        function TransformStreamDefaultControllerTerminate(controller) {
          var stream = controller._controlledTransformStream;
          var readableController = stream._readable._readableStreamController;
          ReadableStreamDefaultControllerClose(readableController);
          var error = new TypeError("TransformStream terminated");
          TransformStreamErrorWritableAndUnblockWrite(stream, error);
        }
        function TransformStreamDefaultSinkWriteAlgorithm(stream, chunk) {
          var controller = stream._transformStreamController;
          if (stream._backpressure) {
            var backpressureChangePromise = stream._backpressureChangePromise;
            return transformPromiseWith(backpressureChangePromise, function() {
              var writable = stream._writable;
              var state = writable._state;
              if (state === "erroring") {
                throw writable._storedError;
              }
              return TransformStreamDefaultControllerPerformTransform(controller, chunk);
            });
          }
          return TransformStreamDefaultControllerPerformTransform(controller, chunk);
        }
        function TransformStreamDefaultSinkAbortAlgorithm(stream, reason) {
          TransformStreamError(stream, reason);
          return promiseResolvedWith(void 0);
        }
        function TransformStreamDefaultSinkCloseAlgorithm(stream) {
          var readable = stream._readable;
          var controller = stream._transformStreamController;
          var flushPromise = controller._flushAlgorithm();
          TransformStreamDefaultControllerClearAlgorithms(controller);
          return transformPromiseWith(flushPromise, function() {
            if (readable._state === "errored") {
              throw readable._storedError;
            }
            ReadableStreamDefaultControllerClose(readable._readableStreamController);
          }, function(r) {
            TransformStreamError(stream, r);
            throw readable._storedError;
          });
        }
        function TransformStreamDefaultSourcePullAlgorithm(stream) {
          TransformStreamSetBackpressure(stream, false);
          return stream._backpressureChangePromise;
        }
        function defaultControllerBrandCheckException(name) {
          return new TypeError("TransformStreamDefaultController.prototype." + name + " can only be used on a TransformStreamDefaultController");
        }
        function streamBrandCheckException(name) {
          return new TypeError("TransformStream.prototype." + name + " can only be used on a TransformStream");
        }
        exports2.ByteLengthQueuingStrategy = ByteLengthQueuingStrategy;
        exports2.CountQueuingStrategy = CountQueuingStrategy;
        exports2.ReadableByteStreamController = ReadableByteStreamController;
        exports2.ReadableStream = ReadableStream2;
        exports2.ReadableStreamBYOBReader = ReadableStreamBYOBReader;
        exports2.ReadableStreamBYOBRequest = ReadableStreamBYOBRequest;
        exports2.ReadableStreamDefaultController = ReadableStreamDefaultController;
        exports2.ReadableStreamDefaultReader = ReadableStreamDefaultReader;
        exports2.TransformStream = TransformStream;
        exports2.TransformStreamDefaultController = TransformStreamDefaultController;
        exports2.WritableStream = WritableStream;
        exports2.WritableStreamDefaultController = WritableStreamDefaultController;
        exports2.WritableStreamDefaultWriter = WritableStreamDefaultWriter;
        Object.defineProperty(exports2, "__esModule", { value: true });
      });
    }
  });

  // node_modules/pdfjs-dist/legacy/build/pdf.worker.min.js
  var require_pdf_worker_min = __commonJS({
    "node_modules/pdfjs-dist/legacy/build/pdf.worker.min.js"(exports, module) {
      !function webpackUniversalModuleDefinition(t, r) {
        typeof exports == "object" && typeof module == "object" ? module.exports = r() : typeof define == "function" && define.amd ? define("pdfjs-dist/build/pdf.worker", [], r) : typeof exports == "object" ? exports["pdfjs-dist/build/pdf.worker"] = r() : t["pdfjs-dist/build/pdf.worker"] = t.pdfjsWorker = r();
      }(exports, () => (() => {
        var t = [, (t2, r2, o2) => {
          "use strict";
          Object.defineProperty(r2, "__esModule", { value: true });
          r2.WorkerTask = r2.WorkerMessageHandler = void 0;
          var c = function _interopRequireDefault(t3) {
            return t3 && t3.__esModule ? t3 : { default: t3 };
          }(o2(2)), l = o2(4), u = o2(158), h = o2(159), d = o2(220), g = o2(226), m = o2(6), y = o2(255), v = o2(256), k = o2(161);
          function _createForOfIteratorHelper(t3, r3) {
            var o3 = typeof Symbol != "undefined" && t3[Symbol.iterator] || t3["@@iterator"];
            if (!o3) {
              if (Array.isArray(t3) || (o3 = _unsupportedIterableToArray(t3)) || r3 && t3 && typeof t3.length == "number") {
                o3 && (t3 = o3);
                var c2 = 0, l2 = function F() {
                };
                return { s: l2, n: function n() {
                  return c2 >= t3.length ? { done: true } : { done: false, value: t3[c2++] };
                }, e: function e(t4) {
                  throw t4;
                }, f: l2 };
              }
              throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
            }
            var u2, h2 = true, d2 = false;
            return { s: function s() {
              o3 = o3.call(t3);
            }, n: function n() {
              var t4 = o3.next();
              h2 = t4.done;
              return t4;
            }, e: function e(t4) {
              d2 = true;
              u2 = t4;
            }, f: function f() {
              try {
                h2 || o3.return == null || o3.return();
              } finally {
                if (d2)
                  throw u2;
              }
            } };
          }
          function _toArray(t3) {
            return _arrayWithHoles(t3) || function _iterableToArray(t4) {
              if (typeof Symbol != "undefined" && t4[Symbol.iterator] != null || t4["@@iterator"] != null)
                return Array.from(t4);
            }(t3) || _unsupportedIterableToArray(t3) || _nonIterableRest();
          }
          function _slicedToArray(t3, r3) {
            return _arrayWithHoles(t3) || function _iterableToArrayLimit(t4, r4) {
              var o3 = t4 == null ? null : typeof Symbol != "undefined" && t4[Symbol.iterator] || t4["@@iterator"];
              if (o3 == null)
                return;
              var c2, l2, u2 = [], h2 = true, d2 = false;
              try {
                for (o3 = o3.call(t4); !(h2 = (c2 = o3.next()).done); h2 = true) {
                  u2.push(c2.value);
                  if (r4 && u2.length === r4)
                    break;
                }
              } catch (t5) {
                d2 = true;
                l2 = t5;
              } finally {
                try {
                  h2 || o3.return == null || o3.return();
                } finally {
                  if (d2)
                    throw l2;
                }
              }
              return u2;
            }(t3, r3) || _unsupportedIterableToArray(t3, r3) || _nonIterableRest();
          }
          function _nonIterableRest() {
            throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
          }
          function _unsupportedIterableToArray(t3, r3) {
            if (t3) {
              if (typeof t3 == "string")
                return _arrayLikeToArray(t3, r3);
              var o3 = Object.prototype.toString.call(t3).slice(8, -1);
              o3 === "Object" && t3.constructor && (o3 = t3.constructor.name);
              return o3 === "Map" || o3 === "Set" ? Array.from(t3) : o3 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(o3) ? _arrayLikeToArray(t3, r3) : void 0;
            }
          }
          function _arrayLikeToArray(t3, r3) {
            (r3 == null || r3 > t3.length) && (r3 = t3.length);
            for (var o3 = 0, c2 = new Array(r3); o3 < r3; o3++)
              c2[o3] = t3[o3];
            return c2;
          }
          function _arrayWithHoles(t3) {
            if (Array.isArray(t3))
              return t3;
          }
          function asyncGeneratorStep(t3, r3, o3, c2, l2, u2, h2) {
            try {
              var d2 = t3[u2](h2), g2 = d2.value;
            } catch (t4) {
              o3(t4);
              return;
            }
            d2.done ? r3(g2) : Promise.resolve(g2).then(c2, l2);
          }
          function _asyncToGenerator(t3) {
            return function() {
              var r3 = this, o3 = arguments;
              return new Promise(function(c2, l2) {
                var u2 = t3.apply(r3, o3);
                function _next(t4) {
                  asyncGeneratorStep(u2, c2, l2, _next, _throw, "next", t4);
                }
                function _throw(t4) {
                  asyncGeneratorStep(u2, c2, l2, _next, _throw, "throw", t4);
                }
                _next(void 0);
              });
            };
          }
          function _classCallCheck(t3, r3) {
            if (!(t3 instanceof r3))
              throw new TypeError("Cannot call a class as a function");
          }
          function _defineProperties(t3, r3) {
            for (var o3 = 0; o3 < r3.length; o3++) {
              var c2 = r3[o3];
              c2.enumerable = c2.enumerable || false;
              c2.configurable = true;
              "value" in c2 && (c2.writable = true);
              Object.defineProperty(t3, c2.key, c2);
            }
          }
          function _createClass(t3, r3, o3) {
            r3 && _defineProperties(t3.prototype, r3);
            o3 && _defineProperties(t3, o3);
            Object.defineProperty(t3, "prototype", { writable: false });
            return t3;
          }
          var _ = function() {
            function WorkerTask(t3) {
              _classCallCheck(this, WorkerTask);
              this.name = t3;
              this.terminated = false;
              this._capability = (0, l.createPromiseCapability)();
            }
            _createClass(WorkerTask, [{ key: "finished", get: function get() {
              return this._capability.promise;
            } }, { key: "finish", value: function finish() {
              this._capability.resolve();
            } }, { key: "terminate", value: function terminate() {
              this.terminated = true;
            } }, { key: "ensureNotTerminated", value: function ensureNotTerminated() {
              if (this.terminated)
                throw new Error("Worker task was terminated");
            } }]);
            return WorkerTask;
          }();
          r2.WorkerTask = _;
          var w = function() {
            function WorkerMessageHandler() {
              _classCallCheck(this, WorkerMessageHandler);
            }
            _createClass(WorkerMessageHandler, null, [{ key: "setup", value: function setup(t3, r3) {
              var o3 = false;
              t3.on("test", function wphSetupTest(r4) {
                if (!o3) {
                  o3 = true;
                  t3.send("test", r4 instanceof Uint8Array);
                }
              });
              t3.on("configure", function wphConfigure(t4) {
                (0, l.setVerbosityLevel)(t4.verbosity);
              });
              t3.on("GetDocRequest", function wphSetupDoc(t4) {
                return WorkerMessageHandler.createDocumentHandler(t4, r3);
              });
            } }, { key: "createDocumentHandler", value: function createDocumentHandler(t3, r3) {
              var o3, w2 = false, S = null, C = [], x = (0, l.getVerbosityLevel)(), O = t3.apiVersion, T = "2.14.305";
              if (O !== T)
                throw new Error('The API version "'.concat(O, '" does not match ') + 'the Worker version "'.concat(T, '".'));
              var E = [];
              for (var M in [])
                E.push(M);
              if (E.length)
                throw new Error("The `Array.prototype` contains unexpected enumerable properties: " + E.join(", ") + "; thus breaking e.g. `for...in` iteration of `Array`s.");
              if (typeof ReadableStream == "undefined") {
                var R = "The browser/environment lacks native support for critical functionality used by the PDF.js library (e.g. `ReadableStream`); ";
                if (m.isNodeJS)
                  throw new Error(R + "please use a `legacy`-build instead.");
                throw new Error(R + "please update to a supported browser.");
              }
              var D = t3.docId, j = t3.docBaseUrl, L = t3.docId + "_worker", N = new y.MessageHandler(L, D, r3);
              function ensureNotTerminated() {
                if (w2)
                  throw new Error("Worker was terminated");
              }
              function startWorkerTask(t4) {
                C.push(t4);
              }
              function finishWorkerTask(t4) {
                t4.finish();
                var r4 = C.indexOf(t4);
                C.splice(r4, 1);
              }
              function loadDocument(t4) {
                return _loadDocument.apply(this, arguments);
              }
              function _loadDocument() {
                return (_loadDocument = _asyncToGenerator(c.default.mark(function _callee(t4) {
                  var r4, l2, u2, h2, d2, g2, m2;
                  return c.default.wrap(function _callee$(c2) {
                    for (; ; )
                      switch (c2.prev = c2.next) {
                        case 0:
                          c2.next = 2;
                          return o3.ensureDoc("checkHeader");
                        case 2:
                          c2.next = 4;
                          return o3.ensureDoc("parseStartXRef");
                        case 4:
                          c2.next = 6;
                          return o3.ensureDoc("parse", [t4]);
                        case 6:
                          c2.next = 8;
                          return o3.ensureDoc("checkFirstPage", [t4]);
                        case 8:
                          c2.next = 10;
                          return o3.ensureDoc("checkLastPage", [t4]);
                        case 10:
                          c2.next = 12;
                          return o3.ensureDoc("isPureXfa");
                        case 12:
                          if (!(r4 = c2.sent)) {
                            c2.next = 18;
                            break;
                          }
                          startWorkerTask(l2 = new _("loadXfaFonts"));
                          c2.next = 18;
                          return Promise.all([o3.loadXfaFonts(N, l2).catch(function(t5) {
                          }).then(function() {
                            return finishWorkerTask(l2);
                          }), o3.loadXfaImages()]);
                        case 18:
                          c2.next = 20;
                          return Promise.all([o3.ensureDoc("numPages"), o3.ensureDoc("fingerprints")]);
                        case 20:
                          u2 = c2.sent;
                          h2 = _slicedToArray(u2, 2);
                          d2 = h2[0];
                          g2 = h2[1];
                          if (!r4) {
                            c2.next = 30;
                            break;
                          }
                          c2.next = 27;
                          return o3.ensureDoc("htmlForXfa");
                        case 27:
                          c2.t0 = c2.sent;
                          c2.next = 31;
                          break;
                        case 30:
                          c2.t0 = null;
                        case 31:
                          m2 = c2.t0;
                          return c2.abrupt("return", { numPages: d2, fingerprints: g2, htmlForXfa: m2 });
                        case 33:
                        case "end":
                          return c2.stop();
                      }
                  }, _callee);
                }))).apply(this, arguments);
              }
              function getPdfManager(t4, r4, o4) {
                var c2, u2 = (0, l.createPromiseCapability)(), d2 = t4.source;
                if (d2.data) {
                  try {
                    c2 = new h.LocalPdfManager(D, d2.data, d2.password, N, r4, o4, j);
                    u2.resolve(c2);
                  } catch (t5) {
                    u2.reject(t5);
                  }
                  return u2.promise;
                }
                var g2, m2 = [];
                try {
                  g2 = new v.PDFWorkerStream(N);
                } catch (t5) {
                  u2.reject(t5);
                  return u2.promise;
                }
                var y2 = g2.getFullReader();
                y2.headersReady.then(function() {
                  if (y2.isRangeSupported) {
                    var t5 = d2.disableAutoFetch || y2.isStreamingSupported;
                    c2 = new h.NetworkPdfManager(D, g2, { msgHandler: N, password: d2.password, length: y2.contentLength, disableAutoFetch: t5, rangeChunkSize: d2.rangeChunkSize }, r4, o4, j);
                    for (var l2 = 0; l2 < m2.length; l2++)
                      c2.sendProgressiveData(m2[l2]);
                    m2 = [];
                    u2.resolve(c2);
                    S = null;
                  }
                }).catch(function(t5) {
                  u2.reject(t5);
                  S = null;
                });
                var k2 = 0;
                new Promise(function(t5, g3) {
                  y2.read().then(function readChunk(t6) {
                    var v2 = t6.value, _2 = t6.done;
                    try {
                      ensureNotTerminated();
                      if (_2) {
                        c2 || function flushChunks() {
                          var t7 = (0, l.arraysToBytes)(m2);
                          d2.length && t7.length !== d2.length && (0, l.warn)("reported HTTP length is different from actual");
                          try {
                            c2 = new h.LocalPdfManager(D, t7, d2.password, N, r4, o4, j);
                            u2.resolve(c2);
                          } catch (t8) {
                            u2.reject(t8);
                          }
                          m2 = [];
                        }();
                        S = null;
                        return;
                      }
                      k2 += (0, l.arrayByteLength)(v2);
                      y2.isStreamingSupported || N.send("DocProgress", { loaded: k2, total: Math.max(k2, y2.contentLength || 0) });
                      c2 ? c2.sendProgressiveData(v2) : m2.push(v2);
                      y2.read().then(readChunk, g3);
                    } catch (t7) {
                      g3(t7);
                    }
                  }, g3);
                }).catch(function(t5) {
                  u2.reject(t5);
                  S = null;
                });
                S = function cancelXHRs(t5) {
                  g2.cancelAllRequests(t5);
                };
                return u2.promise;
              }
              N.on("GetPage", function wphSetupGetPage(t4) {
                return o3.getPage(t4.pageIndex).then(function(t5) {
                  return Promise.all([o3.ensure(t5, "rotate"), o3.ensure(t5, "ref"), o3.ensure(t5, "userUnit"), o3.ensure(t5, "view")]).then(function(t6) {
                    var r4 = _slicedToArray(t6, 4);
                    return { rotate: r4[0], ref: r4[1], userUnit: r4[2], view: r4[3] };
                  });
                });
              });
              N.on("GetPageIndex", function wphSetupGetPageIndex(t4) {
                var r4 = u.Ref.get(t4.num, t4.gen);
                return o3.ensureCatalog("getPageIndex", [r4]);
              });
              N.on("GetDestinations", function wphSetupGetDestinations(t4) {
                return o3.ensureCatalog("destinations");
              });
              N.on("GetDestination", function wphSetupGetDestination(t4) {
                return o3.ensureCatalog("getDestination", [t4.id]);
              });
              N.on("GetPageLabels", function wphSetupGetPageLabels(t4) {
                return o3.ensureCatalog("pageLabels");
              });
              N.on("GetPageLayout", function wphSetupGetPageLayout(t4) {
                return o3.ensureCatalog("pageLayout");
              });
              N.on("GetPageMode", function wphSetupGetPageMode(t4) {
                return o3.ensureCatalog("pageMode");
              });
              N.on("GetViewerPreferences", function(t4) {
                return o3.ensureCatalog("viewerPreferences");
              });
              N.on("GetOpenAction", function(t4) {
                return o3.ensureCatalog("openAction");
              });
              N.on("GetAttachments", function wphSetupGetAttachments(t4) {
                return o3.ensureCatalog("attachments");
              });
              N.on("GetJavaScript", function wphSetupGetJavaScript(t4) {
                return o3.ensureCatalog("javaScript");
              });
              N.on("GetDocJSActions", function wphSetupGetDocJSActions(t4) {
                return o3.ensureCatalog("jsActions");
              });
              N.on("GetPageJSActions", function(t4) {
                var r4 = t4.pageIndex;
                return o3.getPage(r4).then(function(t5) {
                  return o3.ensure(t5, "jsActions");
                });
              });
              N.on("GetOutline", function wphSetupGetOutline(t4) {
                return o3.ensureCatalog("documentOutline");
              });
              N.on("GetOptionalContentConfig", function(t4) {
                return o3.ensureCatalog("optionalContentConfig");
              });
              N.on("GetPermissions", function(t4) {
                return o3.ensureCatalog("permissions");
              });
              N.on("GetMetadata", function wphSetupGetMetadata(t4) {
                return Promise.all([o3.ensureDoc("documentInfo"), o3.ensureCatalog("metadata")]);
              });
              N.on("GetMarkInfo", function wphSetupGetMarkInfo(t4) {
                return o3.ensureCatalog("markInfo");
              });
              N.on("GetData", function wphSetupGetData(t4) {
                o3.requestLoadedStream();
                return o3.onLoadedStream().then(function(t5) {
                  return t5.bytes;
                });
              });
              N.on("GetAnnotations", function(t4) {
                var r4 = t4.pageIndex, c2 = t4.intent;
                return o3.getPage(r4).then(function(t5) {
                  return t5.getAnnotationsData(c2);
                });
              });
              N.on("GetFieldObjects", function(t4) {
                return o3.ensureDoc("fieldObjects");
              });
              N.on("HasJSActions", function(t4) {
                return o3.ensureDoc("hasJSActions");
              });
              N.on("GetCalculationOrderIds", function(t4) {
                return o3.ensureDoc("calculationOrderIds");
              });
              N.on("SaveDocument", function(t4) {
                var r4 = t4.isPureXfa, c2 = t4.numPages, h2 = t4.annotationStorage, d2 = t4.filename;
                o3.requestLoadedStream();
                var m2 = [o3.onLoadedStream(), o3.ensureCatalog("acroForm"), o3.ensureCatalog("acroFormRef"), o3.ensureDoc("xref"), o3.ensureDoc("startXRef")];
                if (r4)
                  m2.push(o3.serializeXfaData(h2));
                else
                  for (var y2 = function _loop(t5) {
                    m2.push(o3.getPage(t5).then(function(r5) {
                      var o4 = new _("Save: page ".concat(t5));
                      return r5.save(N, o4, h2).finally(function() {
                        finishWorkerTask(o4);
                      });
                    }));
                  }, v2 = 0; v2 < c2; v2++)
                    y2(v2);
                return Promise.all(m2).then(function(t5) {
                  var o4 = _toArray(t5), c3 = o4[0], h3 = o4[1], m3 = o4[2], y3 = o4[3], v3 = o4[4], k2 = o4.slice(5), _2 = [], w3 = null;
                  if (r4) {
                    if (!(w3 = k2[0]))
                      return c3.bytes;
                  } else {
                    var S2, C2 = _createForOfIteratorHelper(k2);
                    try {
                      for (C2.s(); !(S2 = C2.n()).done; ) {
                        _2 = S2.value.filter(function(t6) {
                          return t6 !== null;
                        }).reduce(function(t6, r5) {
                          return t6.concat(r5);
                        }, _2);
                      }
                    } catch (t6) {
                      C2.e(t6);
                    } finally {
                      C2.f();
                    }
                    if (_2.length === 0)
                      return c3.bytes;
                  }
                  var x2 = h3 instanceof u.Dict && h3.get("XFA") || null, O2 = null, T2 = false;
                  if (Array.isArray(x2)) {
                    for (var E2 = 0, M2 = x2.length; E2 < M2; E2 += 2)
                      if (x2[E2] === "datasets") {
                        O2 = x2[E2 + 1];
                        m3 = null;
                        T2 = true;
                      }
                    O2 === null && (O2 = y3.getNewRef());
                  } else if (x2) {
                    m3 = null;
                    (0, l.warn)("Unsupported XFA type.");
                  }
                  var R2 = /* @__PURE__ */ Object.create(null);
                  if (y3.trailer) {
                    var D2 = /* @__PURE__ */ Object.create(null), j2 = y3.trailer.get("Info") || null;
                    j2 instanceof u.Dict && j2.forEach(function(t6, r5) {
                      typeof r5 == "string" && (D2[t6] = (0, l.stringToPDFString)(r5));
                    });
                    R2 = { rootRef: y3.trailer.getRaw("Root") || null, encryptRef: y3.trailer.getRaw("Encrypt") || null, newRef: y3.getNewRef(), infoRef: y3.trailer.getRaw("Info") || null, info: D2, fileIds: y3.trailer.get("ID") || null, startXRef: v3, filename: d2 };
                  }
                  y3.resetNewRef();
                  return (0, g.incrementalUpdate)({ originalData: c3.bytes, xrefInfo: R2, newRefs: _2, xref: y3, hasXfa: !!x2, xfaDatasetsRef: O2, hasXfaDatasetsEntry: T2, acroFormRef: m3, acroForm: h3, xfaData: w3 });
                });
              });
              N.on("GetOperatorList", function wphSetupRenderPage(t4, r4) {
                var c2 = t4.pageIndex;
                o3.getPage(c2).then(function(o4) {
                  var u2 = new _("GetOperatorList: page ".concat(c2));
                  startWorkerTask(u2);
                  var h2 = x >= l.VerbosityLevel.INFOS ? Date.now() : 0;
                  o4.getOperatorList({ handler: N, sink: r4, task: u2, intent: t4.intent, cacheKey: t4.cacheKey, annotationStorage: t4.annotationStorage }).then(function(t5) {
                    finishWorkerTask(u2);
                    h2 && (0, l.info)("page=".concat(c2 + 1, " - getOperatorList: time=") + "".concat(Date.now() - h2, "ms, len=").concat(t5.length));
                    r4.close();
                  }, function(t5) {
                    finishWorkerTask(u2);
                    if (!u2.terminated) {
                      N.send("UnsupportedFeature", { featureId: l.UNSUPPORTED_FEATURES.errorOperatorList });
                      r4.error(t5);
                    }
                  });
                });
              });
              N.on("GetTextContent", function wphExtractText(t4, r4) {
                var c2 = t4.pageIndex;
                o3.getPage(c2).then(function(o4) {
                  var u2 = new _("GetTextContent: page " + c2);
                  startWorkerTask(u2);
                  var h2 = x >= l.VerbosityLevel.INFOS ? Date.now() : 0;
                  o4.extractTextContent({ handler: N, task: u2, sink: r4, includeMarkedContent: t4.includeMarkedContent, combineTextItems: t4.combineTextItems }).then(function() {
                    finishWorkerTask(u2);
                    h2 && (0, l.info)("page=".concat(c2 + 1, " - getTextContent: time=") + "".concat(Date.now() - h2, "ms"));
                    r4.close();
                  }, function(t5) {
                    finishWorkerTask(u2);
                    u2.terminated || r4.error(t5);
                  });
                });
              });
              N.on("GetStructTree", function wphGetStructTree(t4) {
                return o3.getPage(t4.pageIndex).then(function(t5) {
                  return o3.ensure(t5, "getStructTree");
                });
              });
              N.on("FontFallback", function(t4) {
                return o3.fontFallback(t4.id, N);
              });
              N.on("Cleanup", function wphCleanup(t4) {
                return o3.cleanup(true);
              });
              N.on("Terminate", function wphTerminate(t4) {
                w2 = true;
                var r4 = [];
                if (o3) {
                  o3.terminate(new l.AbortException("Worker was terminated."));
                  var c2 = o3.cleanup();
                  r4.push(c2);
                  o3 = null;
                } else
                  (0, d.clearGlobalCaches)();
                S && S(new l.AbortException("Worker was terminated."));
                var u2, h2 = _createForOfIteratorHelper(C);
                try {
                  for (h2.s(); !(u2 = h2.n()).done; ) {
                    var g2 = u2.value;
                    r4.push(g2.finished);
                    g2.terminate();
                  }
                } catch (t5) {
                  h2.e(t5);
                } finally {
                  h2.f();
                }
                return Promise.all(r4).then(function() {
                  N.destroy();
                  N = null;
                });
              });
              N.on("Ready", function wphReady(r4) {
                !function setupDoc(t4) {
                  function onSuccess(t5) {
                    ensureNotTerminated();
                    N.send("GetDoc", { pdfInfo: t5 });
                  }
                  function onFailure(t5) {
                    ensureNotTerminated();
                    if (t5 instanceof l.PasswordException) {
                      var r5 = new _("PasswordException: response ".concat(t5.code));
                      startWorkerTask(r5);
                      N.sendWithPromise("PasswordRequest", t5).then(function(t6) {
                        var c2 = t6.password;
                        finishWorkerTask(r5);
                        o3.updatePassword(c2);
                        pdfManagerReady();
                      }).catch(function() {
                        finishWorkerTask(r5);
                        N.send("DocException", t5);
                      });
                    } else
                      t5 instanceof l.InvalidPDFException || t5 instanceof l.MissingPDFException || t5 instanceof l.UnexpectedResponseException || t5 instanceof l.UnknownErrorException ? N.send("DocException", t5) : N.send("DocException", new l.UnknownErrorException(t5.message, t5.toString()));
                  }
                  function pdfManagerReady() {
                    ensureNotTerminated();
                    loadDocument(false).then(onSuccess, function(t5) {
                      ensureNotTerminated();
                      if (t5 instanceof k.XRefParseException) {
                        o3.requestLoadedStream();
                        o3.onLoadedStream().then(function() {
                          ensureNotTerminated();
                          loadDocument(true).then(onSuccess, onFailure);
                        });
                      } else
                        onFailure(t5);
                    });
                  }
                  ensureNotTerminated();
                  getPdfManager(t4, { maxImageSize: t4.maxImageSize, disableFontFace: t4.disableFontFace, ignoreErrors: t4.ignoreErrors, isEvalSupported: t4.isEvalSupported, fontExtraProperties: t4.fontExtraProperties, useSystemFonts: t4.useSystemFonts, cMapUrl: t4.cMapUrl, standardFontDataUrl: t4.standardFontDataUrl }, t4.enableXfa).then(function(t5) {
                    if (w2) {
                      t5.terminate(new l.AbortException("Worker was terminated."));
                      throw new Error("Worker was terminated");
                    }
                    (o3 = t5).onLoadedStream().then(function(t6) {
                      N.send("DataLoaded", { length: t6.bytes.byteLength });
                    });
                  }).then(pdfManagerReady, onFailure);
                }(t3);
                t3 = null;
              });
              return L;
            } }, { key: "initializeFromPort", value: function initializeFromPort(t3) {
              var r3 = new y.MessageHandler("worker", "main", t3);
              WorkerMessageHandler.setup(r3, t3);
              r3.send("ready", null);
            } }]);
            return WorkerMessageHandler;
          }();
          r2.WorkerMessageHandler = w;
          typeof window == "undefined" && !m.isNodeJS && typeof self != "undefined" && function isMessagePort(t3) {
            return typeof t3.postMessage == "function" && "onmessage" in t3;
          }(self) && w.initializeFromPort(self);
        }, (t2, r2, o2) => {
          "use strict";
          t2.exports = o2(3);
        }, (t2, r2, o2) => {
          "use strict";
          function _typeof(t3) {
            return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t4) {
              return typeof t4;
            } : function(t4) {
              return t4 && typeof Symbol == "function" && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
            }, _typeof(t3);
          }
          var c = function(t3) {
            var r3, o3 = Object.prototype, c2 = o3.hasOwnProperty, l = typeof Symbol == "function" ? Symbol : {}, u = l.iterator || "@@iterator", h = l.asyncIterator || "@@asyncIterator", d = l.toStringTag || "@@toStringTag";
            function define2(t4, r4, o4) {
              Object.defineProperty(t4, r4, { value: o4, enumerable: true, configurable: true, writable: true });
              return t4[r4];
            }
            try {
              define2({}, "");
            } catch (t4) {
              define2 = function define3(t5, r4, o4) {
                return t5[r4] = o4;
              };
            }
            function wrap(t4, r4, o4, c3) {
              var l2 = r4 && r4.prototype instanceof Generator ? r4 : Generator, u2 = Object.create(l2.prototype), h2 = new Context(c3 || []);
              u2._invoke = function makeInvokeMethod(t5, r5, o5) {
                var c4 = g;
                return function invoke(l3, u3) {
                  if (c4 === y)
                    throw new Error("Generator is already running");
                  if (c4 === v) {
                    if (l3 === "throw")
                      throw u3;
                    return doneResult();
                  }
                  o5.method = l3;
                  o5.arg = u3;
                  for (; ; ) {
                    var h3 = o5.delegate;
                    if (h3) {
                      var d2 = maybeInvokeDelegate(h3, o5);
                      if (d2) {
                        if (d2 === k)
                          continue;
                        return d2;
                      }
                    }
                    if (o5.method === "next")
                      o5.sent = o5._sent = o5.arg;
                    else if (o5.method === "throw") {
                      if (c4 === g) {
                        c4 = v;
                        throw o5.arg;
                      }
                      o5.dispatchException(o5.arg);
                    } else
                      o5.method === "return" && o5.abrupt("return", o5.arg);
                    c4 = y;
                    var _2 = tryCatch(t5, r5, o5);
                    if (_2.type === "normal") {
                      c4 = o5.done ? v : m;
                      if (_2.arg === k)
                        continue;
                      return { value: _2.arg, done: o5.done };
                    }
                    if (_2.type === "throw") {
                      c4 = v;
                      o5.method = "throw";
                      o5.arg = _2.arg;
                    }
                  }
                };
              }(t4, o4, h2);
              return u2;
            }
            t3.wrap = wrap;
            function tryCatch(t4, r4, o4) {
              try {
                return { type: "normal", arg: t4.call(r4, o4) };
              } catch (t5) {
                return { type: "throw", arg: t5 };
              }
            }
            var g = "suspendedStart", m = "suspendedYield", y = "executing", v = "completed", k = {};
            function Generator() {
            }
            function GeneratorFunction() {
            }
            function GeneratorFunctionPrototype() {
            }
            var _ = {};
            define2(_, u, function() {
              return this;
            });
            var w = Object.getPrototypeOf, S = w && w(w(values([])));
            S && S !== o3 && c2.call(S, u) && (_ = S);
            var C = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(_);
            GeneratorFunction.prototype = GeneratorFunctionPrototype;
            define2(C, "constructor", GeneratorFunctionPrototype);
            define2(GeneratorFunctionPrototype, "constructor", GeneratorFunction);
            GeneratorFunction.displayName = define2(GeneratorFunctionPrototype, d, "GeneratorFunction");
            function defineIteratorMethods(t4) {
              ["next", "throw", "return"].forEach(function(r4) {
                define2(t4, r4, function(t5) {
                  return this._invoke(r4, t5);
                });
              });
            }
            t3.isGeneratorFunction = function(t4) {
              var r4 = typeof t4 == "function" && t4.constructor;
              return !!r4 && (r4 === GeneratorFunction || (r4.displayName || r4.name) === "GeneratorFunction");
            };
            t3.mark = function(t4) {
              if (Object.setPrototypeOf)
                Object.setPrototypeOf(t4, GeneratorFunctionPrototype);
              else {
                t4.__proto__ = GeneratorFunctionPrototype;
                define2(t4, d, "GeneratorFunction");
              }
              t4.prototype = Object.create(C);
              return t4;
            };
            t3.awrap = function(t4) {
              return { __await: t4 };
            };
            function AsyncIterator(t4, r4) {
              function invoke(o5, l2, u2, h2) {
                var d2 = tryCatch(t4[o5], t4, l2);
                if (d2.type !== "throw") {
                  var g2 = d2.arg, m2 = g2.value;
                  return m2 && _typeof(m2) === "object" && c2.call(m2, "__await") ? r4.resolve(m2.__await).then(function(t5) {
                    invoke("next", t5, u2, h2);
                  }, function(t5) {
                    invoke("throw", t5, u2, h2);
                  }) : r4.resolve(m2).then(function(t5) {
                    g2.value = t5;
                    u2(g2);
                  }, function(t5) {
                    return invoke("throw", t5, u2, h2);
                  });
                }
                h2(d2.arg);
              }
              var o4;
              this._invoke = function enqueue(t5, c3) {
                function callInvokeWithMethodAndArg() {
                  return new r4(function(r5, o5) {
                    invoke(t5, c3, r5, o5);
                  });
                }
                return o4 = o4 ? o4.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();
              };
            }
            defineIteratorMethods(AsyncIterator.prototype);
            define2(AsyncIterator.prototype, h, function() {
              return this;
            });
            t3.AsyncIterator = AsyncIterator;
            t3.async = function(r4, o4, c3, l2, u2) {
              u2 === void 0 && (u2 = Promise);
              var h2 = new AsyncIterator(wrap(r4, o4, c3, l2), u2);
              return t3.isGeneratorFunction(o4) ? h2 : h2.next().then(function(t4) {
                return t4.done ? t4.value : h2.next();
              });
            };
            function maybeInvokeDelegate(t4, o4) {
              var c3 = t4.iterator[o4.method];
              if (c3 === r3) {
                o4.delegate = null;
                if (o4.method === "throw") {
                  if (t4.iterator.return) {
                    o4.method = "return";
                    o4.arg = r3;
                    maybeInvokeDelegate(t4, o4);
                    if (o4.method === "throw")
                      return k;
                  }
                  o4.method = "throw";
                  o4.arg = new TypeError("The iterator does not provide a 'throw' method");
                }
                return k;
              }
              var l2 = tryCatch(c3, t4.iterator, o4.arg);
              if (l2.type === "throw") {
                o4.method = "throw";
                o4.arg = l2.arg;
                o4.delegate = null;
                return k;
              }
              var u2 = l2.arg;
              if (!u2) {
                o4.method = "throw";
                o4.arg = new TypeError("iterator result is not an object");
                o4.delegate = null;
                return k;
              }
              if (!u2.done)
                return u2;
              o4[t4.resultName] = u2.value;
              o4.next = t4.nextLoc;
              if (o4.method !== "return") {
                o4.method = "next";
                o4.arg = r3;
              }
              o4.delegate = null;
              return k;
            }
            defineIteratorMethods(C);
            define2(C, d, "Generator");
            define2(C, u, function() {
              return this;
            });
            define2(C, "toString", function() {
              return "[object Generator]";
            });
            function pushTryEntry(t4) {
              var r4 = { tryLoc: t4[0] };
              1 in t4 && (r4.catchLoc = t4[1]);
              if (2 in t4) {
                r4.finallyLoc = t4[2];
                r4.afterLoc = t4[3];
              }
              this.tryEntries.push(r4);
            }
            function resetTryEntry(t4) {
              var r4 = t4.completion || {};
              r4.type = "normal";
              delete r4.arg;
              t4.completion = r4;
            }
            function Context(t4) {
              this.tryEntries = [{ tryLoc: "root" }];
              t4.forEach(pushTryEntry, this);
              this.reset(true);
            }
            t3.keys = function(t4) {
              var r4 = [];
              for (var o4 in t4)
                r4.push(o4);
              r4.reverse();
              return function next() {
                for (; r4.length; ) {
                  var o5 = r4.pop();
                  if (o5 in t4) {
                    next.value = o5;
                    next.done = false;
                    return next;
                  }
                }
                next.done = true;
                return next;
              };
            };
            function values(t4) {
              if (t4) {
                var o4 = t4[u];
                if (o4)
                  return o4.call(t4);
                if (typeof t4.next == "function")
                  return t4;
                if (!isNaN(t4.length)) {
                  var l2 = -1, h2 = function next() {
                    for (; ++l2 < t4.length; )
                      if (c2.call(t4, l2)) {
                        next.value = t4[l2];
                        next.done = false;
                        return next;
                      }
                    next.value = r3;
                    next.done = true;
                    return next;
                  };
                  return h2.next = h2;
                }
              }
              return { next: doneResult };
            }
            t3.values = values;
            function doneResult() {
              return { value: r3, done: true };
            }
            Context.prototype = { constructor: Context, reset: function reset(t4) {
              this.prev = 0;
              this.next = 0;
              this.sent = this._sent = r3;
              this.done = false;
              this.delegate = null;
              this.method = "next";
              this.arg = r3;
              this.tryEntries.forEach(resetTryEntry);
              if (!t4)
                for (var o4 in this)
                  o4.charAt(0) === "t" && c2.call(this, o4) && !isNaN(+o4.slice(1)) && (this[o4] = r3);
            }, stop: function stop() {
              this.done = true;
              var t4 = this.tryEntries[0].completion;
              if (t4.type === "throw")
                throw t4.arg;
              return this.rval;
            }, dispatchException: function dispatchException(t4) {
              if (this.done)
                throw t4;
              var o4 = this;
              function handle(c3, l3) {
                h2.type = "throw";
                h2.arg = t4;
                o4.next = c3;
                if (l3) {
                  o4.method = "next";
                  o4.arg = r3;
                }
                return !!l3;
              }
              for (var l2 = this.tryEntries.length - 1; l2 >= 0; --l2) {
                var u2 = this.tryEntries[l2], h2 = u2.completion;
                if (u2.tryLoc === "root")
                  return handle("end");
                if (u2.tryLoc <= this.prev) {
                  var d2 = c2.call(u2, "catchLoc"), g2 = c2.call(u2, "finallyLoc");
                  if (d2 && g2) {
                    if (this.prev < u2.catchLoc)
                      return handle(u2.catchLoc, true);
                    if (this.prev < u2.finallyLoc)
                      return handle(u2.finallyLoc);
                  } else if (d2) {
                    if (this.prev < u2.catchLoc)
                      return handle(u2.catchLoc, true);
                  } else {
                    if (!g2)
                      throw new Error("try statement without catch or finally");
                    if (this.prev < u2.finallyLoc)
                      return handle(u2.finallyLoc);
                  }
                }
              }
            }, abrupt: function abrupt(t4, r4) {
              for (var o4 = this.tryEntries.length - 1; o4 >= 0; --o4) {
                var l2 = this.tryEntries[o4];
                if (l2.tryLoc <= this.prev && c2.call(l2, "finallyLoc") && this.prev < l2.finallyLoc) {
                  var u2 = l2;
                  break;
                }
              }
              u2 && (t4 === "break" || t4 === "continue") && u2.tryLoc <= r4 && r4 <= u2.finallyLoc && (u2 = null);
              var h2 = u2 ? u2.completion : {};
              h2.type = t4;
              h2.arg = r4;
              if (u2) {
                this.method = "next";
                this.next = u2.finallyLoc;
                return k;
              }
              return this.complete(h2);
            }, complete: function complete(t4, r4) {
              if (t4.type === "throw")
                throw t4.arg;
              if (t4.type === "break" || t4.type === "continue")
                this.next = t4.arg;
              else if (t4.type === "return") {
                this.rval = this.arg = t4.arg;
                this.method = "return";
                this.next = "end";
              } else
                t4.type === "normal" && r4 && (this.next = r4);
              return k;
            }, finish: function finish(t4) {
              for (var r4 = this.tryEntries.length - 1; r4 >= 0; --r4) {
                var o4 = this.tryEntries[r4];
                if (o4.finallyLoc === t4) {
                  this.complete(o4.completion, o4.afterLoc);
                  resetTryEntry(o4);
                  return k;
                }
              }
            }, catch: function _catch(t4) {
              for (var r4 = this.tryEntries.length - 1; r4 >= 0; --r4) {
                var o4 = this.tryEntries[r4];
                if (o4.tryLoc === t4) {
                  var c3 = o4.completion;
                  if (c3.type === "throw") {
                    var l2 = c3.arg;
                    resetTryEntry(o4);
                  }
                  return l2;
                }
              }
              throw new Error("illegal catch attempt");
            }, delegateYield: function delegateYield(t4, o4, c3) {
              this.delegate = { iterator: values(t4), resultName: o4, nextLoc: c3 };
              this.method === "next" && (this.arg = r3);
              return k;
            } };
            return t3;
          }(_typeof(t2 = o2.nmd(t2)) === "object" ? t2.exports : {});
          try {
            regeneratorRuntime = c;
          } catch (t3) {
            (typeof globalThis == "undefined" ? "undefined" : _typeof(globalThis)) === "object" ? globalThis.regeneratorRuntime = c : Function("r", "regeneratorRuntime = r")(c);
          }
        }, (t2, r2, o2) => {
          "use strict";
          Object.defineProperty(r2, "__esModule", { value: true });
          r2.VerbosityLevel = r2.Util = r2.UnknownErrorException = r2.UnexpectedResponseException = r2.UNSUPPORTED_FEATURES = r2.TextRenderingMode = r2.StreamType = r2.RenderingIntentFlag = r2.PermissionFlag = r2.PasswordResponses = r2.PasswordException = r2.PageActionEventType = r2.OPS = r2.MissingPDFException = r2.InvalidPDFException = r2.ImageKind = r2.IDENTITY_MATRIX = r2.FormatError = r2.FontType = r2.FeatureTest = r2.FONT_IDENTITY_MATRIX = r2.DocumentActionEventType = r2.CMapCompressionType = r2.BaseException = r2.AnnotationType = r2.AnnotationStateModelType = r2.AnnotationReviewState = r2.AnnotationReplyType = r2.AnnotationMode = r2.AnnotationMarkedState = r2.AnnotationFlag = r2.AnnotationFieldFlag = r2.AnnotationBorderStyleType = r2.AnnotationActionEventType = r2.AbortException = void 0;
          r2.arrayByteLength = arrayByteLength;
          r2.arraysToBytes = function arraysToBytes(t3) {
            var r3 = t3.length;
            if (r3 === 1 && t3[0] instanceof Uint8Array)
              return t3[0];
            for (var o3 = 0, c2 = 0; c2 < r3; c2++)
              o3 += arrayByteLength(t3[c2]);
            for (var l2 = 0, u2 = new Uint8Array(o3), h2 = 0; h2 < r3; h2++) {
              var d2 = t3[h2];
              d2 instanceof Uint8Array || (d2 = typeof d2 == "string" ? stringToBytes(d2) : new Uint8Array(d2));
              var g2 = d2.byteLength;
              u2.set(d2, l2);
              l2 += g2;
            }
            return u2;
          };
          r2.assert = function assert(t3, r3) {
            t3 || unreachable(r3);
          };
          r2.bytesToString = function bytesToString(t3) {
            _typeof(t3) === "object" && t3 !== null && t3.length !== void 0 || unreachable("Invalid argument for bytesToString");
            var r3 = t3.length, o3 = 8192;
            if (r3 < o3)
              return String.fromCharCode.apply(null, t3);
            for (var c2 = [], l2 = 0; l2 < r3; l2 += o3) {
              var u2 = Math.min(l2 + o3, r3), h2 = t3.subarray(l2, u2);
              c2.push(String.fromCharCode.apply(null, h2));
            }
            return c2.join("");
          };
          r2.createPromiseCapability = function createPromiseCapability() {
            var t3 = /* @__PURE__ */ Object.create(null), r3 = false;
            Object.defineProperty(t3, "settled", { get: function get() {
              return r3;
            } });
            t3.promise = new Promise(function(o3, c2) {
              t3.resolve = function(t4) {
                r3 = true;
                o3(t4);
              };
              t3.reject = function(t4) {
                r3 = true;
                c2(t4);
              };
            });
            return t3;
          };
          r2.createValidAbsoluteUrl = function createValidAbsoluteUrl(t3) {
            var r3 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null, o3 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null;
            if (!t3)
              return null;
            try {
              if (o3 && typeof t3 == "string") {
                if (o3.addDefaultProtocol && t3.startsWith("www.")) {
                  var c2 = t3.match(/\./g);
                  c2 && c2.length >= 2 && (t3 = "http://".concat(t3));
                }
                if (o3.tryConvertEncoding)
                  try {
                    t3 = stringToUTF8String(t3);
                  } catch (t4) {
                  }
              }
              var l2 = r3 ? new URL(t3, r3) : new URL(t3);
              if (_isValidProtocol(l2))
                return l2;
            } catch (t4) {
            }
            return null;
          };
          r2.escapeString = function escapeString(t3) {
            return t3.replace(/([()\\\n\r])/g, function(t4) {
              return t4 === "\n" ? "\\n" : t4 === "\r" ? "\\r" : "\\".concat(t4);
            });
          };
          r2.getModificationDate = function getModificationDate() {
            var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : new Date(), r3 = [t3.getUTCFullYear().toString(), (t3.getUTCMonth() + 1).toString().padStart(2, "0"), t3.getUTCDate().toString().padStart(2, "0"), t3.getUTCHours().toString().padStart(2, "0"), t3.getUTCMinutes().toString().padStart(2, "0"), t3.getUTCSeconds().toString().padStart(2, "0")];
            return r3.join("");
          };
          r2.getVerbosityLevel = function getVerbosityLevel() {
            return l;
          };
          r2.info = function info(t3) {
            l >= c.INFOS && console.log("Info: ".concat(t3));
          };
          r2.isArrayBuffer = function isArrayBuffer(t3) {
            return _typeof(t3) === "object" && t3 !== null && t3.byteLength !== void 0;
          };
          r2.isArrayEqual = function isArrayEqual(t3, r3) {
            if (t3.length !== r3.length)
              return false;
            for (var o3 = 0, c2 = t3.length; o3 < c2; o3++)
              if (t3[o3] !== r3[o3])
                return false;
            return true;
          };
          r2.isAscii = function isAscii(t3) {
            return /^[\x00-\x7F]*$/.test(t3);
          };
          r2.objectFromMap = function objectFromMap(t3) {
            var r3, o3 = /* @__PURE__ */ Object.create(null), c2 = function _createForOfIteratorHelper(t4, r4) {
              var o4 = typeof Symbol != "undefined" && t4[Symbol.iterator] || t4["@@iterator"];
              if (!o4) {
                if (Array.isArray(t4) || (o4 = _unsupportedIterableToArray(t4)) || r4 && t4 && typeof t4.length == "number") {
                  o4 && (t4 = o4);
                  var c3 = 0, l3 = function F() {
                  };
                  return { s: l3, n: function n() {
                    return c3 >= t4.length ? { done: true } : { done: false, value: t4[c3++] };
                  }, e: function e(t5) {
                    throw t5;
                  }, f: l3 };
                }
                throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
              }
              var u3, h3 = true, d3 = false;
              return { s: function s() {
                o4 = o4.call(t4);
              }, n: function n() {
                var t5 = o4.next();
                h3 = t5.done;
                return t5;
              }, e: function e(t5) {
                d3 = true;
                u3 = t5;
              }, f: function f() {
                try {
                  h3 || o4.return == null || o4.return();
                } finally {
                  if (d3)
                    throw u3;
                }
              } };
            }(t3);
            try {
              for (c2.s(); !(r3 = c2.n()).done; ) {
                var l2 = (d2 = r3.value, g2 = 2, function _arrayWithHoles(t4) {
                  if (Array.isArray(t4))
                    return t4;
                }(d2) || function _iterableToArrayLimit(t4, r4) {
                  var o4 = t4 == null ? null : typeof Symbol != "undefined" && t4[Symbol.iterator] || t4["@@iterator"];
                  if (o4 == null)
                    return;
                  var c3, l3, u3 = [], h3 = true, d3 = false;
                  try {
                    for (o4 = o4.call(t4); !(h3 = (c3 = o4.next()).done); h3 = true) {
                      u3.push(c3.value);
                      if (r4 && u3.length === r4)
                        break;
                    }
                  } catch (t5) {
                    d3 = true;
                    l3 = t5;
                  } finally {
                    try {
                      h3 || o4.return == null || o4.return();
                    } finally {
                      if (d3)
                        throw l3;
                    }
                  }
                  return u3;
                }(d2, g2) || _unsupportedIterableToArray(d2, g2) || function _nonIterableRest() {
                  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
                }()), u2 = l2[0], h2 = l2[1];
                o3[u2] = h2;
              }
            } catch (t4) {
              c2.e(t4);
            } finally {
              c2.f();
            }
            var d2, g2;
            return o3;
          };
          r2.objectSize = function objectSize(t3) {
            return Object.keys(t3).length;
          };
          r2.setVerbosityLevel = function setVerbosityLevel(t3) {
            Number.isInteger(t3) && (l = t3);
          };
          r2.shadow = shadow;
          r2.string32 = function string32(t3) {
            return String.fromCharCode(t3 >> 24 & 255, t3 >> 16 & 255, t3 >> 8 & 255, 255 & t3);
          };
          r2.stringToBytes = stringToBytes;
          r2.stringToPDFString = function stringToPDFString(t3) {
            if (t3[0] >= "\xEF") {
              var r3;
              t3[0] === "\xFE" && t3[1] === "\xFF" ? r3 = "utf-16be" : t3[0] === "\xFF" && t3[1] === "\xFE" ? r3 = "utf-16le" : t3[0] === "\xEF" && t3[1] === "\xBB" && t3[2] === "\xBF" && (r3 = "utf-8");
              if (r3)
                try {
                  var o3 = new TextDecoder(r3, { fatal: true }), c2 = stringToBytes(t3);
                  return o3.decode(c2);
                } catch (t4) {
                  warn('stringToPDFString: "'.concat(t4, '".'));
                }
            }
            for (var l2 = [], u2 = 0, h2 = t3.length; u2 < h2; u2++) {
              var d2 = C[t3.charCodeAt(u2)];
              l2.push(d2 ? String.fromCharCode(d2) : t3.charAt(u2));
            }
            return l2.join("");
          };
          r2.stringToUTF16BEString = function stringToUTF16BEString(t3) {
            for (var r3 = ["\xFE\xFF"], o3 = 0, c2 = t3.length; o3 < c2; o3++) {
              var l2 = t3.charCodeAt(o3);
              r3.push(String.fromCharCode(l2 >> 8 & 255), String.fromCharCode(255 & l2));
            }
            return r3.join("");
          };
          r2.stringToUTF8String = stringToUTF8String;
          r2.unreachable = unreachable;
          r2.utf8StringToString = function utf8StringToString(t3) {
            return unescape(encodeURIComponent(t3));
          };
          r2.warn = warn;
          o2(5);
          function _toConsumableArray(t3) {
            return function _arrayWithoutHoles(t4) {
              if (Array.isArray(t4))
                return _arrayLikeToArray(t4);
            }(t3) || function _iterableToArray(t4) {
              if (typeof Symbol != "undefined" && t4[Symbol.iterator] != null || t4["@@iterator"] != null)
                return Array.from(t4);
            }(t3) || _unsupportedIterableToArray(t3) || function _nonIterableSpread() {
              throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
            }();
          }
          function _unsupportedIterableToArray(t3, r3) {
            if (t3) {
              if (typeof t3 == "string")
                return _arrayLikeToArray(t3, r3);
              var o3 = Object.prototype.toString.call(t3).slice(8, -1);
              o3 === "Object" && t3.constructor && (o3 = t3.constructor.name);
              return o3 === "Map" || o3 === "Set" ? Array.from(t3) : o3 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(o3) ? _arrayLikeToArray(t3, r3) : void 0;
            }
          }
          function _arrayLikeToArray(t3, r3) {
            (r3 == null || r3 > t3.length) && (r3 = t3.length);
            for (var o3 = 0, c2 = new Array(r3); o3 < r3; o3++)
              c2[o3] = t3[o3];
            return c2;
          }
          function _typeof(t3) {
            return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t4) {
              return typeof t4;
            } : function(t4) {
              return t4 && typeof Symbol == "function" && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
            }, _typeof(t3);
          }
          function _defineProperties(t3, r3) {
            for (var o3 = 0; o3 < r3.length; o3++) {
              var c2 = r3[o3];
              c2.enumerable = c2.enumerable || false;
              c2.configurable = true;
              "value" in c2 && (c2.writable = true);
              Object.defineProperty(t3, c2.key, c2);
            }
          }
          function _createClass(t3, r3, o3) {
            r3 && _defineProperties(t3.prototype, r3);
            o3 && _defineProperties(t3, o3);
            Object.defineProperty(t3, "prototype", { writable: false });
            return t3;
          }
          function _classCallCheck(t3, r3) {
            if (!(t3 instanceof r3))
              throw new TypeError("Cannot call a class as a function");
          }
          function _inherits(t3, r3) {
            if (typeof r3 != "function" && r3 !== null)
              throw new TypeError("Super expression must either be null or a function");
            t3.prototype = Object.create(r3 && r3.prototype, { constructor: { value: t3, writable: true, configurable: true } });
            Object.defineProperty(t3, "prototype", { writable: false });
            r3 && _setPrototypeOf(t3, r3);
          }
          function _setPrototypeOf(t3, r3) {
            _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(t4, r4) {
              t4.__proto__ = r4;
              return t4;
            };
            return _setPrototypeOf(t3, r3);
          }
          function _createSuper(t3) {
            var r3 = function _isNativeReflectConstruct() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                }));
                return true;
              } catch (t4) {
                return false;
              }
            }();
            return function _createSuperInternal() {
              var o3, c2 = _getPrototypeOf(t3);
              if (r3) {
                var l2 = _getPrototypeOf(this).constructor;
                o3 = Reflect.construct(c2, arguments, l2);
              } else
                o3 = c2.apply(this, arguments);
              return _possibleConstructorReturn(this, o3);
            };
          }
          function _possibleConstructorReturn(t3, r3) {
            if (r3 && (_typeof(r3) === "object" || typeof r3 == "function"))
              return r3;
            if (r3 !== void 0)
              throw new TypeError("Derived constructors may only return object or undefined");
            return function _assertThisInitialized(t4) {
              if (t4 === void 0)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return t4;
            }(t3);
          }
          function _getPrototypeOf(t3) {
            _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(t4) {
              return t4.__proto__ || Object.getPrototypeOf(t4);
            };
            return _getPrototypeOf(t3);
          }
          r2.IDENTITY_MATRIX = [1, 0, 0, 1, 0, 0];
          r2.FONT_IDENTITY_MATRIX = [1e-3, 0, 0, 1e-3, 0, 0];
          r2.RenderingIntentFlag = { ANY: 1, DISPLAY: 2, PRINT: 4, ANNOTATIONS_FORMS: 16, ANNOTATIONS_STORAGE: 32, ANNOTATIONS_DISABLE: 64, OPLIST: 256 };
          r2.AnnotationMode = { DISABLE: 0, ENABLE: 1, ENABLE_FORMS: 2, ENABLE_STORAGE: 3 };
          r2.PermissionFlag = { PRINT: 4, MODIFY_CONTENTS: 8, COPY: 16, MODIFY_ANNOTATIONS: 32, FILL_INTERACTIVE_FORMS: 256, COPY_FOR_ACCESSIBILITY: 512, ASSEMBLE: 1024, PRINT_HIGH_QUALITY: 2048 };
          r2.TextRenderingMode = { FILL: 0, STROKE: 1, FILL_STROKE: 2, INVISIBLE: 3, FILL_ADD_TO_PATH: 4, STROKE_ADD_TO_PATH: 5, FILL_STROKE_ADD_TO_PATH: 6, ADD_TO_PATH: 7, FILL_STROKE_MASK: 3, ADD_TO_PATH_FLAG: 4 };
          r2.ImageKind = { GRAYSCALE_1BPP: 1, RGB_24BPP: 2, RGBA_32BPP: 3 };
          r2.AnnotationType = { TEXT: 1, LINK: 2, FREETEXT: 3, LINE: 4, SQUARE: 5, CIRCLE: 6, POLYGON: 7, POLYLINE: 8, HIGHLIGHT: 9, UNDERLINE: 10, SQUIGGLY: 11, STRIKEOUT: 12, STAMP: 13, CARET: 14, INK: 15, POPUP: 16, FILEATTACHMENT: 17, SOUND: 18, MOVIE: 19, WIDGET: 20, SCREEN: 21, PRINTERMARK: 22, TRAPNET: 23, WATERMARK: 24, THREED: 25, REDACT: 26 };
          r2.AnnotationStateModelType = { MARKED: "Marked", REVIEW: "Review" };
          r2.AnnotationMarkedState = { MARKED: "Marked", UNMARKED: "Unmarked" };
          r2.AnnotationReviewState = { ACCEPTED: "Accepted", REJECTED: "Rejected", CANCELLED: "Cancelled", COMPLETED: "Completed", NONE: "None" };
          r2.AnnotationReplyType = { GROUP: "Group", REPLY: "R" };
          r2.AnnotationFlag = { INVISIBLE: 1, HIDDEN: 2, PRINT: 4, NOZOOM: 8, NOROTATE: 16, NOVIEW: 32, READONLY: 64, LOCKED: 128, TOGGLENOVIEW: 256, LOCKEDCONTENTS: 512 };
          r2.AnnotationFieldFlag = { READONLY: 1, REQUIRED: 2, NOEXPORT: 4, MULTILINE: 4096, PASSWORD: 8192, NOTOGGLETOOFF: 16384, RADIO: 32768, PUSHBUTTON: 65536, COMBO: 131072, EDIT: 262144, SORT: 524288, FILESELECT: 1048576, MULTISELECT: 2097152, DONOTSPELLCHECK: 4194304, DONOTSCROLL: 8388608, COMB: 16777216, RICHTEXT: 33554432, RADIOSINUNISON: 33554432, COMMITONSELCHANGE: 67108864 };
          r2.AnnotationBorderStyleType = { SOLID: 1, DASHED: 2, BEVELED: 3, INSET: 4, UNDERLINE: 5 };
          r2.AnnotationActionEventType = { E: "Mouse Enter", X: "Mouse Exit", D: "Mouse Down", U: "Mouse Up", Fo: "Focus", Bl: "Blur", PO: "PageOpen", PC: "PageClose", PV: "PageVisible", PI: "PageInvisible", K: "Keystroke", F: "Format", V: "Validate", C: "Calculate" };
          r2.DocumentActionEventType = { WC: "WillClose", WS: "WillSave", DS: "DidSave", WP: "WillPrint", DP: "DidPrint" };
          r2.PageActionEventType = { O: "PageOpen", C: "PageClose" };
          r2.StreamType = { UNKNOWN: "UNKNOWN", FLATE: "FLATE", LZW: "LZW", DCT: "DCT", JPX: "JPX", JBIG: "JBIG", A85: "A85", AHX: "AHX", CCF: "CCF", RLX: "RLX" };
          r2.FontType = { UNKNOWN: "UNKNOWN", TYPE1: "TYPE1", TYPE1STANDARD: "TYPE1STANDARD", TYPE1C: "TYPE1C", CIDFONTTYPE0: "CIDFONTTYPE0", CIDFONTTYPE0C: "CIDFONTTYPE0C", TRUETYPE: "TRUETYPE", CIDFONTTYPE2: "CIDFONTTYPE2", TYPE3: "TYPE3", OPENTYPE: "OPENTYPE", TYPE0: "TYPE0", MMTYPE1: "MMTYPE1" };
          var c = { ERRORS: 0, WARNINGS: 1, INFOS: 5 };
          r2.VerbosityLevel = c;
          r2.CMapCompressionType = { NONE: 0, BINARY: 1, STREAM: 2 };
          r2.OPS = { dependency: 1, setLineWidth: 2, setLineCap: 3, setLineJoin: 4, setMiterLimit: 5, setDash: 6, setRenderingIntent: 7, setFlatness: 8, setGState: 9, save: 10, restore: 11, transform: 12, moveTo: 13, lineTo: 14, curveTo: 15, curveTo2: 16, curveTo3: 17, closePath: 18, rectangle: 19, stroke: 20, closeStroke: 21, fill: 22, eoFill: 23, fillStroke: 24, eoFillStroke: 25, closeFillStroke: 26, closeEOFillStroke: 27, endPath: 28, clip: 29, eoClip: 30, beginText: 31, endText: 32, setCharSpacing: 33, setWordSpacing: 34, setHScale: 35, setLeading: 36, setFont: 37, setTextRenderingMode: 38, setTextRise: 39, moveText: 40, setLeadingMoveText: 41, setTextMatrix: 42, nextLine: 43, showText: 44, showSpacedText: 45, nextLineShowText: 46, nextLineSetSpacingShowText: 47, setCharWidth: 48, setCharWidthAndBounds: 49, setStrokeColorSpace: 50, setFillColorSpace: 51, setStrokeColor: 52, setStrokeColorN: 53, setFillColor: 54, setFillColorN: 55, setStrokeGray: 56, setFillGray: 57, setStrokeRGBColor: 58, setFillRGBColor: 59, setStrokeCMYKColor: 60, setFillCMYKColor: 61, shadingFill: 62, beginInlineImage: 63, beginImageData: 64, endInlineImage: 65, paintXObject: 66, markPoint: 67, markPointProps: 68, beginMarkedContent: 69, beginMarkedContentProps: 70, endMarkedContent: 71, beginCompat: 72, endCompat: 73, paintFormXObjectBegin: 74, paintFormXObjectEnd: 75, beginGroup: 76, endGroup: 77, beginAnnotations: 78, endAnnotations: 79, beginAnnotation: 80, endAnnotation: 81, paintJpegXObject: 82, paintImageMaskXObject: 83, paintImageMaskXObjectGroup: 84, paintImageXObject: 85, paintInlineImageXObject: 86, paintInlineImageXObjectGroup: 87, paintImageXObjectRepeat: 88, paintImageMaskXObjectRepeat: 89, paintSolidColorImageMask: 90, constructPath: 91 };
          r2.UNSUPPORTED_FEATURES = { unknown: "unknown", forms: "forms", javaScript: "javaScript", signatures: "signatures", smask: "smask", shadingPattern: "shadingPattern", font: "font", errorTilingPattern: "errorTilingPattern", errorExtGState: "errorExtGState", errorXObject: "errorXObject", errorFontLoadType3: "errorFontLoadType3", errorFontState: "errorFontState", errorFontMissing: "errorFontMissing", errorFontTranslate: "errorFontTranslate", errorColorSpace: "errorColorSpace", errorOperatorList: "errorOperatorList", errorFontToUnicode: "errorFontToUnicode", errorFontLoadNative: "errorFontLoadNative", errorFontBuildPath: "errorFontBuildPath", errorFontGetPath: "errorFontGetPath", errorMarkedContent: "errorMarkedContent", errorContentSubStream: "errorContentSubStream" };
          r2.PasswordResponses = { NEED_PASSWORD: 1, INCORRECT_PASSWORD: 2 };
          var l = c.WARNINGS;
          function warn(t3) {
            l >= c.WARNINGS && console.log("Warning: ".concat(t3));
          }
          function unreachable(t3) {
            throw new Error(t3);
          }
          function _isValidProtocol(t3) {
            if (!t3)
              return false;
            switch (t3.protocol) {
              case "http:":
              case "https:":
              case "ftp:":
              case "mailto:":
              case "tel:":
                return true;
              default:
                return false;
            }
          }
          function shadow(t3, r3, o3) {
            Object.defineProperty(t3, r3, { value: o3, enumerable: true, configurable: true, writable: false });
            return o3;
          }
          var u = function BaseExceptionClosure() {
            function BaseException(t3, r3) {
              this.constructor === BaseException && unreachable("Cannot initialize BaseException.");
              this.message = t3;
              this.name = r3;
            }
            BaseException.prototype = new Error();
            BaseException.constructor = BaseException;
            return BaseException;
          }();
          r2.BaseException = u;
          var h = function(t3) {
            _inherits(PasswordException, t3);
            var r3 = _createSuper(PasswordException);
            function PasswordException(t4, o3) {
              var c2;
              _classCallCheck(this, PasswordException);
              (c2 = r3.call(this, t4, "PasswordException")).code = o3;
              return c2;
            }
            return _createClass(PasswordException);
          }(u);
          r2.PasswordException = h;
          var d = function(t3) {
            _inherits(UnknownErrorException, t3);
            var r3 = _createSuper(UnknownErrorException);
            function UnknownErrorException(t4, o3) {
              var c2;
              _classCallCheck(this, UnknownErrorException);
              (c2 = r3.call(this, t4, "UnknownErrorException")).details = o3;
              return c2;
            }
            return _createClass(UnknownErrorException);
          }(u);
          r2.UnknownErrorException = d;
          var g = function(t3) {
            _inherits(InvalidPDFException, t3);
            var r3 = _createSuper(InvalidPDFException);
            function InvalidPDFException(t4) {
              _classCallCheck(this, InvalidPDFException);
              return r3.call(this, t4, "InvalidPDFException");
            }
            return _createClass(InvalidPDFException);
          }(u);
          r2.InvalidPDFException = g;
          var m = function(t3) {
            _inherits(MissingPDFException, t3);
            var r3 = _createSuper(MissingPDFException);
            function MissingPDFException(t4) {
              _classCallCheck(this, MissingPDFException);
              return r3.call(this, t4, "MissingPDFException");
            }
            return _createClass(MissingPDFException);
          }(u);
          r2.MissingPDFException = m;
          var y = function(t3) {
            _inherits(UnexpectedResponseException, t3);
            var r3 = _createSuper(UnexpectedResponseException);
            function UnexpectedResponseException(t4, o3) {
              var c2;
              _classCallCheck(this, UnexpectedResponseException);
              (c2 = r3.call(this, t4, "UnexpectedResponseException")).status = o3;
              return c2;
            }
            return _createClass(UnexpectedResponseException);
          }(u);
          r2.UnexpectedResponseException = y;
          var v = function(t3) {
            _inherits(FormatError, t3);
            var r3 = _createSuper(FormatError);
            function FormatError(t4) {
              _classCallCheck(this, FormatError);
              return r3.call(this, t4, "FormatError");
            }
            return _createClass(FormatError);
          }(u);
          r2.FormatError = v;
          var k = function(t3) {
            _inherits(AbortException, t3);
            var r3 = _createSuper(AbortException);
            function AbortException(t4) {
              _classCallCheck(this, AbortException);
              return r3.call(this, t4, "AbortException");
            }
            return _createClass(AbortException);
          }(u);
          r2.AbortException = k;
          function stringToBytes(t3) {
            typeof t3 != "string" && unreachable("Invalid argument for stringToBytes");
            for (var r3 = t3.length, o3 = new Uint8Array(r3), c2 = 0; c2 < r3; ++c2)
              o3[c2] = 255 & t3.charCodeAt(c2);
            return o3;
          }
          function arrayByteLength(t3) {
            if (t3.length !== void 0)
              return t3.length;
            if (t3.byteLength !== void 0)
              return t3.byteLength;
            unreachable("Invalid argument for arrayByteLength");
          }
          var _ = function() {
            function FeatureTest() {
              _classCallCheck(this, FeatureTest);
            }
            _createClass(FeatureTest, null, [{ key: "isLittleEndian", get: function get() {
              return shadow(this, "isLittleEndian", function isLittleEndian() {
                var t3 = new Uint8Array(4);
                t3[0] = 1;
                return new Uint32Array(t3.buffer, 0, 1)[0] === 1;
              }());
            } }, { key: "isEvalSupported", get: function get() {
              return shadow(this, "isEvalSupported", function isEvalSupported() {
                try {
                  new Function("");
                  return true;
                } catch (t3) {
                  return false;
                }
              }());
            } }, { key: "isOffscreenCanvasSupported", get: function get() {
              return shadow(this, "isOffscreenCanvasSupported", typeof OffscreenCanvas != "undefined");
            } }]);
            return FeatureTest;
          }();
          r2.FeatureTest = _;
          var w = _toConsumableArray(Array(256).keys()).map(function(t3) {
            return t3.toString(16).padStart(2, "0");
          }), S = function() {
            function Util() {
              _classCallCheck(this, Util);
            }
            _createClass(Util, null, [{ key: "makeHexColor", value: function makeHexColor(t3, r3, o3) {
              return "#".concat(w[t3]).concat(w[r3]).concat(w[o3]);
            } }, { key: "scaleMinMax", value: function scaleMinMax(t3, r3) {
              var o3;
              if (t3[0]) {
                if (t3[0] < 0) {
                  o3 = r3[0];
                  r3[0] = r3[1];
                  r3[1] = o3;
                }
                r3[0] *= t3[0];
                r3[1] *= t3[0];
                if (t3[3] < 0) {
                  o3 = r3[2];
                  r3[2] = r3[3];
                  r3[3] = o3;
                }
                r3[2] *= t3[3];
                r3[3] *= t3[3];
              } else {
                o3 = r3[0];
                r3[0] = r3[2];
                r3[2] = o3;
                o3 = r3[1];
                r3[1] = r3[3];
                r3[3] = o3;
                if (t3[1] < 0) {
                  o3 = r3[2];
                  r3[2] = r3[3];
                  r3[3] = o3;
                }
                r3[2] *= t3[1];
                r3[3] *= t3[1];
                if (t3[2] < 0) {
                  o3 = r3[0];
                  r3[0] = r3[1];
                  r3[1] = o3;
                }
                r3[0] *= t3[2];
                r3[1] *= t3[2];
              }
              r3[0] += t3[4];
              r3[1] += t3[4];
              r3[2] += t3[5];
              r3[3] += t3[5];
            } }, { key: "transform", value: function transform(t3, r3) {
              return [t3[0] * r3[0] + t3[2] * r3[1], t3[1] * r3[0] + t3[3] * r3[1], t3[0] * r3[2] + t3[2] * r3[3], t3[1] * r3[2] + t3[3] * r3[3], t3[0] * r3[4] + t3[2] * r3[5] + t3[4], t3[1] * r3[4] + t3[3] * r3[5] + t3[5]];
            } }, { key: "applyTransform", value: function applyTransform(t3, r3) {
              return [t3[0] * r3[0] + t3[1] * r3[2] + r3[4], t3[0] * r3[1] + t3[1] * r3[3] + r3[5]];
            } }, { key: "applyInverseTransform", value: function applyInverseTransform(t3, r3) {
              var o3 = r3[0] * r3[3] - r3[1] * r3[2];
              return [(t3[0] * r3[3] - t3[1] * r3[2] + r3[2] * r3[5] - r3[4] * r3[3]) / o3, (-t3[0] * r3[1] + t3[1] * r3[0] + r3[4] * r3[1] - r3[5] * r3[0]) / o3];
            } }, { key: "getAxialAlignedBoundingBox", value: function getAxialAlignedBoundingBox(t3, r3) {
              var o3 = Util.applyTransform(t3, r3), c2 = Util.applyTransform(t3.slice(2, 4), r3), l2 = Util.applyTransform([t3[0], t3[3]], r3), u2 = Util.applyTransform([t3[2], t3[1]], r3);
              return [Math.min(o3[0], c2[0], l2[0], u2[0]), Math.min(o3[1], c2[1], l2[1], u2[1]), Math.max(o3[0], c2[0], l2[0], u2[0]), Math.max(o3[1], c2[1], l2[1], u2[1])];
            } }, { key: "inverseTransform", value: function inverseTransform(t3) {
              var r3 = t3[0] * t3[3] - t3[1] * t3[2];
              return [t3[3] / r3, -t3[1] / r3, -t3[2] / r3, t3[0] / r3, (t3[2] * t3[5] - t3[4] * t3[3]) / r3, (t3[4] * t3[1] - t3[5] * t3[0]) / r3];
            } }, { key: "apply3dTransform", value: function apply3dTransform(t3, r3) {
              return [t3[0] * r3[0] + t3[1] * r3[1] + t3[2] * r3[2], t3[3] * r3[0] + t3[4] * r3[1] + t3[5] * r3[2], t3[6] * r3[0] + t3[7] * r3[1] + t3[8] * r3[2]];
            } }, { key: "singularValueDecompose2dScale", value: function singularValueDecompose2dScale(t3) {
              var r3 = [t3[0], t3[2], t3[1], t3[3]], o3 = t3[0] * r3[0] + t3[1] * r3[2], c2 = t3[0] * r3[1] + t3[1] * r3[3], l2 = t3[2] * r3[0] + t3[3] * r3[2], u2 = t3[2] * r3[1] + t3[3] * r3[3], h2 = (o3 + u2) / 2, d2 = Math.sqrt(Math.pow(o3 + u2, 2) - 4 * (o3 * u2 - l2 * c2)) / 2, g2 = h2 + d2 || 1, m2 = h2 - d2 || 1;
              return [Math.sqrt(g2), Math.sqrt(m2)];
            } }, { key: "normalizeRect", value: function normalizeRect(t3) {
              var r3 = t3.slice(0);
              if (t3[0] > t3[2]) {
                r3[0] = t3[2];
                r3[2] = t3[0];
              }
              if (t3[1] > t3[3]) {
                r3[1] = t3[3];
                r3[3] = t3[1];
              }
              return r3;
            } }, { key: "intersect", value: function intersect(t3, r3) {
              var o3 = Math.max(Math.min(t3[0], t3[2]), Math.min(r3[0], r3[2])), c2 = Math.min(Math.max(t3[0], t3[2]), Math.max(r3[0], r3[2]));
              if (o3 > c2)
                return null;
              var l2 = Math.max(Math.min(t3[1], t3[3]), Math.min(r3[1], r3[3])), u2 = Math.min(Math.max(t3[1], t3[3]), Math.max(r3[1], r3[3]));
              return l2 > u2 ? null : [o3, l2, c2, u2];
            } }, { key: "bezierBoundingBox", value: function bezierBoundingBox(t3, r3, o3, c2, l2, u2, h2, d2) {
              for (var g2, m2, y2, v2, k2, _2, w2, S2, C2 = [], x = [[], []], O = 0; O < 2; ++O) {
                if (O === 0) {
                  m2 = 6 * t3 - 12 * o3 + 6 * l2;
                  g2 = -3 * t3 + 9 * o3 - 9 * l2 + 3 * h2;
                  y2 = 3 * o3 - 3 * t3;
                } else {
                  m2 = 6 * r3 - 12 * c2 + 6 * u2;
                  g2 = -3 * r3 + 9 * c2 - 9 * u2 + 3 * d2;
                  y2 = 3 * c2 - 3 * r3;
                }
                if (Math.abs(g2) < 1e-12) {
                  if (Math.abs(m2) < 1e-12)
                    continue;
                  0 < (v2 = -y2 / m2) && v2 < 1 && C2.push(v2);
                } else {
                  w2 = m2 * m2 - 4 * y2 * g2;
                  S2 = Math.sqrt(w2);
                  if (!(w2 < 0)) {
                    0 < (k2 = (-m2 + S2) / (2 * g2)) && k2 < 1 && C2.push(k2);
                    0 < (_2 = (-m2 - S2) / (2 * g2)) && _2 < 1 && C2.push(_2);
                  }
                }
              }
              for (var T, E = C2.length, M = E; E--; ) {
                T = 1 - (v2 = C2[E]);
                x[0][E] = T * T * T * t3 + 3 * T * T * v2 * o3 + 3 * T * v2 * v2 * l2 + v2 * v2 * v2 * h2;
                x[1][E] = T * T * T * r3 + 3 * T * T * v2 * c2 + 3 * T * v2 * v2 * u2 + v2 * v2 * v2 * d2;
              }
              x[0][M] = t3;
              x[1][M] = r3;
              x[0][M + 1] = h2;
              x[1][M + 1] = d2;
              x[0].length = x[1].length = M + 2;
              return [Math.min.apply(Math, _toConsumableArray(x[0])), Math.min.apply(Math, _toConsumableArray(x[1])), Math.max.apply(Math, _toConsumableArray(x[0])), Math.max.apply(Math, _toConsumableArray(x[1]))];
            } }]);
            return Util;
          }();
          r2.Util = S;
          var C = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 728, 711, 710, 729, 733, 731, 730, 732, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8226, 8224, 8225, 8230, 8212, 8211, 402, 8260, 8249, 8250, 8722, 8240, 8222, 8220, 8221, 8216, 8217, 8218, 8482, 64257, 64258, 321, 338, 352, 376, 381, 305, 322, 339, 353, 382, 0, 8364];
          function stringToUTF8String(t3) {
            return decodeURIComponent(escape(t3));
          }
        }, (t2, r2, o2) => {
          "use strict";
          var c = o2(6);
          if (!globalThis._pdfjsCompatibilityChecked) {
            globalThis._pdfjsCompatibilityChecked = true;
            !function checkNodeBtoa() {
              !globalThis.btoa && c.isNodeJS && (globalThis.btoa = function(t3) {
                return Buffer.from(t3, "binary").toString("base64");
              });
            }();
            !function checkNodeAtob() {
              !globalThis.atob && c.isNodeJS && (globalThis.atob = function(t3) {
                return Buffer.from(t3, "base64").toString("binary");
              });
            }();
            !function checkDOMMatrix() {
              !globalThis.DOMMatrix && c.isNodeJS && (globalThis.DOMMatrix = require_dommatrix());
            }();
            !function checkPromise() {
              globalThis.Promise.allSettled || (globalThis.Promise = o2(7));
            }();
            !function checkReadableStream() {
              !globalThis.ReadableStream && c.isNodeJS && (globalThis.ReadableStream = require_ponyfill().ReadableStream);
            }();
            !function checkStructuredClone() {
              globalThis.structuredClone || o2(140);
            }();
          }
        }, (t2, r2) => {
          "use strict";
          Object.defineProperty(r2, "__esModule", { value: true });
          r2.isNodeJS = void 0;
          function _typeof(t3) {
            return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t4) {
              return typeof t4;
            } : function(t4) {
              return t4 && typeof Symbol == "function" && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
            }, _typeof(t3);
          }
          var o2 = !((typeof process == "undefined" ? "undefined" : _typeof(process)) !== "object" || process + "" != "[object process]" || process.versions.nw || process.versions.electron && process.type && process.type !== "browser");
          r2.isNodeJS = o2;
        }, (t2, r2, o2) => {
          o2(8);
          o2(94);
          o2(100);
          o2(102);
          o2(134);
          o2(135);
          o2(136);
          o2(137);
          var c = o2(139);
          t2.exports = c.Promise;
        }, (t2, r2, o2) => {
          o2(9);
        }, (t2, r2, o2) => {
          "use strict";
          var c = o2(10), l = o2(11), u = o2(30), h = o2(72), d = o2(74), g = o2(60), m = o2(76), y = o2(49), v = o2(18), k = o2(80), _ = o2(81), w = o2(82), S = o2(91), C = o2(39), x = o2(93), O = C("toStringTag"), T = l.Error, E = [].push, M = function AggregateError(t3, r3) {
            var o3, c2 = arguments.length > 2 ? arguments[2] : void 0, l2 = u(R, this);
            if (d)
              o3 = d(new T(), l2 ? h(this) : R);
            else {
              o3 = l2 ? this : m(R);
              y(o3, O, "Error");
            }
            r3 !== void 0 && y(o3, "message", S(r3));
            x && y(o3, "stack", k(o3.stack, 1));
            _(o3, c2);
            var g2 = [];
            w(t3, E, { that: g2 });
            y(o3, "errors", g2);
            return o3;
          };
          d ? d(M, T) : g(M, T, { name: true });
          var R = M.prototype = m(T.prototype, { constructor: v(1, M), message: v(1, ""), name: v(1, "AggregateError") });
          c({ global: true }, { AggregateError: M });
        }, (t2, r2, o2) => {
          var c = o2(11), l = o2(12).f, u = o2(49), h = o2(53), d = o2(43), g = o2(60), m = o2(71);
          t2.exports = function(t3, r3) {
            var o3, y, v, k, _, w = t3.target, S = t3.global, C = t3.stat;
            if (o3 = S ? c : C ? c[w] || d(w, {}) : (c[w] || {}).prototype)
              for (y in r3) {
                k = r3[y];
                v = t3.noTargetGet ? (_ = l(o3, y)) && _.value : o3[y];
                if (!m(S ? y : w + (C ? "." : "#") + y, t3.forced) && v !== void 0) {
                  if (typeof k == typeof v)
                    continue;
                  g(k, v);
                }
                (t3.sham || v && v.sham) && u(k, "sham", true);
                h(o3, y, k, t3);
              }
          };
        }, (t2) => {
          var check = function(t3) {
            return t3 && t3.Math == Math && t3;
          };
          t2.exports = check(typeof globalThis == "object" && globalThis) || check(typeof window == "object" && window) || check(typeof self == "object" && self) || check(typeof global == "object" && global) || function() {
            return this;
          }() || Function("return this")();
        }, (t2, r2, o2) => {
          var c = o2(13), l = o2(15), u = o2(17), h = o2(18), d = o2(19), g = o2(24), m = o2(44), y = o2(47), v = Object.getOwnPropertyDescriptor;
          r2.f = c ? v : function getOwnPropertyDescriptor(t3, r3) {
            t3 = d(t3);
            r3 = g(r3);
            if (y)
              try {
                return v(t3, r3);
              } catch (t4) {
              }
            if (m(t3, r3))
              return h(!l(u.f, t3, r3), t3[r3]);
          };
        }, (t2, r2, o2) => {
          var c = o2(14);
          t2.exports = !c(function() {
            return Object.defineProperty({}, 1, { get: function() {
              return 7;
            } })[1] != 7;
          });
        }, (t2) => {
          t2.exports = function(t3) {
            try {
              return !!t3();
            } catch (t4) {
              return true;
            }
          };
        }, (t2, r2, o2) => {
          var c = o2(16), l = Function.prototype.call;
          t2.exports = c ? l.bind(l) : function() {
            return l.apply(l, arguments);
          };
        }, (t2, r2, o2) => {
          var c = o2(14);
          t2.exports = !c(function() {
            var t3 = function() {
            }.bind();
            return typeof t3 != "function" || t3.hasOwnProperty("prototype");
          });
        }, (t2, r2) => {
          "use strict";
          var o2 = {}.propertyIsEnumerable, c = Object.getOwnPropertyDescriptor, l = c && !o2.call({ 1: 2 }, 1);
          r2.f = l ? function propertyIsEnumerable(t3) {
            var r3 = c(this, t3);
            return !!r3 && r3.enumerable;
          } : o2;
        }, (t2) => {
          t2.exports = function(t3, r2) {
            return { enumerable: !(1 & t3), configurable: !(2 & t3), writable: !(4 & t3), value: r2 };
          };
        }, (t2, r2, o2) => {
          var c = o2(20), l = o2(23);
          t2.exports = function(t3) {
            return c(l(t3));
          };
        }, (t2, r2, o2) => {
          var c = o2(11), l = o2(21), u = o2(14), h = o2(22), d = c.Object, g = l("".split);
          t2.exports = u(function() {
            return !d("z").propertyIsEnumerable(0);
          }) ? function(t3) {
            return h(t3) == "String" ? g(t3, "") : d(t3);
          } : d;
        }, (t2, r2, o2) => {
          var c = o2(16), l = Function.prototype, u = l.bind, h = l.call, d = c && u.bind(h, h);
          t2.exports = c ? function(t3) {
            return t3 && d(t3);
          } : function(t3) {
            return t3 && function() {
              return h.apply(t3, arguments);
            };
          };
        }, (t2, r2, o2) => {
          var c = o2(21), l = c({}.toString), u = c("".slice);
          t2.exports = function(t3) {
            return u(l(t3), 8, -1);
          };
        }, (t2, r2, o2) => {
          var c = o2(11).TypeError;
          t2.exports = function(t3) {
            if (t3 == null)
              throw c("Can't call method on " + t3);
            return t3;
          };
        }, (t2, r2, o2) => {
          var c = o2(25), l = o2(28);
          t2.exports = function(t3) {
            var r3 = c(t3, "string");
            return l(r3) ? r3 : r3 + "";
          };
        }, (t2, r2, o2) => {
          var c = o2(11), l = o2(15), u = o2(26), h = o2(28), d = o2(35), g = o2(38), m = o2(39), y = c.TypeError, v = m("toPrimitive");
          t2.exports = function(t3, r3) {
            if (!u(t3) || h(t3))
              return t3;
            var o3, c2 = d(t3, v);
            if (c2) {
              r3 === void 0 && (r3 = "default");
              o3 = l(c2, t3, r3);
              if (!u(o3) || h(o3))
                return o3;
              throw y("Can't convert object to primitive value");
            }
            r3 === void 0 && (r3 = "number");
            return g(t3, r3);
          };
        }, (t2, r2, o2) => {
          var c = o2(27);
          t2.exports = function(t3) {
            return typeof t3 == "object" ? t3 !== null : c(t3);
          };
        }, (t2) => {
          t2.exports = function(t3) {
            return typeof t3 == "function";
          };
        }, (t2, r2, o2) => {
          var c = o2(11), l = o2(29), u = o2(27), h = o2(30), d = o2(31), g = c.Object;
          t2.exports = d ? function(t3) {
            return typeof t3 == "symbol";
          } : function(t3) {
            var r3 = l("Symbol");
            return u(r3) && h(r3.prototype, g(t3));
          };
        }, (t2, r2, o2) => {
          var c = o2(11), l = o2(27), aFunction = function(t3) {
            return l(t3) ? t3 : void 0;
          };
          t2.exports = function(t3, r3) {
            return arguments.length < 2 ? aFunction(c[t3]) : c[t3] && c[t3][r3];
          };
        }, (t2, r2, o2) => {
          var c = o2(21);
          t2.exports = c({}.isPrototypeOf);
        }, (t2, r2, o2) => {
          var c = o2(32);
          t2.exports = c && !Symbol.sham && typeof Symbol.iterator == "symbol";
        }, (t2, r2, o2) => {
          var c = o2(33), l = o2(14);
          t2.exports = !!Object.getOwnPropertySymbols && !l(function() {
            var t3 = Symbol();
            return !String(t3) || !(Object(t3) instanceof Symbol) || !Symbol.sham && c && c < 41;
          });
        }, (t2, r2, o2) => {
          var c, l, u = o2(11), h = o2(34), d = u.process, g = u.Deno, m = d && d.versions || g && g.version, y = m && m.v8;
          y && (l = (c = y.split("."))[0] > 0 && c[0] < 4 ? 1 : +(c[0] + c[1]));
          !l && h && (!(c = h.match(/Edge\/(\d+)/)) || c[1] >= 74) && (c = h.match(/Chrome\/(\d+)/)) && (l = +c[1]);
          t2.exports = l;
        }, (t2, r2, o2) => {
          var c = o2(29);
          t2.exports = c("navigator", "userAgent") || "";
        }, (t2, r2, o2) => {
          var c = o2(36);
          t2.exports = function(t3, r3) {
            var o3 = t3[r3];
            return o3 == null ? void 0 : c(o3);
          };
        }, (t2, r2, o2) => {
          var c = o2(11), l = o2(27), u = o2(37), h = c.TypeError;
          t2.exports = function(t3) {
            if (l(t3))
              return t3;
            throw h(u(t3) + " is not a function");
          };
        }, (t2, r2, o2) => {
          var c = o2(11).String;
          t2.exports = function(t3) {
            try {
              return c(t3);
            } catch (t4) {
              return "Object";
            }
          };
        }, (t2, r2, o2) => {
          var c = o2(11), l = o2(15), u = o2(27), h = o2(26), d = c.TypeError;
          t2.exports = function(t3, r3) {
            var o3, c2;
            if (r3 === "string" && u(o3 = t3.toString) && !h(c2 = l(o3, t3)))
              return c2;
            if (u(o3 = t3.valueOf) && !h(c2 = l(o3, t3)))
              return c2;
            if (r3 !== "string" && u(o3 = t3.toString) && !h(c2 = l(o3, t3)))
              return c2;
            throw d("Can't convert object to primitive value");
          };
        }, (t2, r2, o2) => {
          var c = o2(11), l = o2(40), u = o2(44), h = o2(46), d = o2(32), g = o2(31), m = l("wks"), y = c.Symbol, v = y && y.for, k = g ? y : y && y.withoutSetter || h;
          t2.exports = function(t3) {
            if (!u(m, t3) || !d && typeof m[t3] != "string") {
              var r3 = "Symbol." + t3;
              d && u(y, t3) ? m[t3] = y[t3] : m[t3] = g && v ? v(r3) : k(r3);
            }
            return m[t3];
          };
        }, (t2, r2, o2) => {
          var c = o2(41), l = o2(42);
          (t2.exports = function(t3, r3) {
            return l[t3] || (l[t3] = r3 !== void 0 ? r3 : {});
          })("versions", []).push({ version: "3.22.3", mode: c ? "pure" : "global", copyright: "\xA9 2014-2022 Denis Pushkarev (zloirock.ru)", license: "https://github.com/zloirock/core-js/blob/v3.22.3/LICENSE", source: "https://github.com/zloirock/core-js" });
        }, (t2) => {
          t2.exports = false;
        }, (t2, r2, o2) => {
          var c = o2(11), l = o2(43), u = "__core-js_shared__", h = c[u] || l(u, {});
          t2.exports = h;
        }, (t2, r2, o2) => {
          var c = o2(11), l = Object.defineProperty;
          t2.exports = function(t3, r3) {
            try {
              l(c, t3, { value: r3, configurable: true, writable: true });
            } catch (o3) {
              c[t3] = r3;
            }
            return r3;
          };
        }, (t2, r2, o2) => {
          var c = o2(21), l = o2(45), u = c({}.hasOwnProperty);
          t2.exports = Object.hasOwn || function hasOwn(t3, r3) {
            return u(l(t3), r3);
          };
        }, (t2, r2, o2) => {
          var c = o2(11), l = o2(23), u = c.Object;
          t2.exports = function(t3) {
            return u(l(t3));
          };
        }, (t2, r2, o2) => {
          var c = o2(21), l = 0, u = Math.random(), h = c(1 .toString);
          t2.exports = function(t3) {
            return "Symbol(" + (t3 === void 0 ? "" : t3) + ")_" + h(++l + u, 36);
          };
        }, (t2, r2, o2) => {
          var c = o2(13), l = o2(14), u = o2(48);
          t2.exports = !c && !l(function() {
            return Object.defineProperty(u("div"), "a", { get: function() {
              return 7;
            } }).a != 7;
          });
        }, (t2, r2, o2) => {
          var c = o2(11), l = o2(26), u = c.document, h = l(u) && l(u.createElement);
          t2.exports = function(t3) {
            return h ? u.createElement(t3) : {};
          };
        }, (t2, r2, o2) => {
          var c = o2(13), l = o2(50), u = o2(18);
          t2.exports = c ? function(t3, r3, o3) {
            return l.f(t3, r3, u(1, o3));
          } : function(t3, r3, o3) {
            t3[r3] = o3;
            return t3;
          };
        }, (t2, r2, o2) => {
          var c = o2(11), l = o2(13), u = o2(47), h = o2(51), d = o2(52), g = o2(24), m = c.TypeError, y = Object.defineProperty, v = Object.getOwnPropertyDescriptor, k = "enumerable", _ = "configurable", w = "writable";
          r2.f = l ? h ? function defineProperty(t3, r3, o3) {
            d(t3);
            r3 = g(r3);
            d(o3);
            if (typeof t3 == "function" && r3 === "prototype" && "value" in o3 && w in o3 && !o3.writable) {
              var c2 = v(t3, r3);
              if (c2 && c2.writable) {
                t3[r3] = o3.value;
                o3 = { configurable: _ in o3 ? o3.configurable : c2.configurable, enumerable: k in o3 ? o3.enumerable : c2.enumerable, writable: false };
              }
            }
            return y(t3, r3, o3);
          } : y : function defineProperty(t3, r3, o3) {
            d(t3);
            r3 = g(r3);
            d(o3);
            if (u)
              try {
                return y(t3, r3, o3);
              } catch (t4) {
              }
            if ("get" in o3 || "set" in o3)
              throw m("Accessors not supported");
            "value" in o3 && (t3[r3] = o3.value);
            return t3;
          };
        }, (t2, r2, o2) => {
          var c = o2(13), l = o2(14);
          t2.exports = c && l(function() {
            return Object.defineProperty(function() {
            }, "prototype", { value: 42, writable: false }).prototype != 42;
          });
        }, (t2, r2, o2) => {
          var c = o2(11), l = o2(26), u = c.String, h = c.TypeError;
          t2.exports = function(t3) {
            if (l(t3))
              return t3;
            throw h(u(t3) + " is not an object");
          };
        }, (t2, r2, o2) => {
          var c = o2(11), l = o2(27), u = o2(44), h = o2(49), d = o2(43), g = o2(54), m = o2(55), y = o2(59).CONFIGURABLE, v = m.get, k = m.enforce, _ = String(String).split("String");
          (t2.exports = function(t3, r3, o3, g2) {
            var m2, v2 = !!g2 && !!g2.unsafe, w = !!g2 && !!g2.enumerable, S = !!g2 && !!g2.noTargetGet, C = g2 && g2.name !== void 0 ? g2.name : r3;
            if (l(o3)) {
              String(C).slice(0, 7) === "Symbol(" && (C = "[" + String(C).replace(/^Symbol\(([^)]*)\)/, "$1") + "]");
              (!u(o3, "name") || y && o3.name !== C) && h(o3, "name", C);
              (m2 = k(o3)).source || (m2.source = _.join(typeof C == "string" ? C : ""));
            }
            if (t3 !== c) {
              v2 ? !S && t3[r3] && (w = true) : delete t3[r3];
              w ? t3[r3] = o3 : h(t3, r3, o3);
            } else
              w ? t3[r3] = o3 : d(r3, o3);
          })(Function.prototype, "toString", function toString() {
            return l(this) && v(this).source || g(this);
          });
        }, (t2, r2, o2) => {
          var c = o2(21), l = o2(27), u = o2(42), h = c(Function.toString);
          l(u.inspectSource) || (u.inspectSource = function(t3) {
            return h(t3);
          });
          t2.exports = u.inspectSource;
        }, (t2, r2, o2) => {
          var c, l, u, h = o2(56), d = o2(11), g = o2(21), m = o2(26), y = o2(49), v = o2(44), k = o2(42), _ = o2(57), w = o2(58), S = "Object already initialized", C = d.TypeError, x = d.WeakMap;
          if (h || k.state) {
            var O = k.state || (k.state = new x()), T = g(O.get), E = g(O.has), M = g(O.set);
            c = function(t3, r3) {
              if (E(O, t3))
                throw new C(S);
              r3.facade = t3;
              M(O, t3, r3);
              return r3;
            };
            l = function(t3) {
              return T(O, t3) || {};
            };
            u = function(t3) {
              return E(O, t3);
            };
          } else {
            var R = _("state");
            w[R] = true;
            c = function(t3, r3) {
              if (v(t3, R))
                throw new C(S);
              r3.facade = t3;
              y(t3, R, r3);
              return r3;
            };
            l = function(t3) {
              return v(t3, R) ? t3[R] : {};
            };
            u = function(t3) {
              return v(t3, R);
            };
          }
          t2.exports = { set: c, get: l, has: u, enforce: function(t3) {
            return u(t3) ? l(t3) : c(t3, {});
          }, getterFor: function(t3) {
            return function(r3) {
              var o3;
              if (!m(r3) || (o3 = l(r3)).type !== t3)
                throw C("Incompatible receiver, " + t3 + " required");
              return o3;
            };
          } };
        }, (t2, r2, o2) => {
          var c = o2(11), l = o2(27), u = o2(54), h = c.WeakMap;
          t2.exports = l(h) && /native code/.test(u(h));
        }, (t2, r2, o2) => {
          var c = o2(40), l = o2(46), u = c("keys");
          t2.exports = function(t3) {
            return u[t3] || (u[t3] = l(t3));
          };
        }, (t2) => {
          t2.exports = {};
        }, (t2, r2, o2) => {
          var c = o2(13), l = o2(44), u = Function.prototype, h = c && Object.getOwnPropertyDescriptor, d = l(u, "name"), g = d && function something() {
          }.name === "something", m = d && (!c || c && h(u, "name").configurable);
          t2.exports = { EXISTS: d, PROPER: g, CONFIGURABLE: m };
        }, (t2, r2, o2) => {
          var c = o2(44), l = o2(61), u = o2(12), h = o2(50);
          t2.exports = function(t3, r3, o3) {
            for (var d = l(r3), g = h.f, m = u.f, y = 0; y < d.length; y++) {
              var v = d[y];
              c(t3, v) || o3 && c(o3, v) || g(t3, v, m(r3, v));
            }
          };
        }, (t2, r2, o2) => {
          var c = o2(29), l = o2(21), u = o2(62), h = o2(70), d = o2(52), g = l([].concat);
          t2.exports = c("Reflect", "ownKeys") || function ownKeys(t3) {
            var r3 = u.f(d(t3)), o3 = h.f;
            return o3 ? g(r3, o3(t3)) : r3;
          };
        }, (t2, r2, o2) => {
          var c = o2(63), l = o2(69).concat("length", "prototype");
          r2.f = Object.getOwnPropertyNames || function getOwnPropertyNames(t3) {
            return c(t3, l);
          };
        }, (t2, r2, o2) => {
          var c = o2(21), l = o2(44), u = o2(19), h = o2(64).indexOf, d = o2(58), g = c([].push);
          t2.exports = function(t3, r3) {
            var o3, c2 = u(t3), m = 0, y = [];
            for (o3 in c2)
              !l(d, o3) && l(c2, o3) && g(y, o3);
            for (; r3.length > m; )
              l(c2, o3 = r3[m++]) && (~h(y, o3) || g(y, o3));
            return y;
          };
        }, (t2, r2, o2) => {
          var c = o2(19), l = o2(65), u = o2(67), createMethod = function(t3) {
            return function(r3, o3, h) {
              var d, g = c(r3), m = u(g), y = l(h, m);
              if (t3 && o3 != o3) {
                for (; m > y; )
                  if ((d = g[y++]) != d)
                    return true;
              } else
                for (; m > y; y++)
                  if ((t3 || y in g) && g[y] === o3)
                    return t3 || y || 0;
              return !t3 && -1;
            };
          };
          t2.exports = { includes: createMethod(true), indexOf: createMethod(false) };
        }, (t2, r2, o2) => {
          var c = o2(66), l = Math.max, u = Math.min;
          t2.exports = function(t3, r3) {
            var o3 = c(t3);
            return o3 < 0 ? l(o3 + r3, 0) : u(o3, r3);
          };
        }, (t2) => {
          var r2 = Math.ceil, o2 = Math.floor;
          t2.exports = function(t3) {
            var c = +t3;
            return c != c || c === 0 ? 0 : (c > 0 ? o2 : r2)(c);
          };
        }, (t2, r2, o2) => {
          var c = o2(68);
          t2.exports = function(t3) {
            return c(t3.length);
          };
        }, (t2, r2, o2) => {
          var c = o2(66), l = Math.min;
          t2.exports = function(t3) {
            return t3 > 0 ? l(c(t3), 9007199254740991) : 0;
          };
        }, (t2) => {
          t2.exports = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
        }, (t2, r2) => {
          r2.f = Object.getOwnPropertySymbols;
        }, (t2, r2, o2) => {
          var c = o2(14), l = o2(27), u = /#|\.prototype\./, isForced = function(t3, r3) {
            var o3 = d[h(t3)];
            return o3 == m || o3 != g && (l(r3) ? c(r3) : !!r3);
          }, h = isForced.normalize = function(t3) {
            return String(t3).replace(u, ".").toLowerCase();
          }, d = isForced.data = {}, g = isForced.NATIVE = "N", m = isForced.POLYFILL = "P";
          t2.exports = isForced;
        }, (t2, r2, o2) => {
          var c = o2(11), l = o2(44), u = o2(27), h = o2(45), d = o2(57), g = o2(73), m = d("IE_PROTO"), y = c.Object, v = y.prototype;
          t2.exports = g ? y.getPrototypeOf : function(t3) {
            var r3 = h(t3);
            if (l(r3, m))
              return r3[m];
            var o3 = r3.constructor;
            return u(o3) && r3 instanceof o3 ? o3.prototype : r3 instanceof y ? v : null;
          };
        }, (t2, r2, o2) => {
          var c = o2(14);
          t2.exports = !c(function() {
            function F() {
            }
            F.prototype.constructor = null;
            return Object.getPrototypeOf(new F()) !== F.prototype;
          });
        }, (t2, r2, o2) => {
          var c = o2(21), l = o2(52), u = o2(75);
          t2.exports = Object.setPrototypeOf || ("__proto__" in {} ? function() {
            var t3, r3 = false, o3 = {};
            try {
              (t3 = c(Object.getOwnPropertyDescriptor(Object.prototype, "__proto__").set))(o3, []);
              r3 = o3 instanceof Array;
            } catch (t4) {
            }
            return function setPrototypeOf(o4, c2) {
              l(o4);
              u(c2);
              r3 ? t3(o4, c2) : o4.__proto__ = c2;
              return o4;
            };
          }() : void 0);
        }, (t2, r2, o2) => {
          var c = o2(11), l = o2(27), u = c.String, h = c.TypeError;
          t2.exports = function(t3) {
            if (typeof t3 == "object" || l(t3))
              return t3;
            throw h("Can't set " + u(t3) + " as a prototype");
          };
        }, (t2, r2, o2) => {
          var c, l = o2(52), u = o2(77), h = o2(69), d = o2(58), g = o2(79), m = o2(48), y = o2(57), v = y("IE_PROTO"), EmptyConstructor = function() {
          }, scriptTag = function(t3) {
            return "<script>" + t3 + "<\/script>";
          }, NullProtoObjectViaActiveX = function(t3) {
            t3.write(scriptTag(""));
            t3.close();
            var r3 = t3.parentWindow.Object;
            t3 = null;
            return r3;
          }, NullProtoObject = function() {
            try {
              c = new ActiveXObject("htmlfile");
            } catch (t4) {
            }
            NullProtoObject = typeof document != "undefined" ? document.domain && c ? NullProtoObjectViaActiveX(c) : function() {
              var t4, r3 = m("iframe");
              r3.style.display = "none";
              g.appendChild(r3);
              r3.src = String("javascript:");
              (t4 = r3.contentWindow.document).open();
              t4.write(scriptTag("document.F=Object"));
              t4.close();
              return t4.F;
            }() : NullProtoObjectViaActiveX(c);
            for (var t3 = h.length; t3--; )
              delete NullProtoObject.prototype[h[t3]];
            return NullProtoObject();
          };
          d[v] = true;
          t2.exports = Object.create || function create(t3, r3) {
            var o3;
            if (t3 !== null) {
              EmptyConstructor.prototype = l(t3);
              o3 = new EmptyConstructor();
              EmptyConstructor.prototype = null;
              o3[v] = t3;
            } else
              o3 = NullProtoObject();
            return r3 === void 0 ? o3 : u.f(o3, r3);
          };
        }, (t2, r2, o2) => {
          var c = o2(13), l = o2(51), u = o2(50), h = o2(52), d = o2(19), g = o2(78);
          r2.f = c && !l ? Object.defineProperties : function defineProperties(t3, r3) {
            h(t3);
            for (var o3, c2 = d(r3), l2 = g(r3), m = l2.length, y = 0; m > y; )
              u.f(t3, o3 = l2[y++], c2[o3]);
            return t3;
          };
        }, (t2, r2, o2) => {
          var c = o2(63), l = o2(69);
          t2.exports = Object.keys || function keys(t3) {
            return c(t3, l);
          };
        }, (t2, r2, o2) => {
          var c = o2(29);
          t2.exports = c("document", "documentElement");
        }, (t2, r2, o2) => {
          var c = o2(21), l = Error, u = c("".replace), h = String(l("zxcasd").stack), d = /\n\s*at [^:]*:[^\n]*/, g = d.test(h);
          t2.exports = function(t3, r3) {
            if (g && typeof t3 == "string" && !l.prepareStackTrace)
              for (; r3--; )
                t3 = u(t3, d, "");
            return t3;
          };
        }, (t2, r2, o2) => {
          var c = o2(26), l = o2(49);
          t2.exports = function(t3, r3) {
            c(r3) && "cause" in r3 && l(t3, "cause", r3.cause);
          };
        }, (t2, r2, o2) => {
          var c = o2(11), l = o2(83), u = o2(15), h = o2(52), d = o2(37), g = o2(84), m = o2(67), y = o2(30), v = o2(86), k = o2(87), _ = o2(90), w = c.TypeError, Result = function(t3, r3) {
            this.stopped = t3;
            this.result = r3;
          }, S = Result.prototype;
          t2.exports = function(t3, r3, o3) {
            var c2, C, x, O, T, E, M, R = o3 && o3.that, D = !(!o3 || !o3.AS_ENTRIES), j = !(!o3 || !o3.IS_ITERATOR), L = !(!o3 || !o3.INTERRUPTED), N = l(r3, R), stop = function(t4) {
              c2 && _(c2, "normal", t4);
              return new Result(true, t4);
            }, callFn = function(t4) {
              if (D) {
                h(t4);
                return L ? N(t4[0], t4[1], stop) : N(t4[0], t4[1]);
              }
              return L ? N(t4, stop) : N(t4);
            };
            if (j)
              c2 = t3;
            else {
              if (!(C = k(t3)))
                throw w(d(t3) + " is not iterable");
              if (g(C)) {
                for (x = 0, O = m(t3); O > x; x++)
                  if ((T = callFn(t3[x])) && y(S, T))
                    return T;
                return new Result(false);
              }
              c2 = v(t3, C);
            }
            E = c2.next;
            for (; !(M = u(E, c2)).done; ) {
              try {
                T = callFn(M.value);
              } catch (t4) {
                _(c2, "throw", t4);
              }
              if (typeof T == "object" && T && y(S, T))
                return T;
            }
            return new Result(false);
          };
        }, (t2, r2, o2) => {
          var c = o2(21), l = o2(36), u = o2(16), h = c(c.bind);
          t2.exports = function(t3, r3) {
            l(t3);
            return r3 === void 0 ? t3 : u ? h(t3, r3) : function() {
              return t3.apply(r3, arguments);
            };
          };
        }, (t2, r2, o2) => {
          var c = o2(39), l = o2(85), u = c("iterator"), h = Array.prototype;
          t2.exports = function(t3) {
            return t3 !== void 0 && (l.Array === t3 || h[u] === t3);
          };
        }, (t2) => {
          t2.exports = {};
        }, (t2, r2, o2) => {
          var c = o2(11), l = o2(15), u = o2(36), h = o2(52), d = o2(37), g = o2(87), m = c.TypeError;
          t2.exports = function(t3, r3) {
            var o3 = arguments.length < 2 ? g(t3) : r3;
            if (u(o3))
              return h(l(o3, t3));
            throw m(d(t3) + " is not iterable");
          };
        }, (t2, r2, o2) => {
          var c = o2(88), l = o2(35), u = o2(85), h = o2(39)("iterator");
          t2.exports = function(t3) {
            if (t3 != null)
              return l(t3, h) || l(t3, "@@iterator") || u[c(t3)];
          };
        }, (t2, r2, o2) => {
          var c = o2(11), l = o2(89), u = o2(27), h = o2(22), d = o2(39)("toStringTag"), g = c.Object, m = h(function() {
            return arguments;
          }()) == "Arguments";
          t2.exports = l ? h : function(t3) {
            var r3, o3, c2;
            return t3 === void 0 ? "Undefined" : t3 === null ? "Null" : typeof (o3 = function(t4, r4) {
              try {
                return t4[r4];
              } catch (t5) {
              }
            }(r3 = g(t3), d)) == "string" ? o3 : m ? h(r3) : (c2 = h(r3)) == "Object" && u(r3.callee) ? "Arguments" : c2;
          };
        }, (t2, r2, o2) => {
          var c = {};
          c[o2(39)("toStringTag")] = "z";
          t2.exports = String(c) === "[object z]";
        }, (t2, r2, o2) => {
          var c = o2(15), l = o2(52), u = o2(35);
          t2.exports = function(t3, r3, o3) {
            var h, d;
            l(t3);
            try {
              if (!(h = u(t3, "return"))) {
                if (r3 === "throw")
                  throw o3;
                return o3;
              }
              h = c(h, t3);
            } catch (t4) {
              d = true;
              h = t4;
            }
            if (r3 === "throw")
              throw o3;
            if (d)
              throw h;
            l(h);
            return o3;
          };
        }, (t2, r2, o2) => {
          var c = o2(92);
          t2.exports = function(t3, r3) {
            return t3 === void 0 ? arguments.length < 2 ? "" : r3 : c(t3);
          };
        }, (t2, r2, o2) => {
          var c = o2(11), l = o2(88), u = c.String;
          t2.exports = function(t3) {
            if (l(t3) === "Symbol")
              throw TypeError("Cannot convert a Symbol value to a string");
            return u(t3);
          };
        }, (t2, r2, o2) => {
          var c = o2(14), l = o2(18);
          t2.exports = !c(function() {
            var t3 = Error("a");
            if (!("stack" in t3))
              return true;
            Object.defineProperty(t3, "stack", l(1, 7));
            return t3.stack !== 7;
          });
        }, (t2, r2, o2) => {
          "use strict";
          var c = o2(19), l = o2(95), u = o2(85), h = o2(55), d = o2(50).f, g = o2(96), m = o2(41), y = o2(13), v = "Array Iterator", k = h.set, _ = h.getterFor(v);
          t2.exports = g(Array, "Array", function(t3, r3) {
            k(this, { type: v, target: c(t3), index: 0, kind: r3 });
          }, function() {
            var t3 = _(this), r3 = t3.target, o3 = t3.kind, c2 = t3.index++;
            if (!r3 || c2 >= r3.length) {
              t3.target = void 0;
              return { value: void 0, done: true };
            }
            return o3 == "keys" ? { value: c2, done: false } : o3 == "values" ? { value: r3[c2], done: false } : { value: [c2, r3[c2]], done: false };
          }, "values");
          var w = u.Arguments = u.Array;
          l("keys");
          l("values");
          l("entries");
          if (!m && y && w.name !== "values")
            try {
              d(w, "name", { value: "values" });
            } catch (t3) {
            }
        }, (t2, r2, o2) => {
          var c = o2(39), l = o2(76), u = o2(50), h = c("unscopables"), d = Array.prototype;
          d[h] == null && u.f(d, h, { configurable: true, value: l(null) });
          t2.exports = function(t3) {
            d[h][t3] = true;
          };
        }, (t2, r2, o2) => {
          "use strict";
          var c = o2(10), l = o2(15), u = o2(41), h = o2(59), d = o2(27), g = o2(97), m = o2(72), y = o2(74), v = o2(99), k = o2(49), _ = o2(53), w = o2(39), S = o2(85), C = o2(98), x = h.PROPER, O = h.CONFIGURABLE, T = C.IteratorPrototype, E = C.BUGGY_SAFARI_ITERATORS, M = w("iterator"), R = "keys", D = "values", j = "entries", returnThis = function() {
            return this;
          };
          t2.exports = function(t3, r3, o3, h2, w2, C2, L) {
            g(o3, r3, h2);
            var N, U, H, getIterationMethod = function(t4) {
              if (t4 === w2 && z)
                return z;
              if (!E && t4 in q)
                return q[t4];
              switch (t4) {
                case R:
                  return function keys() {
                    return new o3(this, t4);
                  };
                case D:
                  return function values() {
                    return new o3(this, t4);
                  };
                case j:
                  return function entries() {
                    return new o3(this, t4);
                  };
              }
              return function() {
                return new o3(this);
              };
            }, $ = r3 + " Iterator", X = false, q = t3.prototype, G = q[M] || q["@@iterator"] || w2 && q[w2], z = !E && G || getIterationMethod(w2), W = r3 == "Array" && q.entries || G;
            if (W && (N = m(W.call(new t3()))) !== Object.prototype && N.next) {
              u || m(N) === T || (y ? y(N, T) : d(N[M]) || _(N, M, returnThis));
              v(N, $, true, true);
              u && (S[$] = returnThis);
            }
            if (x && w2 == D && G && G.name !== D)
              if (!u && O)
                k(q, "name", D);
              else {
                X = true;
                z = function values() {
                  return l(G, this);
                };
              }
            if (w2) {
              U = { values: getIterationMethod(D), keys: C2 ? z : getIterationMethod(R), entries: getIterationMethod(j) };
              if (L)
                for (H in U)
                  (E || X || !(H in q)) && _(q, H, U[H]);
              else
                c({ target: r3, proto: true, forced: E || X }, U);
            }
            u && !L || q[M] === z || _(q, M, z, { name: w2 });
            S[r3] = z;
            return U;
          };
        }, (t2, r2, o2) => {
          "use strict";
          var c = o2(98).IteratorPrototype, l = o2(76), u = o2(18), h = o2(99), d = o2(85), returnThis = function() {
            return this;
          };
          t2.exports = function(t3, r3, o3, g) {
            var m = r3 + " Iterator";
            t3.prototype = l(c, { next: u(+!g, o3) });
            h(t3, m, false, true);
            d[m] = returnThis;
            return t3;
          };
        }, (t2, r2, o2) => {
          "use strict";
          var c, l, u, h = o2(14), d = o2(27), g = o2(76), m = o2(72), y = o2(53), v = o2(39), k = o2(41), _ = v("iterator"), w = false;
          [].keys && ("next" in (u = [].keys()) ? (l = m(m(u))) !== Object.prototype && (c = l) : w = true);
          c == null || h(function() {
            var t3 = {};
            return c[_].call(t3) !== t3;
          }) ? c = {} : k && (c = g(c));
          d(c[_]) || y(c, _, function() {
            return this;
          });
          t2.exports = { IteratorPrototype: c, BUGGY_SAFARI_ITERATORS: w };
        }, (t2, r2, o2) => {
          var c = o2(50).f, l = o2(44), u = o2(39)("toStringTag");
          t2.exports = function(t3, r3, o3) {
            t3 && !o3 && (t3 = t3.prototype);
            t3 && !l(t3, u) && c(t3, u, { configurable: true, value: r3 });
          };
        }, (t2, r2, o2) => {
          var c = o2(89), l = o2(53), u = o2(101);
          c || l(Object.prototype, "toString", u, { unsafe: true });
        }, (t2, r2, o2) => {
          "use strict";
          var c = o2(89), l = o2(88);
          t2.exports = c ? {}.toString : function toString() {
            return "[object " + l(this) + "]";
          };
        }, (t2, r2, o2) => {
          o2(103);
          o2(126);
          o2(129);
          o2(130);
          o2(131);
          o2(132);
        }, (t2, r2, o2) => {
          "use strict";
          var c, l, u, h = o2(10), d = o2(41), g = o2(104), m = o2(11), y = o2(15), v = o2(53), k = o2(105), _ = o2(74), w = o2(99), S = o2(106), C = o2(36), x = o2(27), O = o2(26), T = o2(107), E = o2(108), M = o2(111).set, R = o2(116), D = o2(119), j = o2(120), L = o2(121), N = o2(55), U = o2(122), H = o2(123), $ = o2(125), X = "Promise", q = H.CONSTRUCTOR, G = H.REJECTION_EVENT, z = H.SUBCLASSING, W = N.getterFor(X), V = N.set, K = U && U.prototype, Y = U, J = K, Z = m.TypeError, Q = m.document, ee = m.process, te = $.f, re = te, ae = !!(Q && Q.createEvent && m.dispatchEvent), ne = "unhandledrejection", isThenable = function(t3) {
            var r3;
            return !(!O(t3) || !x(r3 = t3.then)) && r3;
          }, callReaction = function(t3, r3) {
            var o3, c2, l2, u2 = r3.value, h2 = r3.state == 1, d2 = h2 ? t3.ok : t3.fail, g2 = t3.resolve, m2 = t3.reject, v2 = t3.domain;
            try {
              if (d2) {
                if (!h2) {
                  r3.rejection === 2 && onHandleUnhandled(r3);
                  r3.rejection = 1;
                }
                if (d2 === true)
                  o3 = u2;
                else {
                  v2 && v2.enter();
                  o3 = d2(u2);
                  if (v2) {
                    v2.exit();
                    l2 = true;
                  }
                }
                o3 === t3.promise ? m2(Z("Promise-chain cycle")) : (c2 = isThenable(o3)) ? y(c2, o3, g2, m2) : g2(o3);
              } else
                m2(u2);
            } catch (t4) {
              v2 && !l2 && v2.exit();
              m2(t4);
            }
          }, notify = function(t3, r3) {
            if (!t3.notified) {
              t3.notified = true;
              R(function() {
                for (var o3, c2 = t3.reactions; o3 = c2.get(); )
                  callReaction(o3, t3);
                t3.notified = false;
                r3 && !t3.rejection && onUnhandled(t3);
              });
            }
          }, dispatchEvent = function(t3, r3, o3) {
            var c2, l2;
            if (ae) {
              (c2 = Q.createEvent("Event")).promise = r3;
              c2.reason = o3;
              c2.initEvent(t3, false, true);
              m.dispatchEvent(c2);
            } else
              c2 = { promise: r3, reason: o3 };
            !G && (l2 = m["on" + t3]) ? l2(c2) : t3 === ne && D("Unhandled promise rejection", o3);
          }, onUnhandled = function(t3) {
            y(M, m, function() {
              var r3, o3 = t3.facade, c2 = t3.value;
              if (isUnhandled(t3)) {
                r3 = j(function() {
                  g ? ee.emit("unhandledRejection", c2, o3) : dispatchEvent(ne, o3, c2);
                });
                t3.rejection = g || isUnhandled(t3) ? 2 : 1;
                if (r3.error)
                  throw r3.value;
              }
            });
          }, isUnhandled = function(t3) {
            return t3.rejection !== 1 && !t3.parent;
          }, onHandleUnhandled = function(t3) {
            y(M, m, function() {
              var r3 = t3.facade;
              g ? ee.emit("rejectionHandled", r3) : dispatchEvent("rejectionhandled", r3, t3.value);
            });
          }, bind = function(t3, r3, o3) {
            return function(c2) {
              t3(r3, c2, o3);
            };
          }, internalReject = function(t3, r3, o3) {
            if (!t3.done) {
              t3.done = true;
              o3 && (t3 = o3);
              t3.value = r3;
              t3.state = 2;
              notify(t3, true);
            }
          }, internalResolve = function(t3, r3, o3) {
            if (!t3.done) {
              t3.done = true;
              o3 && (t3 = o3);
              try {
                if (t3.facade === r3)
                  throw Z("Promise can't be resolved itself");
                var c2 = isThenable(r3);
                if (c2)
                  R(function() {
                    var o4 = { done: false };
                    try {
                      y(c2, r3, bind(internalResolve, o4, t3), bind(internalReject, o4, t3));
                    } catch (r4) {
                      internalReject(o4, r4, t3);
                    }
                  });
                else {
                  t3.value = r3;
                  t3.state = 1;
                  notify(t3, false);
                }
              } catch (r4) {
                internalReject({ done: false }, r4, t3);
              }
            }
          };
          if (q) {
            J = (Y = function Promise2(t3) {
              T(this, J);
              C(t3);
              y(c, this);
              var r3 = W(this);
              try {
                t3(bind(internalResolve, r3), bind(internalReject, r3));
              } catch (t4) {
                internalReject(r3, t4);
              }
            }).prototype;
            (c = function Promise2(t3) {
              V(this, { type: X, done: false, notified: false, parent: false, reactions: new L(), rejection: false, state: 0, value: void 0 });
            }).prototype = k(J, { then: function then(t3, r3) {
              var o3 = W(this), c2 = te(E(this, Y));
              o3.parent = true;
              c2.ok = !x(t3) || t3;
              c2.fail = x(r3) && r3;
              c2.domain = g ? ee.domain : void 0;
              o3.state == 0 ? o3.reactions.add(c2) : R(function() {
                callReaction(c2, o3);
              });
              return c2.promise;
            } });
            l = function() {
              var t3 = new c(), r3 = W(t3);
              this.promise = t3;
              this.resolve = bind(internalResolve, r3);
              this.reject = bind(internalReject, r3);
            };
            $.f = te = function(t3) {
              return t3 === Y || t3 === void 0 ? new l(t3) : re(t3);
            };
            if (!d && x(U) && K !== Object.prototype) {
              u = K.then;
              z || v(K, "then", function then(t3, r3) {
                var o3 = this;
                return new Y(function(t4, r4) {
                  y(u, o3, t4, r4);
                }).then(t3, r3);
              }, { unsafe: true });
              try {
                delete K.constructor;
              } catch (t3) {
              }
              _ && _(K, J);
            }
          }
          h({ global: true, wrap: true, forced: q }, { Promise: Y });
          w(Y, X, false, true);
          S(X);
        }, (t2, r2, o2) => {
          var c = o2(22), l = o2(11);
          t2.exports = c(l.process) == "process";
        }, (t2, r2, o2) => {
          var c = o2(53);
          t2.exports = function(t3, r3, o3) {
            for (var l in r3)
              c(t3, l, r3[l], o3);
            return t3;
          };
        }, (t2, r2, o2) => {
          "use strict";
          var c = o2(29), l = o2(50), u = o2(39), h = o2(13), d = u("species");
          t2.exports = function(t3) {
            var r3 = c(t3), o3 = l.f;
            h && r3 && !r3[d] && o3(r3, d, { configurable: true, get: function() {
              return this;
            } });
          };
        }, (t2, r2, o2) => {
          var c = o2(11), l = o2(30), u = c.TypeError;
          t2.exports = function(t3, r3) {
            if (l(r3, t3))
              return t3;
            throw u("Incorrect invocation");
          };
        }, (t2, r2, o2) => {
          var c = o2(52), l = o2(109), u = o2(39)("species");
          t2.exports = function(t3, r3) {
            var o3, h = c(t3).constructor;
            return h === void 0 || (o3 = c(h)[u]) == null ? r3 : l(o3);
          };
        }, (t2, r2, o2) => {
          var c = o2(11), l = o2(110), u = o2(37), h = c.TypeError;
          t2.exports = function(t3) {
            if (l(t3))
              return t3;
            throw h(u(t3) + " is not a constructor");
          };
        }, (t2, r2, o2) => {
          var c = o2(21), l = o2(14), u = o2(27), h = o2(88), d = o2(29), g = o2(54), noop = function() {
          }, m = [], y = d("Reflect", "construct"), v = /^\s*(?:class|function)\b/, k = c(v.exec), _ = !v.exec(noop), w = function isConstructor(t3) {
            if (!u(t3))
              return false;
            try {
              y(noop, m, t3);
              return true;
            } catch (t4) {
              return false;
            }
          }, S = function isConstructor(t3) {
            if (!u(t3))
              return false;
            switch (h(t3)) {
              case "AsyncFunction":
              case "GeneratorFunction":
              case "AsyncGeneratorFunction":
                return false;
            }
            try {
              return _ || !!k(v, g(t3));
            } catch (t4) {
              return true;
            }
          };
          S.sham = true;
          t2.exports = !y || l(function() {
            var t3;
            return w(w.call) || !w(Object) || !w(function() {
              t3 = true;
            }) || t3;
          }) ? S : w;
        }, (t2, r2, o2) => {
          var c, l, u, h, d = o2(11), g = o2(112), m = o2(83), y = o2(27), v = o2(44), k = o2(14), _ = o2(79), w = o2(113), S = o2(48), C = o2(114), x = o2(115), O = o2(104), T = d.setImmediate, E = d.clearImmediate, M = d.process, R = d.Dispatch, D = d.Function, j = d.MessageChannel, L = d.String, N = 0, U = {}, H = "onreadystatechange";
          try {
            c = d.location;
          } catch (t3) {
          }
          var run = function(t3) {
            if (v(U, t3)) {
              var r3 = U[t3];
              delete U[t3];
              r3();
            }
          }, runner = function(t3) {
            return function() {
              run(t3);
            };
          }, listener = function(t3) {
            run(t3.data);
          }, post = function(t3) {
            d.postMessage(L(t3), c.protocol + "//" + c.host);
          };
          if (!T || !E) {
            T = function setImmediate(t3) {
              C(arguments.length, 1);
              var r3 = y(t3) ? t3 : D(t3), o3 = w(arguments, 1);
              U[++N] = function() {
                g(r3, void 0, o3);
              };
              l(N);
              return N;
            };
            E = function clearImmediate(t3) {
              delete U[t3];
            };
            if (O)
              l = function(t3) {
                M.nextTick(runner(t3));
              };
            else if (R && R.now)
              l = function(t3) {
                R.now(runner(t3));
              };
            else if (j && !x) {
              h = (u = new j()).port2;
              u.port1.onmessage = listener;
              l = m(h.postMessage, h);
            } else if (d.addEventListener && y(d.postMessage) && !d.importScripts && c && c.protocol !== "file:" && !k(post)) {
              l = post;
              d.addEventListener("message", listener, false);
            } else
              l = H in S("script") ? function(t3) {
                _.appendChild(S("script")).onreadystatechange = function() {
                  _.removeChild(this);
                  run(t3);
                };
              } : function(t3) {
                setTimeout(runner(t3), 0);
              };
          }
          t2.exports = { set: T, clear: E };
        }, (t2, r2, o2) => {
          var c = o2(16), l = Function.prototype, u = l.apply, h = l.call;
          t2.exports = typeof Reflect == "object" && Reflect.apply || (c ? h.bind(u) : function() {
            return h.apply(u, arguments);
          });
        }, (t2, r2, o2) => {
          var c = o2(21);
          t2.exports = c([].slice);
        }, (t2, r2, o2) => {
          var c = o2(11).TypeError;
          t2.exports = function(t3, r3) {
            if (t3 < r3)
              throw c("Not enough arguments");
            return t3;
          };
        }, (t2, r2, o2) => {
          var c = o2(34);
          t2.exports = /(?:ipad|iphone|ipod).*applewebkit/i.test(c);
        }, (t2, r2, o2) => {
          var c, l, u, h, d, g, m, y, v = o2(11), k = o2(83), _ = o2(12).f, w = o2(111).set, S = o2(115), C = o2(117), x = o2(118), O = o2(104), T = v.MutationObserver || v.WebKitMutationObserver, E = v.document, M = v.process, R = v.Promise, D = _(v, "queueMicrotask"), j = D && D.value;
          if (!j) {
            c = function() {
              var t3, r3;
              O && (t3 = M.domain) && t3.exit();
              for (; l; ) {
                r3 = l.fn;
                l = l.next;
                try {
                  r3();
                } catch (t4) {
                  l ? h() : u = void 0;
                  throw t4;
                }
              }
              u = void 0;
              t3 && t3.enter();
            };
            if (S || O || x || !T || !E)
              if (!C && R && R.resolve) {
                (m = R.resolve(void 0)).constructor = R;
                y = k(m.then, m);
                h = function() {
                  y(c);
                };
              } else if (O)
                h = function() {
                  M.nextTick(c);
                };
              else {
                w = k(w, v);
                h = function() {
                  w(c);
                };
              }
            else {
              d = true;
              g = E.createTextNode("");
              new T(c).observe(g, { characterData: true });
              h = function() {
                g.data = d = !d;
              };
            }
          }
          t2.exports = j || function(t3) {
            var r3 = { fn: t3, next: void 0 };
            u && (u.next = r3);
            if (!l) {
              l = r3;
              h();
            }
            u = r3;
          };
        }, (t2, r2, o2) => {
          var c = o2(34), l = o2(11);
          t2.exports = /ipad|iphone|ipod/i.test(c) && l.Pebble !== void 0;
        }, (t2, r2, o2) => {
          var c = o2(34);
          t2.exports = /web0s(?!.*chrome)/i.test(c);
        }, (t2, r2, o2) => {
          var c = o2(11);
          t2.exports = function(t3, r3) {
            var o3 = c.console;
            o3 && o3.error && (arguments.length == 1 ? o3.error(t3) : o3.error(t3, r3));
          };
        }, (t2) => {
          t2.exports = function(t3) {
            try {
              return { error: false, value: t3() };
            } catch (t4) {
              return { error: true, value: t4 };
            }
          };
        }, (t2) => {
          var Queue = function() {
            this.head = null;
            this.tail = null;
          };
          Queue.prototype = { add: function(t3) {
            var r2 = { item: t3, next: null };
            this.head ? this.tail.next = r2 : this.head = r2;
            this.tail = r2;
          }, get: function() {
            var t3 = this.head;
            if (t3) {
              this.head = t3.next;
              this.tail === t3 && (this.tail = null);
              return t3.item;
            }
          } };
          t2.exports = Queue;
        }, (t2, r2, o2) => {
          var c = o2(11);
          t2.exports = c.Promise;
        }, (t2, r2, o2) => {
          var c = o2(11), l = o2(122), u = o2(27), h = o2(71), d = o2(54), g = o2(39), m = o2(124), y = o2(41), v = o2(33), k = l && l.prototype, _ = g("species"), w = false, S = u(c.PromiseRejectionEvent), C = h("Promise", function() {
            var t3 = d(l), r3 = t3 !== String(l);
            if (!r3 && v === 66)
              return true;
            if (y && (!k.catch || !k.finally))
              return true;
            if (v >= 51 && /native code/.test(t3))
              return false;
            var o3 = new l(function(t4) {
              t4(1);
            }), FakePromise = function(t4) {
              t4(function() {
              }, function() {
              });
            };
            (o3.constructor = {})[_] = FakePromise;
            return !(w = o3.then(function() {
            }) instanceof FakePromise) || !r3 && m && !S;
          });
          t2.exports = { CONSTRUCTOR: C, REJECTION_EVENT: S, SUBCLASSING: w };
        }, (t2) => {
          t2.exports = typeof window == "object" && typeof Deno != "object";
        }, (t2, r2, o2) => {
          "use strict";
          var c = o2(36), PromiseCapability = function(t3) {
            var r3, o3;
            this.promise = new t3(function(t4, c2) {
              if (r3 !== void 0 || o3 !== void 0)
                throw TypeError("Bad Promise constructor");
              r3 = t4;
              o3 = c2;
            });
            this.resolve = c(r3);
            this.reject = c(o3);
          };
          t2.exports.f = function(t3) {
            return new PromiseCapability(t3);
          };
        }, (t2, r2, o2) => {
          "use strict";
          var c = o2(10), l = o2(15), u = o2(36), h = o2(125), d = o2(120), g = o2(82);
          c({ target: "Promise", stat: true, forced: o2(127) }, { all: function all(t3) {
            var r3 = this, o3 = h.f(r3), c2 = o3.resolve, m = o3.reject, y = d(function() {
              var o4 = u(r3.resolve), h2 = [], d2 = 0, y2 = 1;
              g(t3, function(t4) {
                var u2 = d2++, g2 = false;
                y2++;
                l(o4, r3, t4).then(function(t5) {
                  if (!g2) {
                    g2 = true;
                    h2[u2] = t5;
                    --y2 || c2(h2);
                  }
                }, m);
              });
              --y2 || c2(h2);
            });
            y.error && m(y.value);
            return o3.promise;
          } });
        }, (t2, r2, o2) => {
          var c = o2(122), l = o2(128), u = o2(123).CONSTRUCTOR;
          t2.exports = u || !l(function(t3) {
            c.all(t3).then(void 0, function() {
            });
          });
        }, (t2, r2, o2) => {
          var c = o2(39)("iterator"), l = false;
          try {
            var u = 0, h = { next: function() {
              return { done: !!u++ };
            }, return: function() {
              l = true;
            } };
            h[c] = function() {
              return this;
            };
            Array.from(h, function() {
              throw 2;
            });
          } catch (t3) {
          }
          t2.exports = function(t3, r3) {
            if (!r3 && !l)
              return false;
            var o3 = false;
            try {
              var u2 = {};
              u2[c] = function() {
                return { next: function() {
                  return { done: o3 = true };
                } };
              };
              t3(u2);
            } catch (t4) {
            }
            return o3;
          };
        }, (t2, r2, o2) => {
          "use strict";
          var c = o2(10), l = o2(41), u = o2(123).CONSTRUCTOR, h = o2(122), d = o2(29), g = o2(27), m = o2(53), y = h && h.prototype;
          c({ target: "Promise", proto: true, forced: u, real: true }, { catch: function(t3) {
            return this.then(void 0, t3);
          } });
          if (!l && g(h)) {
            var v = d("Promise").prototype.catch;
            y.catch !== v && m(y, "catch", v, { unsafe: true });
          }
        }, (t2, r2, o2) => {
          "use strict";
          var c = o2(10), l = o2(15), u = o2(36), h = o2(125), d = o2(120), g = o2(82);
          c({ target: "Promise", stat: true, forced: o2(127) }, { race: function race(t3) {
            var r3 = this, o3 = h.f(r3), c2 = o3.reject, m = d(function() {
              var h2 = u(r3.resolve);
              g(t3, function(t4) {
                l(h2, r3, t4).then(o3.resolve, c2);
              });
            });
            m.error && c2(m.value);
            return o3.promise;
          } });
        }, (t2, r2, o2) => {
          "use strict";
          var c = o2(10), l = o2(15), u = o2(125);
          c({ target: "Promise", stat: true, forced: o2(123).CONSTRUCTOR }, { reject: function reject(t3) {
            var r3 = u.f(this);
            l(r3.reject, void 0, t3);
            return r3.promise;
          } });
        }, (t2, r2, o2) => {
          "use strict";
          var c = o2(10), l = o2(29), u = o2(41), h = o2(122), d = o2(123).CONSTRUCTOR, g = o2(133), m = l("Promise"), y = u && !d;
          c({ target: "Promise", stat: true, forced: u || d }, { resolve: function resolve(t3) {
            return g(y && this === m ? h : this, t3);
          } });
        }, (t2, r2, o2) => {
          var c = o2(52), l = o2(26), u = o2(125);
          t2.exports = function(t3, r3) {
            c(t3);
            if (l(r3) && r3.constructor === t3)
              return r3;
            var o3 = u.f(t3);
            (0, o3.resolve)(r3);
            return o3.promise;
          };
        }, (t2, r2, o2) => {
          "use strict";
          var c = o2(10), l = o2(15), u = o2(36), h = o2(125), d = o2(120), g = o2(82);
          c({ target: "Promise", stat: true }, { allSettled: function allSettled(t3) {
            var r3 = this, o3 = h.f(r3), c2 = o3.resolve, m = o3.reject, y = d(function() {
              var o4 = u(r3.resolve), h2 = [], d2 = 0, m2 = 1;
              g(t3, function(t4) {
                var u2 = d2++, g2 = false;
                m2++;
                l(o4, r3, t4).then(function(t5) {
                  if (!g2) {
                    g2 = true;
                    h2[u2] = { status: "fulfilled", value: t5 };
                    --m2 || c2(h2);
                  }
                }, function(t5) {
                  if (!g2) {
                    g2 = true;
                    h2[u2] = { status: "rejected", reason: t5 };
                    --m2 || c2(h2);
                  }
                });
              });
              --m2 || c2(h2);
            });
            y.error && m(y.value);
            return o3.promise;
          } });
        }, (t2, r2, o2) => {
          "use strict";
          var c = o2(10), l = o2(15), u = o2(36), h = o2(29), d = o2(125), g = o2(120), m = o2(82), y = "No one promise resolved";
          c({ target: "Promise", stat: true }, { any: function any(t3) {
            var r3 = this, o3 = h("AggregateError"), c2 = d.f(r3), v = c2.resolve, k = c2.reject, _ = g(function() {
              var c3 = u(r3.resolve), h2 = [], d2 = 0, g2 = 1, _2 = false;
              m(t3, function(t4) {
                var u2 = d2++, m2 = false;
                g2++;
                l(c3, r3, t4).then(function(t5) {
                  if (!m2 && !_2) {
                    _2 = true;
                    v(t5);
                  }
                }, function(t5) {
                  if (!m2 && !_2) {
                    m2 = true;
                    h2[u2] = t5;
                    --g2 || k(new o3(h2, y));
                  }
                });
              });
              --g2 || k(new o3(h2, y));
            });
            _.error && k(_.value);
            return c2.promise;
          } });
        }, (t2, r2, o2) => {
          "use strict";
          var c = o2(10), l = o2(41), u = o2(122), h = o2(14), d = o2(29), g = o2(27), m = o2(108), y = o2(133), v = o2(53), k = u && u.prototype;
          c({ target: "Promise", proto: true, real: true, forced: !!u && h(function() {
            k.finally.call({ then: function() {
            } }, function() {
            });
          }) }, { finally: function(t3) {
            var r3 = m(this, d("Promise")), o3 = g(t3);
            return this.then(o3 ? function(o4) {
              return y(r3, t3()).then(function() {
                return o4;
              });
            } : t3, o3 ? function(o4) {
              return y(r3, t3()).then(function() {
                throw o4;
              });
            } : t3);
          } });
          if (!l && g(u)) {
            var _ = d("Promise").prototype.finally;
            k.finally !== _ && v(k, "finally", _, { unsafe: true });
          }
        }, (t2, r2, o2) => {
          "use strict";
          var c = o2(138).charAt, l = o2(92), u = o2(55), h = o2(96), d = "String Iterator", g = u.set, m = u.getterFor(d);
          h(String, "String", function(t3) {
            g(this, { type: d, string: l(t3), index: 0 });
          }, function next() {
            var t3, r3 = m(this), o3 = r3.string, l2 = r3.index;
            if (l2 >= o3.length)
              return { value: void 0, done: true };
            t3 = c(o3, l2);
            r3.index += t3.length;
            return { value: t3, done: false };
          });
        }, (t2, r2, o2) => {
          var c = o2(21), l = o2(66), u = o2(92), h = o2(23), d = c("".charAt), g = c("".charCodeAt), m = c("".slice), createMethod = function(t3) {
            return function(r3, o3) {
              var c2, y, v = u(h(r3)), k = l(o3), _ = v.length;
              return k < 0 || k >= _ ? t3 ? "" : void 0 : (c2 = g(v, k)) < 55296 || c2 > 56319 || k + 1 === _ || (y = g(v, k + 1)) < 56320 || y > 57343 ? t3 ? d(v, k) : c2 : t3 ? m(v, k, k + 2) : y - 56320 + (c2 - 55296 << 10) + 65536;
            };
          };
          t2.exports = { codeAt: createMethod(false), charAt: createMethod(true) };
        }, (t2, r2, o2) => {
          var c = o2(11);
          t2.exports = c;
        }, (t2, r2, o2) => {
          o2(94);
          o2(100);
          o2(141);
          o2(153);
          o2(155);
          var c = o2(139);
          t2.exports = c.structuredClone;
        }, (t2, r2, o2) => {
          o2(142);
        }, (t2, r2, o2) => {
          "use strict";
          o2(143)("Map", function(t3) {
            return function Map2() {
              return t3(this, arguments.length ? arguments[0] : void 0);
            };
          }, o2(152));
        }, (t2, r2, o2) => {
          "use strict";
          var c = o2(10), l = o2(11), u = o2(21), h = o2(71), d = o2(53), g = o2(144), m = o2(82), y = o2(107), v = o2(27), k = o2(26), _ = o2(14), w = o2(128), S = o2(99), C = o2(151);
          t2.exports = function(t3, r3, o3) {
            var x = t3.indexOf("Map") !== -1, O = t3.indexOf("Weak") !== -1, T = x ? "set" : "add", E = l[t3], M = E && E.prototype, R = E, D = {}, fixMethod = function(t4) {
              var r4 = u(M[t4]);
              d(M, t4, t4 == "add" ? function add(t5) {
                r4(this, t5 === 0 ? 0 : t5);
                return this;
              } : t4 == "delete" ? function(t5) {
                return !(O && !k(t5)) && r4(this, t5 === 0 ? 0 : t5);
              } : t4 == "get" ? function get(t5) {
                return O && !k(t5) ? void 0 : r4(this, t5 === 0 ? 0 : t5);
              } : t4 == "has" ? function has(t5) {
                return !(O && !k(t5)) && r4(this, t5 === 0 ? 0 : t5);
              } : function set(t5, o4) {
                r4(this, t5 === 0 ? 0 : t5, o4);
                return this;
              });
            };
            if (h(t3, !v(E) || !(O || M.forEach && !_(function() {
              new E().entries().next();
            })))) {
              R = o3.getConstructor(r3, t3, x, T);
              g.enable();
            } else if (h(t3, true)) {
              var j = new R(), L = j[T](O ? {} : -0, 1) != j, N = _(function() {
                j.has(1);
              }), U = w(function(t4) {
                new E(t4);
              }), H = !O && _(function() {
                for (var t4 = new E(), r4 = 5; r4--; )
                  t4[T](r4, r4);
                return !t4.has(-0);
              });
              if (!U) {
                (R = r3(function(t4, r4) {
                  y(t4, M);
                  var o4 = C(new E(), t4, R);
                  r4 != null && m(r4, o4[T], { that: o4, AS_ENTRIES: x });
                  return o4;
                })).prototype = M;
                M.constructor = R;
              }
              if (N || H) {
                fixMethod("delete");
                fixMethod("has");
                x && fixMethod("get");
              }
              (H || L) && fixMethod(T);
              O && M.clear && delete M.clear;
            }
            D[t3] = R;
            c({ global: true, forced: R != E }, D);
            S(R, t3);
            O || o3.setStrong(R, t3, x);
            return R;
          };
        }, (t2, r2, o2) => {
          var c = o2(10), l = o2(21), u = o2(58), h = o2(26), d = o2(44), g = o2(50).f, m = o2(62), y = o2(145), v = o2(148), k = o2(46), _ = o2(150), w = false, S = k("meta"), C = 0, setMetadata = function(t3) {
            g(t3, S, { value: { objectID: "O" + C++, weakData: {} } });
          }, x = t2.exports = { enable: function() {
            x.enable = function() {
            };
            w = true;
            var t3 = m.f, r3 = l([].splice), o3 = {};
            o3[S] = 1;
            if (t3(o3).length) {
              m.f = function(o4) {
                for (var c2 = t3(o4), l2 = 0, u2 = c2.length; l2 < u2; l2++)
                  if (c2[l2] === S) {
                    r3(c2, l2, 1);
                    break;
                  }
                return c2;
              };
              c({ target: "Object", stat: true, forced: true }, { getOwnPropertyNames: y.f });
            }
          }, fastKey: function(t3, r3) {
            if (!h(t3))
              return typeof t3 == "symbol" ? t3 : (typeof t3 == "string" ? "S" : "P") + t3;
            if (!d(t3, S)) {
              if (!v(t3))
                return "F";
              if (!r3)
                return "E";
              setMetadata(t3);
            }
            return t3[S].objectID;
          }, getWeakData: function(t3, r3) {
            if (!d(t3, S)) {
              if (!v(t3))
                return true;
              if (!r3)
                return false;
              setMetadata(t3);
            }
            return t3[S].weakData;
          }, onFreeze: function(t3) {
            _ && w && v(t3) && !d(t3, S) && setMetadata(t3);
            return t3;
          } };
          u[S] = true;
        }, (t2, r2, o2) => {
          var c = o2(22), l = o2(19), u = o2(62).f, h = o2(146), d = typeof window == "object" && window && Object.getOwnPropertyNames ? Object.getOwnPropertyNames(window) : [];
          t2.exports.f = function getOwnPropertyNames(t3) {
            return d && c(t3) == "Window" ? function(t4) {
              try {
                return u(t4);
              } catch (t5) {
                return h(d);
              }
            }(t3) : u(l(t3));
          };
        }, (t2, r2, o2) => {
          var c = o2(11), l = o2(65), u = o2(67), h = o2(147), d = c.Array, g = Math.max;
          t2.exports = function(t3, r3, o3) {
            for (var c2 = u(t3), m = l(r3, c2), y = l(o3 === void 0 ? c2 : o3, c2), v = d(g(y - m, 0)), k = 0; m < y; m++, k++)
              h(v, k, t3[m]);
            v.length = k;
            return v;
          };
        }, (t2, r2, o2) => {
          "use strict";
          var c = o2(24), l = o2(50), u = o2(18);
          t2.exports = function(t3, r3, o3) {
            var h = c(r3);
            h in t3 ? l.f(t3, h, u(0, o3)) : t3[h] = o3;
          };
        }, (t2, r2, o2) => {
          var c = o2(14), l = o2(26), u = o2(22), h = o2(149), d = Object.isExtensible, g = c(function() {
            d(1);
          });
          t2.exports = g || h ? function isExtensible(t3) {
            return !!l(t3) && ((!h || u(t3) != "ArrayBuffer") && (!d || d(t3)));
          } : d;
        }, (t2, r2, o2) => {
          var c = o2(14);
          t2.exports = c(function() {
            if (typeof ArrayBuffer == "function") {
              var t3 = new ArrayBuffer(8);
              Object.isExtensible(t3) && Object.defineProperty(t3, "a", { value: 8 });
            }
          });
        }, (t2, r2, o2) => {
          var c = o2(14);
          t2.exports = !c(function() {
            return Object.isExtensible(Object.preventExtensions({}));
          });
        }, (t2, r2, o2) => {
          var c = o2(27), l = o2(26), u = o2(74);
          t2.exports = function(t3, r3, o3) {
            var h, d;
            u && c(h = r3.constructor) && h !== o3 && l(d = h.prototype) && d !== o3.prototype && u(t3, d);
            return t3;
          };
        }, (t2, r2, o2) => {
          "use strict";
          var c = o2(50).f, l = o2(76), u = o2(105), h = o2(83), d = o2(107), g = o2(82), m = o2(96), y = o2(106), v = o2(13), k = o2(144).fastKey, _ = o2(55), w = _.set, S = _.getterFor;
          t2.exports = { getConstructor: function(t3, r3, o3, m2) {
            var y2 = t3(function(t4, c2) {
              d(t4, _2);
              w(t4, { type: r3, index: l(null), first: void 0, last: void 0, size: 0 });
              v || (t4.size = 0);
              c2 != null && g(c2, t4[m2], { that: t4, AS_ENTRIES: o3 });
            }), _2 = y2.prototype, C = S(r3), define2 = function(t4, r4, o4) {
              var c2, l2, u2 = C(t4), h2 = getEntry(t4, r4);
              if (h2)
                h2.value = o4;
              else {
                u2.last = h2 = { index: l2 = k(r4, true), key: r4, value: o4, previous: c2 = u2.last, next: void 0, removed: false };
                u2.first || (u2.first = h2);
                c2 && (c2.next = h2);
                v ? u2.size++ : t4.size++;
                l2 !== "F" && (u2.index[l2] = h2);
              }
              return t4;
            }, getEntry = function(t4, r4) {
              var o4, c2 = C(t4), l2 = k(r4);
              if (l2 !== "F")
                return c2.index[l2];
              for (o4 = c2.first; o4; o4 = o4.next)
                if (o4.key == r4)
                  return o4;
            };
            u(_2, { clear: function clear() {
              for (var t4 = C(this), r4 = t4.index, o4 = t4.first; o4; ) {
                o4.removed = true;
                o4.previous && (o4.previous = o4.previous.next = void 0);
                delete r4[o4.index];
                o4 = o4.next;
              }
              t4.first = t4.last = void 0;
              v ? t4.size = 0 : this.size = 0;
            }, delete: function(t4) {
              var r4 = this, o4 = C(r4), c2 = getEntry(r4, t4);
              if (c2) {
                var l2 = c2.next, u2 = c2.previous;
                delete o4.index[c2.index];
                c2.removed = true;
                u2 && (u2.next = l2);
                l2 && (l2.previous = u2);
                o4.first == c2 && (o4.first = l2);
                o4.last == c2 && (o4.last = u2);
                v ? o4.size-- : r4.size--;
              }
              return !!c2;
            }, forEach: function forEach(t4) {
              for (var r4, o4 = C(this), c2 = h(t4, arguments.length > 1 ? arguments[1] : void 0); r4 = r4 ? r4.next : o4.first; ) {
                c2(r4.value, r4.key, this);
                for (; r4 && r4.removed; )
                  r4 = r4.previous;
              }
            }, has: function has(t4) {
              return !!getEntry(this, t4);
            } });
            u(_2, o3 ? { get: function get(t4) {
              var r4 = getEntry(this, t4);
              return r4 && r4.value;
            }, set: function set(t4, r4) {
              return define2(this, t4 === 0 ? 0 : t4, r4);
            } } : { add: function add(t4) {
              return define2(this, t4 = t4 === 0 ? 0 : t4, t4);
            } });
            v && c(_2, "size", { get: function() {
              return C(this).size;
            } });
            return y2;
          }, setStrong: function(t3, r3, o3) {
            var c2 = r3 + " Iterator", l2 = S(r3), u2 = S(c2);
            m(t3, r3, function(t4, r4) {
              w(this, { type: c2, target: t4, state: l2(t4), kind: r4, last: void 0 });
            }, function() {
              for (var t4 = u2(this), r4 = t4.kind, o4 = t4.last; o4 && o4.removed; )
                o4 = o4.previous;
              if (!t4.target || !(t4.last = o4 = o4 ? o4.next : t4.state.first)) {
                t4.target = void 0;
                return { value: void 0, done: true };
              }
              return r4 == "keys" ? { value: o4.key, done: false } : r4 == "values" ? { value: o4.value, done: false } : { value: [o4.key, o4.value], done: false };
            }, o3 ? "entries" : "values", !o3, true);
            y(r3);
          } };
        }, (t2, r2, o2) => {
          o2(154);
        }, (t2, r2, o2) => {
          "use strict";
          o2(143)("Set", function(t3) {
            return function Set2() {
              return t3(this, arguments.length ? arguments[0] : void 0);
            };
          }, o2(152));
        }, (t2, r2, o2) => {
          var c, l = o2(41), u = o2(10), h = o2(11), d = o2(29), g = o2(21), m = o2(14), y = o2(46), v = o2(27), k = o2(110), _ = o2(26), w = o2(28), S = o2(82), C = o2(52), x = o2(88), O = o2(44), T = o2(147), E = o2(49), M = o2(67), R = o2(114), D = o2(156), j = o2(93), L = h.Object, N = h.Date, U = h.Error, H = h.EvalError, $ = h.RangeError, X = h.ReferenceError, q = h.SyntaxError, G = h.TypeError, z = h.URIError, W = h.PerformanceMark, V = h.WebAssembly, K = V && V.CompileError || U, Y = V && V.LinkError || U, J = V && V.RuntimeError || U, Z = d("DOMException"), Q = d("Set"), ee = d("Map"), te = ee.prototype, re = g(te.has), ae = g(te.get), ne = g(te.set), ie = g(Q.prototype.add), oe = d("Object", "keys"), se = g([].push), ce = g(true.valueOf), le = g(1 .valueOf), ue = g("".valueOf), fe = g(N.prototype.getTime), he = y("structuredClone"), de = "DataCloneError", pe = "Transferring", checkBasicSemantic = function(t3) {
            return !m(function() {
              var r3 = new h.Set([7]), o3 = t3(r3), c2 = t3(L(7));
              return o3 == r3 || !o3.has(7) || typeof c2 != "object" || c2 != 7;
            }) && t3;
          }, ge = h.structuredClone, me = l || !(c = ge, !m(function() {
            var t3 = c(new h.AggregateError([1], he, { cause: 3 }));
            return t3.name != "AggregateError" || t3.errors[0] != 1 || t3.message != he || t3.cause != 3;
          }) && c), ye = !ge && checkBasicSemantic(function(t3) {
            return new W(he, { detail: t3 }).detail;
          }), ve = checkBasicSemantic(ge) || ye, throwUncloneable = function(t3) {
            throw new Z("Uncloneable type: " + t3, de);
          }, throwUnpolyfillable = function(t3, r3) {
            throw new Z((r3 || "Cloning") + " of " + t3 + " cannot be properly polyfilled in this engine", de);
          }, structuredCloneInternal = function(t3, r3) {
            w(t3) && throwUncloneable("Symbol");
            if (!_(t3))
              return t3;
            if (r3) {
              if (re(r3, t3))
                return ae(r3, t3);
            } else
              r3 = new ee();
            var o3, c2, l2, u2, g2, m2, y2, S2, C2, R2, W2 = x(t3), V2 = false;
            switch (W2) {
              case "Array":
                l2 = [];
                V2 = true;
                break;
              case "Object":
                l2 = {};
                V2 = true;
                break;
              case "Map":
                l2 = new ee();
                V2 = true;
                break;
              case "Set":
                l2 = new Q();
                V2 = true;
                break;
              case "RegExp":
                l2 = new RegExp(t3.source, D(t3));
                break;
              case "Error":
                switch (c2 = t3.name) {
                  case "AggregateError":
                    l2 = d("AggregateError")([]);
                    break;
                  case "EvalError":
                    l2 = H();
                    break;
                  case "RangeError":
                    l2 = $();
                    break;
                  case "ReferenceError":
                    l2 = X();
                    break;
                  case "SyntaxError":
                    l2 = q();
                    break;
                  case "TypeError":
                    l2 = G();
                    break;
                  case "URIError":
                    l2 = z();
                    break;
                  case "CompileError":
                    l2 = K();
                    break;
                  case "LinkError":
                    l2 = Y();
                    break;
                  case "RuntimeError":
                    l2 = J();
                    break;
                  default:
                    l2 = U();
                }
                V2 = true;
                break;
              case "DOMException":
                l2 = new Z(t3.message, t3.name);
                V2 = true;
                break;
              case "DataView":
              case "Int8Array":
              case "Uint8Array":
              case "Uint8ClampedArray":
              case "Int16Array":
              case "Uint16Array":
              case "Int32Array":
              case "Uint32Array":
              case "Float32Array":
              case "Float64Array":
              case "BigInt64Array":
              case "BigUint64Array":
                o3 = h[W2];
                _(o3) || throwUnpolyfillable(W2);
                l2 = new o3(structuredCloneInternal(t3.buffer, r3), t3.byteOffset, W2 === "DataView" ? t3.byteLength : t3.length);
                break;
              case "DOMQuad":
                try {
                  l2 = new DOMQuad(structuredCloneInternal(t3.p1, r3), structuredCloneInternal(t3.p2, r3), structuredCloneInternal(t3.p3, r3), structuredCloneInternal(t3.p4, r3));
                } catch (r4) {
                  ve ? l2 = ve(t3) : throwUnpolyfillable(W2);
                }
                break;
              case "FileList":
                o3 = h.DataTransfer;
                if (k(o3)) {
                  u2 = new o3();
                  for (g2 = 0, m2 = M(t3); g2 < m2; g2++)
                    u2.items.add(structuredCloneInternal(t3[g2], r3));
                  l2 = u2.files;
                } else
                  ve ? l2 = ve(t3) : throwUnpolyfillable(W2);
                break;
              case "ImageData":
                try {
                  l2 = new ImageData(structuredCloneInternal(t3.data, r3), t3.width, t3.height, { colorSpace: t3.colorSpace });
                } catch (r4) {
                  ve ? l2 = ve(t3) : throwUnpolyfillable(W2);
                }
                break;
              default:
                if (ve)
                  l2 = ve(t3);
                else
                  switch (W2) {
                    case "BigInt":
                      l2 = L(t3.valueOf());
                      break;
                    case "Boolean":
                      l2 = L(ce(t3));
                      break;
                    case "Number":
                      l2 = L(le(t3));
                      break;
                    case "String":
                      l2 = L(ue(t3));
                      break;
                    case "Date":
                      l2 = new N(fe(t3));
                      break;
                    case "ArrayBuffer":
                      (o3 = h.DataView) || typeof t3.slice == "function" || throwUnpolyfillable(W2);
                      try {
                        if (typeof t3.slice == "function")
                          l2 = t3.slice(0);
                        else {
                          m2 = t3.byteLength;
                          l2 = new ArrayBuffer(m2);
                          C2 = new o3(t3);
                          R2 = new o3(l2);
                          for (g2 = 0; g2 < m2; g2++)
                            R2.setUint8(g2, C2.getUint8(g2));
                        }
                      } catch (t4) {
                        throw new Z("ArrayBuffer is detached", de);
                      }
                      break;
                    case "SharedArrayBuffer":
                      l2 = t3;
                      break;
                    case "Blob":
                      try {
                        l2 = t3.slice(0, t3.size, t3.type);
                      } catch (t4) {
                        throwUnpolyfillable(W2);
                      }
                      break;
                    case "DOMPoint":
                    case "DOMPointReadOnly":
                      o3 = h[W2];
                      try {
                        l2 = o3.fromPoint ? o3.fromPoint(t3) : new o3(t3.x, t3.y, t3.z, t3.w);
                      } catch (t4) {
                        throwUnpolyfillable(W2);
                      }
                      break;
                    case "DOMRect":
                    case "DOMRectReadOnly":
                      o3 = h[W2];
                      try {
                        l2 = o3.fromRect ? o3.fromRect(t3) : new o3(t3.x, t3.y, t3.width, t3.height);
                      } catch (t4) {
                        throwUnpolyfillable(W2);
                      }
                      break;
                    case "DOMMatrix":
                    case "DOMMatrixReadOnly":
                      o3 = h[W2];
                      try {
                        l2 = o3.fromMatrix ? o3.fromMatrix(t3) : new o3(t3);
                      } catch (t4) {
                        throwUnpolyfillable(W2);
                      }
                      break;
                    case "AudioData":
                    case "VideoFrame":
                      v(t3.clone) || throwUnpolyfillable(W2);
                      try {
                        l2 = t3.clone();
                      } catch (t4) {
                        throwUncloneable(W2);
                      }
                      break;
                    case "File":
                      try {
                        l2 = new File([t3], t3.name, t3);
                      } catch (t4) {
                        throwUnpolyfillable(W2);
                      }
                      break;
                    case "CryptoKey":
                    case "GPUCompilationMessage":
                    case "GPUCompilationInfo":
                    case "ImageBitmap":
                    case "RTCCertificate":
                    case "WebAssembly.Module":
                      throwUnpolyfillable(W2);
                    default:
                      throwUncloneable(W2);
                  }
            }
            ne(r3, t3, l2);
            if (V2)
              switch (W2) {
                case "Array":
                case "Object":
                  y2 = oe(t3);
                  for (g2 = 0, m2 = M(y2); g2 < m2; g2++) {
                    S2 = y2[g2];
                    T(l2, S2, structuredCloneInternal(t3[S2], r3));
                  }
                  break;
                case "Map":
                  t3.forEach(function(t4, o4) {
                    ne(l2, structuredCloneInternal(o4, r3), structuredCloneInternal(t4, r3));
                  });
                  break;
                case "Set":
                  t3.forEach(function(t4) {
                    ie(l2, structuredCloneInternal(t4, r3));
                  });
                  break;
                case "Error":
                  E(l2, "message", structuredCloneInternal(t3.message, r3));
                  O(t3, "cause") && E(l2, "cause", structuredCloneInternal(t3.cause, r3));
                  c2 == "AggregateError" && (l2.errors = structuredCloneInternal(t3.errors, r3));
                case "DOMException":
                  j && E(l2, "stack", structuredCloneInternal(t3.stack, r3));
              }
            return l2;
          }, be = ge && !m(function() {
            var t3 = new ArrayBuffer(8), r3 = ge(t3, { transfer: [t3] });
            return t3.byteLength != 0 || r3.byteLength != 8;
          }), tryToTransfer = function(t3, r3) {
            if (!_(t3))
              throw G("Transfer option cannot be converted to a sequence");
            var o3 = [];
            S(t3, function(t4) {
              se(o3, C(t4));
            });
            var c2, l2, u2, d2, g2, m2, y2 = 0, w2 = M(o3);
            if (be) {
              d2 = ge(o3, { transfer: o3 });
              for (; y2 < w2; )
                ne(r3, o3[y2], d2[y2++]);
            } else
              for (; y2 < w2; ) {
                c2 = o3[y2++];
                if (re(r3, c2))
                  throw new Z("Duplicate transferable", de);
                switch (l2 = x(c2)) {
                  case "ImageBitmap":
                    u2 = h.OffscreenCanvas;
                    k(u2) || throwUnpolyfillable(l2, pe);
                    try {
                      (m2 = new u2(c2.width, c2.height)).getContext("bitmaprenderer").transferFromImageBitmap(c2);
                      g2 = m2.transferToImageBitmap();
                    } catch (t4) {
                    }
                    break;
                  case "AudioData":
                  case "VideoFrame":
                    v(c2.clone) && v(c2.close) || throwUnpolyfillable(l2, pe);
                    try {
                      g2 = c2.clone();
                      c2.close();
                    } catch (t4) {
                    }
                    break;
                  case "ArrayBuffer":
                  case "MessagePort":
                  case "OffscreenCanvas":
                  case "ReadableStream":
                  case "TransformStream":
                  case "WritableStream":
                    throwUnpolyfillable(l2, pe);
                }
                if (g2 === void 0)
                  throw new Z("This object cannot be transferred: " + l2, de);
                ne(r3, c2, g2);
              }
          };
          u({ global: true, enumerable: true, sham: !be, forced: me }, { structuredClone: function structuredClone(t3) {
            var r3, o3 = R(arguments.length, 1) > 1 && arguments[1] != null ? C(arguments[1]) : void 0, c2 = o3 ? o3.transfer : void 0;
            if (c2 !== void 0) {
              r3 = new ee();
              tryToTransfer(c2, r3);
            }
            return structuredCloneInternal(t3, r3);
          } });
        }, (t2, r2, o2) => {
          var c = o2(15), l = o2(44), u = o2(30), h = o2(157), d = RegExp.prototype;
          t2.exports = function(t3) {
            var r3 = t3.flags;
            return r3 !== void 0 || "flags" in d || l(t3, "flags") || !u(d, t3) ? r3 : c(h, t3);
          };
        }, (t2, r2, o2) => {
          "use strict";
          var c = o2(52);
          t2.exports = function() {
            var t3 = c(this), r3 = "";
            t3.hasIndices && (r3 += "d");
            t3.global && (r3 += "g");
            t3.ignoreCase && (r3 += "i");
            t3.multiline && (r3 += "m");
            t3.dotAll && (r3 += "s");
            t3.unicode && (r3 += "u");
            t3.sticky && (r3 += "y");
            return r3;
          };
        }, (t2, r2, o2) => {
          "use strict";
          Object.defineProperty(r2, "__esModule", { value: true });
          r2.RefSetCache = r2.RefSet = r2.Ref = r2.Name = r2.EOF = r2.Dict = r2.Cmd = r2.CIRCULAR_REF = void 0;
          r2.clearPrimitiveCaches = function clearPrimitiveCaches() {
            g._clearCache();
            d._clearCache();
            v._clearCache();
          };
          r2.isCmd = function isCmd(t3, r3) {
            return t3 instanceof g && (r3 === void 0 || t3.cmd === r3);
          };
          r2.isDict = function isDict(t3, r3) {
            return t3 instanceof y && (r3 === void 0 || isName(t3.get("Type"), r3));
          };
          r2.isName = isName;
          r2.isRefsEqual = function isRefsEqual(t3, r3) {
            return t3.num === r3.num && t3.gen === r3.gen;
          };
          var c = function _interopRequireDefault(t3) {
            return t3 && t3.__esModule ? t3 : { default: t3 };
          }(o2(2)), l = o2(4);
          function _slicedToArray(t3, r3) {
            return function _arrayWithHoles(t4) {
              if (Array.isArray(t4))
                return t4;
            }(t3) || function _iterableToArrayLimit(t4, r4) {
              var o3 = t4 == null ? null : typeof Symbol != "undefined" && t4[Symbol.iterator] || t4["@@iterator"];
              if (o3 == null)
                return;
              var c2, l2, u2 = [], h2 = true, d2 = false;
              try {
                for (o3 = o3.call(t4); !(h2 = (c2 = o3.next()).done); h2 = true) {
                  u2.push(c2.value);
                  if (r4 && u2.length === r4)
                    break;
                }
              } catch (t5) {
                d2 = true;
                l2 = t5;
              } finally {
                try {
                  h2 || o3.return == null || o3.return();
                } finally {
                  if (d2)
                    throw l2;
                }
              }
              return u2;
            }(t3, r3) || _unsupportedIterableToArray(t3, r3) || function _nonIterableRest() {
              throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
            }();
          }
          function _createForOfIteratorHelper(t3, r3) {
            var o3 = typeof Symbol != "undefined" && t3[Symbol.iterator] || t3["@@iterator"];
            if (!o3) {
              if (Array.isArray(t3) || (o3 = _unsupportedIterableToArray(t3)) || r3 && t3 && typeof t3.length == "number") {
                o3 && (t3 = o3);
                var c2 = 0, l2 = function F() {
                };
                return { s: l2, n: function n() {
                  return c2 >= t3.length ? { done: true } : { done: false, value: t3[c2++] };
                }, e: function e(t4) {
                  throw t4;
                }, f: l2 };
              }
              throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
            }
            var u2, h2 = true, d2 = false;
            return { s: function s() {
              o3 = o3.call(t3);
            }, n: function n() {
              var t4 = o3.next();
              h2 = t4.done;
              return t4;
            }, e: function e(t4) {
              d2 = true;
              u2 = t4;
            }, f: function f() {
              try {
                h2 || o3.return == null || o3.return();
              } finally {
                if (d2)
                  throw u2;
              }
            } };
          }
          function _unsupportedIterableToArray(t3, r3) {
            if (t3) {
              if (typeof t3 == "string")
                return _arrayLikeToArray(t3, r3);
              var o3 = Object.prototype.toString.call(t3).slice(8, -1);
              o3 === "Object" && t3.constructor && (o3 = t3.constructor.name);
              return o3 === "Map" || o3 === "Set" ? Array.from(t3) : o3 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(o3) ? _arrayLikeToArray(t3, r3) : void 0;
            }
          }
          function _arrayLikeToArray(t3, r3) {
            (r3 == null || r3 > t3.length) && (r3 = t3.length);
            for (var o3 = 0, c2 = new Array(r3); o3 < r3; o3++)
              c2[o3] = t3[o3];
            return c2;
          }
          function asyncGeneratorStep(t3, r3, o3, c2, l2, u2, h2) {
            try {
              var d2 = t3[u2](h2), g2 = d2.value;
            } catch (t4) {
              o3(t4);
              return;
            }
            d2.done ? r3(g2) : Promise.resolve(g2).then(c2, l2);
          }
          function _classCallCheck(t3, r3) {
            if (!(t3 instanceof r3))
              throw new TypeError("Cannot call a class as a function");
          }
          function _defineProperties(t3, r3) {
            for (var o3 = 0; o3 < r3.length; o3++) {
              var c2 = r3[o3];
              c2.enumerable = c2.enumerable || false;
              c2.configurable = true;
              "value" in c2 && (c2.writable = true);
              Object.defineProperty(t3, c2.key, c2);
            }
          }
          function _createClass(t3, r3, o3) {
            r3 && _defineProperties(t3.prototype, r3);
            o3 && _defineProperties(t3, o3);
            Object.defineProperty(t3, "prototype", { writable: false });
            return t3;
          }
          var u = Symbol("CIRCULAR_REF");
          r2.CIRCULAR_REF = u;
          var h = Symbol("EOF");
          r2.EOF = h;
          var d = function NameClosure() {
            var t3 = /* @__PURE__ */ Object.create(null);
            return function() {
              function Name(t4) {
                _classCallCheck(this, Name);
                this.name = t4;
              }
              _createClass(Name, null, [{ key: "get", value: function get(r3) {
                var o3 = t3[r3];
                return o3 || (t3[r3] = new Name(r3));
              } }, { key: "_clearCache", value: function _clearCache() {
                t3 = /* @__PURE__ */ Object.create(null);
              } }]);
              return Name;
            }();
          }();
          r2.Name = d;
          var g = function CmdClosure() {
            var t3 = /* @__PURE__ */ Object.create(null);
            return function() {
              function Cmd(t4) {
                _classCallCheck(this, Cmd);
                this.cmd = t4;
              }
              _createClass(Cmd, null, [{ key: "get", value: function get(r3) {
                var o3 = t3[r3];
                return o3 || (t3[r3] = new Cmd(r3));
              } }, { key: "_clearCache", value: function _clearCache() {
                t3 = /* @__PURE__ */ Object.create(null);
              } }]);
              return Cmd;
            }();
          }();
          r2.Cmd = g;
          var m = function nonSerializableClosure() {
            return m;
          }, y = function() {
            function Dict() {
              var t4 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : null;
              _classCallCheck(this, Dict);
              this._map = /* @__PURE__ */ Object.create(null);
              this.xref = t4;
              this.objId = null;
              this.suppressEncryption = false;
              this.__nonSerializable__ = m;
            }
            _createClass(Dict, [{ key: "assignXref", value: function assignXref(t4) {
              this.xref = t4;
            } }, { key: "size", get: function get() {
              return Object.keys(this._map).length;
            } }, { key: "get", value: function get(t4, r3, o3) {
              var c2 = this._map[t4];
              c2 === void 0 && r3 !== void 0 && (c2 = this._map[r3]) === void 0 && o3 !== void 0 && (c2 = this._map[o3]);
              return c2 instanceof v && this.xref ? this.xref.fetch(c2, this.suppressEncryption) : c2;
            } }, { key: "getAsync", value: (t3 = function _asyncToGenerator(t4) {
              return function() {
                var r3 = this, o3 = arguments;
                return new Promise(function(c2, l2) {
                  var u2 = t4.apply(r3, o3);
                  function _next(t5) {
                    asyncGeneratorStep(u2, c2, l2, _next, _throw, "next", t5);
                  }
                  function _throw(t5) {
                    asyncGeneratorStep(u2, c2, l2, _next, _throw, "throw", t5);
                  }
                  _next(void 0);
                });
              };
            }(c.default.mark(function _callee(t4, r3, o3) {
              var l2;
              return c.default.wrap(function _callee$(c2) {
                for (; ; )
                  switch (c2.prev = c2.next) {
                    case 0:
                      (l2 = this._map[t4]) === void 0 && r3 !== void 0 && (l2 = this._map[r3]) === void 0 && o3 !== void 0 && (l2 = this._map[o3]);
                      if (!(l2 instanceof v && this.xref)) {
                        c2.next = 4;
                        break;
                      }
                      return c2.abrupt("return", this.xref.fetchAsync(l2, this.suppressEncryption));
                    case 4:
                      return c2.abrupt("return", l2);
                    case 5:
                    case "end":
                      return c2.stop();
                  }
              }, _callee, this);
            })), function getAsync(r3, o3, c2) {
              return t3.apply(this, arguments);
            }) }, { key: "getArray", value: function getArray(t4, r3, o3) {
              var c2 = this._map[t4];
              c2 === void 0 && r3 !== void 0 && (c2 = this._map[r3]) === void 0 && o3 !== void 0 && (c2 = this._map[o3]);
              c2 instanceof v && this.xref && (c2 = this.xref.fetch(c2, this.suppressEncryption));
              if (Array.isArray(c2))
                for (var l2 = 0, u2 = (c2 = c2.slice()).length; l2 < u2; l2++)
                  c2[l2] instanceof v && this.xref && (c2[l2] = this.xref.fetch(c2[l2], this.suppressEncryption));
              return c2;
            } }, { key: "getRaw", value: function getRaw(t4) {
              return this._map[t4];
            } }, { key: "getKeys", value: function getKeys() {
              return Object.keys(this._map);
            } }, { key: "getRawValues", value: function getRawValues() {
              return Object.values(this._map);
            } }, { key: "set", value: function set(t4, r3) {
              this._map[t4] = r3;
            } }, { key: "has", value: function has(t4) {
              return this._map[t4] !== void 0;
            } }, { key: "forEach", value: function forEach(t4) {
              for (var r3 in this._map)
                t4(r3, this.get(r3));
            } }], [{ key: "empty", get: function get() {
              var t4 = new Dict(null);
              t4.set = function(t5, r3) {
                (0, l.unreachable)("Should not call `set` on the empty dictionary.");
              };
              return (0, l.shadow)(this, "empty", t4);
            } }, { key: "merge", value: function merge(t4) {
              var r3, o3 = t4.xref, c2 = t4.dictArray, l2 = t4.mergeSubDicts, u2 = l2 !== void 0 && l2, h2 = new Dict(o3), d2 = /* @__PURE__ */ new Map(), g2 = _createForOfIteratorHelper(c2);
              try {
                for (g2.s(); !(r3 = g2.n()).done; ) {
                  var m2 = r3.value;
                  if (m2 instanceof Dict)
                    for (var y2 = 0, v2 = Object.entries(m2._map); y2 < v2.length; y2++) {
                      var k2 = _slicedToArray(v2[y2], 2), _2 = k2[0], w = k2[1], S = d2.get(_2);
                      if (S === void 0) {
                        S = [];
                        d2.set(_2, S);
                      } else if (!(u2 && w instanceof Dict))
                        continue;
                      S.push(w);
                    }
                }
              } catch (t5) {
                g2.e(t5);
              } finally {
                g2.f();
              }
              var C, x = _createForOfIteratorHelper(d2);
              try {
                for (x.s(); !(C = x.n()).done; ) {
                  var O = _slicedToArray(C.value, 2), T = O[0], E = O[1];
                  if (E.length !== 1 && E[0] instanceof Dict) {
                    var M, R = new Dict(o3), D = _createForOfIteratorHelper(E);
                    try {
                      for (D.s(); !(M = D.n()).done; )
                        for (var j = M.value, L = 0, N = Object.entries(j._map); L < N.length; L++) {
                          var U = _slicedToArray(N[L], 2), H = U[0], $ = U[1];
                          R._map[H] === void 0 && (R._map[H] = $);
                        }
                    } catch (t5) {
                      D.e(t5);
                    } finally {
                      D.f();
                    }
                    R.size > 0 && (h2._map[T] = R);
                  } else
                    h2._map[T] = E[0];
                }
              } catch (t5) {
                x.e(t5);
              } finally {
                x.f();
              }
              d2.clear();
              return h2.size > 0 ? h2 : Dict.empty;
            } }]);
            var t3;
            return Dict;
          }();
          r2.Dict = y;
          var v = function RefClosure() {
            var t3 = /* @__PURE__ */ Object.create(null);
            return function() {
              function Ref(t4, r3) {
                _classCallCheck(this, Ref);
                this.num = t4;
                this.gen = r3;
              }
              _createClass(Ref, [{ key: "toString", value: function toString() {
                return this.gen === 0 ? "".concat(this.num, "R") : "".concat(this.num, "R").concat(this.gen);
              } }], [{ key: "get", value: function get(r3, o3) {
                var c2 = o3 === 0 ? "".concat(r3, "R") : "".concat(r3, "R").concat(o3), l2 = t3[c2];
                return l2 || (t3[c2] = new Ref(r3, o3));
              } }, { key: "_clearCache", value: function _clearCache() {
                t3 = /* @__PURE__ */ Object.create(null);
              } }]);
              return Ref;
            }();
          }();
          r2.Ref = v;
          var k = function(t3) {
            function RefSet() {
              var t4 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : null;
              _classCallCheck(this, RefSet);
              this._set = new Set(t4 && t4._set);
            }
            _createClass(RefSet, [{ key: "has", value: function has(t4) {
              return this._set.has(t4.toString());
            } }, { key: "put", value: function put(t4) {
              this._set.add(t4.toString());
            } }, { key: "remove", value: function remove(t4) {
              this._set.delete(t4.toString());
            } }, { key: Symbol.iterator, value: function value() {
              return this._set.values();
            } }, { key: "clear", value: function clear() {
              this._set.clear();
            } }]);
            return RefSet;
          }();
          r2.RefSet = k;
          var _ = function(t3) {
            function RefSetCache() {
              _classCallCheck(this, RefSetCache);
              this._map = /* @__PURE__ */ new Map();
            }
            _createClass(RefSetCache, [{ key: "size", get: function get() {
              return this._map.size;
            } }, { key: "get", value: function get(t4) {
              return this._map.get(t4.toString());
            } }, { key: "has", value: function has(t4) {
              return this._map.has(t4.toString());
            } }, { key: "put", value: function put(t4, r3) {
              this._map.set(t4.toString(), r3);
            } }, { key: "putAlias", value: function putAlias(t4, r3) {
              this._map.set(t4.toString(), this.get(r3));
            } }, { key: Symbol.iterator, value: function value() {
              return this._map.values();
            } }, { key: "clear", value: function clear() {
              this._map.clear();
            } }]);
            return RefSetCache;
          }();
          r2.RefSetCache = _;
          function isName(t3, r3) {
            return t3 instanceof d && (r3 === void 0 || t3.name === r3);
          }
        }, (t2, r2, o2) => {
          "use strict";
          function _typeof(t3) {
            return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t4) {
              return typeof t4;
            } : function(t4) {
              return t4 && typeof Symbol == "function" && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
            }, _typeof(t3);
          }
          Object.defineProperty(r2, "__esModule", { value: true });
          r2.NetworkPdfManager = r2.LocalPdfManager = void 0;
          var c = function _interopRequireDefault(t3) {
            return t3 && t3.__esModule ? t3 : { default: t3 };
          }(o2(2)), l = o2(4), u = o2(160), h = o2(161), d = o2(164), g = o2(163);
          function _inherits(t3, r3) {
            if (typeof r3 != "function" && r3 !== null)
              throw new TypeError("Super expression must either be null or a function");
            t3.prototype = Object.create(r3 && r3.prototype, { constructor: { value: t3, writable: true, configurable: true } });
            Object.defineProperty(t3, "prototype", { writable: false });
            r3 && _setPrototypeOf(t3, r3);
          }
          function _setPrototypeOf(t3, r3) {
            _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(t4, r4) {
              t4.__proto__ = r4;
              return t4;
            };
            return _setPrototypeOf(t3, r3);
          }
          function _createSuper(t3) {
            var r3 = function _isNativeReflectConstruct() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                }));
                return true;
              } catch (t4) {
                return false;
              }
            }();
            return function _createSuperInternal() {
              var o3, c2 = _getPrototypeOf(t3);
              if (r3) {
                var l2 = _getPrototypeOf(this).constructor;
                o3 = Reflect.construct(c2, arguments, l2);
              } else
                o3 = c2.apply(this, arguments);
              return _possibleConstructorReturn(this, o3);
            };
          }
          function _possibleConstructorReturn(t3, r3) {
            if (r3 && (_typeof(r3) === "object" || typeof r3 == "function"))
              return r3;
            if (r3 !== void 0)
              throw new TypeError("Derived constructors may only return object or undefined");
            return _assertThisInitialized(t3);
          }
          function _assertThisInitialized(t3) {
            if (t3 === void 0)
              throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return t3;
          }
          function _getPrototypeOf(t3) {
            _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(t4) {
              return t4.__proto__ || Object.getPrototypeOf(t4);
            };
            return _getPrototypeOf(t3);
          }
          function asyncGeneratorStep(t3, r3, o3, c2, l2, u2, h2) {
            try {
              var d2 = t3[u2](h2), g2 = d2.value;
            } catch (t4) {
              o3(t4);
              return;
            }
            d2.done ? r3(g2) : Promise.resolve(g2).then(c2, l2);
          }
          function _asyncToGenerator(t3) {
            return function() {
              var r3 = this, o3 = arguments;
              return new Promise(function(c2, l2) {
                var u2 = t3.apply(r3, o3);
                function _next(t4) {
                  asyncGeneratorStep(u2, c2, l2, _next, _throw, "next", t4);
                }
                function _throw(t4) {
                  asyncGeneratorStep(u2, c2, l2, _next, _throw, "throw", t4);
                }
                _next(void 0);
              });
            };
          }
          function _classCallCheck(t3, r3) {
            if (!(t3 instanceof r3))
              throw new TypeError("Cannot call a class as a function");
          }
          function _defineProperties(t3, r3) {
            for (var o3 = 0; o3 < r3.length; o3++) {
              var c2 = r3[o3];
              c2.enumerable = c2.enumerable || false;
              c2.configurable = true;
              "value" in c2 && (c2.writable = true);
              Object.defineProperty(t3, c2.key, c2);
            }
          }
          function _createClass(t3, r3, o3) {
            r3 && _defineProperties(t3.prototype, r3);
            o3 && _defineProperties(t3, o3);
            Object.defineProperty(t3, "prototype", { writable: false });
            return t3;
          }
          function parseDocBaseUrl(t3) {
            if (t3) {
              var r3 = (0, l.createValidAbsoluteUrl)(t3);
              if (r3)
                return r3.href;
              (0, l.warn)('Invalid absolute docBaseUrl: "'.concat(t3, '".'));
            }
            return null;
          }
          var m = function() {
            function BasePdfManager() {
              _classCallCheck(this, BasePdfManager);
              this.constructor === BasePdfManager && (0, l.unreachable)("Cannot initialize BasePdfManager.");
            }
            _createClass(BasePdfManager, [{ key: "docId", get: function get() {
              return this._docId;
            } }, { key: "password", get: function get() {
              return this._password;
            } }, { key: "docBaseUrl", get: function get() {
              var t4 = this.pdfDocument.catalog;
              return (0, l.shadow)(this, "docBaseUrl", t4.baseUrl || this._docBaseUrl);
            } }, { key: "onLoadedStream", value: function onLoadedStream() {
              (0, l.unreachable)("Abstract method `onLoadedStream` called");
            } }, { key: "ensureDoc", value: function ensureDoc(t4, r3) {
              return this.ensure(this.pdfDocument, t4, r3);
            } }, { key: "ensureXRef", value: function ensureXRef(t4, r3) {
              return this.ensure(this.pdfDocument.xref, t4, r3);
            } }, { key: "ensureCatalog", value: function ensureCatalog(t4, r3) {
              return this.ensure(this.pdfDocument.catalog, t4, r3);
            } }, { key: "getPage", value: function getPage(t4) {
              return this.pdfDocument.getPage(t4);
            } }, { key: "fontFallback", value: function fontFallback(t4, r3) {
              return this.pdfDocument.fontFallback(t4, r3);
            } }, { key: "loadXfaFonts", value: function loadXfaFonts(t4, r3) {
              return this.pdfDocument.loadXfaFonts(t4, r3);
            } }, { key: "loadXfaImages", value: function loadXfaImages() {
              return this.pdfDocument.loadXfaImages();
            } }, { key: "serializeXfaData", value: function serializeXfaData(t4) {
              return this.pdfDocument.serializeXfaData(t4);
            } }, { key: "cleanup", value: function cleanup() {
              var t4 = arguments.length > 0 && arguments[0] !== void 0 && arguments[0];
              return this.pdfDocument.cleanup(t4);
            } }, { key: "ensure", value: (t3 = _asyncToGenerator(c.default.mark(function _callee(t4, r3, o3) {
              return c.default.wrap(function _callee$(t5) {
                for (; ; )
                  switch (t5.prev = t5.next) {
                    case 0:
                      (0, l.unreachable)("Abstract method `ensure` called");
                    case 1:
                    case "end":
                      return t5.stop();
                  }
              }, _callee);
            })), function ensure(r3, o3, c2) {
              return t3.apply(this, arguments);
            }) }, { key: "requestRange", value: function requestRange(t4, r3) {
              (0, l.unreachable)("Abstract method `requestRange` called");
            } }, { key: "requestLoadedStream", value: function requestLoadedStream() {
              (0, l.unreachable)("Abstract method `requestLoadedStream` called");
            } }, { key: "sendProgressiveData", value: function sendProgressiveData(t4) {
              (0, l.unreachable)("Abstract method `sendProgressiveData` called");
            } }, { key: "updatePassword", value: function updatePassword(t4) {
              this._password = t4;
            } }, { key: "terminate", value: function terminate(t4) {
              (0, l.unreachable)("Abstract method `terminate` called");
            } }]);
            var t3;
            return BasePdfManager;
          }(), y = function(t3) {
            _inherits(LocalPdfManager, t3);
            var r3, o3 = _createSuper(LocalPdfManager);
            function LocalPdfManager(t4, r4, c2, l2, u2, h2, m2) {
              var y2;
              _classCallCheck(this, LocalPdfManager);
              (y2 = o3.call(this))._docId = t4;
              y2._password = c2;
              y2._docBaseUrl = parseDocBaseUrl(m2);
              y2.msgHandler = l2;
              y2.evaluatorOptions = u2;
              y2.enableXfa = h2;
              var v2 = new g.Stream(r4);
              y2.pdfDocument = new d.PDFDocument(_assertThisInitialized(y2), v2);
              y2._loadedStreamPromise = Promise.resolve(v2);
              return y2;
            }
            _createClass(LocalPdfManager, [{ key: "ensure", value: (r3 = _asyncToGenerator(c.default.mark(function _callee2(t4, r4, o4) {
              var l2;
              return c.default.wrap(function _callee2$(c2) {
                for (; ; )
                  switch (c2.prev = c2.next) {
                    case 0:
                      if (typeof (l2 = t4[r4]) != "function") {
                        c2.next = 3;
                        break;
                      }
                      return c2.abrupt("return", l2.apply(t4, o4));
                    case 3:
                      return c2.abrupt("return", l2);
                    case 4:
                    case "end":
                      return c2.stop();
                  }
              }, _callee2);
            })), function ensure(t4, o4, c2) {
              return r3.apply(this, arguments);
            }) }, { key: "requestRange", value: function requestRange(t4, r4) {
              return Promise.resolve();
            } }, { key: "requestLoadedStream", value: function requestLoadedStream() {
            } }, { key: "onLoadedStream", value: function onLoadedStream() {
              return this._loadedStreamPromise;
            } }, { key: "terminate", value: function terminate(t4) {
            } }]);
            return LocalPdfManager;
          }(m);
          r2.LocalPdfManager = y;
          var v = function(t3) {
            _inherits(NetworkPdfManager, t3);
            var r3, o3 = _createSuper(NetworkPdfManager);
            function NetworkPdfManager(t4, r4, c2, l2, h2, g2) {
              var m2;
              _classCallCheck(this, NetworkPdfManager);
              (m2 = o3.call(this))._docId = t4;
              m2._password = c2.password;
              m2._docBaseUrl = parseDocBaseUrl(g2);
              m2.msgHandler = c2.msgHandler;
              m2.evaluatorOptions = l2;
              m2.enableXfa = h2;
              m2.streamManager = new u.ChunkedStreamManager(r4, { msgHandler: c2.msgHandler, length: c2.length, disableAutoFetch: c2.disableAutoFetch, rangeChunkSize: c2.rangeChunkSize });
              m2.pdfDocument = new d.PDFDocument(_assertThisInitialized(m2), m2.streamManager.getStream());
              return m2;
            }
            _createClass(NetworkPdfManager, [{ key: "ensure", value: (r3 = _asyncToGenerator(c.default.mark(function _callee3(t4, r4, o4) {
              var l2;
              return c.default.wrap(function _callee3$(c2) {
                for (; ; )
                  switch (c2.prev = c2.next) {
                    case 0:
                      c2.prev = 0;
                      if (typeof (l2 = t4[r4]) != "function") {
                        c2.next = 4;
                        break;
                      }
                      return c2.abrupt("return", l2.apply(t4, o4));
                    case 4:
                      return c2.abrupt("return", l2);
                    case 7:
                      c2.prev = 7;
                      c2.t0 = c2.catch(0);
                      if (c2.t0 instanceof h.MissingDataException) {
                        c2.next = 11;
                        break;
                      }
                      throw c2.t0;
                    case 11:
                      c2.next = 13;
                      return this.requestRange(c2.t0.begin, c2.t0.end);
                    case 13:
                      return c2.abrupt("return", this.ensure(t4, r4, o4));
                    case 14:
                    case "end":
                      return c2.stop();
                  }
              }, _callee3, this, [[0, 7]]);
            })), function ensure(t4, o4, c2) {
              return r3.apply(this, arguments);
            }) }, { key: "requestRange", value: function requestRange(t4, r4) {
              return this.streamManager.requestRange(t4, r4);
            } }, { key: "requestLoadedStream", value: function requestLoadedStream() {
              this.streamManager.requestAllChunks();
            } }, { key: "sendProgressiveData", value: function sendProgressiveData(t4) {
              this.streamManager.onReceiveData({ chunk: t4 });
            } }, { key: "onLoadedStream", value: function onLoadedStream() {
              return this.streamManager.onLoadedStream();
            } }, { key: "terminate", value: function terminate(t4) {
              this.streamManager.abort(t4);
            } }]);
            return NetworkPdfManager;
          }(m);
          r2.NetworkPdfManager = v;
        }, (t2, r2, o2) => {
          "use strict";
          function _typeof(t3) {
            return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t4) {
              return typeof t4;
            } : function(t4) {
              return t4 && typeof Symbol == "function" && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
            }, _typeof(t3);
          }
          Object.defineProperty(r2, "__esModule", { value: true });
          r2.ChunkedStreamManager = r2.ChunkedStream = void 0;
          var c = o2(4), l = o2(161);
          function _createForOfIteratorHelper(t3, r3) {
            var o3 = typeof Symbol != "undefined" && t3[Symbol.iterator] || t3["@@iterator"];
            if (!o3) {
              if (Array.isArray(t3) || (o3 = function _unsupportedIterableToArray(t4, r4) {
                if (!t4)
                  return;
                if (typeof t4 == "string")
                  return _arrayLikeToArray(t4, r4);
                var o4 = Object.prototype.toString.call(t4).slice(8, -1);
                o4 === "Object" && t4.constructor && (o4 = t4.constructor.name);
                if (o4 === "Map" || o4 === "Set")
                  return Array.from(t4);
                if (o4 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(o4))
                  return _arrayLikeToArray(t4, r4);
              }(t3)) || r3 && t3 && typeof t3.length == "number") {
                o3 && (t3 = o3);
                var c2 = 0, l2 = function F() {
                };
                return { s: l2, n: function n() {
                  return c2 >= t3.length ? { done: true } : { done: false, value: t3[c2++] };
                }, e: function e(t4) {
                  throw t4;
                }, f: l2 };
              }
              throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
            }
            var u2, h2 = true, d = false;
            return { s: function s() {
              o3 = o3.call(t3);
            }, n: function n() {
              var t4 = o3.next();
              h2 = t4.done;
              return t4;
            }, e: function e(t4) {
              d = true;
              u2 = t4;
            }, f: function f() {
              try {
                h2 || o3.return == null || o3.return();
              } finally {
                if (d)
                  throw u2;
              }
            } };
          }
          function _arrayLikeToArray(t3, r3) {
            (r3 == null || r3 > t3.length) && (r3 = t3.length);
            for (var o3 = 0, c2 = new Array(r3); o3 < r3; o3++)
              c2[o3] = t3[o3];
            return c2;
          }
          function _classCallCheck(t3, r3) {
            if (!(t3 instanceof r3))
              throw new TypeError("Cannot call a class as a function");
          }
          function _defineProperties(t3, r3) {
            for (var o3 = 0; o3 < r3.length; o3++) {
              var c2 = r3[o3];
              c2.enumerable = c2.enumerable || false;
              c2.configurable = true;
              "value" in c2 && (c2.writable = true);
              Object.defineProperty(t3, c2.key, c2);
            }
          }
          function _createClass(t3, r3, o3) {
            r3 && _defineProperties(t3.prototype, r3);
            o3 && _defineProperties(t3, o3);
            Object.defineProperty(t3, "prototype", { writable: false });
            return t3;
          }
          function _setPrototypeOf(t3, r3) {
            _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(t4, r4) {
              t4.__proto__ = r4;
              return t4;
            };
            return _setPrototypeOf(t3, r3);
          }
          function _createSuper(t3) {
            var r3 = function _isNativeReflectConstruct() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                }));
                return true;
              } catch (t4) {
                return false;
              }
            }();
            return function _createSuperInternal() {
              var o3, c2 = _getPrototypeOf(t3);
              if (r3) {
                var l2 = _getPrototypeOf(this).constructor;
                o3 = Reflect.construct(c2, arguments, l2);
              } else
                o3 = c2.apply(this, arguments);
              return _possibleConstructorReturn(this, o3);
            };
          }
          function _possibleConstructorReturn(t3, r3) {
            if (r3 && (_typeof(r3) === "object" || typeof r3 == "function"))
              return r3;
            if (r3 !== void 0)
              throw new TypeError("Derived constructors may only return object or undefined");
            return function _assertThisInitialized(t4) {
              if (t4 === void 0)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return t4;
            }(t3);
          }
          function _getPrototypeOf(t3) {
            _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(t4) {
              return t4.__proto__ || Object.getPrototypeOf(t4);
            };
            return _getPrototypeOf(t3);
          }
          var u = function(t3) {
            !function _inherits(t4, r4) {
              if (typeof r4 != "function" && r4 !== null)
                throw new TypeError("Super expression must either be null or a function");
              t4.prototype = Object.create(r4 && r4.prototype, { constructor: { value: t4, writable: true, configurable: true } });
              Object.defineProperty(t4, "prototype", { writable: false });
              r4 && _setPrototypeOf(t4, r4);
            }(ChunkedStream, t3);
            var r3 = _createSuper(ChunkedStream);
            function ChunkedStream(t4, o3, c2) {
              var l2;
              _classCallCheck(this, ChunkedStream);
              (l2 = r3.call(this, new Uint8Array(t4), 0, t4, null)).chunkSize = o3;
              l2._loadedChunks = /* @__PURE__ */ new Set();
              l2.numChunks = Math.ceil(t4 / o3);
              l2.manager = c2;
              l2.progressiveDataLength = 0;
              l2.lastSuccessfulEnsureByteChunk = -1;
              return l2;
            }
            _createClass(ChunkedStream, [{ key: "getMissingChunks", value: function getMissingChunks() {
              for (var t4 = [], r4 = 0, o3 = this.numChunks; r4 < o3; ++r4)
                this._loadedChunks.has(r4) || t4.push(r4);
              return t4;
            } }, { key: "numChunksLoaded", get: function get() {
              return this._loadedChunks.size;
            } }, { key: "isDataLoaded", get: function get() {
              return this.numChunksLoaded === this.numChunks;
            } }, { key: "onReceiveData", value: function onReceiveData(t4, r4) {
              var o3 = this.chunkSize;
              if (t4 % o3 != 0)
                throw new Error("Bad begin offset: ".concat(t4));
              var c2 = t4 + r4.byteLength;
              if (c2 % o3 != 0 && c2 !== this.bytes.length)
                throw new Error("Bad end offset: ".concat(c2));
              this.bytes.set(new Uint8Array(r4), t4);
              for (var l2 = Math.floor(t4 / o3), u2 = Math.floor((c2 - 1) / o3) + 1, h2 = l2; h2 < u2; ++h2)
                this._loadedChunks.add(h2);
            } }, { key: "onReceiveProgressiveData", value: function onReceiveProgressiveData(t4) {
              var r4 = this.progressiveDataLength, o3 = Math.floor(r4 / this.chunkSize);
              this.bytes.set(new Uint8Array(t4), r4);
              r4 += t4.byteLength;
              this.progressiveDataLength = r4;
              for (var c2 = r4 >= this.end ? this.numChunks : Math.floor(r4 / this.chunkSize), l2 = o3; l2 < c2; ++l2)
                this._loadedChunks.add(l2);
            } }, { key: "ensureByte", value: function ensureByte(t4) {
              if (!(t4 < this.progressiveDataLength)) {
                var r4 = Math.floor(t4 / this.chunkSize);
                if (!(r4 > this.numChunks) && r4 !== this.lastSuccessfulEnsureByteChunk) {
                  if (!this._loadedChunks.has(r4))
                    throw new l.MissingDataException(t4, t4 + 1);
                  this.lastSuccessfulEnsureByteChunk = r4;
                }
              }
            } }, { key: "ensureRange", value: function ensureRange(t4, r4) {
              if (!(t4 >= r4 || r4 <= this.progressiveDataLength)) {
                var o3 = Math.floor(t4 / this.chunkSize);
                if (!(o3 > this.numChunks)) {
                  for (var c2 = Math.min(Math.floor((r4 - 1) / this.chunkSize) + 1, this.numChunks), u2 = o3; u2 < c2; ++u2)
                    if (!this._loadedChunks.has(u2))
                      throw new l.MissingDataException(t4, r4);
                }
              }
            } }, { key: "nextEmptyChunk", value: function nextEmptyChunk(t4) {
              for (var r4 = this.numChunks, o3 = 0; o3 < r4; ++o3) {
                var c2 = (t4 + o3) % r4;
                if (!this._loadedChunks.has(c2))
                  return c2;
              }
              return null;
            } }, { key: "hasChunk", value: function hasChunk(t4) {
              return this._loadedChunks.has(t4);
            } }, { key: "getByte", value: function getByte() {
              var t4 = this.pos;
              if (t4 >= this.end)
                return -1;
              t4 >= this.progressiveDataLength && this.ensureByte(t4);
              return this.bytes[this.pos++];
            } }, { key: "getBytes", value: function getBytes(t4) {
              var r4 = this.bytes, o3 = this.pos, c2 = this.end;
              if (!t4) {
                c2 > this.progressiveDataLength && this.ensureRange(o3, c2);
                return r4.subarray(o3, c2);
              }
              var l2 = o3 + t4;
              l2 > c2 && (l2 = c2);
              l2 > this.progressiveDataLength && this.ensureRange(o3, l2);
              this.pos = l2;
              return r4.subarray(o3, l2);
            } }, { key: "getByteRange", value: function getByteRange(t4, r4) {
              t4 < 0 && (t4 = 0);
              r4 > this.end && (r4 = this.end);
              r4 > this.progressiveDataLength && this.ensureRange(t4, r4);
              return this.bytes.subarray(t4, r4);
            } }, { key: "makeSubStream", value: function makeSubStream(t4, r4) {
              var o3 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null;
              r4 ? t4 + r4 > this.progressiveDataLength && this.ensureRange(t4, t4 + r4) : t4 >= this.progressiveDataLength && this.ensureByte(t4);
              function ChunkedStreamSubstream() {
              }
              ChunkedStreamSubstream.prototype = Object.create(this);
              ChunkedStreamSubstream.prototype.getMissingChunks = function() {
                for (var t5 = this.chunkSize, r5 = Math.floor(this.start / t5), o4 = Math.floor((this.end - 1) / t5) + 1, c3 = [], l2 = r5; l2 < o4; ++l2)
                  this._loadedChunks.has(l2) || c3.push(l2);
                return c3;
              };
              Object.defineProperty(ChunkedStreamSubstream.prototype, "isDataLoaded", { get: function get() {
                return this.numChunksLoaded === this.numChunks || this.getMissingChunks().length === 0;
              }, configurable: true });
              var c2 = new ChunkedStreamSubstream();
              c2.pos = c2.start = t4;
              c2.end = t4 + r4 || this.end;
              c2.dict = o3;
              return c2;
            } }, { key: "getBaseStreams", value: function getBaseStreams() {
              return [this];
            } }]);
            return ChunkedStream;
          }(o2(163).Stream);
          r2.ChunkedStream = u;
          var h = function() {
            function ChunkedStreamManager(t3, r3) {
              _classCallCheck(this, ChunkedStreamManager);
              this.length = r3.length;
              this.chunkSize = r3.rangeChunkSize;
              this.stream = new u(this.length, this.chunkSize, this);
              this.pdfNetworkStream = t3;
              this.disableAutoFetch = r3.disableAutoFetch;
              this.msgHandler = r3.msgHandler;
              this.currRequestId = 0;
              this._chunksNeededByRequest = /* @__PURE__ */ new Map();
              this._requestsByChunk = /* @__PURE__ */ new Map();
              this._promisesByRequest = /* @__PURE__ */ new Map();
              this.progressiveDataLength = 0;
              this.aborted = false;
              this._loadedStreamCapability = (0, c.createPromiseCapability)();
            }
            _createClass(ChunkedStreamManager, [{ key: "onLoadedStream", value: function onLoadedStream() {
              return this._loadedStreamCapability.promise;
            } }, { key: "sendRequest", value: function sendRequest(t3, r3) {
              var o3 = this, l2 = this.pdfNetworkStream.getRangeReader(t3, r3);
              l2.isStreamingSupported || (l2.onProgress = this.onProgress.bind(this));
              var u2 = [], h2 = 0;
              return new Promise(function(t4, r4) {
                l2.read().then(function readChunk(d) {
                  try {
                    if (!d.done) {
                      var g = d.value;
                      u2.push(g);
                      h2 += (0, c.arrayByteLength)(g);
                      l2.isStreamingSupported && o3.onProgress({ loaded: h2 });
                      l2.read().then(readChunk, r4);
                      return;
                    }
                    var m = (0, c.arraysToBytes)(u2);
                    u2 = null;
                    t4(m);
                  } catch (t5) {
                    r4(t5);
                  }
                }, r4);
              }).then(function(r4) {
                o3.aborted || o3.onReceiveData({ chunk: r4, begin: t3 });
              });
            } }, { key: "requestAllChunks", value: function requestAllChunks() {
              var t3 = this.stream.getMissingChunks();
              this._requestChunks(t3);
              return this._loadedStreamCapability.promise;
            } }, { key: "_requestChunks", value: function _requestChunks(t3) {
              var r3 = this, o3 = this.currRequestId++, l2 = /* @__PURE__ */ new Set();
              this._chunksNeededByRequest.set(o3, l2);
              var u2, h2 = _createForOfIteratorHelper(t3);
              try {
                for (h2.s(); !(u2 = h2.n()).done; ) {
                  var d = u2.value;
                  this.stream.hasChunk(d) || l2.add(d);
                }
              } catch (t4) {
                h2.e(t4);
              } finally {
                h2.f();
              }
              if (l2.size === 0)
                return Promise.resolve();
              var g = (0, c.createPromiseCapability)();
              this._promisesByRequest.set(o3, g);
              var m, y = [], v = _createForOfIteratorHelper(l2);
              try {
                for (v.s(); !(m = v.n()).done; ) {
                  var k = m.value, _ = this._requestsByChunk.get(k);
                  if (!_) {
                    _ = [];
                    this._requestsByChunk.set(k, _);
                    y.push(k);
                  }
                  _.push(o3);
                }
              } catch (t4) {
                v.e(t4);
              } finally {
                v.f();
              }
              if (y.length > 0) {
                var w, S = _createForOfIteratorHelper(this.groupChunks(y));
                try {
                  for (S.s(); !(w = S.n()).done; ) {
                    var C = w.value, x = C.beginChunk * this.chunkSize, O = Math.min(C.endChunk * this.chunkSize, this.length);
                    this.sendRequest(x, O).catch(g.reject);
                  }
                } catch (t4) {
                  S.e(t4);
                } finally {
                  S.f();
                }
              }
              return g.promise.catch(function(t4) {
                if (!r3.aborted)
                  throw t4;
              });
            } }, { key: "getStream", value: function getStream() {
              return this.stream;
            } }, { key: "requestRange", value: function requestRange(t3, r3) {
              r3 = Math.min(r3, this.length);
              for (var o3 = this.getBeginChunk(t3), c2 = this.getEndChunk(r3), l2 = [], u2 = o3; u2 < c2; ++u2)
                l2.push(u2);
              return this._requestChunks(l2);
            } }, { key: "requestRanges", value: function requestRanges() {
              var t3, r3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [], o3 = [], c2 = _createForOfIteratorHelper(r3);
              try {
                for (c2.s(); !(t3 = c2.n()).done; )
                  for (var l2 = t3.value, u2 = this.getBeginChunk(l2.begin), h2 = this.getEndChunk(l2.end), d = u2; d < h2; ++d)
                    o3.includes(d) || o3.push(d);
              } catch (t4) {
                c2.e(t4);
              } finally {
                c2.f();
              }
              o3.sort(function(t4, r4) {
                return t4 - r4;
              });
              return this._requestChunks(o3);
            } }, { key: "groupChunks", value: function groupChunks(t3) {
              for (var r3 = [], o3 = -1, c2 = -1, l2 = 0, u2 = t3.length; l2 < u2; ++l2) {
                var h2 = t3[l2];
                o3 < 0 && (o3 = h2);
                if (c2 >= 0 && c2 + 1 !== h2) {
                  r3.push({ beginChunk: o3, endChunk: c2 + 1 });
                  o3 = h2;
                }
                l2 + 1 === t3.length && r3.push({ beginChunk: o3, endChunk: h2 + 1 });
                c2 = h2;
              }
              return r3;
            } }, { key: "onProgress", value: function onProgress(t3) {
              this.msgHandler.send("DocProgress", { loaded: this.stream.numChunksLoaded * this.chunkSize + t3.loaded, total: this.length });
            } }, { key: "onReceiveData", value: function onReceiveData(t3) {
              var r3 = t3.chunk, o3 = t3.begin === void 0, c2 = o3 ? this.progressiveDataLength : t3.begin, l2 = c2 + r3.byteLength, u2 = Math.floor(c2 / this.chunkSize), h2 = l2 < this.length ? Math.floor(l2 / this.chunkSize) : Math.ceil(l2 / this.chunkSize);
              if (o3) {
                this.stream.onReceiveProgressiveData(r3);
                this.progressiveDataLength = l2;
              } else
                this.stream.onReceiveData(c2, r3);
              this.stream.isDataLoaded && this._loadedStreamCapability.resolve(this.stream);
              for (var d = [], g = u2; g < h2; ++g) {
                var m = this._requestsByChunk.get(g);
                if (m) {
                  this._requestsByChunk.delete(g);
                  var y, v = _createForOfIteratorHelper(m);
                  try {
                    for (v.s(); !(y = v.n()).done; ) {
                      var k = y.value, _ = this._chunksNeededByRequest.get(k);
                      _.has(g) && _.delete(g);
                      _.size > 0 || d.push(k);
                    }
                  } catch (t4) {
                    v.e(t4);
                  } finally {
                    v.f();
                  }
                }
              }
              if (!this.disableAutoFetch && this._requestsByChunk.size === 0) {
                var w;
                if (this.stream.numChunksLoaded === 1) {
                  var S = this.stream.numChunks - 1;
                  this.stream.hasChunk(S) || (w = S);
                } else
                  w = this.stream.nextEmptyChunk(h2);
                Number.isInteger(w) && this._requestChunks([w]);
              }
              for (var C = 0, x = d; C < x.length; C++) {
                var O = x[C], T = this._promisesByRequest.get(O);
                this._promisesByRequest.delete(O);
                T.resolve();
              }
              this.msgHandler.send("DocProgress", { loaded: this.stream.numChunksLoaded * this.chunkSize, total: this.length });
            } }, { key: "onError", value: function onError(t3) {
              this._loadedStreamCapability.reject(t3);
            } }, { key: "getBeginChunk", value: function getBeginChunk(t3) {
              return Math.floor(t3 / this.chunkSize);
            } }, { key: "getEndChunk", value: function getEndChunk(t3) {
              return Math.floor((t3 - 1) / this.chunkSize) + 1;
            } }, { key: "abort", value: function abort(t3) {
              this.aborted = true;
              this.pdfNetworkStream && this.pdfNetworkStream.cancelAllRequests(t3);
              var r3, o3 = _createForOfIteratorHelper(this._promisesByRequest.values());
              try {
                for (o3.s(); !(r3 = o3.n()).done; ) {
                  r3.value.reject(t3);
                }
              } catch (t4) {
                o3.e(t4);
              } finally {
                o3.f();
              }
            } }]);
            return ChunkedStreamManager;
          }();
          r2.ChunkedStreamManager = h;
        }, (t2, r2, o2) => {
          "use strict";
          function _typeof(t3) {
            return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t4) {
              return typeof t4;
            } : function(t4) {
              return t4 && typeof Symbol == "function" && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
            }, _typeof(t3);
          }
          Object.defineProperty(r2, "__esModule", { value: true });
          r2.XRefParseException = r2.XRefEntryException = r2.ParserEOFException = r2.MissingDataException = r2.DocStats = void 0;
          r2.collectActions = function collectActions(t3, r3, o3) {
            var u2 = /* @__PURE__ */ Object.create(null), h2 = getInheritableProperty({ dict: r3, key: "AA", stopWhenFound: false });
            if (h2)
              for (var d2 = h2.length - 1; d2 >= 0; d2--) {
                var g2 = h2[d2];
                if (g2 instanceof l.Dict) {
                  var m2, y2 = _createForOfIteratorHelper(g2.getKeys());
                  try {
                    for (y2.s(); !(m2 = y2.n()).done; ) {
                      var v2 = m2.value, k2 = o3[v2];
                      if (k2) {
                        var _ = g2.getRaw(v2), w = new l.RefSet(), S = [];
                        _collectJS(_, t3, S, w);
                        S.length > 0 && (u2[k2] = S);
                      }
                    }
                  } catch (t4) {
                    y2.e(t4);
                  } finally {
                    y2.f();
                  }
                }
              }
            if (r3.has("A")) {
              var C = r3.get("A"), x = new l.RefSet(), O = [];
              _collectJS(C, t3, O, x);
              O.length > 0 && (u2.Action = O);
            }
            return (0, c.objectSize)(u2) > 0 ? u2 : null;
          };
          r2.encodeToXmlString = function encodeToXmlString(t3) {
            for (var r3 = [], o3 = 0, c2 = 0, l2 = t3.length; c2 < l2; c2++) {
              var u2 = t3.codePointAt(c2);
              if (32 <= u2 && u2 <= 126) {
                var h2 = k[u2];
                if (h2) {
                  o3 < c2 && r3.push(t3.substring(o3, c2));
                  r3.push(h2);
                  o3 = c2 + 1;
                }
              } else {
                o3 < c2 && r3.push(t3.substring(o3, c2));
                r3.push("&#x".concat(u2.toString(16).toUpperCase(), ";"));
                u2 > 55295 && (u2 < 57344 || u2 > 65533) && c2++;
                o3 = c2 + 1;
              }
            }
            if (r3.length === 0)
              return t3;
            o3 < t3.length && r3.push(t3.substring(o3, t3.length));
            return r3.join("");
          };
          r2.escapePDFName = function escapePDFName(t3) {
            for (var r3 = [], o3 = 0, c2 = 0, l2 = t3.length; c2 < l2; c2++) {
              var u2 = t3.charCodeAt(c2);
              if (u2 < 33 || u2 > 126 || u2 === 35 || u2 === 40 || u2 === 41 || u2 === 60 || u2 === 62 || u2 === 91 || u2 === 93 || u2 === 123 || u2 === 125 || u2 === 47 || u2 === 37) {
                o3 < c2 && r3.push(t3.substring(o3, c2));
                r3.push("#".concat(u2.toString(16)));
                o3 = c2 + 1;
              }
            }
            if (r3.length === 0)
              return t3;
            o3 < t3.length && r3.push(t3.substring(o3, t3.length));
            return r3.join("");
          };
          r2.getArrayLookupTableFactory = function getArrayLookupTableFactory(t3) {
            var r3;
            return function() {
              if (t3) {
                var o3 = t3();
                t3 = null;
                r3 = /* @__PURE__ */ Object.create(null);
                for (var c2 = 0, l2 = o3.length; c2 < l2; c2 += 2)
                  r3[o3[c2]] = o3[c2 + 1];
                o3 = null;
              }
              return r3;
            };
          };
          r2.getInheritableProperty = getInheritableProperty;
          r2.getLookupTableFactory = function getLookupTableFactory(t3) {
            var r3;
            return function() {
              if (t3) {
                r3 = /* @__PURE__ */ Object.create(null);
                t3(r3);
                t3 = null;
              }
              return r3;
            };
          };
          r2.isWhiteSpace = function isWhiteSpace(t3) {
            return t3 === 32 || t3 === 9 || t3 === 13 || t3 === 10;
          };
          r2.log2 = function log2(t3) {
            if (t3 <= 0)
              return 0;
            return Math.ceil(Math.log2(t3));
          };
          r2.parseXFAPath = function parseXFAPath(t3) {
            var r3 = /(.+)\[(\d+)\]$/;
            return t3.split(".").map(function(t4) {
              var o3 = t4.match(r3);
              return o3 ? { name: o3[1], pos: parseInt(o3[2], 10) } : { name: t4, pos: 0 };
            });
          };
          r2.readInt8 = function readInt8(t3, r3) {
            return t3[r3] << 24 >> 24;
          };
          r2.readUint16 = function readUint16(t3, r3) {
            return t3[r3] << 8 | t3[r3 + 1];
          };
          r2.readUint32 = function readUint32(t3, r3) {
            return (t3[r3] << 24 | t3[r3 + 1] << 16 | t3[r3 + 2] << 8 | t3[r3 + 3]) >>> 0;
          };
          r2.recoverJsURL = function recoverJsURL(t3) {
            var r3 = new RegExp("^\\s*(" + ["app.launchURL", "window.open", "xfa.host.gotoURL"].join("|").split(".").join("\\.") + `)\\((?:'|")([^'"]*)(?:'|")(?:,\\s*(\\w+)\\)|\\))`, "i").exec(t3);
            if (r3 && r3[2]) {
              var o3 = r3[2], c2 = false;
              r3[3] === "true" && r3[1] === "app.launchURL" && (c2 = true);
              return { url: o3, newWindow: c2 };
            }
            return null;
          };
          r2.toRomanNumerals = function toRomanNumerals(t3) {
            var r3 = arguments.length > 1 && arguments[1] !== void 0 && arguments[1];
            (0, c.assert)(Number.isInteger(t3) && t3 > 0, "The number should be a positive integer.");
            var o3, l2 = [];
            for (; t3 >= 1e3; ) {
              t3 -= 1e3;
              l2.push("M");
            }
            o3 = t3 / 100 | 0;
            t3 %= 100;
            l2.push(v[o3]);
            o3 = t3 / 10 | 0;
            t3 %= 10;
            l2.push(v[10 + o3]);
            l2.push(v[20 + t3]);
            var u2 = l2.join("");
            return r3 ? u2.toLowerCase() : u2;
          };
          r2.validateCSSFont = function validateCSSFont(t3) {
            var r3 = /* @__PURE__ */ new Set(["100", "200", "300", "400", "500", "600", "700", "800", "900", "1000", "normal", "bold", "bolder", "lighter"]), o3 = t3.fontFamily, l2 = t3.fontWeight, u2 = t3.italicAngle;
            if (/^".*"$/.test(o3)) {
              if (/[^\\]"/.test(o3.slice(1, o3.length - 1))) {
                (0, c.warn)('XFA - FontFamily contains some unescaped ": '.concat(o3, "."));
                return false;
              }
            } else if (/^'.*'$/.test(o3)) {
              if (/[^\\]'/.test(o3.slice(1, o3.length - 1))) {
                (0, c.warn)("XFA - FontFamily contains some unescaped ': ".concat(o3, "."));
                return false;
              }
            } else {
              var h2, d2 = _createForOfIteratorHelper(o3.split(/[ \t]+/));
              try {
                for (d2.s(); !(h2 = d2.n()).done; ) {
                  var g2 = h2.value;
                  if (/^(\d|(-(\d|-)))/.test(g2) || !/^[\w-\\]+$/.test(g2)) {
                    (0, c.warn)("XFA - FontFamily contains some invalid <custom-ident>: ".concat(o3, "."));
                    return false;
                  }
                }
              } catch (t4) {
                d2.e(t4);
              } finally {
                d2.f();
              }
            }
            var m2 = l2 ? l2.toString() : "";
            t3.fontWeight = r3.has(m2) ? m2 : "400";
            var y2 = parseFloat(u2);
            t3.italicAngle = isNaN(y2) || y2 < -90 || y2 > 90 ? "14" : u2.toString();
            return true;
          };
          var c = o2(4), l = o2(158), u = o2(162);
          function _createForOfIteratorHelper(t3, r3) {
            var o3 = typeof Symbol != "undefined" && t3[Symbol.iterator] || t3["@@iterator"];
            if (!o3) {
              if (Array.isArray(t3) || (o3 = function _unsupportedIterableToArray(t4, r4) {
                if (!t4)
                  return;
                if (typeof t4 == "string")
                  return _arrayLikeToArray(t4, r4);
                var o4 = Object.prototype.toString.call(t4).slice(8, -1);
                o4 === "Object" && t4.constructor && (o4 = t4.constructor.name);
                if (o4 === "Map" || o4 === "Set")
                  return Array.from(t4);
                if (o4 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(o4))
                  return _arrayLikeToArray(t4, r4);
              }(t3)) || r3 && t3 && typeof t3.length == "number") {
                o3 && (t3 = o3);
                var c2 = 0, l2 = function F() {
                };
                return { s: l2, n: function n() {
                  return c2 >= t3.length ? { done: true } : { done: false, value: t3[c2++] };
                }, e: function e(t4) {
                  throw t4;
                }, f: l2 };
              }
              throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
            }
            var u2, h2 = true, d2 = false;
            return { s: function s() {
              o3 = o3.call(t3);
            }, n: function n() {
              var t4 = o3.next();
              h2 = t4.done;
              return t4;
            }, e: function e(t4) {
              d2 = true;
              u2 = t4;
            }, f: function f() {
              try {
                h2 || o3.return == null || o3.return();
              } finally {
                if (d2)
                  throw u2;
              }
            } };
          }
          function _arrayLikeToArray(t3, r3) {
            (r3 == null || r3 > t3.length) && (r3 = t3.length);
            for (var o3 = 0, c2 = new Array(r3); o3 < r3; o3++)
              c2[o3] = t3[o3];
            return c2;
          }
          function _defineProperties(t3, r3) {
            for (var o3 = 0; o3 < r3.length; o3++) {
              var c2 = r3[o3];
              c2.enumerable = c2.enumerable || false;
              c2.configurable = true;
              "value" in c2 && (c2.writable = true);
              Object.defineProperty(t3, c2.key, c2);
            }
          }
          function _createClass(t3, r3, o3) {
            r3 && _defineProperties(t3.prototype, r3);
            o3 && _defineProperties(t3, o3);
            Object.defineProperty(t3, "prototype", { writable: false });
            return t3;
          }
          function _classCallCheck(t3, r3) {
            if (!(t3 instanceof r3))
              throw new TypeError("Cannot call a class as a function");
          }
          function _inherits(t3, r3) {
            if (typeof r3 != "function" && r3 !== null)
              throw new TypeError("Super expression must either be null or a function");
            t3.prototype = Object.create(r3 && r3.prototype, { constructor: { value: t3, writable: true, configurable: true } });
            Object.defineProperty(t3, "prototype", { writable: false });
            r3 && _setPrototypeOf(t3, r3);
          }
          function _setPrototypeOf(t3, r3) {
            _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(t4, r4) {
              t4.__proto__ = r4;
              return t4;
            };
            return _setPrototypeOf(t3, r3);
          }
          function _createSuper(t3) {
            var r3 = function _isNativeReflectConstruct() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                }));
                return true;
              } catch (t4) {
                return false;
              }
            }();
            return function _createSuperInternal() {
              var o3, c2 = _getPrototypeOf(t3);
              if (r3) {
                var l2 = _getPrototypeOf(this).constructor;
                o3 = Reflect.construct(c2, arguments, l2);
              } else
                o3 = c2.apply(this, arguments);
              return _possibleConstructorReturn(this, o3);
            };
          }
          function _possibleConstructorReturn(t3, r3) {
            if (r3 && (_typeof(r3) === "object" || typeof r3 == "function"))
              return r3;
            if (r3 !== void 0)
              throw new TypeError("Derived constructors may only return object or undefined");
            return function _assertThisInitialized(t4) {
              if (t4 === void 0)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return t4;
            }(t3);
          }
          function _getPrototypeOf(t3) {
            _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(t4) {
              return t4.__proto__ || Object.getPrototypeOf(t4);
            };
            return _getPrototypeOf(t3);
          }
          var h = function(t3) {
            _inherits(MissingDataException, t3);
            var r3 = _createSuper(MissingDataException);
            function MissingDataException(t4, o3) {
              var c2;
              _classCallCheck(this, MissingDataException);
              (c2 = r3.call(this, "Missing data [".concat(t4, ", ").concat(o3, ")"), "MissingDataException")).begin = t4;
              c2.end = o3;
              return c2;
            }
            return _createClass(MissingDataException);
          }(c.BaseException);
          r2.MissingDataException = h;
          var d = function(t3) {
            _inherits(ParserEOFException, t3);
            var r3 = _createSuper(ParserEOFException);
            function ParserEOFException(t4) {
              _classCallCheck(this, ParserEOFException);
              return r3.call(this, t4, "ParserEOFException");
            }
            return _createClass(ParserEOFException);
          }(c.BaseException);
          r2.ParserEOFException = d;
          var g = function(t3) {
            _inherits(XRefEntryException, t3);
            var r3 = _createSuper(XRefEntryException);
            function XRefEntryException(t4) {
              _classCallCheck(this, XRefEntryException);
              return r3.call(this, t4, "XRefEntryException");
            }
            return _createClass(XRefEntryException);
          }(c.BaseException);
          r2.XRefEntryException = g;
          var m = function(t3) {
            _inherits(XRefParseException, t3);
            var r3 = _createSuper(XRefParseException);
            function XRefParseException(t4) {
              _classCallCheck(this, XRefParseException);
              return r3.call(this, t4, "XRefParseException");
            }
            return _createClass(XRefParseException);
          }(c.BaseException);
          r2.XRefParseException = m;
          var y = function() {
            function DocStats(t3) {
              _classCallCheck(this, DocStats);
              this._handler = t3;
              this._streamTypes = /* @__PURE__ */ new Set();
              this._fontTypes = /* @__PURE__ */ new Set();
            }
            _createClass(DocStats, [{ key: "_send", value: function _send() {
              var t3, r3 = /* @__PURE__ */ Object.create(null), o3 = /* @__PURE__ */ Object.create(null), c2 = _createForOfIteratorHelper(this._streamTypes);
              try {
                for (c2.s(); !(t3 = c2.n()).done; ) {
                  r3[t3.value] = true;
                }
              } catch (t4) {
                c2.e(t4);
              } finally {
                c2.f();
              }
              var l2, u2 = _createForOfIteratorHelper(this._fontTypes);
              try {
                for (u2.s(); !(l2 = u2.n()).done; ) {
                  o3[l2.value] = true;
                }
              } catch (t4) {
                u2.e(t4);
              } finally {
                u2.f();
              }
              this._handler.send("DocStats", { streamTypes: r3, fontTypes: o3 });
            } }, { key: "addStreamType", value: function addStreamType(t3) {
              if (!this._streamTypes.has(t3)) {
                this._streamTypes.add(t3);
                this._send();
              }
            } }, { key: "addFontType", value: function addFontType(t3) {
              if (!this._fontTypes.has(t3)) {
                this._fontTypes.add(t3);
                this._send();
              }
            } }]);
            return DocStats;
          }();
          r2.DocStats = y;
          function getInheritableProperty(t3) {
            for (var r3, o3 = t3.dict, c2 = t3.key, u2 = t3.getArray, h2 = u2 !== void 0 && u2, d2 = t3.stopWhenFound, g2 = d2 === void 0 || d2, m2 = new l.RefSet(); o3 instanceof l.Dict && (!o3.objId || !m2.has(o3.objId)); ) {
              o3.objId && m2.put(o3.objId);
              var y2 = h2 ? o3.getArray(c2) : o3.get(c2);
              if (y2 !== void 0) {
                if (g2)
                  return y2;
                r3 || (r3 = []);
                r3.push(y2);
              }
              o3 = o3.get("Parent");
            }
            return r3;
          }
          var v = ["", "C", "CC", "CCC", "CD", "D", "DC", "DCC", "DCCC", "CM", "", "X", "XX", "XXX", "XL", "L", "LX", "LXX", "LXXX", "XC", "", "I", "II", "III", "IV", "V", "VI", "VII", "VIII", "IX"];
          function _collectJS(t3, r3, o3, h2) {
            if (t3) {
              var d2 = null;
              if (t3 instanceof l.Ref) {
                if (h2.has(t3))
                  return;
                d2 = t3;
                h2.put(d2);
                t3 = r3.fetch(t3);
              }
              if (Array.isArray(t3)) {
                var g2, m2 = _createForOfIteratorHelper(t3);
                try {
                  for (m2.s(); !(g2 = m2.n()).done; ) {
                    _collectJS(g2.value, r3, o3, h2);
                  }
                } catch (t4) {
                  m2.e(t4);
                } finally {
                  m2.f();
                }
              } else if (t3 instanceof l.Dict) {
                if ((0, l.isName)(t3.get("S"), "JavaScript")) {
                  var y2, v2 = t3.get("JS");
                  v2 instanceof u.BaseStream ? y2 = v2.getString() : typeof v2 == "string" && (y2 = v2);
                  (y2 = y2 && (0, c.stringToPDFString)(y2)) && o3.push(y2);
                }
                _collectJS(t3.getRaw("Next"), r3, o3, h2);
              }
              d2 && h2.remove(d2);
            }
          }
          var k = { 60: "&lt;", 62: "&gt;", 38: "&amp;", 34: "&quot;", 39: "&apos;" };
        }, (t2, r2, o2) => {
          "use strict";
          Object.defineProperty(r2, "__esModule", { value: true });
          r2.BaseStream = void 0;
          var c = o2(4);
          function _defineProperties(t3, r3) {
            for (var o3 = 0; o3 < r3.length; o3++) {
              var c2 = r3[o3];
              c2.enumerable = c2.enumerable || false;
              c2.configurable = true;
              "value" in c2 && (c2.writable = true);
              Object.defineProperty(t3, c2.key, c2);
            }
          }
          var l = function() {
            function BaseStream() {
              !function _classCallCheck(t3, r3) {
                if (!(t3 instanceof r3))
                  throw new TypeError("Cannot call a class as a function");
              }(this, BaseStream);
              this.constructor === BaseStream && (0, c.unreachable)("Cannot initialize BaseStream.");
            }
            !function _createClass(t3, r3, o3) {
              r3 && _defineProperties(t3.prototype, r3);
              o3 && _defineProperties(t3, o3);
              Object.defineProperty(t3, "prototype", { writable: false });
              return t3;
            }(BaseStream, [{ key: "length", get: function get() {
              (0, c.unreachable)("Abstract getter `length` accessed");
            } }, { key: "isEmpty", get: function get() {
              (0, c.unreachable)("Abstract getter `isEmpty` accessed");
            } }, { key: "isDataLoaded", get: function get() {
              return (0, c.shadow)(this, "isDataLoaded", true);
            } }, { key: "getByte", value: function getByte() {
              (0, c.unreachable)("Abstract method `getByte` called");
            } }, { key: "getBytes", value: function getBytes(t3) {
              (0, c.unreachable)("Abstract method `getBytes` called");
            } }, { key: "peekByte", value: function peekByte() {
              var t3 = this.getByte();
              t3 !== -1 && this.pos--;
              return t3;
            } }, { key: "peekBytes", value: function peekBytes(t3) {
              var r3 = this.getBytes(t3);
              this.pos -= r3.length;
              return r3;
            } }, { key: "getUint16", value: function getUint16() {
              var t3 = this.getByte(), r3 = this.getByte();
              return t3 === -1 || r3 === -1 ? -1 : (t3 << 8) + r3;
            } }, { key: "getInt32", value: function getInt32() {
              return (this.getByte() << 24) + (this.getByte() << 16) + (this.getByte() << 8) + this.getByte();
            } }, { key: "getByteRange", value: function getByteRange(t3, r3) {
              (0, c.unreachable)("Abstract method `getByteRange` called");
            } }, { key: "getString", value: function getString(t3) {
              return (0, c.bytesToString)(this.getBytes(t3));
            } }, { key: "skip", value: function skip(t3) {
              this.pos += t3 || 1;
            } }, { key: "reset", value: function reset() {
              (0, c.unreachable)("Abstract method `reset` called");
            } }, { key: "moveStart", value: function moveStart() {
              (0, c.unreachable)("Abstract method `moveStart` called");
            } }, { key: "makeSubStream", value: function makeSubStream(t3, r3) {
              (0, c.unreachable)("Abstract method `makeSubStream` called");
            } }, { key: "getBaseStreams", value: function getBaseStreams() {
              return null;
            } }]);
            return BaseStream;
          }();
          r2.BaseStream = l;
        }, (t2, r2, o2) => {
          "use strict";
          function _typeof(t3) {
            return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t4) {
              return typeof t4;
            } : function(t4) {
              return t4 && typeof Symbol == "function" && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
            }, _typeof(t3);
          }
          Object.defineProperty(r2, "__esModule", { value: true });
          r2.StringStream = r2.Stream = r2.NullStream = void 0;
          var c = o2(162), l = o2(4);
          function _classCallCheck(t3, r3) {
            if (!(t3 instanceof r3))
              throw new TypeError("Cannot call a class as a function");
          }
          function _defineProperties(t3, r3) {
            for (var o3 = 0; o3 < r3.length; o3++) {
              var c2 = r3[o3];
              c2.enumerable = c2.enumerable || false;
              c2.configurable = true;
              "value" in c2 && (c2.writable = true);
              Object.defineProperty(t3, c2.key, c2);
            }
          }
          function _createClass(t3, r3, o3) {
            r3 && _defineProperties(t3.prototype, r3);
            o3 && _defineProperties(t3, o3);
            Object.defineProperty(t3, "prototype", { writable: false });
            return t3;
          }
          function _inherits(t3, r3) {
            if (typeof r3 != "function" && r3 !== null)
              throw new TypeError("Super expression must either be null or a function");
            t3.prototype = Object.create(r3 && r3.prototype, { constructor: { value: t3, writable: true, configurable: true } });
            Object.defineProperty(t3, "prototype", { writable: false });
            r3 && _setPrototypeOf(t3, r3);
          }
          function _setPrototypeOf(t3, r3) {
            _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(t4, r4) {
              t4.__proto__ = r4;
              return t4;
            };
            return _setPrototypeOf(t3, r3);
          }
          function _createSuper(t3) {
            var r3 = function _isNativeReflectConstruct() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                }));
                return true;
              } catch (t4) {
                return false;
              }
            }();
            return function _createSuperInternal() {
              var o3, c2 = _getPrototypeOf(t3);
              if (r3) {
                var l2 = _getPrototypeOf(this).constructor;
                o3 = Reflect.construct(c2, arguments, l2);
              } else
                o3 = c2.apply(this, arguments);
              return _possibleConstructorReturn(this, o3);
            };
          }
          function _possibleConstructorReturn(t3, r3) {
            if (r3 && (_typeof(r3) === "object" || typeof r3 == "function"))
              return r3;
            if (r3 !== void 0)
              throw new TypeError("Derived constructors may only return object or undefined");
            return function _assertThisInitialized(t4) {
              if (t4 === void 0)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return t4;
            }(t3);
          }
          function _getPrototypeOf(t3) {
            _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(t4) {
              return t4.__proto__ || Object.getPrototypeOf(t4);
            };
            return _getPrototypeOf(t3);
          }
          var u = function(t3) {
            _inherits(Stream, t3);
            var r3 = _createSuper(Stream);
            function Stream(t4, o3, c2, l2) {
              var u2;
              _classCallCheck(this, Stream);
              (u2 = r3.call(this)).bytes = t4 instanceof Uint8Array ? t4 : new Uint8Array(t4);
              u2.start = o3 || 0;
              u2.pos = u2.start;
              u2.end = o3 + c2 || u2.bytes.length;
              u2.dict = l2;
              return u2;
            }
            _createClass(Stream, [{ key: "length", get: function get() {
              return this.end - this.start;
            } }, { key: "isEmpty", get: function get() {
              return this.length === 0;
            } }, { key: "getByte", value: function getByte() {
              return this.pos >= this.end ? -1 : this.bytes[this.pos++];
            } }, { key: "getBytes", value: function getBytes(t4) {
              var r4 = this.bytes, o3 = this.pos, c2 = this.end;
              if (!t4)
                return r4.subarray(o3, c2);
              var l2 = o3 + t4;
              l2 > c2 && (l2 = c2);
              this.pos = l2;
              return r4.subarray(o3, l2);
            } }, { key: "getByteRange", value: function getByteRange(t4, r4) {
              t4 < 0 && (t4 = 0);
              r4 > this.end && (r4 = this.end);
              return this.bytes.subarray(t4, r4);
            } }, { key: "reset", value: function reset() {
              this.pos = this.start;
            } }, { key: "moveStart", value: function moveStart() {
              this.start = this.pos;
            } }, { key: "makeSubStream", value: function makeSubStream(t4, r4) {
              var o3 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null;
              return new Stream(this.bytes.buffer, t4, r4, o3);
            } }]);
            return Stream;
          }(c.BaseStream);
          r2.Stream = u;
          var h = function(t3) {
            _inherits(StringStream, t3);
            var r3 = _createSuper(StringStream);
            function StringStream(t4) {
              _classCallCheck(this, StringStream);
              return r3.call(this, (0, l.stringToBytes)(t4));
            }
            return _createClass(StringStream);
          }(u);
          r2.StringStream = h;
          var d = function(t3) {
            _inherits(NullStream, t3);
            var r3 = _createSuper(NullStream);
            function NullStream() {
              _classCallCheck(this, NullStream);
              return r3.call(this, new Uint8Array(0));
            }
            return _createClass(NullStream);
          }(u);
          r2.NullStream = d;
        }, (t2, r2, o2) => {
          "use strict";
          Object.defineProperty(r2, "__esModule", { value: true });
          r2.Page = r2.PDFDocument = void 0;
          var c = function _interopRequireDefault(t3) {
            return t3 && t3.__esModule ? t3 : { default: t3 };
          }(o2(2)), l = o2(4), u = o2(161), h = o2(158), d = o2(165), g = o2(175), m = o2(162), y = o2(227), v = o2(218), k = o2(220), _ = o2(253), w = o2(180), S = o2(163), C = o2(225), x = o2(215), O = o2(178), T = o2(182), E = o2(224), M = o2(229), R = o2(254);
          function _typeof(t3) {
            return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t4) {
              return typeof t4;
            } : function(t4) {
              return t4 && typeof Symbol == "function" && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
            }, _typeof(t3);
          }
          function _defineProperty(t3, r3, o3) {
            r3 in t3 ? Object.defineProperty(t3, r3, { value: o3, enumerable: true, configurable: true, writable: true }) : t3[r3] = o3;
            return t3;
          }
          function asyncGeneratorStep(t3, r3, o3, c2, l2, u2, h2) {
            try {
              var d2 = t3[u2](h2), g2 = d2.value;
            } catch (t4) {
              o3(t4);
              return;
            }
            d2.done ? r3(g2) : Promise.resolve(g2).then(c2, l2);
          }
          function _asyncToGenerator(t3) {
            return function() {
              var r3 = this, o3 = arguments;
              return new Promise(function(c2, l2) {
                var u2 = t3.apply(r3, o3);
                function _next(t4) {
                  asyncGeneratorStep(u2, c2, l2, _next, _throw, "next", t4);
                }
                function _throw(t4) {
                  asyncGeneratorStep(u2, c2, l2, _next, _throw, "throw", t4);
                }
                _next(void 0);
              });
            };
          }
          function _slicedToArray(t3, r3) {
            return function _arrayWithHoles(t4) {
              if (Array.isArray(t4))
                return t4;
            }(t3) || function _iterableToArrayLimit(t4, r4) {
              var o3 = t4 == null ? null : typeof Symbol != "undefined" && t4[Symbol.iterator] || t4["@@iterator"];
              if (o3 == null)
                return;
              var c2, l2, u2 = [], h2 = true, d2 = false;
              try {
                for (o3 = o3.call(t4); !(h2 = (c2 = o3.next()).done); h2 = true) {
                  u2.push(c2.value);
                  if (r4 && u2.length === r4)
                    break;
                }
              } catch (t5) {
                d2 = true;
                l2 = t5;
              } finally {
                try {
                  h2 || o3.return == null || o3.return();
                } finally {
                  if (d2)
                    throw l2;
                }
              }
              return u2;
            }(t3, r3) || _unsupportedIterableToArray(t3, r3) || function _nonIterableRest() {
              throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
            }();
          }
          function _createForOfIteratorHelper(t3, r3) {
            var o3 = typeof Symbol != "undefined" && t3[Symbol.iterator] || t3["@@iterator"];
            if (!o3) {
              if (Array.isArray(t3) || (o3 = _unsupportedIterableToArray(t3)) || r3 && t3 && typeof t3.length == "number") {
                o3 && (t3 = o3);
                var c2 = 0, l2 = function F() {
                };
                return { s: l2, n: function n() {
                  return c2 >= t3.length ? { done: true } : { done: false, value: t3[c2++] };
                }, e: function e(t4) {
                  throw t4;
                }, f: l2 };
              }
              throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
            }
            var u2, h2 = true, d2 = false;
            return { s: function s() {
              o3 = o3.call(t3);
            }, n: function n() {
              var t4 = o3.next();
              h2 = t4.done;
              return t4;
            }, e: function e(t4) {
              d2 = true;
              u2 = t4;
            }, f: function f() {
              try {
                h2 || o3.return == null || o3.return();
              } finally {
                if (d2)
                  throw u2;
              }
            } };
          }
          function _unsupportedIterableToArray(t3, r3) {
            if (t3) {
              if (typeof t3 == "string")
                return _arrayLikeToArray(t3, r3);
              var o3 = Object.prototype.toString.call(t3).slice(8, -1);
              o3 === "Object" && t3.constructor && (o3 = t3.constructor.name);
              return o3 === "Map" || o3 === "Set" ? Array.from(t3) : o3 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(o3) ? _arrayLikeToArray(t3, r3) : void 0;
            }
          }
          function _arrayLikeToArray(t3, r3) {
            (r3 == null || r3 > t3.length) && (r3 = t3.length);
            for (var o3 = 0, c2 = new Array(r3); o3 < r3; o3++)
              c2[o3] = t3[o3];
            return c2;
          }
          function _setPrototypeOf(t3, r3) {
            _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(t4, r4) {
              t4.__proto__ = r4;
              return t4;
            };
            return _setPrototypeOf(t3, r3);
          }
          function _createSuper(t3) {
            var r3 = function _isNativeReflectConstruct() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                }));
                return true;
              } catch (t4) {
                return false;
              }
            }();
            return function _createSuperInternal() {
              var o3, c2 = _getPrototypeOf(t3);
              if (r3) {
                var l2 = _getPrototypeOf(this).constructor;
                o3 = Reflect.construct(c2, arguments, l2);
              } else
                o3 = c2.apply(this, arguments);
              return _possibleConstructorReturn(this, o3);
            };
          }
          function _possibleConstructorReturn(t3, r3) {
            if (r3 && (_typeof(r3) === "object" || typeof r3 == "function"))
              return r3;
            if (r3 !== void 0)
              throw new TypeError("Derived constructors may only return object or undefined");
            return function _assertThisInitialized(t4) {
              if (t4 === void 0)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return t4;
            }(t3);
          }
          function _getPrototypeOf(t3) {
            _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(t4) {
              return t4.__proto__ || Object.getPrototypeOf(t4);
            };
            return _getPrototypeOf(t3);
          }
          function _classCallCheck(t3, r3) {
            if (!(t3 instanceof r3))
              throw new TypeError("Cannot call a class as a function");
          }
          function _defineProperties(t3, r3) {
            for (var o3 = 0; o3 < r3.length; o3++) {
              var c2 = r3[o3];
              c2.enumerable = c2.enumerable || false;
              c2.configurable = true;
              "value" in c2 && (c2.writable = true);
              Object.defineProperty(t3, c2.key, c2);
            }
          }
          function _createClass(t3, r3, o3) {
            r3 && _defineProperties(t3.prototype, r3);
            o3 && _defineProperties(t3, o3);
            Object.defineProperty(t3, "prototype", { writable: false });
            return t3;
          }
          var D = [0, 0, 612, 792], j = function() {
            function Page(t4) {
              var r3 = t4.pdfManager, o3 = t4.xref, c2 = t4.pageIndex, l2 = t4.pageDict, u2 = t4.ref, h2 = t4.globalIdFactory, d2 = t4.fontCache, g2 = t4.builtInCMapCache, m2 = t4.standardFontDataCache, y2 = t4.globalImageCache, v2 = t4.nonBlendModesSet, k2 = t4.xfaFactory;
              _classCallCheck(this, Page);
              this.pdfManager = r3;
              this.pageIndex = c2;
              this.pageDict = l2;
              this.xref = o3;
              this.ref = u2;
              this.fontCache = d2;
              this.builtInCMapCache = g2;
              this.standardFontDataCache = m2;
              this.globalImageCache = y2;
              this.nonBlendModesSet = v2;
              this.evaluatorOptions = r3.evaluatorOptions;
              this.resourcesPromise = null;
              this.xfaFactory = k2;
              var _2 = { obj: 0 };
              this._localIdFactory = function(t5) {
                !function _inherits(t6, r5) {
                  if (typeof r5 != "function" && r5 !== null)
                    throw new TypeError("Super expression must either be null or a function");
                  t6.prototype = Object.create(r5 && r5.prototype, { constructor: { value: t6, writable: true, configurable: true } });
                  Object.defineProperty(t6, "prototype", { writable: false });
                  r5 && _setPrototypeOf(t6, r5);
                }(_class, t5);
                var r4 = _createSuper(_class);
                function _class() {
                  _classCallCheck(this, _class);
                  return r4.apply(this, arguments);
                }
                _createClass(_class, null, [{ key: "createObjId", value: function createObjId() {
                  return "p".concat(c2, "_").concat(++_2.obj);
                } }, { key: "getPageObjId", value: function getPageObjId() {
                  return "page".concat(u2.toString());
                } }]);
                return _class;
              }(h2);
            }
            _createClass(Page, [{ key: "_getInheritableProperty", value: function _getInheritableProperty(t4) {
              var r3 = arguments.length > 1 && arguments[1] !== void 0 && arguments[1], o3 = (0, u.getInheritableProperty)({ dict: this.pageDict, key: t4, getArray: r3, stopWhenFound: false });
              return Array.isArray(o3) ? o3.length !== 1 && o3[0] instanceof h.Dict ? h.Dict.merge({ xref: this.xref, dictArray: o3 }) : o3[0] : o3;
            } }, { key: "content", get: function get() {
              return this.pageDict.getArray("Contents");
            } }, { key: "resources", get: function get() {
              return (0, l.shadow)(this, "resources", this._getInheritableProperty("Resources") || h.Dict.empty);
            } }, { key: "_getBoundingBox", value: function _getBoundingBox(t4) {
              if (this.xfaData)
                return this.xfaData.bbox;
              var r3 = this._getInheritableProperty(t4, true);
              if (Array.isArray(r3) && r3.length === 4) {
                if (r3[2] - r3[0] != 0 && r3[3] - r3[1] != 0)
                  return r3;
                (0, l.warn)("Empty /".concat(t4, " entry."));
              }
              return null;
            } }, { key: "mediaBox", get: function get() {
              return (0, l.shadow)(this, "mediaBox", this._getBoundingBox("MediaBox") || D);
            } }, { key: "cropBox", get: function get() {
              return (0, l.shadow)(this, "cropBox", this._getBoundingBox("CropBox") || this.mediaBox);
            } }, { key: "userUnit", get: function get() {
              var t4 = this.pageDict.get("UserUnit");
              (typeof t4 != "number" || t4 <= 0) && (t4 = 1);
              return (0, l.shadow)(this, "userUnit", t4);
            } }, { key: "view", get: function get() {
              var t4, r3 = this.cropBox, o3 = this.mediaBox;
              if (r3 === o3 || (0, l.isArrayEqual)(r3, o3))
                t4 = o3;
              else {
                var c2 = l.Util.intersect(r3, o3);
                c2 && c2[2] - c2[0] != 0 && c2[3] - c2[1] != 0 ? t4 = c2 : (0, l.warn)("Empty /CropBox and /MediaBox intersection.");
              }
              return (0, l.shadow)(this, "view", t4 || o3);
            } }, { key: "rotate", get: function get() {
              var t4 = this._getInheritableProperty("Rotate") || 0;
              t4 % 90 != 0 ? t4 = 0 : t4 >= 360 ? t4 %= 360 : t4 < 0 && (t4 = (t4 % 360 + 360) % 360);
              return (0, l.shadow)(this, "rotate", t4);
            } }, { key: "_onSubStreamError", value: function _onSubStreamError(t4, r3, o3) {
              if (!this.evaluatorOptions.ignoreErrors)
                throw r3;
              t4.send("UnsupportedFeature", { featureId: l.UNSUPPORTED_FEATURES.errorContentSubStream });
              (0, l.warn)("getContentStream - ignoring sub-stream (".concat(o3, '): "').concat(r3, '".'));
            } }, { key: "getContentStream", value: function getContentStream(t4) {
              var r3 = this;
              return this.pdfManager.ensure(this, "content").then(function(o3) {
                return o3 instanceof m.BaseStream ? o3 : Array.isArray(o3) ? new T.StreamsSequenceStream(o3, r3._onSubStreamError.bind(r3, t4)) : new S.NullStream();
              });
            } }, { key: "xfaData", get: function get() {
              return (0, l.shadow)(this, "xfaData", this.xfaFactory ? { bbox: this.xfaFactory.getBoundingBox(this.pageIndex) } : null);
            } }, { key: "save", value: function save(t4, r3, o3) {
              var c2 = new O.PartialEvaluator({ xref: this.xref, handler: t4, pageIndex: this.pageIndex, idFactory: this._localIdFactory, fontCache: this.fontCache, builtInCMapCache: this.builtInCMapCache, standardFontDataCache: this.standardFontDataCache, globalImageCache: this.globalImageCache, options: this.evaluatorOptions });
              return this._parsedAnnotations.then(function(t5) {
                var u2, h2 = [], d2 = _createForOfIteratorHelper(t5);
                try {
                  for (d2.s(); !(u2 = d2.n()).done; ) {
                    var g2 = u2.value;
                    g2.mustBePrinted(o3) && h2.push(g2.save(c2, r3, o3).catch(function(t6) {
                      (0, l.warn)("save - ignoring annotation data during " + '"'.concat(r3.name, '" task: "').concat(t6, '".'));
                      return null;
                    }));
                  }
                } catch (t6) {
                  d2.e(t6);
                } finally {
                  d2.f();
                }
                return Promise.all(h2);
              });
            } }, { key: "loadResources", value: function loadResources(t4) {
              var r3 = this;
              this.resourcesPromise || (this.resourcesPromise = this.pdfManager.ensure(this, "resources"));
              return this.resourcesPromise.then(function() {
                return new C.ObjectLoader(r3.resources, t4, r3.xref).load();
              });
            } }, { key: "getOperatorList", value: function getOperatorList(t4) {
              var r3 = this, o3 = t4.handler, c2 = t4.sink, u2 = t4.task, h2 = t4.intent, d2 = t4.cacheKey, g2 = t4.annotationStorage, m2 = g2 === void 0 ? null : g2, y2 = this.getContentStream(o3), v2 = this.loadResources(["ColorSpace", "ExtGState", "Font", "Pattern", "Properties", "Shading", "XObject"]), k2 = new O.PartialEvaluator({ xref: this.xref, handler: o3, pageIndex: this.pageIndex, idFactory: this._localIdFactory, fontCache: this.fontCache, builtInCMapCache: this.builtInCMapCache, standardFontDataCache: this.standardFontDataCache, globalImageCache: this.globalImageCache, options: this.evaluatorOptions }), _2 = Promise.all([y2, v2]).then(function(t5) {
                var l2 = _slicedToArray(t5, 1)[0], g3 = new x.OperatorList(h2, c2);
                o3.send("StartRenderPage", { transparency: k2.hasBlendModes(r3.resources, r3.nonBlendModesSet), pageIndex: r3.pageIndex, cacheKey: d2 });
                return k2.getOperatorList({ stream: l2, task: u2, resources: r3.resources, operatorList: g3 }).then(function() {
                  return g3;
                });
              });
              return Promise.all([_2, this._parsedAnnotations]).then(function(t5) {
                var r4 = _slicedToArray(t5, 2), o4 = r4[0], c3 = r4[1];
                if (c3.length === 0 || h2 & l.RenderingIntentFlag.ANNOTATIONS_DISABLE) {
                  o4.flush(true);
                  return { length: o4.totalLength };
                }
                var d3, g3 = !!(h2 & l.RenderingIntentFlag.ANNOTATIONS_FORMS), y3 = !!(h2 & l.RenderingIntentFlag.ANY), v3 = !!(h2 & l.RenderingIntentFlag.DISPLAY), _3 = !!(h2 & l.RenderingIntentFlag.PRINT), w2 = [], S2 = _createForOfIteratorHelper(c3);
                try {
                  for (S2.s(); !(d3 = S2.n()).done; ) {
                    var C2 = d3.value;
                    (y3 || v3 && C2.mustBeViewed(m2) || _3 && C2.mustBePrinted(m2)) && w2.push(C2.getOperatorList(k2, u2, h2, g3, m2).catch(function(t6) {
                      (0, l.warn)("getOperatorList - ignoring annotation data during " + '"'.concat(u2.name, '" task: "').concat(t6, '".'));
                      return null;
                    }));
                  }
                } catch (t6) {
                  S2.e(t6);
                } finally {
                  S2.f();
                }
                return Promise.all(w2).then(function(t6) {
                  o4.addOp(l.OPS.beginAnnotations, []);
                  var r5, c4 = _createForOfIteratorHelper(t6);
                  try {
                    for (c4.s(); !(r5 = c4.n()).done; ) {
                      var u3 = r5.value;
                      o4.addOpList(u3);
                    }
                  } catch (t7) {
                    c4.e(t7);
                  } finally {
                    c4.f();
                  }
                  o4.addOp(l.OPS.endAnnotations, []);
                  o4.flush(true);
                  return { length: o4.totalLength };
                });
              });
            } }, { key: "extractTextContent", value: function extractTextContent(t4) {
              var r3 = this, o3 = t4.handler, c2 = t4.task, l2 = t4.includeMarkedContent, u2 = t4.sink, h2 = t4.combineTextItems, d2 = this.getContentStream(o3), g2 = this.loadResources(["ExtGState", "Font", "Properties", "XObject"]);
              return Promise.all([d2, g2]).then(function(t5) {
                var d3 = _slicedToArray(t5, 1)[0];
                return new O.PartialEvaluator({ xref: r3.xref, handler: o3, pageIndex: r3.pageIndex, idFactory: r3._localIdFactory, fontCache: r3.fontCache, builtInCMapCache: r3.builtInCMapCache, standardFontDataCache: r3.standardFontDataCache, globalImageCache: r3.globalImageCache, options: r3.evaluatorOptions }).getTextContent({ stream: d3, task: c2, resources: r3.resources, includeMarkedContent: l2, combineTextItems: h2, sink: u2, viewBox: r3.view });
              });
            } }, { key: "getStructTree", value: (t3 = _asyncToGenerator(c.default.mark(function _callee() {
              var t4, r3;
              return c.default.wrap(function _callee$(o3) {
                for (; ; )
                  switch (o3.prev = o3.next) {
                    case 0:
                      o3.next = 2;
                      return this.pdfManager.ensureCatalog("structTreeRoot");
                    case 2:
                      if (t4 = o3.sent) {
                        o3.next = 5;
                        break;
                      }
                      return o3.abrupt("return", null);
                    case 5:
                      o3.next = 7;
                      return this.pdfManager.ensure(this, "_parseStructTree", [t4]);
                    case 7:
                      r3 = o3.sent;
                      return o3.abrupt("return", r3.serializable);
                    case 9:
                    case "end":
                      return o3.stop();
                  }
              }, _callee, this);
            })), function getStructTree() {
              return t3.apply(this, arguments);
            }) }, { key: "_parseStructTree", value: function _parseStructTree(t4) {
              var r3 = new E.StructTreePage(t4, this.pageDict);
              r3.parse();
              return r3;
            } }, { key: "getAnnotationsData", value: function getAnnotationsData(t4) {
              return this._parsedAnnotations.then(function(r3) {
                var o3 = [];
                if (r3.length === 0)
                  return o3;
                var c2, u2 = !!(t4 & l.RenderingIntentFlag.ANY), h2 = !!(t4 & l.RenderingIntentFlag.DISPLAY), d2 = !!(t4 & l.RenderingIntentFlag.PRINT), g2 = _createForOfIteratorHelper(r3);
                try {
                  for (g2.s(); !(c2 = g2.n()).done; ) {
                    var m2 = c2.value;
                    (u2 || h2 && m2.viewable || d2 && m2.printable) && o3.push(m2.data);
                  }
                } catch (t5) {
                  g2.e(t5);
                } finally {
                  g2.f();
                }
                return o3;
              });
            } }, { key: "annotations", get: function get() {
              var t4 = this._getInheritableProperty("Annots");
              return (0, l.shadow)(this, "annotations", Array.isArray(t4) ? t4 : []);
            } }, { key: "_parsedAnnotations", get: function get() {
              var t4 = this, r3 = this.pdfManager.ensure(this, "annotations").then(function() {
                var r4, o3 = [], c2 = _createForOfIteratorHelper(t4.annotations);
                try {
                  for (c2.s(); !(r4 = c2.n()).done; ) {
                    var u2 = r4.value;
                    o3.push(g.AnnotationFactory.create(t4.xref, u2, t4.pdfManager, t4._localIdFactory, false).catch(function(t5) {
                      (0, l.warn)('_parsedAnnotations: "'.concat(t5, '".'));
                      return null;
                    }));
                  }
                } catch (t5) {
                  c2.e(t5);
                } finally {
                  c2.f();
                }
                return Promise.all(o3).then(function(t5) {
                  return t5.filter(function(t6) {
                    return !!t6;
                  });
                });
              });
              return (0, l.shadow)(this, "_parsedAnnotations", r3);
            } }, { key: "jsActions", get: function get() {
              var t4 = (0, u.collectActions)(this.xref, this.pageDict, l.PageActionEventType);
              return (0, l.shadow)(this, "jsActions", t4);
            } }]);
            var t3;
            return Page;
          }();
          r2.Page = j;
          var L = new Uint8Array([37, 80, 68, 70, 45]), N = new Uint8Array([115, 116, 97, 114, 116, 120, 114, 101, 102]), U = new Uint8Array([101, 110, 100, 111, 98, 106]), H = /^[1-9]\.\d$/;
          function find(t3, r3) {
            var o3 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 1024, c2 = arguments.length > 3 && arguments[3] !== void 0 && arguments[3], l2 = r3.length, u2 = t3.peekBytes(o3), h2 = u2.length - l2;
            if (h2 <= 0)
              return false;
            if (c2)
              for (var d2 = l2 - 1, g2 = u2.length - 1; g2 >= d2; ) {
                for (var m2 = 0; m2 < l2 && u2[g2 - m2] === r3[d2 - m2]; )
                  m2++;
                if (m2 >= l2) {
                  t3.pos += g2 - d2;
                  return true;
                }
                g2--;
              }
            else
              for (var y2 = 0; y2 <= h2; ) {
                for (var v2 = 0; v2 < l2 && u2[y2 + v2] === r3[v2]; )
                  v2++;
                if (v2 >= l2) {
                  t3.pos += y2;
                  return true;
                }
                y2++;
              }
            return false;
          }
          var $ = function() {
            function PDFDocument(t4, r4) {
              _classCallCheck(this, PDFDocument);
              if (r4.length <= 0)
                throw new l.InvalidPDFException("The PDF file is empty, i.e. its size is zero bytes.");
              this.pdfManager = t4;
              this.stream = r4;
              this.xref = new R.XRef(r4, t4);
              this._pagePromises = /* @__PURE__ */ new Map();
              this._version = null;
              var o4 = { font: 0 };
              this._globalIdFactory = function() {
                function _class2() {
                  _classCallCheck(this, _class2);
                }
                _createClass(_class2, null, [{ key: "getDocId", value: function getDocId() {
                  return "g_".concat(t4.docId);
                } }, { key: "createFontId", value: function createFontId() {
                  return "f".concat(++o4.font);
                } }, { key: "createObjId", value: function createObjId() {
                  (0, l.unreachable)("Abstract method `createObjId` called.");
                } }, { key: "getPageObjId", value: function getPageObjId() {
                  (0, l.unreachable)("Abstract method `getPageObjId` called.");
                } }]);
                return _class2;
              }();
            }
            _createClass(PDFDocument, [{ key: "parse", value: function parse(t4) {
              this.xref.parse(t4);
              this.catalog = new v.Catalog(this.pdfManager, this.xref);
              this.catalog.version && (this._version = this.catalog.version);
            } }, { key: "linearization", get: function get() {
              var t4 = null;
              try {
                t4 = w.Linearization.create(this.stream);
              } catch (t5) {
                if (t5 instanceof u.MissingDataException)
                  throw t5;
                (0, l.info)(t5);
              }
              return (0, l.shadow)(this, "linearization", t4);
            } }, { key: "startXRef", get: function get() {
              var t4 = this.stream, r4 = 0;
              if (this.linearization) {
                t4.reset();
                find(t4, U) && (r4 = t4.pos + 6 - t4.start);
              } else {
                for (var o4 = N.length, c2 = false, h2 = t4.end; !c2 && h2 > 0; ) {
                  (h2 -= 1024 - o4) < 0 && (h2 = 0);
                  t4.pos = h2;
                  c2 = find(t4, N, 1024, true);
                }
                if (c2) {
                  t4.skip(9);
                  var d2;
                  do {
                    d2 = t4.getByte();
                  } while ((0, u.isWhiteSpace)(d2));
                  for (var g2 = ""; d2 >= 32 && d2 <= 57; ) {
                    g2 += String.fromCharCode(d2);
                    d2 = t4.getByte();
                  }
                  r4 = parseInt(g2, 10);
                  isNaN(r4) && (r4 = 0);
                }
              }
              return (0, l.shadow)(this, "startXRef", r4);
            } }, { key: "checkHeader", value: function checkHeader() {
              var t4 = this.stream;
              t4.reset();
              if (find(t4, L)) {
                t4.moveStart();
                for (var r4, o4 = ""; (r4 = t4.getByte()) > 32 && !(o4.length >= 12); )
                  o4 += String.fromCharCode(r4);
                this._version || (this._version = o4.substring(5));
              }
            } }, { key: "parseStartXRef", value: function parseStartXRef() {
              this.xref.setStartXRef(this.startXRef);
            } }, { key: "numPages", get: function get() {
              var t4 = 0;
              t4 = this.catalog.hasActualNumPages ? this.catalog.numPages : this.xfaFactory ? this.xfaFactory.getNumPages() : this.linearization ? this.linearization.numPages : this.catalog.numPages;
              return (0, l.shadow)(this, "numPages", t4);
            } }, { key: "_hasOnlyDocumentSignatures", value: function _hasOnlyDocumentSignatures(t4) {
              var r4 = this, o4 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0, c2 = 10;
              return !!Array.isArray(t4) && t4.every(function(t5) {
                if (!((t5 = r4.xref.fetchIfRef(t5)) instanceof h.Dict))
                  return false;
                if (t5.has("Kids")) {
                  if (++o4 > c2) {
                    (0, l.warn)("_hasOnlyDocumentSignatures: maximum recursion depth reached");
                    return false;
                  }
                  return r4._hasOnlyDocumentSignatures(t5.get("Kids"), o4);
                }
                var u2 = (0, h.isName)(t5.get("FT"), "Sig"), d2 = t5.get("Rect"), g2 = Array.isArray(d2) && d2.every(function(t6) {
                  return t6 === 0;
                });
                return u2 && g2;
              });
            } }, { key: "_xfaStreams", get: function get() {
              var t4 = this.catalog.acroForm;
              if (!t4)
                return null;
              var r4 = t4.get("XFA"), o4 = { "xdp:xdp": "", template: "", datasets: "", config: "", connectionSet: "", localeSet: "", stylesheet: "", "/xdp:xdp": "" };
              if (r4 instanceof m.BaseStream && !r4.isEmpty) {
                o4["xdp:xdp"] = r4;
                return o4;
              }
              if (!Array.isArray(r4) || r4.length === 0)
                return null;
              for (var c2 = 0, l2 = r4.length; c2 < l2; c2 += 2) {
                var u2 = void 0;
                u2 = c2 === 0 ? "xdp:xdp" : c2 === l2 - 2 ? "/xdp:xdp" : r4[c2];
                if (o4.hasOwnProperty(u2)) {
                  var h2 = this.xref.fetchIfRef(r4[c2 + 1]);
                  h2 instanceof m.BaseStream && !h2.isEmpty && (o4[u2] = h2);
                }
              }
              return o4;
            } }, { key: "xfaDatasets", get: function get() {
              var t4 = this._xfaStreams;
              if (!t4)
                return (0, l.shadow)(this, "xfaDatasets", null);
              for (var r4 = 0, o4 = ["datasets", "xdp:xdp"]; r4 < o4.length; r4++) {
                var c2 = o4[r4], u2 = t4[c2];
                if (u2)
                  try {
                    var h2 = _defineProperty({}, c2, (0, l.stringToUTF8String)(u2.getString()));
                    return (0, l.shadow)(this, "xfaDatasets", new _.DatasetReader(h2));
                  } catch (t5) {
                    (0, l.warn)("XFA - Invalid utf-8 string.");
                    break;
                  }
              }
              return (0, l.shadow)(this, "xfaDatasets", null);
            } }, { key: "xfaData", get: function get() {
              var t4 = this._xfaStreams;
              if (!t4)
                return null;
              for (var r4 = /* @__PURE__ */ Object.create(null), o4 = 0, c2 = Object.entries(t4); o4 < c2.length; o4++) {
                var u2 = _slicedToArray(c2[o4], 2), h2 = u2[0], d2 = u2[1];
                if (d2)
                  try {
                    r4[h2] = (0, l.stringToUTF8String)(d2.getString());
                  } catch (t5) {
                    (0, l.warn)("XFA - Invalid utf-8 string.");
                    return null;
                  }
              }
              return r4;
            } }, { key: "xfaFactory", get: function get() {
              var t4;
              this.pdfManager.enableXfa && this.catalog.needsRendering && this.formInfo.hasXfa && !this.formInfo.hasAcroForm && (t4 = this.xfaData);
              return (0, l.shadow)(this, "xfaFactory", t4 ? new M.XFAFactory(t4) : null);
            } }, { key: "isPureXfa", get: function get() {
              return !!this.xfaFactory && this.xfaFactory.isValid();
            } }, { key: "htmlForXfa", get: function get() {
              return this.xfaFactory ? this.xfaFactory.getPages() : null;
            } }, { key: "loadXfaImages", value: ($2 = _asyncToGenerator(c.default.mark(function _callee2() {
              var t4, r4, o4, l2, u2, h2, d2, g2;
              return c.default.wrap(function _callee2$(c2) {
                for (; ; )
                  switch (c2.prev = c2.next) {
                    case 0:
                      c2.next = 2;
                      return this.pdfManager.ensureCatalog("xfaImages");
                    case 2:
                      if (t4 = c2.sent) {
                        c2.next = 5;
                        break;
                      }
                      return c2.abrupt("return");
                    case 5:
                      r4 = t4.getKeys();
                      o4 = new C.ObjectLoader(t4, r4, this.xref);
                      c2.next = 9;
                      return o4.load();
                    case 9:
                      l2 = /* @__PURE__ */ new Map();
                      u2 = _createForOfIteratorHelper(r4);
                      try {
                        for (u2.s(); !(h2 = u2.n()).done; ) {
                          d2 = h2.value;
                          (g2 = t4.get(d2)) instanceof m.BaseStream && l2.set(d2, g2.getBytes());
                        }
                      } catch (t5) {
                        u2.e(t5);
                      } finally {
                        u2.f();
                      }
                      this.xfaFactory.setImages(l2);
                    case 13:
                    case "end":
                      return c2.stop();
                  }
              }, _callee2, this);
            })), function loadXfaImages() {
              return $2.apply(this, arguments);
            }) }, { key: "loadXfaFonts", value: (D2 = _asyncToGenerator(c.default.mark(function _callee3(t4, r4) {
              var o4, g2, m2, y2, v2, k2, _2, w2, S3, T3, E3, M2, R2, D3, j2, L2, N2, U2, H2, $3, X, q, G, z, W, V, K, Y, J, Z, Q, ee, te, re;
              return c.default.wrap(function _callee3$(c2) {
                for (; ; )
                  switch (c2.prev = c2.next) {
                    case 0:
                      c2.next = 2;
                      return this.pdfManager.ensureCatalog("acroForm");
                    case 2:
                      if (o4 = c2.sent) {
                        c2.next = 5;
                        break;
                      }
                      return c2.abrupt("return");
                    case 5:
                      c2.next = 7;
                      return o4.getAsync("DR");
                    case 7:
                      if ((g2 = c2.sent) instanceof h.Dict) {
                        c2.next = 10;
                        break;
                      }
                      return c2.abrupt("return");
                    case 10:
                      m2 = new C.ObjectLoader(g2, ["Font"], this.xref);
                      c2.next = 13;
                      return m2.load();
                    case 13:
                      if ((y2 = g2.get("Font")) instanceof h.Dict) {
                        c2.next = 16;
                        break;
                      }
                      return c2.abrupt("return");
                    case 16:
                      (v2 = Object.assign(/* @__PURE__ */ Object.create(null), this.pdfManager.evaluatorOptions)).useSystemFonts = false;
                      k2 = new O.PartialEvaluator({ xref: this.xref, handler: t4, pageIndex: -1, idFactory: this._globalIdFactory, fontCache: this.catalog.fontCache, builtInCMapCache: this.catalog.builtInCMapCache, standardFontDataCache: this.catalog.standardFontDataCache, options: v2 });
                      _2 = new x.OperatorList();
                      w2 = [];
                      c2.t0 = function clone() {
                        return this;
                      };
                      S3 = { get font() {
                        return w2[w2.length - 1];
                      }, set font(t5) {
                        w2.push(t5);
                      }, clone: c2.t0 };
                      T3 = /* @__PURE__ */ new Map();
                      y2.forEach(function(t5, r5) {
                        T3.set(t5, r5);
                      });
                      E3 = [];
                      M2 = _createForOfIteratorHelper(T3);
                      c2.prev = 27;
                      M2.s();
                    case 29:
                      if ((R2 = M2.n()).done) {
                        c2.next = 44;
                        break;
                      }
                      D3 = _slicedToArray(R2.value, 2), j2 = D3[0], L2 = D3[1];
                      if ((N2 = L2.get("FontDescriptor")) instanceof h.Dict) {
                        c2.next = 34;
                        break;
                      }
                      return c2.abrupt("continue", 42);
                    case 34:
                      U2 = (U2 = N2.get("FontFamily")).replace(/[ ]+(\d)/g, "$1");
                      H2 = N2.get("FontWeight");
                      $3 = -N2.get("ItalicAngle");
                      X = { fontFamily: U2, fontWeight: H2, italicAngle: $3 };
                      if ((0, u.validateCSSFont)(X)) {
                        c2.next = 41;
                        break;
                      }
                      return c2.abrupt("continue", 42);
                    case 41:
                      E3.push(k2.handleSetFont(g2, [h.Name.get(j2), 1], null, _2, r4, S3, null, X).catch(function(t5) {
                        (0, l.warn)('loadXfaFonts: "'.concat(t5, '".'));
                        return null;
                      }));
                    case 42:
                      c2.next = 29;
                      break;
                    case 44:
                      c2.next = 49;
                      break;
                    case 46:
                      c2.prev = 46;
                      c2.t1 = c2.catch(27);
                      M2.e(c2.t1);
                    case 49:
                      c2.prev = 49;
                      M2.f();
                      return c2.finish(49);
                    case 52:
                      c2.next = 54;
                      return Promise.all(E3);
                    case 54:
                      if (q = this.xfaFactory.setFonts(w2)) {
                        c2.next = 57;
                        break;
                      }
                      return c2.abrupt("return");
                    case 57:
                      v2.ignoreErrors = true;
                      E3.length = 0;
                      w2.length = 0;
                      G = /* @__PURE__ */ new Set();
                      z = _createForOfIteratorHelper(q);
                      try {
                        for (z.s(); !(W = z.n()).done; ) {
                          V = W.value;
                          (0, d.getXfaFontName)("".concat(V, "-Regular")) || G.add(V);
                        }
                      } catch (t5) {
                        z.e(t5);
                      } finally {
                        z.f();
                      }
                      G.size && q.push("PdfJS-Fallback");
                      K = _createForOfIteratorHelper(q);
                      c2.prev = 65;
                      K.s();
                    case 67:
                      if ((Y = K.n()).done) {
                        c2.next = 74;
                        break;
                      }
                      J = Y.value;
                      if (!G.has(J)) {
                        c2.next = 71;
                        break;
                      }
                      return c2.abrupt("continue", 72);
                    case 71:
                      for (Z = 0, Q = [{ name: "Regular", fontWeight: 400, italicAngle: 0 }, { name: "Bold", fontWeight: 700, italicAngle: 0 }, { name: "Italic", fontWeight: 400, italicAngle: 12 }, { name: "BoldItalic", fontWeight: 700, italicAngle: 12 }]; Z < Q.length; Z++) {
                        ee = Q[Z];
                        te = "".concat(J, "-").concat(ee.name);
                        re = (0, d.getXfaFontDict)(te);
                        E3.push(k2.handleSetFont(g2, [h.Name.get(te), 1], null, _2, r4, S3, re, { fontFamily: J, fontWeight: ee.fontWeight, italicAngle: ee.italicAngle }).catch(function(t5) {
                          (0, l.warn)('loadXfaFonts: "'.concat(t5, '".'));
                          return null;
                        }));
                      }
                    case 72:
                      c2.next = 67;
                      break;
                    case 74:
                      c2.next = 79;
                      break;
                    case 76:
                      c2.prev = 76;
                      c2.t2 = c2.catch(65);
                      K.e(c2.t2);
                    case 79:
                      c2.prev = 79;
                      K.f();
                      return c2.finish(79);
                    case 82:
                      c2.next = 84;
                      return Promise.all(E3);
                    case 84:
                      this.xfaFactory.appendFonts(w2, G);
                    case 85:
                    case "end":
                      return c2.stop();
                  }
              }, _callee3, this, [[27, 46, 49, 52], [65, 76, 79, 82]]);
            })), function loadXfaFonts(t4, r4) {
              return D2.apply(this, arguments);
            }) }, { key: "serializeXfaData", value: (E2 = _asyncToGenerator(c.default.mark(function _callee4(t4) {
              return c.default.wrap(function _callee4$(r4) {
                for (; ; )
                  switch (r4.prev = r4.next) {
                    case 0:
                      return r4.abrupt("return", this.xfaFactory ? this.xfaFactory.serializeData(t4) : null);
                    case 1:
                    case "end":
                      return r4.stop();
                  }
              }, _callee4, this);
            })), function serializeXfaData(t4) {
              return E2.apply(this, arguments);
            }) }, { key: "formInfo", get: function get() {
              var t4 = { hasFields: false, hasAcroForm: false, hasXfa: false, hasSignatures: false }, r4 = this.catalog.acroForm;
              if (!r4)
                return (0, l.shadow)(this, "formInfo", t4);
              try {
                var o4 = r4.get("Fields"), c2 = Array.isArray(o4) && o4.length > 0;
                t4.hasFields = c2;
                var h2 = r4.get("XFA");
                t4.hasXfa = Array.isArray(h2) && h2.length > 0 || h2 instanceof m.BaseStream && !h2.isEmpty;
                var d2 = !!(1 & r4.get("SigFlags")), g2 = d2 && this._hasOnlyDocumentSignatures(o4);
                t4.hasAcroForm = c2 && !g2;
                t4.hasSignatures = d2;
              } catch (t5) {
                if (t5 instanceof u.MissingDataException)
                  throw t5;
                (0, l.warn)('Cannot fetch form information: "'.concat(t5, '".'));
              }
              return (0, l.shadow)(this, "formInfo", t4);
            } }, { key: "documentInfo", get: function get() {
              var t4 = this._version;
              if (typeof t4 != "string" || !H.test(t4)) {
                (0, l.warn)("Invalid PDF header version number: ".concat(t4));
                t4 = null;
              }
              var r4, o4 = { PDFFormatVersion: t4, Language: this.catalog.lang, EncryptFilterName: this.xref.encrypt ? this.xref.encrypt.filterName : null, IsLinearized: !!this.linearization, IsAcroFormPresent: this.formInfo.hasAcroForm, IsXFAPresent: this.formInfo.hasXfa, IsCollectionPresent: !!this.catalog.collection, IsSignaturesPresent: this.formInfo.hasSignatures };
              try {
                r4 = this.xref.trailer.get("Info");
              } catch (t5) {
                if (t5 instanceof u.MissingDataException)
                  throw t5;
                (0, l.info)("The document information dictionary is invalid.");
              }
              if (!(r4 instanceof h.Dict))
                return (0, l.shadow)(this, "documentInfo", o4);
              var c2, d2 = _createForOfIteratorHelper(r4.getKeys());
              try {
                for (d2.s(); !(c2 = d2.n()).done; ) {
                  var g2 = c2.value, m2 = r4.get(g2);
                  switch (g2) {
                    case "Title":
                    case "Author":
                    case "Subject":
                    case "Keywords":
                    case "Creator":
                    case "Producer":
                    case "CreationDate":
                    case "ModDate":
                      if (typeof m2 == "string") {
                        o4[g2] = (0, l.stringToPDFString)(m2);
                        continue;
                      }
                      break;
                    case "Trapped":
                      if (m2 instanceof h.Name) {
                        o4[g2] = m2;
                        continue;
                      }
                      break;
                    default:
                      var y2 = void 0;
                      switch (_typeof(m2)) {
                        case "string":
                          y2 = (0, l.stringToPDFString)(m2);
                          break;
                        case "number":
                        case "boolean":
                          y2 = m2;
                          break;
                        default:
                          m2 instanceof h.Name && (y2 = m2);
                      }
                      if (y2 === void 0) {
                        (0, l.warn)('Bad value, for custom key "'.concat(g2, '", in Info: ').concat(m2, "."));
                        continue;
                      }
                      o4.Custom || (o4.Custom = /* @__PURE__ */ Object.create(null));
                      o4.Custom[g2] = y2;
                      continue;
                  }
                  (0, l.warn)('Bad value, for key "'.concat(g2, '", in Info: ').concat(m2, "."));
                }
              } catch (t5) {
                d2.e(t5);
              } finally {
                d2.f();
              }
              return (0, l.shadow)(this, "documentInfo", o4);
            } }, { key: "fingerprints", get: function get() {
              function validate(t5) {
                return typeof t5 == "string" && t5.length > 0 && t5 !== "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0";
              }
              function hexString(t5) {
                for (var r5 = [], o5 = 0, c2 = t5.length; o5 < c2; o5++) {
                  var l2 = t5[o5].toString(16);
                  r5.push(l2.padStart(2, "0"));
                }
                return r5.join("");
              }
              var t4, r4, o4 = this.xref.trailer.get("ID");
              if (Array.isArray(o4) && validate(o4[0])) {
                t4 = (0, l.stringToBytes)(o4[0]);
                o4[1] !== o4[0] && validate(o4[1]) && (r4 = (0, l.stringToBytes)(o4[1]));
              } else
                t4 = (0, y.calculateMD5)(this.stream.getByteRange(0, 1024), 0, 1024);
              return (0, l.shadow)(this, "fingerprints", [hexString(t4), r4 ? hexString(r4) : null]);
            } }, { key: "_getLinearizationPage", value: (T2 = _asyncToGenerator(c.default.mark(function _callee5(t4) {
              var r4, o4, u2, d2, g2, m2;
              return c.default.wrap(function _callee5$(c2) {
                for (; ; )
                  switch (c2.prev = c2.next) {
                    case 0:
                      r4 = this.catalog, o4 = this.linearization, u2 = this.xref;
                      d2 = h.Ref.get(o4.objectNumberFirst, 0);
                      c2.prev = 2;
                      c2.next = 5;
                      return u2.fetchAsync(d2);
                    case 5:
                      if (!((g2 = c2.sent) instanceof h.Dict)) {
                        c2.next = 16;
                        break;
                      }
                      if (!((m2 = g2.getRaw("Type")) instanceof h.Ref)) {
                        c2.next = 12;
                        break;
                      }
                      c2.next = 11;
                      return u2.fetchAsync(m2);
                    case 11:
                      m2 = c2.sent;
                    case 12:
                      if (!(0, h.isName)(m2, "Page") && (g2.has("Type") || g2.has("Kids"))) {
                        c2.next = 16;
                        break;
                      }
                      r4.pageKidsCountCache.has(d2) || r4.pageKidsCountCache.put(d2, 1);
                      r4.pageIndexCache.has(d2) || r4.pageIndexCache.put(d2, 0);
                      return c2.abrupt("return", [g2, d2]);
                    case 16:
                      throw new l.FormatError("The Linearization dictionary doesn't point to a valid Page dictionary.");
                    case 19:
                      c2.prev = 19;
                      c2.t0 = c2.catch(2);
                      (0, l.warn)('_getLinearizationPage: "'.concat(c2.t0.message, '".'));
                      return c2.abrupt("return", r4.getPageDict(t4));
                    case 23:
                    case "end":
                      return c2.stop();
                  }
              }, _callee5, this, [[2, 19]]);
            })), function _getLinearizationPage(t4) {
              return T2.apply(this, arguments);
            }) }, { key: "getPage", value: function getPage(t4) {
              var r4 = this, o4 = this._pagePromises.get(t4);
              if (o4)
                return o4;
              var c2, l2 = this.catalog, u2 = this.linearization, d2 = this.xfaFactory;
              c2 = (c2 = d2 ? Promise.resolve([h.Dict.empty, null]) : u2 && u2.pageFirst === t4 ? this._getLinearizationPage(t4) : l2.getPageDict(t4)).then(function(o5) {
                var c3 = _slicedToArray(o5, 2), u3 = c3[0], h2 = c3[1];
                return new j({ pdfManager: r4.pdfManager, xref: r4.xref, pageIndex: t4, pageDict: u3, ref: h2, globalIdFactory: r4._globalIdFactory, fontCache: l2.fontCache, builtInCMapCache: l2.builtInCMapCache, standardFontDataCache: l2.standardFontDataCache, globalImageCache: l2.globalImageCache, nonBlendModesSet: l2.nonBlendModesSet, xfaFactory: d2 });
              });
              this._pagePromises.set(t4, c2);
              return c2;
            } }, { key: "checkFirstPage", value: (S2 = _asyncToGenerator(c.default.mark(function _callee6() {
              var t4 = arguments;
              return c.default.wrap(function _callee6$(r4) {
                for (; ; )
                  switch (r4.prev = r4.next) {
                    case 0:
                      if (!(t4.length > 0 && t4[0] !== void 0 && t4[0])) {
                        r4.next = 3;
                        break;
                      }
                      return r4.abrupt("return");
                    case 3:
                      r4.prev = 3;
                      r4.next = 6;
                      return this.getPage(0);
                    case 6:
                      r4.next = 15;
                      break;
                    case 8:
                      r4.prev = 8;
                      r4.t0 = r4.catch(3);
                      if (!(r4.t0 instanceof u.XRefEntryException)) {
                        r4.next = 15;
                        break;
                      }
                      this._pagePromises.delete(0);
                      r4.next = 14;
                      return this.cleanup();
                    case 14:
                      throw new u.XRefParseException();
                    case 15:
                    case "end":
                      return r4.stop();
                  }
              }, _callee6, this, [[3, 8]]);
            })), function checkFirstPage() {
              return S2.apply(this, arguments);
            }) }, { key: "checkLastPage", value: (o3 = _asyncToGenerator(c.default.mark(function _callee7() {
              var t4, r4, o4, h2, d2, g2, m2, y2, v2, k2, _2, w2, S3, C2 = arguments;
              return c.default.wrap(function _callee7$(c2) {
                for (; ; )
                  switch (c2.prev = c2.next) {
                    case 0:
                      t4 = C2.length > 0 && C2[0] !== void 0 && C2[0];
                      r4 = this.catalog, o4 = this.pdfManager;
                      r4.setActualNumPages();
                      c2.prev = 3;
                      c2.next = 6;
                      return Promise.all([o4.ensureDoc("xfaFactory"), o4.ensureDoc("linearization"), o4.ensureCatalog("numPages")]);
                    case 6:
                      if (!this.xfaFactory) {
                        c2.next = 10;
                        break;
                      }
                      return c2.abrupt("return");
                    case 10:
                      h2 = this.linearization ? this.linearization.numPages : r4.numPages;
                    case 11:
                      if (Number.isInteger(h2)) {
                        c2.next = 15;
                        break;
                      }
                      throw new l.FormatError("Page count is not an integer.");
                    case 15:
                      if (!(h2 <= 1)) {
                        c2.next = 17;
                        break;
                      }
                      return c2.abrupt("return");
                    case 17:
                      c2.next = 19;
                      return this.getPage(h2 - 1);
                    case 19:
                      c2.next = 44;
                      break;
                    case 21:
                      c2.prev = 21;
                      c2.t0 = c2.catch(3);
                      this._pagePromises.delete(h2 - 1);
                      c2.next = 26;
                      return this.cleanup();
                    case 26:
                      if (!(c2.t0 instanceof u.XRefEntryException) || t4) {
                        c2.next = 28;
                        break;
                      }
                      throw new u.XRefParseException();
                    case 28:
                      (0, l.warn)("checkLastPage - invalid /Pages tree /Count: ".concat(h2, "."));
                      c2.prev = 29;
                      c2.next = 32;
                      return r4.getAllPageDicts(t4);
                    case 32:
                      d2 = c2.sent;
                      c2.next = 41;
                      break;
                    case 35:
                      c2.prev = 35;
                      c2.t1 = c2.catch(29);
                      if (!(c2.t1 instanceof u.XRefEntryException) || t4) {
                        c2.next = 39;
                        break;
                      }
                      throw new u.XRefParseException();
                    case 39:
                      r4.setActualNumPages(1);
                      return c2.abrupt("return");
                    case 41:
                      g2 = _createForOfIteratorHelper(d2);
                      try {
                        for (g2.s(); !(m2 = g2.n()).done; ) {
                          y2 = _slicedToArray(m2.value, 2), v2 = y2[0], k2 = _slicedToArray(y2[1], 2), _2 = k2[0], w2 = k2[1];
                          S3 = void 0;
                          _2 instanceof Error ? (S3 = Promise.reject(_2)).catch(function() {
                          }) : S3 = Promise.resolve(new j({ pdfManager: o4, xref: this.xref, pageIndex: v2, pageDict: _2, ref: w2, globalIdFactory: this._globalIdFactory, fontCache: r4.fontCache, builtInCMapCache: r4.builtInCMapCache, standardFontDataCache: r4.standardFontDataCache, globalImageCache: r4.globalImageCache, nonBlendModesSet: r4.nonBlendModesSet, xfaFactory: null }));
                          this._pagePromises.set(v2, S3);
                        }
                      } catch (t5) {
                        g2.e(t5);
                      } finally {
                        g2.f();
                      }
                      r4.setActualNumPages(d2.size);
                    case 44:
                    case "end":
                      return c2.stop();
                  }
              }, _callee7, this, [[3, 21], [29, 35]]);
            })), function checkLastPage() {
              return o3.apply(this, arguments);
            }) }, { key: "fontFallback", value: function fontFallback(t4, r4) {
              return this.catalog.fontFallback(t4, r4);
            } }, { key: "cleanup", value: (r3 = _asyncToGenerator(c.default.mark(function _callee8() {
              var t4, r4 = arguments;
              return c.default.wrap(function _callee8$(o4) {
                for (; ; )
                  switch (o4.prev = o4.next) {
                    case 0:
                      t4 = r4.length > 0 && r4[0] !== void 0 && r4[0];
                      return o4.abrupt("return", this.catalog ? this.catalog.cleanup(t4) : (0, k.clearGlobalCaches)());
                    case 2:
                    case "end":
                      return o4.stop();
                  }
              }, _callee8, this);
            })), function cleanup() {
              return r3.apply(this, arguments);
            }) }, { key: "_collectFieldObjects", value: function _collectFieldObjects(t4, r4, o4) {
              var c2 = this.xref.fetchIfRef(r4);
              if (c2.has("T")) {
                var u2 = (0, l.stringToPDFString)(c2.get("T"));
                t4 = t4 === "" ? u2 : "".concat(t4, ".").concat(u2);
              }
              o4.has(t4) || o4.set(t4, []);
              o4.get(t4).push(g.AnnotationFactory.create(this.xref, r4, this.pdfManager, this._localIdFactory, true).then(function(t5) {
                return t5 && t5.getFieldObject();
              }).catch(function(t5) {
                (0, l.warn)('_collectFieldObjects: "'.concat(t5, '".'));
                return null;
              }));
              if (c2.has("Kids")) {
                var h2, d2 = _createForOfIteratorHelper(c2.get("Kids"));
                try {
                  for (d2.s(); !(h2 = d2.n()).done; ) {
                    var m2 = h2.value;
                    this._collectFieldObjects(t4, m2, o4);
                  }
                } catch (t5) {
                  d2.e(t5);
                } finally {
                  d2.f();
                }
              }
            } }, { key: "fieldObjects", get: function get() {
              if (!this.formInfo.hasFields)
                return (0, l.shadow)(this, "fieldObjects", Promise.resolve(null));
              var t4, r4 = /* @__PURE__ */ Object.create(null), o4 = /* @__PURE__ */ new Map(), c2 = _createForOfIteratorHelper(this.catalog.acroForm.get("Fields"));
              try {
                for (c2.s(); !(t4 = c2.n()).done; ) {
                  var u2 = t4.value;
                  this._collectFieldObjects("", u2, o4);
                }
              } catch (t5) {
                c2.e(t5);
              } finally {
                c2.f();
              }
              var h2, d2 = [], g2 = _createForOfIteratorHelper(o4);
              try {
                var m2 = function _loop() {
                  var t5 = _slicedToArray(h2.value, 2), o5 = t5[0], c3 = t5[1];
                  d2.push(Promise.all(c3).then(function(t6) {
                    (t6 = t6.filter(function(t7) {
                      return !!t7;
                    })).length > 0 && (r4[o5] = t6);
                  }));
                };
                for (g2.s(); !(h2 = g2.n()).done; )
                  m2();
              } catch (t5) {
                g2.e(t5);
              } finally {
                g2.f();
              }
              return (0, l.shadow)(this, "fieldObjects", Promise.all(d2).then(function() {
                return r4;
              }));
            } }, { key: "hasJSActions", get: function get() {
              var t4 = this.pdfManager.ensureDoc("_parseHasJSActions");
              return (0, l.shadow)(this, "hasJSActions", t4);
            } }, { key: "_parseHasJSActions", value: (t3 = _asyncToGenerator(c.default.mark(function _callee9() {
              var t4, r4, o4, l2;
              return c.default.wrap(function _callee9$(c2) {
                for (; ; )
                  switch (c2.prev = c2.next) {
                    case 0:
                      c2.next = 2;
                      return Promise.all([this.pdfManager.ensureCatalog("jsActions"), this.pdfManager.ensureDoc("fieldObjects")]);
                    case 2:
                      t4 = c2.sent;
                      r4 = _slicedToArray(t4, 2);
                      o4 = r4[0];
                      l2 = r4[1];
                      if (!o4) {
                        c2.next = 8;
                        break;
                      }
                      return c2.abrupt("return", true);
                    case 8:
                      if (!l2) {
                        c2.next = 10;
                        break;
                      }
                      return c2.abrupt("return", Object.values(l2).some(function(t5) {
                        return t5.some(function(t6) {
                          return t6.actions !== null;
                        });
                      }));
                    case 10:
                      return c2.abrupt("return", false);
                    case 11:
                    case "end":
                      return c2.stop();
                  }
              }, _callee9, this);
            })), function _parseHasJSActions() {
              return t3.apply(this, arguments);
            }) }, { key: "calculationOrderIds", get: function get() {
              var t4 = this.catalog.acroForm;
              if (!t4 || !t4.has("CO"))
                return (0, l.shadow)(this, "calculationOrderIds", null);
              var r4 = t4.get("CO");
              if (!Array.isArray(r4) || r4.length === 0)
                return (0, l.shadow)(this, "calculationOrderIds", null);
              var o4, c2 = [], u2 = _createForOfIteratorHelper(r4);
              try {
                for (u2.s(); !(o4 = u2.n()).done; ) {
                  var d2 = o4.value;
                  d2 instanceof h.Ref && c2.push(d2.toString());
                }
              } catch (t5) {
                u2.e(t5);
              } finally {
                u2.f();
              }
              return c2.length === 0 ? (0, l.shadow)(this, "calculationOrderIds", null) : (0, l.shadow)(this, "calculationOrderIds", c2);
            } }]);
            var t3, r3, o3, S2, T2, E2, D2, $2;
            return PDFDocument;
          }();
          r2.PDFDocument = $;
        }, (t2, r2, o2) => {
          "use strict";
          Object.defineProperty(r2, "__esModule", { value: true });
          r2.getXfaFontDict = function getXfaFontDict(t3) {
            var r3 = function getXfaFontWidths(t4) {
              var r4 = getXfaFontName(t4);
              if (!r4)
                return null;
              var o4, c3 = r4.baseWidths, l2 = r4.baseMapping, u3 = r4.factors;
              o4 = u3 ? c3.map(function(t5, r5) {
                return t5 * u3[r5];
              }) : c3;
              var h2, d2, g2 = -2, m2 = [], y2 = function _createForOfIteratorHelper(t5, r5) {
                var o5 = typeof Symbol != "undefined" && t5[Symbol.iterator] || t5["@@iterator"];
                if (!o5) {
                  if (Array.isArray(t5) || (o5 = _unsupportedIterableToArray(t5)) || r5 && t5 && typeof t5.length == "number") {
                    o5 && (t5 = o5);
                    var c4 = 0, l3 = function F() {
                    };
                    return { s: l3, n: function n() {
                      return c4 >= t5.length ? { done: true } : { done: false, value: t5[c4++] };
                    }, e: function e(t6) {
                      throw t6;
                    }, f: l3 };
                  }
                  throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
                }
                var u4, h3 = true, d3 = false;
                return { s: function s() {
                  o5 = o5.call(t5);
                }, n: function n() {
                  var t6 = o5.next();
                  h3 = t6.done;
                  return t6;
                }, e: function e(t6) {
                  d3 = true;
                  u4 = t6;
                }, f: function f() {
                  try {
                    h3 || o5.return == null || o5.return();
                  } finally {
                    if (d3)
                      throw u4;
                  }
                } };
              }(l2.map(function(t5, r5) {
                return [t5, r5];
              }).sort(function(t5, r5) {
                return _slicedToArray(t5, 1)[0] - _slicedToArray(r5, 1)[0];
              }));
              try {
                for (y2.s(); !(d2 = y2.n()).done; ) {
                  var v2 = _slicedToArray(d2.value, 2), k = v2[0], _ = v2[1];
                  if (k !== -1)
                    if (k === g2 + 1) {
                      h2.push(o4[_]);
                      g2 += 1;
                    } else {
                      g2 = k;
                      h2 = [o4[_]];
                      m2.push(k, h2);
                    }
                }
              } catch (t5) {
                y2.e(t5);
              } finally {
                y2.f();
              }
              return m2;
            }(t3), o3 = new l.Dict(null);
            o3.set("BaseFont", l.Name.get(t3));
            o3.set("Type", l.Name.get("Font"));
            o3.set("Subtype", l.Name.get("CIDFontType2"));
            o3.set("Encoding", l.Name.get("Identity-H"));
            o3.set("CIDToGIDMap", l.Name.get("Identity"));
            o3.set("W", r3);
            o3.set("FirstChar", r3[0]);
            o3.set("LastChar", r3[r3.length - 2] + r3[r3.length - 1].length - 1);
            var c2 = new l.Dict(null);
            o3.set("FontDescriptor", c2);
            var u2 = new l.Dict(null);
            u2.set("Ordering", "Identity");
            u2.set("Registry", "Adobe");
            u2.set("Supplement", 0);
            o3.set("CIDSystemInfo", u2);
            return o3;
          };
          r2.getXfaFontName = getXfaFontName;
          var c = o2(166), l = o2(158), u = o2(167), h = o2(168), d = o2(169), g = o2(170), m = o2(161), y = o2(171);
          function _slicedToArray(t3, r3) {
            return function _arrayWithHoles(t4) {
              if (Array.isArray(t4))
                return t4;
            }(t3) || function _iterableToArrayLimit(t4, r4) {
              var o3 = t4 == null ? null : typeof Symbol != "undefined" && t4[Symbol.iterator] || t4["@@iterator"];
              if (o3 == null)
                return;
              var c2, l2, u2 = [], h2 = true, d2 = false;
              try {
                for (o3 = o3.call(t4); !(h2 = (c2 = o3.next()).done); h2 = true) {
                  u2.push(c2.value);
                  if (r4 && u2.length === r4)
                    break;
                }
              } catch (t5) {
                d2 = true;
                l2 = t5;
              } finally {
                try {
                  h2 || o3.return == null || o3.return();
                } finally {
                  if (d2)
                    throw l2;
                }
              }
              return u2;
            }(t3, r3) || _unsupportedIterableToArray(t3, r3) || function _nonIterableRest() {
              throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
            }();
          }
          function _unsupportedIterableToArray(t3, r3) {
            if (t3) {
              if (typeof t3 == "string")
                return _arrayLikeToArray(t3, r3);
              var o3 = Object.prototype.toString.call(t3).slice(8, -1);
              o3 === "Object" && t3.constructor && (o3 = t3.constructor.name);
              return o3 === "Map" || o3 === "Set" ? Array.from(t3) : o3 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(o3) ? _arrayLikeToArray(t3, r3) : void 0;
            }
          }
          function _arrayLikeToArray(t3, r3) {
            (r3 == null || r3 > t3.length) && (r3 = t3.length);
            for (var o3 = 0, c2 = new Array(r3); o3 < r3; o3++)
              c2[o3] = t3[o3];
            return c2;
          }
          var v = (0, m.getLookupTableFactory)(function(t3) {
            t3["MyriadPro-Regular"] = t3["PdfJS-Fallback-Regular"] = { name: "LiberationSans-Regular", factors: d.MyriadProRegularFactors, baseWidths: h.LiberationSansRegularWidths, baseMapping: h.LiberationSansRegularMapping, metrics: d.MyriadProRegularMetrics };
            t3["MyriadPro-Bold"] = t3["PdfJS-Fallback-Bold"] = { name: "LiberationSans-Bold", factors: d.MyriadProBoldFactors, baseWidths: h.LiberationSansBoldWidths, baseMapping: h.LiberationSansBoldMapping, metrics: d.MyriadProBoldMetrics };
            t3["MyriadPro-It"] = t3["MyriadPro-Italic"] = t3["PdfJS-Fallback-Italic"] = { name: "LiberationSans-Italic", factors: d.MyriadProItalicFactors, baseWidths: h.LiberationSansItalicWidths, baseMapping: h.LiberationSansItalicMapping, metrics: d.MyriadProItalicMetrics };
            t3["MyriadPro-BoldIt"] = t3["MyriadPro-BoldItalic"] = t3["PdfJS-Fallback-BoldItalic"] = { name: "LiberationSans-BoldItalic", factors: d.MyriadProBoldItalicFactors, baseWidths: h.LiberationSansBoldItalicWidths, baseMapping: h.LiberationSansBoldItalicMapping, metrics: d.MyriadProBoldItalicMetrics };
            t3.ArialMT = t3.Arial = t3["Arial-Regular"] = { name: "LiberationSans-Regular", baseWidths: h.LiberationSansRegularWidths, baseMapping: h.LiberationSansRegularMapping };
            t3["Arial-BoldMT"] = t3["Arial-Bold"] = { name: "LiberationSans-Bold", baseWidths: h.LiberationSansBoldWidths, baseMapping: h.LiberationSansBoldMapping };
            t3["Arial-ItalicMT"] = t3["Arial-Italic"] = { name: "LiberationSans-Italic", baseWidths: h.LiberationSansItalicWidths, baseMapping: h.LiberationSansItalicMapping };
            t3["Arial-BoldItalicMT"] = t3["Arial-BoldItalic"] = { name: "LiberationSans-BoldItalic", baseWidths: h.LiberationSansBoldItalicWidths, baseMapping: h.LiberationSansBoldItalicMapping };
            t3["Calibri-Regular"] = { name: "LiberationSans-Regular", factors: c.CalibriRegularFactors, baseWidths: h.LiberationSansRegularWidths, baseMapping: h.LiberationSansRegularMapping, metrics: c.CalibriRegularMetrics };
            t3["Calibri-Bold"] = { name: "LiberationSans-Bold", factors: c.CalibriBoldFactors, baseWidths: h.LiberationSansBoldWidths, baseMapping: h.LiberationSansBoldMapping, metrics: c.CalibriBoldMetrics };
            t3["Calibri-Italic"] = { name: "LiberationSans-Italic", factors: c.CalibriItalicFactors, baseWidths: h.LiberationSansItalicWidths, baseMapping: h.LiberationSansItalicMapping, metrics: c.CalibriItalicMetrics };
            t3["Calibri-BoldItalic"] = { name: "LiberationSans-BoldItalic", factors: c.CalibriBoldItalicFactors, baseWidths: h.LiberationSansBoldItalicWidths, baseMapping: h.LiberationSansBoldItalicMapping, metrics: c.CalibriBoldItalicMetrics };
            t3["Segoeui-Regular"] = { name: "LiberationSans-Regular", factors: g.SegoeuiRegularFactors, baseWidths: h.LiberationSansRegularWidths, baseMapping: h.LiberationSansRegularMapping, metrics: g.SegoeuiRegularMetrics };
            t3["Segoeui-Bold"] = { name: "LiberationSans-Bold", factors: g.SegoeuiBoldFactors, baseWidths: h.LiberationSansBoldWidths, baseMapping: h.LiberationSansBoldMapping, metrics: g.SegoeuiBoldMetrics };
            t3["Segoeui-Italic"] = { name: "LiberationSans-Italic", factors: g.SegoeuiItalicFactors, baseWidths: h.LiberationSansItalicWidths, baseMapping: h.LiberationSansItalicMapping, metrics: g.SegoeuiItalicMetrics };
            t3["Segoeui-BoldItalic"] = { name: "LiberationSans-BoldItalic", factors: g.SegoeuiBoldItalicFactors, baseWidths: h.LiberationSansBoldItalicWidths, baseMapping: h.LiberationSansBoldItalicMapping, metrics: g.SegoeuiBoldItalicMetrics };
            t3["Helvetica-Regular"] = t3.Helvetica = { name: "LiberationSans-Regular", factors: u.HelveticaRegularFactors, baseWidths: h.LiberationSansRegularWidths, baseMapping: h.LiberationSansRegularMapping, metrics: u.HelveticaRegularMetrics };
            t3["Helvetica-Bold"] = { name: "LiberationSans-Bold", factors: u.HelveticaBoldFactors, baseWidths: h.LiberationSansBoldWidths, baseMapping: h.LiberationSansBoldMapping, metrics: u.HelveticaBoldMetrics };
            t3["Helvetica-Italic"] = { name: "LiberationSans-Italic", factors: u.HelveticaItalicFactors, baseWidths: h.LiberationSansItalicWidths, baseMapping: h.LiberationSansItalicMapping, metrics: u.HelveticaItalicMetrics };
            t3["Helvetica-BoldItalic"] = { name: "LiberationSans-BoldItalic", factors: u.HelveticaBoldItalicFactors, baseWidths: h.LiberationSansBoldItalicWidths, baseMapping: h.LiberationSansBoldItalicMapping, metrics: u.HelveticaBoldItalicMetrics };
          });
          function getXfaFontName(t3) {
            var r3 = (0, y.normalizeFontName)(t3);
            return v()[r3];
          }
        }, (t2, r2) => {
          "use strict";
          Object.defineProperty(r2, "__esModule", { value: true });
          r2.CalibriRegularMetrics = r2.CalibriRegularFactors = r2.CalibriItalicMetrics = r2.CalibriItalicFactors = r2.CalibriBoldMetrics = r2.CalibriBoldItalicMetrics = r2.CalibriBoldItalicFactors = r2.CalibriBoldFactors = void 0;
          r2.CalibriBoldFactors = [1.3877, 1, 1, 1, 0.97801, 0.92482, 0.89552, 0.91133, 0.81988, 0.97566, 0.98152, 0.93548, 0.93548, 1.2798, 0.85284, 0.92794, 1, 0.96134, 1.54657, 0.91133, 0.91133, 0.91133, 0.91133, 0.91133, 0.91133, 0.91133, 0.91133, 0.91133, 0.91133, 0.82845, 0.82845, 0.85284, 0.85284, 0.85284, 0.75859, 0.92138, 0.83908, 0.7762, 0.73293, 0.87289, 0.73133, 0.7514, 0.81921, 0.87356, 0.95958, 0.59526, 0.75727, 0.69225, 1.04924, 0.9121, 0.86943, 0.79795, 0.88198, 0.77958, 0.70864, 0.81055, 0.90399, 0.88653, 0.96017, 0.82577, 0.77892, 0.78257, 0.97507, 1.54657, 0.97507, 0.85284, 0.89552, 0.90176, 0.88762, 0.8785, 0.75241, 0.8785, 0.90518, 0.95015, 0.77618, 0.8785, 0.88401, 0.91916, 0.86304, 0.88401, 0.91488, 0.8785, 0.8801, 0.8785, 0.8785, 0.91343, 0.7173, 1.04106, 0.8785, 0.85075, 0.95794, 0.82616, 0.85162, 0.79492, 0.88331, 1.69808, 0.88331, 0.85284, 0.97801, 0.89552, 0.91133, 0.89552, 0.91133, 1.7801, 0.89552, 1.24487, 1.13254, 1.12401, 0.96839, 0.85284, 0.68787, 0.70645, 0.85592, 0.90747, 1.01466, 1.0088, 0.90323, 1, 1.07463, 1, 0.91056, 0.75806, 1.19118, 0.96839, 0.78864, 0.82845, 0.84133, 0.75859, 0.83908, 0.83908, 0.83908, 0.83908, 0.83908, 0.83908, 0.77539, 0.73293, 0.73133, 0.73133, 0.73133, 0.73133, 0.95958, 0.95958, 0.95958, 0.95958, 0.88506, 0.9121, 0.86943, 0.86943, 0.86943, 0.86943, 0.86943, 0.85284, 0.87508, 0.90399, 0.90399, 0.90399, 0.90399, 0.77892, 0.79795, 0.90807, 0.88762, 0.88762, 0.88762, 0.88762, 0.88762, 0.88762, 0.8715, 0.75241, 0.90518, 0.90518, 0.90518, 0.90518, 0.88401, 0.88401, 0.88401, 0.88401, 0.8785, 0.8785, 0.8801, 0.8801, 0.8801, 0.8801, 0.8801, 0.90747, 0.89049, 0.8785, 0.8785, 0.8785, 0.8785, 0.85162, 0.8785, 0.85162, 0.83908, 0.88762, 0.83908, 0.88762, 0.83908, 0.88762, 0.73293, 0.75241, 0.73293, 0.75241, 0.73293, 0.75241, 0.73293, 0.75241, 0.87289, 0.83016, 0.88506, 0.93125, 0.73133, 0.90518, 0.73133, 0.90518, 0.73133, 0.90518, 0.73133, 0.90518, 0.73133, 0.90518, 0.81921, 0.77618, 0.81921, 0.77618, 0.81921, 0.77618, 1, 1, 0.87356, 0.8785, 0.91075, 0.89608, 0.95958, 0.88401, 0.95958, 0.88401, 0.95958, 0.88401, 0.95958, 0.88401, 0.95958, 0.88401, 0.76229, 0.90167, 0.59526, 0.91916, 1, 1, 0.86304, 0.69225, 0.88401, 1, 1, 0.70424, 0.79468, 0.91926, 0.88175, 0.70823, 0.94903, 0.9121, 0.8785, 1, 1, 0.9121, 0.8785, 0.87802, 0.88656, 0.8785, 0.86943, 0.8801, 0.86943, 0.8801, 0.86943, 0.8801, 0.87402, 0.89291, 0.77958, 0.91343, 1, 1, 0.77958, 0.91343, 0.70864, 0.7173, 0.70864, 0.7173, 0.70864, 0.7173, 0.70864, 0.7173, 1, 1, 0.81055, 0.75841, 0.81055, 1.06452, 0.90399, 0.8785, 0.90399, 0.8785, 0.90399, 0.8785, 0.90399, 0.8785, 0.90399, 0.8785, 0.90399, 0.8785, 0.96017, 0.95794, 0.77892, 0.85162, 0.77892, 0.78257, 0.79492, 0.78257, 0.79492, 0.78257, 0.79492, 0.9297, 0.56892, 0.83908, 0.88762, 0.77539, 0.8715, 0.87508, 0.89049, 1, 1, 0.81055, 1.04106, 1.20528, 1.20528, 1, 1.15543, 0.70674, 0.98387, 0.94721, 1.33431, 1.45894, 0.95161, 1.06303, 0.83908, 0.80352, 0.57184, 0.6965, 0.56289, 0.82001, 0.56029, 0.81235, 1.02988, 0.83908, 0.7762, 0.68156, 0.80367, 0.73133, 0.78257, 0.87356, 0.86943, 0.95958, 0.75727, 0.89019, 1.04924, 0.9121, 0.7648, 0.86943, 0.87356, 0.79795, 0.78275, 0.81055, 0.77892, 0.9762, 0.82577, 0.99819, 0.84896, 0.95958, 0.77892, 0.96108, 1.01407, 0.89049, 1.02988, 0.94211, 0.96108, 0.8936, 0.84021, 0.87842, 0.96399, 0.79109, 0.89049, 1.00813, 1.02988, 0.86077, 0.87445, 0.92099, 0.84723, 0.86513, 0.8801, 0.75638, 0.85714, 0.78216, 0.79586, 0.87965, 0.94211, 0.97747, 0.78287, 0.97926, 0.84971, 1.02988, 0.94211, 0.8801, 0.94211, 0.84971, 0.73133, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.90264, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.90518, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.90548, 1, 1, 1, 1, 1, 1, 0.96017, 0.95794, 0.96017, 0.95794, 0.96017, 0.95794, 0.77892, 0.85162, 1, 1, 0.89552, 0.90527, 1, 0.90363, 0.92794, 0.92794, 0.92794, 0.92794, 0.87012, 0.87012, 0.87012, 0.89552, 0.89552, 1.42259, 0.71143, 1.06152, 1, 1, 1.03372, 1.03372, 0.97171, 1.4956, 2.2807, 0.93835, 0.83406, 0.91133, 0.84107, 0.91133, 1, 1, 1, 0.72021, 1, 1.23108, 0.83489, 0.88525, 0.88525, 0.81499, 0.90527, 1.81055, 0.90527, 1.81055, 1.31006, 1.53711, 0.94434, 1.08696, 1, 0.95018, 0.77192, 0.85284, 0.90747, 1.17534, 0.69825, 0.9716, 1.37077, 0.90747, 0.90747, 0.85356, 0.90747, 0.90747, 1.44947, 0.85284, 0.8941, 0.8941, 0.70572, 0.8, 0.70572, 0.70572, 0.70572, 0.70572, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.99862, 0.99862, 1, 1, 1, 1, 1, 1.08004, 0.91027, 1, 1, 1, 0.99862, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.90727, 0.90727, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1];
          r2.CalibriBoldMetrics = { lineHeight: 1.2207, lineGap: 0.2207 };
          r2.CalibriBoldItalicFactors = [1.3877, 1, 1, 1, 0.97801, 0.92482, 0.89552, 0.91133, 0.81988, 0.97566, 0.98152, 0.93548, 0.93548, 1.2798, 0.85284, 0.92794, 1, 0.96134, 1.56239, 0.91133, 0.91133, 0.91133, 0.91133, 0.91133, 0.91133, 0.91133, 0.91133, 0.91133, 0.91133, 0.82845, 0.82845, 0.85284, 0.85284, 0.85284, 0.75859, 0.92138, 0.83908, 0.7762, 0.71805, 0.87289, 0.73133, 0.7514, 0.81921, 0.87356, 0.95958, 0.59526, 0.75727, 0.69225, 1.04924, 0.90872, 0.85938, 0.79795, 0.87068, 0.77958, 0.69766, 0.81055, 0.90399, 0.88653, 0.96068, 0.82577, 0.77892, 0.78257, 0.97507, 1.529, 0.97507, 0.85284, 0.89552, 0.90176, 0.94908, 0.86411, 0.74012, 0.86411, 0.88323, 0.95015, 0.86411, 0.86331, 0.88401, 0.91916, 0.86304, 0.88401, 0.9039, 0.86331, 0.86331, 0.86411, 0.86411, 0.90464, 0.70852, 1.04106, 0.86331, 0.84372, 0.95794, 0.82616, 0.84548, 0.79492, 0.88331, 1.69808, 0.88331, 0.85284, 0.97801, 0.89552, 0.91133, 0.89552, 0.91133, 1.7801, 0.89552, 1.24487, 1.13254, 1.19129, 0.96839, 0.85284, 0.68787, 0.70645, 0.85592, 0.90747, 1.01466, 1.0088, 0.90323, 1, 1.07463, 1, 0.91056, 0.75806, 1.19118, 0.96839, 0.78864, 0.82845, 0.84133, 0.75859, 0.83908, 0.83908, 0.83908, 0.83908, 0.83908, 0.83908, 0.77539, 0.71805, 0.73133, 0.73133, 0.73133, 0.73133, 0.95958, 0.95958, 0.95958, 0.95958, 0.88506, 0.90872, 0.85938, 0.85938, 0.85938, 0.85938, 0.85938, 0.85284, 0.87068, 0.90399, 0.90399, 0.90399, 0.90399, 0.77892, 0.79795, 0.90807, 0.94908, 0.94908, 0.94908, 0.94908, 0.94908, 0.94908, 0.85887, 0.74012, 0.88323, 0.88323, 0.88323, 0.88323, 0.88401, 0.88401, 0.88401, 0.88401, 0.8785, 0.86331, 0.86331, 0.86331, 0.86331, 0.86331, 0.86331, 0.90747, 0.89049, 0.86331, 0.86331, 0.86331, 0.86331, 0.84548, 0.86411, 0.84548, 0.83908, 0.94908, 0.83908, 0.94908, 0.83908, 0.94908, 0.71805, 0.74012, 0.71805, 0.74012, 0.71805, 0.74012, 0.71805, 0.74012, 0.87289, 0.79538, 0.88506, 0.92726, 0.73133, 0.88323, 0.73133, 0.88323, 0.73133, 0.88323, 0.73133, 0.88323, 0.73133, 0.88323, 0.81921, 0.86411, 0.81921, 0.86411, 0.81921, 0.86411, 1, 1, 0.87356, 0.86331, 0.91075, 0.8777, 0.95958, 0.88401, 0.95958, 0.88401, 0.95958, 0.88401, 0.95958, 0.88401, 0.95958, 0.88401, 0.76467, 0.90167, 0.59526, 0.91916, 1, 1, 0.86304, 0.69225, 0.88401, 1, 1, 0.70424, 0.77312, 0.91926, 0.88175, 0.70823, 0.94903, 0.90872, 0.86331, 1, 1, 0.90872, 0.86331, 0.86906, 0.88116, 0.86331, 0.85938, 0.86331, 0.85938, 0.86331, 0.85938, 0.86331, 0.87402, 0.86549, 0.77958, 0.90464, 1, 1, 0.77958, 0.90464, 0.69766, 0.70852, 0.69766, 0.70852, 0.69766, 0.70852, 0.69766, 0.70852, 1, 1, 0.81055, 0.75841, 0.81055, 1.06452, 0.90399, 0.86331, 0.90399, 0.86331, 0.90399, 0.86331, 0.90399, 0.86331, 0.90399, 0.86331, 0.90399, 0.86331, 0.96068, 0.95794, 0.77892, 0.84548, 0.77892, 0.78257, 0.79492, 0.78257, 0.79492, 0.78257, 0.79492, 0.9297, 0.56892, 0.83908, 0.94908, 0.77539, 0.85887, 0.87068, 0.89049, 1, 1, 0.81055, 1.04106, 1.20528, 1.20528, 1, 1.15543, 0.70088, 0.98387, 0.94721, 1.33431, 1.45894, 0.95161, 1.48387, 0.83908, 0.80352, 0.57118, 0.6965, 0.56347, 0.79179, 0.55853, 0.80346, 1.02988, 0.83908, 0.7762, 0.67174, 0.86036, 0.73133, 0.78257, 0.87356, 0.86441, 0.95958, 0.75727, 0.89019, 1.04924, 0.90872, 0.74889, 0.85938, 0.87891, 0.79795, 0.7957, 0.81055, 0.77892, 0.97447, 0.82577, 0.97466, 0.87179, 0.95958, 0.77892, 0.94252, 0.95612, 0.8753, 1.02988, 0.92733, 0.94252, 0.87411, 0.84021, 0.8728, 0.95612, 0.74081, 0.8753, 1.02189, 1.02988, 0.84814, 0.87445, 0.91822, 0.84723, 0.85668, 0.86331, 0.81344, 0.87581, 0.76422, 0.82046, 0.96057, 0.92733, 0.99375, 0.78022, 0.95452, 0.86015, 1.02988, 0.92733, 0.86331, 0.92733, 0.86015, 0.73133, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.90631, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.88323, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.85174, 1, 1, 1, 1, 1, 1, 0.96068, 0.95794, 0.96068, 0.95794, 0.96068, 0.95794, 0.77892, 0.84548, 1, 1, 0.89552, 0.90527, 1, 0.90363, 0.92794, 0.92794, 0.92794, 0.89807, 0.87012, 0.87012, 0.87012, 0.89552, 0.89552, 1.42259, 0.71094, 1.06152, 1, 1, 1.03372, 1.03372, 0.97171, 1.4956, 2.2807, 0.92972, 0.83406, 0.91133, 0.83326, 0.91133, 1, 1, 1, 0.72021, 1, 1.23108, 0.83489, 0.88525, 0.88525, 0.81499, 0.90616, 1.81055, 0.90527, 1.81055, 1.3107, 1.53711, 0.94434, 1.08696, 1, 0.95018, 0.77192, 0.85284, 0.90747, 1.17534, 0.69825, 0.9716, 1.37077, 0.90747, 0.90747, 0.85356, 0.90747, 0.90747, 1.44947, 0.85284, 0.8941, 0.8941, 0.70572, 0.8, 0.70572, 0.70572, 0.70572, 0.70572, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.99862, 0.99862, 1, 1, 1, 1, 1, 1.08004, 0.91027, 1, 1, 1, 0.99862, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.90727, 0.90727, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1];
          r2.CalibriBoldItalicMetrics = { lineHeight: 1.2207, lineGap: 0.2207 };
          r2.CalibriItalicFactors = [1.3877, 1, 1, 1, 1.17223, 1.1293, 0.89552, 0.91133, 0.80395, 1.02269, 1.15601, 0.91056, 0.91056, 1.2798, 0.85284, 0.89807, 1, 0.90861, 1.39543, 0.91133, 0.91133, 0.91133, 0.91133, 0.91133, 0.91133, 0.91133, 0.91133, 0.91133, 0.91133, 0.96309, 0.96309, 0.85284, 0.85284, 0.85284, 0.83319, 0.88071, 0.8675, 0.81552, 0.72346, 0.85193, 0.73206, 0.7522, 0.81105, 0.86275, 0.90685, 0.6377, 0.77892, 0.75593, 1.02638, 0.89249, 0.84118, 0.77452, 0.85374, 0.75186, 0.67789, 0.79776, 0.88844, 0.85066, 0.94309, 0.77818, 0.7306, 0.76659, 1.10369, 1.38313, 1.10369, 1.06139, 0.89552, 0.8739, 0.9245, 0.9245, 0.83203, 0.9245, 0.85865, 1.09842, 0.9245, 0.9245, 1.03297, 1.07692, 0.90918, 1.03297, 0.94959, 0.9245, 0.92274, 0.9245, 0.9245, 1.02933, 0.77832, 1.20562, 0.9245, 0.8916, 0.98986, 0.86621, 0.89453, 0.79004, 0.94152, 1.77256, 0.94152, 0.85284, 0.97801, 0.89552, 0.91133, 0.89552, 0.91133, 1.91729, 0.89552, 1.17889, 1.13254, 1.16359, 0.92098, 0.85284, 0.68787, 0.71353, 0.84737, 0.90747, 1.0088, 1.0044, 0.87683, 1, 1.09091, 1, 0.92229, 0.739, 1.15642, 0.92098, 0.76288, 0.80504, 0.80972, 0.75859, 0.8675, 0.8675, 0.8675, 0.8675, 0.8675, 0.8675, 0.76318, 0.72346, 0.73206, 0.73206, 0.73206, 0.73206, 0.90685, 0.90685, 0.90685, 0.90685, 0.86477, 0.89249, 0.84118, 0.84118, 0.84118, 0.84118, 0.84118, 0.85284, 0.84557, 0.88844, 0.88844, 0.88844, 0.88844, 0.7306, 0.77452, 0.86331, 0.9245, 0.9245, 0.9245, 0.9245, 0.9245, 0.9245, 0.84843, 0.83203, 0.85865, 0.85865, 0.85865, 0.85865, 0.82601, 0.82601, 0.82601, 0.82601, 0.94469, 0.9245, 0.92274, 0.92274, 0.92274, 0.92274, 0.92274, 0.90747, 0.86651, 0.9245, 0.9245, 0.9245, 0.9245, 0.89453, 0.9245, 0.89453, 0.8675, 0.9245, 0.8675, 0.9245, 0.8675, 0.9245, 0.72346, 0.83203, 0.72346, 0.83203, 0.72346, 0.83203, 0.72346, 0.83203, 0.85193, 0.8875, 0.86477, 0.99034, 0.73206, 0.85865, 0.73206, 0.85865, 0.73206, 0.85865, 0.73206, 0.85865, 0.73206, 0.85865, 0.81105, 0.9245, 0.81105, 0.9245, 0.81105, 0.9245, 1, 1, 0.86275, 0.9245, 0.90872, 0.93591, 0.90685, 0.82601, 0.90685, 0.82601, 0.90685, 0.82601, 0.90685, 1.03297, 0.90685, 0.82601, 0.77896, 1.05611, 0.6377, 1.07692, 1, 1, 0.90918, 0.75593, 1.03297, 1, 1, 0.76032, 0.9375, 0.98156, 0.93407, 0.77261, 1.11429, 0.89249, 0.9245, 1, 1, 0.89249, 0.9245, 0.92534, 0.86698, 0.9245, 0.84118, 0.92274, 0.84118, 0.92274, 0.84118, 0.92274, 0.8667, 0.86291, 0.75186, 1.02933, 1, 1, 0.75186, 1.02933, 0.67789, 0.77832, 0.67789, 0.77832, 0.67789, 0.77832, 0.67789, 0.77832, 1, 1, 0.79776, 0.97655, 0.79776, 1.23023, 0.88844, 0.9245, 0.88844, 0.9245, 0.88844, 0.9245, 0.88844, 0.9245, 0.88844, 0.9245, 0.88844, 0.9245, 0.94309, 0.98986, 0.7306, 0.89453, 0.7306, 0.76659, 0.79004, 0.76659, 0.79004, 0.76659, 0.79004, 1.09231, 0.54873, 0.8675, 0.9245, 0.76318, 0.84843, 0.84557, 0.86651, 1, 1, 0.79776, 1.20562, 1.18622, 1.18622, 1, 1.1437, 0.67009, 0.96334, 0.93695, 1.35191, 1.40909, 0.95161, 1.48387, 0.8675, 0.90861, 0.6192, 0.7363, 0.64824, 0.82411, 0.56321, 0.85696, 1.23516, 0.8675, 0.81552, 0.7286, 0.84134, 0.73206, 0.76659, 0.86275, 0.84369, 0.90685, 0.77892, 0.85871, 1.02638, 0.89249, 0.75828, 0.84118, 0.85984, 0.77452, 0.76466, 0.79776, 0.7306, 0.90782, 0.77818, 0.903, 0.87291, 0.90685, 0.7306, 0.99058, 1.03667, 0.94635, 1.23516, 0.9849, 0.99058, 0.92393, 0.8916, 0.942, 1.03667, 0.75026, 0.94635, 1.0297, 1.23516, 0.90918, 0.94048, 0.98217, 0.89746, 0.84153, 0.92274, 0.82507, 0.88832, 0.84438, 0.88178, 1.03525, 0.9849, 1.00225, 0.78086, 0.97248, 0.89404, 1.23516, 0.9849, 0.92274, 0.9849, 0.89404, 0.73206, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.89693, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.85865, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.90933, 1, 1, 1, 1, 1, 1, 0.94309, 0.98986, 0.94309, 0.98986, 0.94309, 0.98986, 0.7306, 0.89453, 1, 1, 0.89552, 0.90527, 1, 0.90186, 1.12308, 1.12308, 1.12308, 1.12308, 1.2566, 1.2566, 1.2566, 0.89552, 0.89552, 1.42259, 0.68994, 1.03809, 1, 1, 1.0176, 1.0176, 1.11523, 1.4956, 2.01462, 0.97858, 0.82616, 0.91133, 0.83437, 0.91133, 1, 1, 1, 0.70508, 1, 1.23108, 0.79801, 0.84426, 0.84426, 0.774, 0.90572, 1.81055, 0.90749, 1.81055, 1.28809, 1.55469, 0.94434, 1.07806, 1, 0.97094, 0.7589, 0.85284, 0.90747, 1.19658, 0.69825, 0.97622, 1.33512, 0.90747, 0.90747, 0.85284, 0.90747, 0.90747, 1.44947, 0.85284, 0.8941, 0.8941, 0.70572, 0.8, 0.70572, 0.70572, 0.70572, 0.70572, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.99862, 0.99862, 1, 1, 1, 1, 1, 1.0336, 0.91027, 1, 1, 1, 0.99862, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1.05859, 1.05859, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1];
          r2.CalibriItalicMetrics = { lineHeight: 1.2207, lineGap: 0.2207 };
          r2.CalibriRegularFactors = [1.3877, 1, 1, 1, 1.17223, 1.1293, 0.89552, 0.91133, 0.80395, 1.02269, 1.15601, 0.91056, 0.91056, 1.2798, 0.85284, 0.89807, 1, 0.90861, 1.39016, 0.91133, 0.91133, 0.91133, 0.91133, 0.91133, 0.91133, 0.91133, 0.91133, 0.91133, 0.91133, 0.96309, 0.96309, 0.85284, 0.85284, 0.85284, 0.83319, 0.88071, 0.8675, 0.81552, 0.73834, 0.85193, 0.73206, 0.7522, 0.81105, 0.86275, 0.90685, 0.6377, 0.77892, 0.75593, 1.02638, 0.89385, 0.85122, 0.77452, 0.86503, 0.75186, 0.68887, 0.79776, 0.88844, 0.85066, 0.94258, 0.77818, 0.7306, 0.76659, 1.10369, 1.39016, 1.10369, 1.06139, 0.89552, 0.8739, 0.86128, 0.94469, 0.8457, 0.94469, 0.89464, 1.09842, 0.84636, 0.94469, 1.03297, 1.07692, 0.90918, 1.03297, 0.95897, 0.94469, 0.9482, 0.94469, 0.94469, 1.04692, 0.78223, 1.20562, 0.94469, 0.90332, 0.98986, 0.86621, 0.90527, 0.79004, 0.94152, 1.77256, 0.94152, 0.85284, 0.97801, 0.89552, 0.91133, 0.89552, 0.91133, 1.91729, 0.89552, 1.17889, 1.13254, 1.08707, 0.92098, 0.85284, 0.68787, 0.71353, 0.84737, 0.90747, 1.0088, 1.0044, 0.87683, 1, 1.09091, 1, 0.92229, 0.739, 1.15642, 0.92098, 0.76288, 0.80504, 0.80972, 0.75859, 0.8675, 0.8675, 0.8675, 0.8675, 0.8675, 0.8675, 0.76318, 0.73834, 0.73206, 0.73206, 0.73206, 0.73206, 0.90685, 0.90685, 0.90685, 0.90685, 0.86477, 0.89385, 0.85122, 0.85122, 0.85122, 0.85122, 0.85122, 0.85284, 0.85311, 0.88844, 0.88844, 0.88844, 0.88844, 0.7306, 0.77452, 0.86331, 0.86128, 0.86128, 0.86128, 0.86128, 0.86128, 0.86128, 0.8693, 0.8457, 0.89464, 0.89464, 0.89464, 0.89464, 0.82601, 0.82601, 0.82601, 0.82601, 0.94469, 0.94469, 0.9482, 0.9482, 0.9482, 0.9482, 0.9482, 0.90747, 0.86651, 0.94469, 0.94469, 0.94469, 0.94469, 0.90527, 0.94469, 0.90527, 0.8675, 0.86128, 0.8675, 0.86128, 0.8675, 0.86128, 0.73834, 0.8457, 0.73834, 0.8457, 0.73834, 0.8457, 0.73834, 0.8457, 0.85193, 0.92454, 0.86477, 0.9921, 0.73206, 0.89464, 0.73206, 0.89464, 0.73206, 0.89464, 0.73206, 0.89464, 0.73206, 0.89464, 0.81105, 0.84636, 0.81105, 0.84636, 0.81105, 0.84636, 1, 1, 0.86275, 0.94469, 0.90872, 0.95786, 0.90685, 0.82601, 0.90685, 0.82601, 0.90685, 0.82601, 0.90685, 1.03297, 0.90685, 0.82601, 0.77741, 1.05611, 0.6377, 1.07692, 1, 1, 0.90918, 0.75593, 1.03297, 1, 1, 0.76032, 0.90452, 0.98156, 1.11842, 0.77261, 1.11429, 0.89385, 0.94469, 1, 1, 0.89385, 0.94469, 0.95877, 0.86901, 0.94469, 0.85122, 0.9482, 0.85122, 0.9482, 0.85122, 0.9482, 0.8667, 0.90016, 0.75186, 1.04692, 1, 1, 0.75186, 1.04692, 0.68887, 0.78223, 0.68887, 0.78223, 0.68887, 0.78223, 0.68887, 0.78223, 1, 1, 0.79776, 0.92188, 0.79776, 1.23023, 0.88844, 0.94469, 0.88844, 0.94469, 0.88844, 0.94469, 0.88844, 0.94469, 0.88844, 0.94469, 0.88844, 0.94469, 0.94258, 0.98986, 0.7306, 0.90527, 0.7306, 0.76659, 0.79004, 0.76659, 0.79004, 0.76659, 0.79004, 1.09231, 0.54873, 0.8675, 0.86128, 0.76318, 0.8693, 0.85311, 0.86651, 1, 1, 0.79776, 1.20562, 1.18622, 1.18622, 1, 1.1437, 0.67742, 0.96334, 0.93695, 1.35191, 1.40909, 0.95161, 1.48387, 0.86686, 0.90861, 0.62267, 0.74359, 0.65649, 0.85498, 0.56963, 0.88254, 1.23516, 0.8675, 0.81552, 0.75443, 0.84503, 0.73206, 0.76659, 0.86275, 0.85122, 0.90685, 0.77892, 0.85746, 1.02638, 0.89385, 0.75657, 0.85122, 0.86275, 0.77452, 0.74171, 0.79776, 0.7306, 0.95165, 0.77818, 0.89772, 0.88831, 0.90685, 0.7306, 0.98142, 1.02191, 0.96576, 1.23516, 0.99018, 0.98142, 0.9236, 0.89258, 0.94035, 1.02191, 0.78848, 0.96576, 0.9561, 1.23516, 0.90918, 0.92578, 0.95424, 0.89746, 0.83969, 0.9482, 0.80113, 0.89442, 0.85208, 0.86155, 0.98022, 0.99018, 1.00452, 0.81209, 0.99247, 0.89181, 1.23516, 0.99018, 0.9482, 0.99018, 0.89181, 0.73206, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.88844, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.89464, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.96766, 1, 1, 1, 1, 1, 1, 0.94258, 0.98986, 0.94258, 0.98986, 0.94258, 0.98986, 0.7306, 0.90527, 1, 1, 0.89552, 0.90527, 1, 0.90186, 1.12308, 1.12308, 1.12308, 1.12308, 1.2566, 1.2566, 1.2566, 0.89552, 0.89552, 1.42259, 0.69043, 1.03809, 1, 1, 1.0176, 1.0176, 1.11523, 1.4956, 2.01462, 0.99331, 0.82616, 0.91133, 0.84286, 0.91133, 1, 1, 1, 0.70508, 1, 1.23108, 0.79801, 0.84426, 0.84426, 0.774, 0.90527, 1.81055, 0.90527, 1.81055, 1.28809, 1.55469, 0.94434, 1.07806, 1, 0.97094, 0.7589, 0.85284, 0.90747, 1.19658, 0.69825, 0.97622, 1.33512, 0.90747, 0.90747, 0.85356, 0.90747, 0.90747, 1.44947, 0.85284, 0.8941, 0.8941, 0.70572, 0.8, 0.70572, 0.70572, 0.70572, 0.70572, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.99862, 0.99862, 1, 1, 1, 1, 1, 1.0336, 0.91027, 1, 1, 1, 0.99862, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1.05859, 1.05859, 1, 1, 1, 1.07185, 0.99413, 0.96334, 1.08065, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1];
          r2.CalibriRegularMetrics = { lineHeight: 1.2207, lineGap: 0.2207 };
        }, (t2, r2) => {
          "use strict";
          Object.defineProperty(r2, "__esModule", { value: true });
          r2.HelveticaRegularMetrics = r2.HelveticaRegularFactors = r2.HelveticaItalicMetrics = r2.HelveticaItalicFactors = r2.HelveticaBoldMetrics = r2.HelveticaBoldItalicMetrics = r2.HelveticaBoldItalicFactors = r2.HelveticaBoldFactors = void 0;
          r2.HelveticaBoldFactors = [0.76116, 1, 1, 1.0006, 0.99998, 0.99974, 0.99973, 0.99973, 0.99982, 0.99977, 1.00087, 0.99998, 0.99998, 0.99959, 1.00003, 1.0006, 0.99998, 1.0006, 1.0006, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973, 0.99998, 1, 1.00003, 1.00003, 1.00003, 1.00026, 0.9999, 0.99977, 0.99977, 0.99977, 0.99977, 1.00001, 1.00026, 1.00022, 0.99977, 1.0006, 0.99973, 0.99977, 1.00026, 0.99999, 0.99977, 1.00022, 1.00001, 1.00022, 0.99977, 1.00001, 1.00026, 0.99977, 1.00001, 1.00016, 1.00001, 1.00001, 1.00026, 0.99998, 1.0006, 0.99998, 1.00003, 0.99973, 0.99998, 0.99973, 1.00026, 0.99973, 1.00026, 0.99973, 0.99998, 1.00026, 1.00026, 1.0006, 1.0006, 0.99973, 1.0006, 0.99982, 1.00026, 1.00026, 1.00026, 1.00026, 0.99959, 0.99973, 0.99998, 1.00026, 0.99973, 1.00022, 0.99973, 0.99973, 1, 0.99959, 1.00077, 0.99959, 1.00003, 0.99998, 0.99973, 0.99973, 0.99973, 0.99973, 1.00077, 0.99973, 0.99998, 1.00025, 0.99968, 0.99973, 1.00003, 1.00025, 0.60299, 1.00024, 1.06409, 1, 1, 0.99998, 1, 0.99973, 1.0006, 0.99998, 1, 0.99936, 0.99973, 1.00002, 1.00002, 1.00002, 1.00026, 0.99977, 0.99977, 0.99977, 0.99977, 0.99977, 0.99977, 1, 0.99977, 1.00001, 1.00001, 1.00001, 1.00001, 1.0006, 1.0006, 1.0006, 1.0006, 0.99977, 0.99977, 1.00022, 1.00022, 1.00022, 1.00022, 1.00022, 1.00003, 1.00022, 0.99977, 0.99977, 0.99977, 0.99977, 1.00001, 1.00001, 1.00026, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973, 0.99982, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973, 1.0006, 1.0006, 1.0006, 1.0006, 1.00026, 1.00026, 1.00026, 1.00026, 1.00026, 1.00026, 1.00026, 1.06409, 1.00026, 1.00026, 1.00026, 1.00026, 1.00026, 0.99973, 1.00026, 0.99973, 0.99977, 0.99973, 0.99977, 0.99973, 0.99977, 0.99973, 0.99977, 0.99973, 0.99977, 0.99973, 0.99977, 0.99973, 0.99977, 0.99973, 0.99977, 1.03374, 0.99977, 1.00026, 1.00001, 0.99973, 1.00001, 0.99973, 1.00001, 0.99973, 1.00001, 0.99973, 1.00001, 0.99973, 1.00022, 1.00026, 1.00022, 1.00026, 1.00022, 1.00026, 1.00022, 1.00026, 0.99977, 1.00026, 0.99977, 1.00026, 1.0006, 1.0006, 1.0006, 1.0006, 1.0006, 1.0006, 1.0006, 1.0006, 1.0006, 1.0006, 1.00042, 0.99973, 0.99973, 1.0006, 0.99977, 0.99973, 0.99973, 1.00026, 1.0006, 1.00026, 1.0006, 1.00026, 1.03828, 1.00026, 0.99999, 1.00026, 1.0006, 0.99977, 1.00026, 0.99977, 1.00026, 0.99977, 1.00026, 0.9993, 0.9998, 1.00026, 1.00022, 1.00026, 1.00022, 1.00026, 1.00022, 1.00026, 1, 1.00016, 0.99977, 0.99959, 0.99977, 0.99959, 0.99977, 0.99959, 1.00001, 0.99973, 1.00001, 0.99973, 1.00001, 0.99973, 1.00001, 0.99973, 1.00026, 0.99998, 1.00026, 0.8121, 1.00026, 0.99998, 0.99977, 1.00026, 0.99977, 1.00026, 0.99977, 1.00026, 0.99977, 1.00026, 0.99977, 1.00026, 0.99977, 1.00026, 1.00016, 1.00022, 1.00001, 0.99973, 1.00001, 1.00026, 1, 1.00026, 1, 1.00026, 1, 1.0006, 0.99973, 0.99977, 0.99973, 1, 0.99982, 1.00022, 1.00026, 1.00001, 0.99973, 1.00026, 0.99998, 0.99998, 0.99998, 0.99998, 0.99998, 0.99998, 0.99998, 0.99998, 0.99998, 0.99998, 0.99998, 1.00034, 0.99977, 1, 0.99997, 1.00026, 1.00078, 1.00036, 0.99973, 1.00013, 1.0006, 0.99977, 0.99977, 0.99988, 0.85148, 1.00001, 1.00026, 0.99977, 1.00022, 1.0006, 0.99977, 1.00001, 0.99999, 0.99977, 1.00069, 1.00022, 0.99977, 1.00001, 0.99984, 1.00026, 1.00001, 1.00024, 1.00001, 0.9999, 1, 1.0006, 1.00001, 1.00041, 0.99962, 1.00026, 1.0006, 0.99995, 1.00041, 0.99942, 0.99973, 0.99927, 1.00082, 0.99902, 1.00026, 1.00087, 1.0006, 1.00069, 0.99973, 0.99867, 0.99973, 0.9993, 1.00026, 1.00049, 1.00056, 1, 0.99988, 0.99935, 0.99995, 0.99954, 1.00055, 0.99945, 1.00032, 1.0006, 0.99995, 1.00026, 0.99995, 1.00032, 1.00001, 1.00008, 0.99971, 1.00019, 0.9994, 1.00001, 1.0006, 1.00044, 0.99973, 1.00023, 1.00047, 1, 0.99942, 0.99561, 0.99989, 1.00035, 0.99977, 1.00035, 0.99977, 1.00019, 0.99944, 1.00001, 1.00021, 0.99926, 1.00035, 1.00035, 0.99942, 1.00048, 0.99999, 0.99977, 1.00022, 1.00035, 1.00001, 0.99977, 1.00026, 0.99989, 1.00057, 1.00001, 0.99936, 1.00052, 1.00012, 0.99996, 1.00043, 1, 1.00035, 0.9994, 0.99976, 1.00035, 0.99973, 1.00052, 1.00041, 1.00119, 1.00037, 0.99973, 1.00002, 0.99986, 1.00041, 1.00041, 0.99902, 0.9996, 1.00034, 0.99999, 1.00026, 0.99999, 1.00026, 0.99973, 1.00052, 0.99973, 1, 0.99973, 1.00041, 1.00075, 0.9994, 1.0003, 0.99999, 1, 1.00041, 0.99955, 1, 0.99915, 0.99973, 0.99973, 1.00026, 1.00119, 0.99955, 0.99973, 1.0006, 0.99911, 1.0006, 1.00026, 0.99972, 1.00026, 0.99902, 1.00041, 0.99973, 0.99999, 1, 1, 1.00038, 1.0005, 1.00016, 1.00022, 1.00016, 1.00022, 1.00016, 1.00022, 1.00001, 0.99973, 1, 1, 0.99973, 1, 1, 0.99955, 1.0006, 1.0006, 1.0006, 1.0006, 1, 1, 1, 0.99973, 0.99973, 0.99972, 1, 1, 1.00106, 0.99999, 0.99998, 0.99998, 0.99999, 0.99998, 1.66475, 1, 0.99973, 0.99973, 1.00023, 0.99973, 0.99971, 1.00047, 1.00023, 1, 0.99991, 0.99984, 1.00002, 1.00002, 1.00002, 1.00002, 1, 1, 1, 1, 1, 1, 1, 0.99972, 1, 1.20985, 1.39713, 1.00003, 1.00031, 1.00015, 1, 0.99561, 1.00027, 1.00031, 1.00031, 0.99915, 1.00031, 1.00031, 0.99999, 1.00003, 0.99999, 0.99999, 1.41144, 1.6, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.40579, 1.40579, 1.36625, 0.99999, 1, 0.99861, 0.99861, 1, 1.00026, 1.00026, 1.00026, 1.00026, 0.99972, 0.99999, 0.99999, 0.99999, 0.99999, 1.40483, 1, 0.99977, 1.00054, 1, 1, 0.99953, 0.99962, 1.00042, 0.9995, 1, 1, 1, 1, 1, 1, 1, 1, 0.99998, 0.99998, 0.99998, 0.99998, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1];
          r2.HelveticaBoldMetrics = { lineHeight: 1.2, lineGap: 0.2 };
          r2.HelveticaBoldItalicFactors = [0.76116, 1, 1, 1.0006, 0.99998, 0.99974, 0.99973, 0.99973, 0.99982, 0.99977, 1.00087, 0.99998, 0.99998, 0.99959, 1.00003, 1.0006, 0.99998, 1.0006, 1.0006, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973, 0.99998, 1, 1.00003, 1.00003, 1.00003, 1.00026, 0.9999, 0.99977, 0.99977, 0.99977, 0.99977, 1.00001, 1.00026, 1.00022, 0.99977, 1.0006, 0.99973, 0.99977, 1.00026, 0.99999, 0.99977, 1.00022, 1.00001, 1.00022, 0.99977, 1.00001, 1.00026, 0.99977, 1.00001, 1.00016, 1.00001, 1.00001, 1.00026, 0.99998, 1.0006, 0.99998, 1.00003, 0.99973, 0.99998, 0.99973, 1.00026, 0.99973, 1.00026, 0.99973, 0.99998, 1.00026, 1.00026, 1.0006, 1.0006, 0.99973, 1.0006, 0.99982, 1.00026, 1.00026, 1.00026, 1.00026, 0.99959, 0.99973, 0.99998, 1.00026, 0.99973, 1.00022, 0.99973, 0.99973, 1, 0.99959, 1.00077, 0.99959, 1.00003, 0.99998, 0.99973, 0.99973, 0.99973, 0.99973, 1.00077, 0.99973, 0.99998, 1.00025, 0.99968, 0.99973, 1.00003, 1.00025, 0.60299, 1.00024, 1.06409, 1, 1, 0.99998, 1, 0.99973, 1.0006, 0.99998, 1, 0.99936, 0.99973, 1.00002, 1.00002, 1.00002, 1.00026, 0.99977, 0.99977, 0.99977, 0.99977, 0.99977, 0.99977, 1, 0.99977, 1.00001, 1.00001, 1.00001, 1.00001, 1.0006, 1.0006, 1.0006, 1.0006, 0.99977, 0.99977, 1.00022, 1.00022, 1.00022, 1.00022, 1.00022, 1.00003, 1.00022, 0.99977, 0.99977, 0.99977, 0.99977, 1.00001, 1.00001, 1.00026, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973, 0.99982, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973, 1.0006, 1.0006, 1.0006, 1.0006, 1.00026, 1.00026, 1.00026, 1.00026, 1.00026, 1.00026, 1.00026, 1.06409, 1.00026, 1.00026, 1.00026, 1.00026, 1.00026, 0.99973, 1.00026, 0.99973, 0.99977, 0.99973, 0.99977, 0.99973, 0.99977, 0.99973, 0.99977, 0.99973, 0.99977, 0.99973, 0.99977, 0.99973, 0.99977, 0.99973, 0.99977, 1.0044, 0.99977, 1.00026, 1.00001, 0.99973, 1.00001, 0.99973, 1.00001, 0.99973, 1.00001, 0.99973, 1.00001, 0.99973, 1.00022, 1.00026, 1.00022, 1.00026, 1.00022, 1.00026, 1.00022, 1.00026, 0.99977, 1.00026, 0.99977, 1.00026, 1.0006, 1.0006, 1.0006, 1.0006, 1.0006, 1.0006, 1.0006, 1.0006, 1.0006, 1.0006, 0.99971, 0.99973, 0.99973, 1.0006, 0.99977, 0.99973, 0.99973, 1.00026, 1.0006, 1.00026, 1.0006, 1.00026, 1.01011, 1.00026, 0.99999, 1.00026, 1.0006, 0.99977, 1.00026, 0.99977, 1.00026, 0.99977, 1.00026, 0.9993, 0.9998, 1.00026, 1.00022, 1.00026, 1.00022, 1.00026, 1.00022, 1.00026, 1, 1.00016, 0.99977, 0.99959, 0.99977, 0.99959, 0.99977, 0.99959, 1.00001, 0.99973, 1.00001, 0.99973, 1.00001, 0.99973, 1.00001, 0.99973, 1.00026, 0.99998, 1.00026, 0.8121, 1.00026, 0.99998, 0.99977, 1.00026, 0.99977, 1.00026, 0.99977, 1.00026, 0.99977, 1.00026, 0.99977, 1.00026, 0.99977, 1.00026, 1.00016, 1.00022, 1.00001, 0.99973, 1.00001, 1.00026, 1, 1.00026, 1, 1.00026, 1, 1.0006, 0.99973, 0.99977, 0.99973, 1, 0.99982, 1.00022, 1.00026, 1.00001, 0.99973, 1.00026, 0.99998, 0.99998, 0.99998, 0.99998, 0.99998, 0.99998, 0.99998, 0.99998, 0.99998, 0.99998, 0.99998, 0.99998, 0.99977, 1, 1, 1.00026, 0.99969, 0.99972, 0.99981, 0.9998, 1.0006, 0.99977, 0.99977, 1.00022, 0.91155, 1.00001, 1.00026, 0.99977, 1.00022, 1.0006, 0.99977, 1.00001, 0.99999, 0.99977, 0.99966, 1.00022, 1.00032, 1.00001, 0.99944, 1.00026, 1.00001, 0.99968, 1.00001, 1.00047, 1, 1.0006, 1.00001, 0.99981, 1.00101, 1.00026, 1.0006, 0.99948, 0.99981, 1.00064, 0.99973, 0.99942, 1.00101, 1.00061, 1.00026, 1.00069, 1.0006, 1.00014, 0.99973, 1.01322, 0.99973, 1.00065, 1.00026, 1.00012, 0.99923, 1, 1.00064, 1.00076, 0.99948, 1.00055, 1.00063, 1.00007, 0.99943, 1.0006, 0.99948, 1.00026, 0.99948, 0.99943, 1.00001, 1.00001, 1.00029, 1.00038, 1.00035, 1.00001, 1.0006, 1.0006, 0.99973, 0.99978, 1.00001, 1.00057, 0.99989, 0.99967, 0.99964, 0.99967, 0.99977, 0.99999, 0.99977, 1.00038, 0.99977, 1.00001, 0.99973, 1.00066, 0.99967, 0.99967, 1.00041, 0.99998, 0.99999, 0.99977, 1.00022, 0.99967, 1.00001, 0.99977, 1.00026, 0.99964, 1.00031, 1.00001, 0.99999, 0.99999, 1, 1.00023, 1, 1, 0.99999, 1.00035, 1.00001, 0.99999, 0.99973, 0.99977, 0.99999, 1.00058, 0.99973, 0.99973, 0.99955, 0.9995, 1.00026, 1.00026, 1.00032, 0.99989, 1.00034, 0.99999, 1.00026, 1.00026, 1.00026, 0.99973, 0.45998, 0.99973, 1.00026, 0.99973, 1.00001, 0.99999, 0.99982, 0.99994, 0.99996, 1, 1.00042, 1.00044, 1.00029, 1.00023, 0.99973, 0.99973, 1.00026, 0.99949, 1.00002, 0.99973, 1.0006, 1.0006, 1.0006, 0.99975, 1.00026, 1.00026, 1.00032, 0.98685, 0.99973, 1.00026, 1, 1, 0.99966, 1.00044, 1.00016, 1.00022, 1.00016, 1.00022, 1.00016, 1.00022, 1.00001, 0.99973, 1, 1, 0.99973, 1, 1, 0.99955, 1.0006, 1.0006, 1.0006, 1.0006, 1, 1, 1, 0.99973, 0.99973, 0.99972, 1, 1, 1.00106, 0.99999, 0.99998, 0.99998, 0.99999, 0.99998, 1.66475, 1, 0.99973, 0.99973, 1, 0.99973, 0.99971, 0.99978, 1, 1, 0.99991, 0.99984, 1.00002, 1.00002, 1.00002, 1.00002, 1.00098, 1, 1, 1, 1.00049, 1, 1, 0.99972, 1, 1.20985, 1.39713, 1.00003, 1.00031, 1.00015, 1, 0.99561, 1.00027, 1.00031, 1.00031, 0.99915, 1.00031, 1.00031, 0.99999, 1.00003, 0.99999, 0.99999, 1.41144, 1.6, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.40579, 1.40579, 1.36625, 0.99999, 1, 0.99861, 0.99861, 1, 1.00026, 1.00026, 1.00026, 1.00026, 0.99972, 0.99999, 0.99999, 0.99999, 0.99999, 1.40483, 1, 0.99977, 1.00054, 1, 1, 0.99953, 0.99962, 1.00042, 0.9995, 1, 1, 1, 1, 1, 1, 1, 1, 0.99998, 0.99998, 0.99998, 0.99998, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1];
          r2.HelveticaBoldItalicMetrics = { lineHeight: 1.35, lineGap: 0.2 };
          r2.HelveticaItalicFactors = [0.76116, 1, 1, 1.0006, 1.0006, 1.00006, 0.99973, 0.99973, 0.99982, 1.00001, 1.00043, 0.99998, 0.99998, 0.99959, 1.00003, 1.0006, 0.99998, 1.0006, 1.0006, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973, 1.0006, 1, 1.00003, 1.00003, 1.00003, 0.99973, 0.99987, 1.00001, 1.00001, 0.99977, 0.99977, 1.00001, 1.00026, 1.00022, 0.99977, 1.0006, 1, 1.00001, 0.99973, 0.99999, 0.99977, 1.00022, 1.00001, 1.00022, 0.99977, 1.00001, 1.00026, 0.99977, 1.00001, 1.00016, 1.00001, 1.00001, 1.00026, 1.0006, 1.0006, 1.0006, 0.99949, 0.99973, 0.99998, 0.99973, 0.99973, 1, 0.99973, 0.99973, 1.0006, 0.99973, 0.99973, 0.99924, 0.99924, 1, 0.99924, 0.99999, 0.99973, 0.99973, 0.99973, 0.99973, 0.99998, 1, 1.0006, 0.99973, 1, 0.99977, 1, 1, 1, 1.00005, 1.0009, 1.00005, 1.00003, 0.99998, 0.99973, 0.99973, 0.99973, 0.99973, 1.0009, 0.99973, 0.99998, 1.00025, 0.99968, 0.99973, 1.00003, 1.00025, 0.60299, 1.00024, 1.06409, 1, 1, 0.99998, 1, 0.9998, 1.0006, 0.99998, 1, 0.99936, 0.99973, 1.00002, 1.00002, 1.00002, 1.00026, 1.00001, 1.00001, 1.00001, 1.00001, 1.00001, 1.00001, 1, 0.99977, 1.00001, 1.00001, 1.00001, 1.00001, 1.0006, 1.0006, 1.0006, 1.0006, 0.99977, 0.99977, 1.00022, 1.00022, 1.00022, 1.00022, 1.00022, 1.00003, 1.00022, 0.99977, 0.99977, 0.99977, 0.99977, 1.00001, 1.00001, 1.00026, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973, 0.99982, 1, 0.99973, 0.99973, 0.99973, 0.99973, 1.0006, 1.0006, 1.0006, 1.0006, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973, 1.06409, 1.00026, 0.99973, 0.99973, 0.99973, 0.99973, 1, 0.99973, 1, 1.00001, 0.99973, 1.00001, 0.99973, 1.00001, 0.99973, 0.99977, 1, 0.99977, 1, 0.99977, 1, 0.99977, 1, 0.99977, 1.0288, 0.99977, 0.99973, 1.00001, 0.99973, 1.00001, 0.99973, 1.00001, 0.99973, 1.00001, 0.99973, 1.00001, 0.99973, 1.00022, 0.99973, 1.00022, 0.99973, 1.00022, 0.99973, 1.00022, 0.99973, 0.99977, 0.99973, 0.99977, 0.99973, 1.0006, 1.0006, 1.0006, 1.0006, 1.0006, 1.0006, 1.0006, 0.99924, 1.0006, 1.0006, 0.99946, 1.00034, 1, 0.99924, 1.00001, 1, 1, 0.99973, 0.99924, 0.99973, 0.99924, 0.99973, 1.06311, 0.99973, 1.00024, 0.99973, 0.99924, 0.99977, 0.99973, 0.99977, 0.99973, 0.99977, 0.99973, 1.00041, 0.9998, 0.99973, 1.00022, 0.99973, 1.00022, 0.99973, 1.00022, 0.99973, 1, 1.00016, 0.99977, 0.99998, 0.99977, 0.99998, 0.99977, 0.99998, 1.00001, 1, 1.00001, 1, 1.00001, 1, 1.00001, 1, 1.00026, 1.0006, 1.00026, 0.89547, 1.00026, 1.0006, 0.99977, 0.99973, 0.99977, 0.99973, 0.99977, 0.99973, 0.99977, 0.99973, 0.99977, 0.99973, 0.99977, 0.99973, 1.00016, 0.99977, 1.00001, 1, 1.00001, 1.00026, 1, 1.00026, 1, 1.00026, 1, 0.99924, 0.99973, 1.00001, 0.99973, 1, 0.99982, 1.00022, 1.00026, 1.00001, 1, 1.00026, 1.0006, 0.99998, 0.99998, 0.99998, 0.99998, 0.99998, 0.99998, 0.99998, 0.99998, 0.99998, 0.99998, 0.99998, 1.00001, 1, 1.00054, 0.99977, 1.00084, 1.00007, 0.99973, 1.00013, 0.99924, 1.00001, 1.00001, 0.99945, 0.91221, 1.00001, 1.00026, 0.99977, 1.00022, 1.0006, 1.00001, 1.00001, 0.99999, 0.99977, 0.99933, 1.00022, 1.00054, 1.00001, 1.00065, 1.00026, 1.00001, 1.0001, 1.00001, 1.00052, 1, 1.0006, 1.00001, 0.99945, 0.99897, 0.99968, 0.99924, 1.00036, 0.99945, 0.99949, 1, 1.0006, 0.99897, 0.99918, 0.99968, 0.99911, 0.99924, 1, 0.99962, 1.01487, 1, 1.0005, 0.99973, 1.00012, 1.00043, 1, 0.99995, 0.99994, 1.00036, 0.99947, 1.00019, 1.00063, 1.00025, 0.99924, 1.00036, 0.99973, 1.00036, 1.00025, 1.00001, 1.00001, 1.00027, 1.0001, 1.00068, 1.00001, 1.0006, 1.0006, 1, 1.00008, 0.99957, 0.99972, 0.9994, 0.99954, 0.99975, 1.00051, 1.00001, 1.00019, 1.00001, 1.0001, 0.99986, 1.00001, 1.00001, 1.00038, 0.99954, 0.99954, 0.9994, 1.00066, 0.99999, 0.99977, 1.00022, 1.00054, 1.00001, 0.99977, 1.00026, 0.99975, 1.0001, 1.00001, 0.99993, 0.9995, 0.99955, 1.00016, 0.99978, 0.99974, 1.00019, 1.00022, 0.99955, 1.00053, 0.99973, 1.00089, 1.00005, 0.99967, 1.00048, 0.99973, 1.00002, 1.00034, 0.99973, 0.99973, 0.99964, 1.00006, 1.00066, 0.99947, 0.99973, 0.98894, 0.99973, 1, 0.44898, 1, 0.99946, 1, 1.00039, 1.00082, 0.99991, 0.99991, 0.99985, 1.00022, 1.00023, 1.00061, 1.00006, 0.99966, 0.99973, 0.99973, 0.99973, 1.00019, 1.0008, 1, 0.99924, 0.99924, 0.99924, 0.99983, 1.00044, 0.99973, 0.99964, 0.98332, 1, 0.99973, 1, 1, 0.99962, 0.99895, 1.00016, 0.99977, 1.00016, 0.99977, 1.00016, 0.99977, 1.00001, 1, 1, 1, 0.99973, 1, 1, 0.99955, 0.99924, 0.99924, 0.99924, 0.99924, 0.99998, 0.99998, 0.99998, 0.99973, 0.99973, 0.99972, 1, 1, 1.00267, 0.99999, 0.99998, 0.99998, 1, 0.99998, 1.66475, 1, 0.99973, 0.99973, 1.00023, 0.99973, 1.00423, 0.99925, 0.99999, 1, 0.99991, 0.99984, 1.00002, 1.00002, 1.00002, 1.00002, 1.00049, 1, 1.00245, 1, 1, 1, 1, 0.96329, 1, 1.20985, 1.39713, 1.00003, 0.8254, 1.00015, 1, 1.00035, 1.00027, 1.00031, 1.00031, 1.00003, 1.00031, 1.00031, 0.99999, 1.00003, 0.99999, 0.99999, 1.41144, 1.6, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.40579, 1.40579, 1.36625, 0.99999, 1, 0.99861, 0.99861, 1, 1.00026, 1.00026, 1.00026, 1.00026, 0.95317, 0.99999, 0.99999, 0.99999, 0.99999, 1.40483, 1, 0.99977, 1.00054, 1, 1, 0.99953, 0.99962, 1.00042, 0.9995, 1, 1, 1, 1, 1, 1, 1, 1, 0.99998, 0.99998, 0.99998, 0.99998, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1];
          r2.HelveticaItalicMetrics = { lineHeight: 1.35, lineGap: 0.2 };
          r2.HelveticaRegularFactors = [0.76116, 1, 1, 1.0006, 1.0006, 1.00006, 0.99973, 0.99973, 0.99982, 1.00001, 1.00043, 0.99998, 0.99998, 0.99959, 1.00003, 1.0006, 0.99998, 1.0006, 1.0006, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973, 1.0006, 1, 1.00003, 1.00003, 1.00003, 0.99973, 0.99987, 1.00001, 1.00001, 0.99977, 0.99977, 1.00001, 1.00026, 1.00022, 0.99977, 1.0006, 1, 1.00001, 0.99973, 0.99999, 0.99977, 1.00022, 1.00001, 1.00022, 0.99977, 1.00001, 1.00026, 0.99977, 1.00001, 1.00016, 1.00001, 1.00001, 1.00026, 1.0006, 1.0006, 1.0006, 0.99949, 0.99973, 0.99998, 0.99973, 0.99973, 1, 0.99973, 0.99973, 1.0006, 0.99973, 0.99973, 0.99924, 0.99924, 1, 0.99924, 0.99999, 0.99973, 0.99973, 0.99973, 0.99973, 0.99998, 1, 1.0006, 0.99973, 1, 0.99977, 1, 1, 1, 1.00005, 1.0009, 1.00005, 1.00003, 0.99998, 0.99973, 0.99973, 0.99973, 0.99973, 1.0009, 0.99973, 0.99998, 1.00025, 0.99968, 0.99973, 1.00003, 1.00025, 0.60299, 1.00024, 1.06409, 1, 1, 0.99998, 1, 0.9998, 1.0006, 0.99998, 1, 0.99936, 0.99973, 1.00002, 1.00002, 1.00002, 1.00026, 1.00001, 1.00001, 1.00001, 1.00001, 1.00001, 1.00001, 1, 0.99977, 1.00001, 1.00001, 1.00001, 1.00001, 1.0006, 1.0006, 1.0006, 1.0006, 0.99977, 0.99977, 1.00022, 1.00022, 1.00022, 1.00022, 1.00022, 1.00003, 1.00022, 0.99977, 0.99977, 0.99977, 0.99977, 1.00001, 1.00001, 1.00026, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973, 0.99982, 1, 0.99973, 0.99973, 0.99973, 0.99973, 1.0006, 1.0006, 1.0006, 1.0006, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973, 1.06409, 1.00026, 0.99973, 0.99973, 0.99973, 0.99973, 1, 0.99973, 1, 1.00001, 0.99973, 1.00001, 0.99973, 1.00001, 0.99973, 0.99977, 1, 0.99977, 1, 0.99977, 1, 0.99977, 1, 0.99977, 1.04596, 0.99977, 0.99973, 1.00001, 0.99973, 1.00001, 0.99973, 1.00001, 0.99973, 1.00001, 0.99973, 1.00001, 0.99973, 1.00022, 0.99973, 1.00022, 0.99973, 1.00022, 0.99973, 1.00022, 0.99973, 0.99977, 0.99973, 0.99977, 0.99973, 1.0006, 1.0006, 1.0006, 1.0006, 1.0006, 1.0006, 1.0006, 0.99924, 1.0006, 1.0006, 1.00019, 1.00034, 1, 0.99924, 1.00001, 1, 1, 0.99973, 0.99924, 0.99973, 0.99924, 0.99973, 1.02572, 0.99973, 1.00005, 0.99973, 0.99924, 0.99977, 0.99973, 0.99977, 0.99973, 0.99977, 0.99973, 0.99999, 0.9998, 0.99973, 1.00022, 0.99973, 1.00022, 0.99973, 1.00022, 0.99973, 1, 1.00016, 0.99977, 0.99998, 0.99977, 0.99998, 0.99977, 0.99998, 1.00001, 1, 1.00001, 1, 1.00001, 1, 1.00001, 1, 1.00026, 1.0006, 1.00026, 0.84533, 1.00026, 1.0006, 0.99977, 0.99973, 0.99977, 0.99973, 0.99977, 0.99973, 0.99977, 0.99973, 0.99977, 0.99973, 0.99977, 0.99973, 1.00016, 0.99977, 1.00001, 1, 1.00001, 1.00026, 1, 1.00026, 1, 1.00026, 1, 0.99924, 0.99973, 1.00001, 0.99973, 1, 0.99982, 1.00022, 1.00026, 1.00001, 1, 1.00026, 1.0006, 0.99998, 0.99998, 0.99998, 0.99998, 0.99998, 0.99998, 0.99998, 0.99998, 0.99998, 0.99998, 0.99998, 0.99928, 1, 0.99977, 1.00013, 1.00055, 0.99947, 0.99945, 0.99941, 0.99924, 1.00001, 1.00001, 1.0004, 0.91621, 1.00001, 1.00026, 0.99977, 1.00022, 1.0006, 1.00001, 1.00005, 0.99999, 0.99977, 1.00015, 1.00022, 0.99977, 1.00001, 0.99973, 1.00026, 1.00001, 1.00019, 1.00001, 0.99946, 1, 1.0006, 1.00001, 0.99978, 1.00045, 0.99973, 0.99924, 1.00023, 0.99978, 0.99966, 1, 1.00065, 1.00045, 1.00019, 0.99973, 0.99973, 0.99924, 1, 1, 0.96499, 1, 1.00055, 0.99973, 1.00008, 1.00027, 1, 0.9997, 0.99995, 1.00023, 0.99933, 1.00019, 1.00015, 1.00031, 0.99924, 1.00023, 0.99973, 1.00023, 1.00031, 1.00001, 0.99928, 1.00029, 1.00092, 1.00035, 1.00001, 1.0006, 1.0006, 1, 0.99988, 0.99975, 1, 1.00082, 0.99561, 0.9996, 1.00035, 1.00001, 0.99962, 1.00001, 1.00092, 0.99964, 1.00001, 0.99963, 0.99999, 1.00035, 1.00035, 1.00082, 0.99962, 0.99999, 0.99977, 1.00022, 1.00035, 1.00001, 0.99977, 1.00026, 0.9996, 0.99967, 1.00001, 1.00034, 1.00074, 1.00054, 1.00053, 1.00063, 0.99971, 0.99962, 1.00035, 0.99975, 0.99977, 0.99973, 1.00043, 0.99953, 1.0007, 0.99915, 0.99973, 1.00008, 0.99892, 1.00073, 1.00073, 1.00114, 0.99915, 1.00073, 0.99955, 0.99973, 1.00092, 0.99973, 1, 0.99998, 1, 1.0003, 1, 1.00043, 1.00001, 0.99969, 1.0003, 1, 1.00035, 1.00001, 0.9995, 1, 1.00092, 0.99973, 0.99973, 0.99973, 1.0007, 0.9995, 1, 0.99924, 1.0006, 0.99924, 0.99972, 1.00062, 0.99973, 1.00114, 1.00073, 1, 0.99955, 1, 1, 1.00047, 0.99968, 1.00016, 0.99977, 1.00016, 0.99977, 1.00016, 0.99977, 1.00001, 1, 1, 1, 0.99973, 1, 1, 0.99955, 0.99924, 0.99924, 0.99924, 0.99924, 0.99998, 0.99998, 0.99998, 0.99973, 0.99973, 0.99972, 1, 1, 1.00267, 0.99999, 0.99998, 0.99998, 1, 0.99998, 1.66475, 1, 0.99973, 0.99973, 1.00023, 0.99973, 0.99971, 0.99925, 1.00023, 1, 0.99991, 0.99984, 1.00002, 1.00002, 1.00002, 1.00002, 1, 1, 1, 1, 1, 1, 1, 0.96329, 1, 1.20985, 1.39713, 1.00003, 0.8254, 1.00015, 1, 1.00035, 1.00027, 1.00031, 1.00031, 0.99915, 1.00031, 1.00031, 0.99999, 1.00003, 0.99999, 0.99999, 1.41144, 1.6, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.40579, 1.40579, 1.36625, 0.99999, 1, 0.99861, 0.99861, 1, 1.00026, 1.00026, 1.00026, 1.00026, 0.95317, 0.99999, 0.99999, 0.99999, 0.99999, 1.40483, 1, 0.99977, 1.00054, 1, 1, 0.99953, 0.99962, 1.00042, 0.9995, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1];
          r2.HelveticaRegularMetrics = { lineHeight: 1.2, lineGap: 0.2 };
        }, (t2, r2) => {
          "use strict";
          Object.defineProperty(r2, "__esModule", { value: true });
          r2.LiberationSansRegularWidths = r2.LiberationSansRegularMapping = r2.LiberationSansItalicWidths = r2.LiberationSansItalicMapping = r2.LiberationSansBoldWidths = r2.LiberationSansBoldMapping = r2.LiberationSansBoldItalicWidths = r2.LiberationSansBoldItalicMapping = void 0;
          r2.LiberationSansBoldWidths = [365, 0, 333, 278, 333, 474, 556, 556, 889, 722, 238, 333, 333, 389, 584, 278, 333, 278, 278, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 333, 333, 584, 584, 584, 611, 975, 722, 722, 722, 722, 667, 611, 778, 722, 278, 556, 722, 611, 833, 722, 778, 667, 778, 722, 667, 611, 722, 667, 944, 667, 667, 611, 333, 278, 333, 584, 556, 333, 556, 611, 556, 611, 556, 333, 611, 611, 278, 278, 556, 278, 889, 611, 611, 611, 611, 389, 556, 333, 611, 556, 778, 556, 556, 500, 389, 280, 389, 584, 333, 556, 556, 556, 556, 280, 556, 333, 737, 370, 556, 584, 737, 552, 400, 549, 333, 333, 333, 576, 556, 278, 333, 333, 365, 556, 834, 834, 834, 611, 722, 722, 722, 722, 722, 722, 1e3, 722, 667, 667, 667, 667, 278, 278, 278, 278, 722, 722, 778, 778, 778, 778, 778, 584, 778, 722, 722, 722, 722, 667, 667, 611, 556, 556, 556, 556, 556, 556, 889, 556, 556, 556, 556, 556, 278, 278, 278, 278, 611, 611, 611, 611, 611, 611, 611, 549, 611, 611, 611, 611, 611, 556, 611, 556, 722, 556, 722, 556, 722, 556, 722, 556, 722, 556, 722, 556, 722, 556, 722, 719, 722, 611, 667, 556, 667, 556, 667, 556, 667, 556, 667, 556, 778, 611, 778, 611, 778, 611, 778, 611, 722, 611, 722, 611, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 785, 556, 556, 278, 722, 556, 556, 611, 278, 611, 278, 611, 385, 611, 479, 611, 278, 722, 611, 722, 611, 722, 611, 708, 723, 611, 778, 611, 778, 611, 778, 611, 1e3, 944, 722, 389, 722, 389, 722, 389, 667, 556, 667, 556, 667, 556, 667, 556, 611, 333, 611, 479, 611, 333, 722, 611, 722, 611, 722, 611, 722, 611, 722, 611, 722, 611, 944, 778, 667, 556, 667, 611, 500, 611, 500, 611, 500, 278, 556, 722, 556, 1e3, 889, 778, 611, 667, 556, 611, 333, 333, 333, 333, 333, 333, 333, 333, 333, 333, 333, 465, 722, 333, 853, 906, 474, 825, 927, 838, 278, 722, 722, 601, 719, 667, 611, 722, 778, 278, 722, 667, 833, 722, 644, 778, 722, 667, 600, 611, 667, 821, 667, 809, 802, 278, 667, 615, 451, 611, 278, 582, 615, 610, 556, 606, 475, 460, 611, 541, 278, 558, 556, 612, 556, 445, 611, 766, 619, 520, 684, 446, 582, 715, 576, 753, 845, 278, 582, 611, 582, 845, 667, 669, 885, 567, 711, 667, 278, 276, 556, 1094, 1062, 875, 610, 722, 622, 719, 722, 719, 722, 567, 712, 667, 904, 626, 719, 719, 610, 702, 833, 722, 778, 719, 667, 722, 611, 622, 854, 667, 730, 703, 1005, 1019, 870, 979, 719, 711, 1031, 719, 556, 618, 615, 417, 635, 556, 709, 497, 615, 615, 500, 635, 740, 604, 611, 604, 611, 556, 490, 556, 875, 556, 615, 581, 833, 844, 729, 854, 615, 552, 854, 583, 556, 556, 611, 417, 552, 556, 278, 281, 278, 969, 906, 611, 500, 615, 556, 604, 778, 611, 487, 447, 944, 778, 944, 778, 944, 778, 667, 556, 333, 333, 556, 1e3, 1e3, 552, 278, 278, 278, 278, 500, 500, 500, 556, 556, 350, 1e3, 1e3, 240, 479, 333, 333, 604, 333, 167, 396, 556, 556, 1094, 556, 885, 489, 1115, 1e3, 768, 600, 834, 834, 834, 834, 1e3, 500, 1e3, 500, 1e3, 500, 500, 494, 612, 823, 713, 584, 549, 713, 979, 722, 274, 549, 549, 583, 549, 549, 604, 584, 604, 604, 708, 625, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 729, 604, 604, 354, 354, 1e3, 990, 990, 990, 990, 494, 604, 604, 604, 604, 354, 1021, 1052, 917, 750, 750, 531, 656, 594, 510, 500, 750, 750, 611, 611, 333, 333, 333, 333, 333, 333, 333, 333, 222, 222, 333, 333, 333, 333, 333, 333, 333, 333];
          r2.LiberationSansBoldMapping = [-1, -1, -1, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 402, 506, 507, 508, 509, 510, 511, 536, 537, 538, 539, 710, 711, 713, 728, 729, 730, 731, 732, 733, 900, 901, 902, 903, 904, 905, 906, 908, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1138, 1139, 1168, 1169, 7808, 7809, 7810, 7811, 7812, 7813, 7922, 7923, 8208, 8209, 8211, 8212, 8213, 8215, 8216, 8217, 8218, 8219, 8220, 8221, 8222, 8224, 8225, 8226, 8230, 8240, 8242, 8243, 8249, 8250, 8252, 8254, 8260, 8319, 8355, 8356, 8359, 8364, 8453, 8467, 8470, 8482, 8486, 8494, 8539, 8540, 8541, 8542, 8592, 8593, 8594, 8595, 8596, 8597, 8616, 8706, 8710, 8719, 8721, 8722, 8730, 8734, 8735, 8745, 8747, 8776, 8800, 8801, 8804, 8805, 8962, 8976, 8992, 8993, 9472, 9474, 9484, 9488, 9492, 9496, 9500, 9508, 9516, 9524, 9532, 9552, 9553, 9554, 9555, 9556, 9557, 9558, 9559, 9560, 9561, 9562, 9563, 9564, 9565, 9566, 9567, 9568, 9569, 9570, 9571, 9572, 9573, 9574, 9575, 9576, 9577, 9578, 9579, 9580, 9600, 9604, 9608, 9612, 9616, 9617, 9618, 9619, 9632, 9633, 9642, 9643, 9644, 9650, 9658, 9660, 9668, 9674, 9675, 9679, 9688, 9689, 9702, 9786, 9787, 9788, 9792, 9794, 9824, 9827, 9829, 9830, 9834, 9835, 9836, 61441, 61442, 61445, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1];
          r2.LiberationSansBoldItalicWidths = [365, 0, 333, 278, 333, 474, 556, 556, 889, 722, 238, 333, 333, 389, 584, 278, 333, 278, 278, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 333, 333, 584, 584, 584, 611, 975, 722, 722, 722, 722, 667, 611, 778, 722, 278, 556, 722, 611, 833, 722, 778, 667, 778, 722, 667, 611, 722, 667, 944, 667, 667, 611, 333, 278, 333, 584, 556, 333, 556, 611, 556, 611, 556, 333, 611, 611, 278, 278, 556, 278, 889, 611, 611, 611, 611, 389, 556, 333, 611, 556, 778, 556, 556, 500, 389, 280, 389, 584, 333, 556, 556, 556, 556, 280, 556, 333, 737, 370, 556, 584, 737, 552, 400, 549, 333, 333, 333, 576, 556, 278, 333, 333, 365, 556, 834, 834, 834, 611, 722, 722, 722, 722, 722, 722, 1e3, 722, 667, 667, 667, 667, 278, 278, 278, 278, 722, 722, 778, 778, 778, 778, 778, 584, 778, 722, 722, 722, 722, 667, 667, 611, 556, 556, 556, 556, 556, 556, 889, 556, 556, 556, 556, 556, 278, 278, 278, 278, 611, 611, 611, 611, 611, 611, 611, 549, 611, 611, 611, 611, 611, 556, 611, 556, 722, 556, 722, 556, 722, 556, 722, 556, 722, 556, 722, 556, 722, 556, 722, 740, 722, 611, 667, 556, 667, 556, 667, 556, 667, 556, 667, 556, 778, 611, 778, 611, 778, 611, 778, 611, 722, 611, 722, 611, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 782, 556, 556, 278, 722, 556, 556, 611, 278, 611, 278, 611, 396, 611, 479, 611, 278, 722, 611, 722, 611, 722, 611, 708, 723, 611, 778, 611, 778, 611, 778, 611, 1e3, 944, 722, 389, 722, 389, 722, 389, 667, 556, 667, 556, 667, 556, 667, 556, 611, 333, 611, 479, 611, 333, 722, 611, 722, 611, 722, 611, 722, 611, 722, 611, 722, 611, 944, 778, 667, 556, 667, 611, 500, 611, 500, 611, 500, 278, 556, 722, 556, 1e3, 889, 778, 611, 667, 556, 611, 333, 333, 333, 333, 333, 333, 333, 333, 333, 333, 333, 333, 722, 333, 854, 906, 473, 844, 930, 847, 278, 722, 722, 610, 671, 667, 611, 722, 778, 278, 722, 667, 833, 722, 657, 778, 718, 667, 590, 611, 667, 822, 667, 829, 781, 278, 667, 620, 479, 611, 278, 591, 620, 621, 556, 610, 479, 492, 611, 558, 278, 566, 556, 603, 556, 450, 611, 712, 605, 532, 664, 409, 591, 704, 578, 773, 834, 278, 591, 611, 591, 834, 667, 667, 886, 614, 719, 667, 278, 278, 556, 1094, 1042, 854, 622, 719, 677, 719, 722, 708, 722, 614, 722, 667, 927, 643, 719, 719, 615, 687, 833, 722, 778, 719, 667, 722, 611, 677, 781, 667, 729, 708, 979, 989, 854, 1e3, 708, 719, 1042, 729, 556, 619, 604, 534, 618, 556, 736, 510, 611, 611, 507, 622, 740, 604, 611, 611, 611, 556, 889, 556, 885, 556, 646, 583, 889, 935, 707, 854, 594, 552, 865, 589, 556, 556, 611, 469, 563, 556, 278, 278, 278, 969, 906, 611, 507, 619, 556, 611, 778, 611, 575, 467, 944, 778, 944, 778, 944, 778, 667, 556, 333, 333, 556, 1e3, 1e3, 552, 278, 278, 278, 278, 500, 500, 500, 556, 556, 350, 1e3, 1e3, 240, 479, 333, 333, 604, 333, 167, 396, 556, 556, 1104, 556, 885, 516, 1146, 1e3, 768, 600, 834, 834, 834, 834, 999, 500, 1e3, 500, 1e3, 500, 500, 494, 612, 823, 713, 584, 549, 713, 979, 722, 274, 549, 549, 583, 549, 549, 604, 584, 604, 604, 708, 625, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 729, 604, 604, 354, 354, 1e3, 990, 990, 990, 990, 494, 604, 604, 604, 604, 354, 1021, 1052, 917, 750, 750, 531, 656, 594, 510, 500, 750, 750, 611, 611, 333, 333, 333, 333, 333, 333, 333, 333, 222, 222, 333, 333, 333, 333, 333, 333, 333, 333];
          r2.LiberationSansBoldItalicMapping = [-1, -1, -1, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 402, 506, 507, 508, 509, 510, 511, 536, 537, 538, 539, 710, 711, 713, 728, 729, 730, 731, 732, 733, 900, 901, 902, 903, 904, 905, 906, 908, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1138, 1139, 1168, 1169, 7808, 7809, 7810, 7811, 7812, 7813, 7922, 7923, 8208, 8209, 8211, 8212, 8213, 8215, 8216, 8217, 8218, 8219, 8220, 8221, 8222, 8224, 8225, 8226, 8230, 8240, 8242, 8243, 8249, 8250, 8252, 8254, 8260, 8319, 8355, 8356, 8359, 8364, 8453, 8467, 8470, 8482, 8486, 8494, 8539, 8540, 8541, 8542, 8592, 8593, 8594, 8595, 8596, 8597, 8616, 8706, 8710, 8719, 8721, 8722, 8730, 8734, 8735, 8745, 8747, 8776, 8800, 8801, 8804, 8805, 8962, 8976, 8992, 8993, 9472, 9474, 9484, 9488, 9492, 9496, 9500, 9508, 9516, 9524, 9532, 9552, 9553, 9554, 9555, 9556, 9557, 9558, 9559, 9560, 9561, 9562, 9563, 9564, 9565, 9566, 9567, 9568, 9569, 9570, 9571, 9572, 9573, 9574, 9575, 9576, 9577, 9578, 9579, 9580, 9600, 9604, 9608, 9612, 9616, 9617, 9618, 9619, 9632, 9633, 9642, 9643, 9644, 9650, 9658, 9660, 9668, 9674, 9675, 9679, 9688, 9689, 9702, 9786, 9787, 9788, 9792, 9794, 9824, 9827, 9829, 9830, 9834, 9835, 9836, 61441, 61442, 61445, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1];
          r2.LiberationSansItalicWidths = [365, 0, 333, 278, 278, 355, 556, 556, 889, 667, 191, 333, 333, 389, 584, 278, 333, 278, 278, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 278, 278, 584, 584, 584, 556, 1015, 667, 667, 722, 722, 667, 611, 778, 722, 278, 500, 667, 556, 833, 722, 778, 667, 778, 722, 667, 611, 722, 667, 944, 667, 667, 611, 278, 278, 278, 469, 556, 333, 556, 556, 500, 556, 556, 278, 556, 556, 222, 222, 500, 222, 833, 556, 556, 556, 556, 333, 500, 278, 556, 500, 722, 500, 500, 500, 334, 260, 334, 584, 333, 556, 556, 556, 556, 260, 556, 333, 737, 370, 556, 584, 737, 552, 400, 549, 333, 333, 333, 576, 537, 278, 333, 333, 365, 556, 834, 834, 834, 611, 667, 667, 667, 667, 667, 667, 1e3, 722, 667, 667, 667, 667, 278, 278, 278, 278, 722, 722, 778, 778, 778, 778, 778, 584, 778, 722, 722, 722, 722, 667, 667, 611, 556, 556, 556, 556, 556, 556, 889, 500, 556, 556, 556, 556, 278, 278, 278, 278, 556, 556, 556, 556, 556, 556, 556, 549, 611, 556, 556, 556, 556, 500, 556, 500, 667, 556, 667, 556, 667, 556, 722, 500, 722, 500, 722, 500, 722, 500, 722, 625, 722, 556, 667, 556, 667, 556, 667, 556, 667, 556, 667, 556, 778, 556, 778, 556, 778, 556, 778, 556, 722, 556, 722, 556, 278, 278, 278, 278, 278, 278, 278, 222, 278, 278, 733, 444, 500, 222, 667, 500, 500, 556, 222, 556, 222, 556, 281, 556, 400, 556, 222, 722, 556, 722, 556, 722, 556, 615, 723, 556, 778, 556, 778, 556, 778, 556, 1e3, 944, 722, 333, 722, 333, 722, 333, 667, 500, 667, 500, 667, 500, 667, 500, 611, 278, 611, 354, 611, 278, 722, 556, 722, 556, 722, 556, 722, 556, 722, 556, 722, 556, 944, 722, 667, 500, 667, 611, 500, 611, 500, 611, 500, 222, 556, 667, 556, 1e3, 889, 778, 611, 667, 500, 611, 278, 333, 333, 333, 333, 333, 333, 333, 333, 333, 333, 333, 667, 278, 789, 846, 389, 794, 865, 775, 222, 667, 667, 570, 671, 667, 611, 722, 778, 278, 667, 667, 833, 722, 648, 778, 725, 667, 600, 611, 667, 837, 667, 831, 761, 278, 667, 570, 439, 555, 222, 550, 570, 571, 500, 556, 439, 463, 555, 542, 222, 500, 492, 548, 500, 447, 556, 670, 573, 486, 603, 374, 550, 652, 546, 728, 779, 222, 550, 556, 550, 779, 667, 667, 843, 544, 708, 667, 278, 278, 500, 1066, 982, 844, 589, 715, 639, 724, 667, 651, 667, 544, 704, 667, 917, 614, 715, 715, 589, 686, 833, 722, 778, 725, 667, 722, 611, 639, 795, 667, 727, 673, 920, 923, 805, 886, 651, 694, 1022, 682, 556, 562, 522, 493, 553, 556, 688, 465, 556, 556, 472, 564, 686, 550, 556, 556, 556, 500, 833, 500, 835, 500, 572, 518, 830, 851, 621, 736, 526, 492, 752, 534, 556, 556, 556, 378, 496, 500, 222, 222, 222, 910, 828, 556, 472, 565, 500, 556, 778, 556, 492, 339, 944, 722, 944, 722, 944, 722, 667, 500, 333, 333, 556, 1e3, 1e3, 552, 222, 222, 222, 222, 333, 333, 333, 556, 556, 350, 1e3, 1e3, 188, 354, 333, 333, 500, 333, 167, 365, 556, 556, 1094, 556, 885, 323, 1083, 1e3, 768, 600, 834, 834, 834, 834, 1e3, 500, 998, 500, 1e3, 500, 500, 494, 612, 823, 713, 584, 549, 713, 979, 719, 274, 549, 549, 584, 549, 549, 604, 584, 604, 604, 708, 625, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 729, 604, 604, 354, 354, 1e3, 990, 990, 990, 990, 494, 604, 604, 604, 604, 354, 1021, 1052, 917, 750, 750, 531, 656, 594, 510, 500, 750, 750, 500, 500, 333, 333, 333, 333, 333, 333, 333, 333, 222, 222, 294, 294, 324, 324, 316, 328, 398, 285];
          r2.LiberationSansItalicMapping = [-1, -1, -1, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 402, 506, 507, 508, 509, 510, 511, 536, 537, 538, 539, 710, 711, 713, 728, 729, 730, 731, 732, 733, 900, 901, 902, 903, 904, 905, 906, 908, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1138, 1139, 1168, 1169, 7808, 7809, 7810, 7811, 7812, 7813, 7922, 7923, 8208, 8209, 8211, 8212, 8213, 8215, 8216, 8217, 8218, 8219, 8220, 8221, 8222, 8224, 8225, 8226, 8230, 8240, 8242, 8243, 8249, 8250, 8252, 8254, 8260, 8319, 8355, 8356, 8359, 8364, 8453, 8467, 8470, 8482, 8486, 8494, 8539, 8540, 8541, 8542, 8592, 8593, 8594, 8595, 8596, 8597, 8616, 8706, 8710, 8719, 8721, 8722, 8730, 8734, 8735, 8745, 8747, 8776, 8800, 8801, 8804, 8805, 8962, 8976, 8992, 8993, 9472, 9474, 9484, 9488, 9492, 9496, 9500, 9508, 9516, 9524, 9532, 9552, 9553, 9554, 9555, 9556, 9557, 9558, 9559, 9560, 9561, 9562, 9563, 9564, 9565, 9566, 9567, 9568, 9569, 9570, 9571, 9572, 9573, 9574, 9575, 9576, 9577, 9578, 9579, 9580, 9600, 9604, 9608, 9612, 9616, 9617, 9618, 9619, 9632, 9633, 9642, 9643, 9644, 9650, 9658, 9660, 9668, 9674, 9675, 9679, 9688, 9689, 9702, 9786, 9787, 9788, 9792, 9794, 9824, 9827, 9829, 9830, 9834, 9835, 9836, 61441, 61442, 61445, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1];
          r2.LiberationSansRegularWidths = [365, 0, 333, 278, 278, 355, 556, 556, 889, 667, 191, 333, 333, 389, 584, 278, 333, 278, 278, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 278, 278, 584, 584, 584, 556, 1015, 667, 667, 722, 722, 667, 611, 778, 722, 278, 500, 667, 556, 833, 722, 778, 667, 778, 722, 667, 611, 722, 667, 944, 667, 667, 611, 278, 278, 278, 469, 556, 333, 556, 556, 500, 556, 556, 278, 556, 556, 222, 222, 500, 222, 833, 556, 556, 556, 556, 333, 500, 278, 556, 500, 722, 500, 500, 500, 334, 260, 334, 584, 333, 556, 556, 556, 556, 260, 556, 333, 737, 370, 556, 584, 737, 552, 400, 549, 333, 333, 333, 576, 537, 278, 333, 333, 365, 556, 834, 834, 834, 611, 667, 667, 667, 667, 667, 667, 1e3, 722, 667, 667, 667, 667, 278, 278, 278, 278, 722, 722, 778, 778, 778, 778, 778, 584, 778, 722, 722, 722, 722, 667, 667, 611, 556, 556, 556, 556, 556, 556, 889, 500, 556, 556, 556, 556, 278, 278, 278, 278, 556, 556, 556, 556, 556, 556, 556, 549, 611, 556, 556, 556, 556, 500, 556, 500, 667, 556, 667, 556, 667, 556, 722, 500, 722, 500, 722, 500, 722, 500, 722, 615, 722, 556, 667, 556, 667, 556, 667, 556, 667, 556, 667, 556, 778, 556, 778, 556, 778, 556, 778, 556, 722, 556, 722, 556, 278, 278, 278, 278, 278, 278, 278, 222, 278, 278, 735, 444, 500, 222, 667, 500, 500, 556, 222, 556, 222, 556, 292, 556, 334, 556, 222, 722, 556, 722, 556, 722, 556, 604, 723, 556, 778, 556, 778, 556, 778, 556, 1e3, 944, 722, 333, 722, 333, 722, 333, 667, 500, 667, 500, 667, 500, 667, 500, 611, 278, 611, 375, 611, 278, 722, 556, 722, 556, 722, 556, 722, 556, 722, 556, 722, 556, 944, 722, 667, 500, 667, 611, 500, 611, 500, 611, 500, 222, 556, 667, 556, 1e3, 889, 778, 611, 667, 500, 611, 278, 333, 333, 333, 333, 333, 333, 333, 333, 333, 333, 333, 667, 278, 784, 838, 384, 774, 855, 752, 222, 667, 667, 551, 668, 667, 611, 722, 778, 278, 667, 668, 833, 722, 650, 778, 722, 667, 618, 611, 667, 798, 667, 835, 748, 278, 667, 578, 446, 556, 222, 547, 578, 575, 500, 557, 446, 441, 556, 556, 222, 500, 500, 576, 500, 448, 556, 690, 569, 482, 617, 395, 547, 648, 525, 713, 781, 222, 547, 556, 547, 781, 667, 667, 865, 542, 719, 667, 278, 278, 500, 1057, 1010, 854, 583, 722, 635, 719, 667, 656, 667, 542, 677, 667, 923, 604, 719, 719, 583, 656, 833, 722, 778, 719, 667, 722, 611, 635, 760, 667, 740, 667, 917, 938, 792, 885, 656, 719, 1010, 722, 556, 573, 531, 365, 583, 556, 669, 458, 559, 559, 438, 583, 688, 552, 556, 542, 556, 500, 458, 500, 823, 500, 573, 521, 802, 823, 625, 719, 521, 510, 750, 542, 556, 556, 556, 365, 510, 500, 222, 278, 222, 906, 812, 556, 438, 559, 500, 552, 778, 556, 489, 411, 944, 722, 944, 722, 944, 722, 667, 500, 333, 333, 556, 1e3, 1e3, 552, 222, 222, 222, 222, 333, 333, 333, 556, 556, 350, 1e3, 1e3, 188, 354, 333, 333, 500, 333, 167, 365, 556, 556, 1094, 556, 885, 323, 1073, 1e3, 768, 600, 834, 834, 834, 834, 1e3, 500, 1e3, 500, 1e3, 500, 500, 494, 612, 823, 713, 584, 549, 713, 979, 719, 274, 549, 549, 583, 549, 549, 604, 584, 604, 604, 708, 625, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 729, 604, 604, 354, 354, 1e3, 990, 990, 990, 990, 494, 604, 604, 604, 604, 354, 1021, 1052, 917, 750, 750, 531, 656, 594, 510, 500, 750, 750, 500, 500, 333, 333, 333, 333, 333, 333, 333, 333, 222, 222, 294, 294, 324, 324, 316, 328, 398, 285];
          r2.LiberationSansRegularMapping = [-1, -1, -1, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 402, 506, 507, 508, 509, 510, 511, 536, 537, 538, 539, 710, 711, 713, 728, 729, 730, 731, 732, 733, 900, 901, 902, 903, 904, 905, 906, 908, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1138, 1139, 1168, 1169, 7808, 7809, 7810, 7811, 7812, 7813, 7922, 7923, 8208, 8209, 8211, 8212, 8213, 8215, 8216, 8217, 8218, 8219, 8220, 8221, 8222, 8224, 8225, 8226, 8230, 8240, 8242, 8243, 8249, 8250, 8252, 8254, 8260, 8319, 8355, 8356, 8359, 8364, 8453, 8467, 8470, 8482, 8486, 8494, 8539, 8540, 8541, 8542, 8592, 8593, 8594, 8595, 8596, 8597, 8616, 8706, 8710, 8719, 8721, 8722, 8730, 8734, 8735, 8745, 8747, 8776, 8800, 8801, 8804, 8805, 8962, 8976, 8992, 8993, 9472, 9474, 9484, 9488, 9492, 9496, 9500, 9508, 9516, 9524, 9532, 9552, 9553, 9554, 9555, 9556, 9557, 9558, 9559, 9560, 9561, 9562, 9563, 9564, 9565, 9566, 9567, 9568, 9569, 9570, 9571, 9572, 9573, 9574, 9575, 9576, 9577, 9578, 9579, 9580, 9600, 9604, 9608, 9612, 9616, 9617, 9618, 9619, 9632, 9633, 9642, 9643, 9644, 9650, 9658, 9660, 9668, 9674, 9675, 9679, 9688, 9689, 9702, 9786, 9787, 9788, 9792, 9794, 9824, 9827, 9829, 9830, 9834, 9835, 9836, 61441, 61442, 61445, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1];
        }, (t2, r2) => {
          "use strict";
          Object.defineProperty(r2, "__esModule", { value: true });
          r2.MyriadProRegularMetrics = r2.MyriadProRegularFactors = r2.MyriadProItalicMetrics = r2.MyriadProItalicFactors = r2.MyriadProBoldMetrics = r2.MyriadProBoldItalicMetrics = r2.MyriadProBoldItalicFactors = r2.MyriadProBoldFactors = void 0;
          r2.MyriadProBoldFactors = [1.36898, 1, 1, 0.72706, 0.80479, 0.83734, 0.98894, 0.99793, 0.9897, 0.93884, 0.86209, 0.94292, 0.94292, 1.16661, 1.02058, 0.93582, 0.96694, 0.93582, 1.19137, 0.99793, 0.99793, 0.99793, 0.99793, 0.99793, 0.99793, 0.99793, 0.99793, 0.99793, 0.99793, 0.78076, 0.78076, 1.02058, 1.02058, 1.02058, 0.72851, 0.78966, 0.90838, 0.83637, 0.82391, 0.96376, 0.80061, 0.86275, 0.8768, 0.95407, 1.0258, 0.73901, 0.85022, 0.83655, 1.0156, 0.95546, 0.92179, 0.87107, 0.92179, 0.82114, 0.8096, 0.89713, 0.94438, 0.95353, 0.94083, 0.91905, 0.90406, 0.9446, 0.94292, 1.18777, 0.94292, 1.02058, 0.89903, 0.90088, 0.94938, 0.97898, 0.81093, 0.97571, 0.94938, 1.024, 0.9577, 0.95933, 0.98621, 1.0474, 0.97455, 0.98981, 0.9672, 0.95933, 0.9446, 0.97898, 0.97407, 0.97646, 0.78036, 1.10208, 0.95442, 0.95298, 0.97579, 0.9332, 0.94039, 0.938, 0.80687, 1.01149, 0.80687, 1.02058, 0.80479, 0.99793, 0.99793, 0.99793, 0.99793, 1.01149, 1.00872, 0.90088, 0.91882, 1.0213, 0.8361, 1.02058, 0.62295, 0.54324, 0.89022, 1.08595, 1, 1, 0.90088, 1, 0.97455, 0.93582, 0.90088, 1, 1.05686, 0.8361, 0.99642, 0.99642, 0.99642, 0.72851, 0.90838, 0.90838, 0.90838, 0.90838, 0.90838, 0.90838, 0.868, 0.82391, 0.80061, 0.80061, 0.80061, 0.80061, 1.0258, 1.0258, 1.0258, 1.0258, 0.97484, 0.95546, 0.92179, 0.92179, 0.92179, 0.92179, 0.92179, 1.02058, 0.92179, 0.94438, 0.94438, 0.94438, 0.94438, 0.90406, 0.86958, 0.98225, 0.94938, 0.94938, 0.94938, 0.94938, 0.94938, 0.94938, 0.9031, 0.81093, 0.94938, 0.94938, 0.94938, 0.94938, 0.98621, 0.98621, 0.98621, 0.98621, 0.93969, 0.95933, 0.9446, 0.9446, 0.9446, 0.9446, 0.9446, 1.08595, 0.9446, 0.95442, 0.95442, 0.95442, 0.95442, 0.94039, 0.97898, 0.94039, 0.90838, 0.94938, 0.90838, 0.94938, 0.90838, 0.94938, 0.82391, 0.81093, 0.82391, 0.81093, 0.82391, 0.81093, 0.82391, 0.81093, 0.96376, 0.84313, 0.97484, 0.97571, 0.80061, 0.94938, 0.80061, 0.94938, 0.80061, 0.94938, 0.80061, 0.94938, 0.80061, 0.94938, 0.8768, 0.9577, 0.8768, 0.9577, 0.8768, 0.9577, 1, 1, 0.95407, 0.95933, 0.97069, 0.95933, 1.0258, 0.98621, 1.0258, 0.98621, 1.0258, 0.98621, 1.0258, 0.98621, 1.0258, 0.98621, 0.887, 1.01591, 0.73901, 1.0474, 1, 1, 0.97455, 0.83655, 0.98981, 1, 1, 0.83655, 0.73977, 0.83655, 0.73903, 0.84638, 1.033, 0.95546, 0.95933, 1, 1, 0.95546, 0.95933, 0.8271, 0.95417, 0.95933, 0.92179, 0.9446, 0.92179, 0.9446, 0.92179, 0.9446, 0.936, 0.91964, 0.82114, 0.97646, 1, 1, 0.82114, 0.97646, 0.8096, 0.78036, 0.8096, 0.78036, 1, 1, 0.8096, 0.78036, 1, 1, 0.89713, 0.77452, 0.89713, 1.10208, 0.94438, 0.95442, 0.94438, 0.95442, 0.94438, 0.95442, 0.94438, 0.95442, 0.94438, 0.95442, 0.94438, 0.95442, 0.94083, 0.97579, 0.90406, 0.94039, 0.90406, 0.9446, 0.938, 0.9446, 0.938, 0.9446, 0.938, 1, 0.99793, 0.90838, 0.94938, 0.868, 0.9031, 0.92179, 0.9446, 1, 1, 0.89713, 1.10208, 0.90088, 0.90088, 0.90088, 0.90088, 0.90088, 0.90088, 0.90088, 0.90088, 0.90088, 0.90989, 0.9358, 0.91945, 0.83181, 0.75261, 0.87992, 0.82976, 0.96034, 0.83689, 0.97268, 1.0078, 0.90838, 0.83637, 0.8019, 0.90157, 0.80061, 0.9446, 0.95407, 0.92436, 1.0258, 0.85022, 0.97153, 1.0156, 0.95546, 0.89192, 0.92179, 0.92361, 0.87107, 0.96318, 0.89713, 0.93704, 0.95638, 0.91905, 0.91709, 0.92796, 1.0258, 0.93704, 0.94836, 1.0373, 0.95933, 1.0078, 0.95871, 0.94836, 0.96174, 0.92601, 0.9498, 0.98607, 0.95776, 0.95933, 1.05453, 1.0078, 0.98275, 0.9314, 0.95617, 0.91701, 1.05993, 0.9446, 0.78367, 0.9553, 1, 0.86832, 1.0128, 0.95871, 0.99394, 0.87548, 0.96361, 0.86774, 1.0078, 0.95871, 0.9446, 0.95871, 0.86774, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.94083, 0.97579, 0.94083, 0.97579, 0.94083, 0.97579, 0.90406, 0.94039, 0.96694, 1, 0.89903, 1, 1, 1, 0.93582, 0.93582, 0.93582, 1, 0.908, 0.908, 0.918, 0.94219, 0.94219, 0.96544, 1, 1.285, 1, 1, 0.81079, 0.81079, 1, 1, 0.74854, 1, 1, 1, 1, 0.99793, 1, 1, 1, 0.65, 1, 1.36145, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1.17173, 1, 0.80535, 0.76169, 1.02058, 1.0732, 1.05486, 1, 1, 1.30692, 1.08595, 1.08595, 1, 1.08595, 1.08595, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1.16161, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1];
          r2.MyriadProBoldMetrics = { lineHeight: 1.2, lineGap: 0.2 };
          r2.MyriadProBoldItalicFactors = [1.36898, 1, 1, 0.66227, 0.80779, 0.81625, 0.97276, 0.97276, 0.97733, 0.92222, 0.83266, 0.94292, 0.94292, 1.16148, 1.02058, 0.93582, 0.96694, 0.93582, 1.17337, 0.97276, 0.97276, 0.97276, 0.97276, 0.97276, 0.97276, 0.97276, 0.97276, 0.97276, 0.97276, 0.78076, 0.78076, 1.02058, 1.02058, 1.02058, 0.71541, 0.76813, 0.85576, 0.80591, 0.80729, 0.94299, 0.77512, 0.83655, 0.86523, 0.92222, 0.98621, 0.71743, 0.81698, 0.79726, 0.98558, 0.92222, 0.90637, 0.83809, 0.90637, 0.80729, 0.76463, 0.86275, 0.90699, 0.91605, 0.9154, 0.85308, 0.85458, 0.90531, 0.94292, 1.21296, 0.94292, 1.02058, 0.89903, 1.18616, 0.99613, 0.91677, 0.78216, 0.91677, 0.90083, 0.98796, 0.9135, 0.92168, 0.95381, 0.98981, 0.95298, 0.95381, 0.93459, 0.92168, 0.91513, 0.92004, 0.91677, 0.95077, 0.748, 1.04502, 0.91677, 0.92061, 0.94236, 0.89544, 0.89364, 0.9, 0.80687, 0.8578, 0.80687, 1.02058, 0.80779, 0.97276, 0.97276, 0.97276, 0.97276, 0.8578, 0.99973, 1.18616, 0.91339, 1.08074, 0.82891, 1.02058, 0.55509, 0.71526, 0.89022, 1.08595, 1, 1, 1.18616, 1, 0.96736, 0.93582, 1.18616, 1, 1.04864, 0.82711, 0.99043, 0.99043, 0.99043, 0.71541, 0.85576, 0.85576, 0.85576, 0.85576, 0.85576, 0.85576, 0.845, 0.80729, 0.77512, 0.77512, 0.77512, 0.77512, 0.98621, 0.98621, 0.98621, 0.98621, 0.95961, 0.92222, 0.90637, 0.90637, 0.90637, 0.90637, 0.90637, 1.02058, 0.90251, 0.90699, 0.90699, 0.90699, 0.90699, 0.85458, 0.83659, 0.94951, 0.99613, 0.99613, 0.99613, 0.99613, 0.99613, 0.99613, 0.85811, 0.78216, 0.90083, 0.90083, 0.90083, 0.90083, 0.95381, 0.95381, 0.95381, 0.95381, 0.9135, 0.92168, 0.91513, 0.91513, 0.91513, 0.91513, 0.91513, 1.08595, 0.91677, 0.91677, 0.91677, 0.91677, 0.91677, 0.89364, 0.92332, 0.89364, 0.85576, 0.99613, 0.85576, 0.99613, 0.85576, 0.99613, 0.80729, 0.78216, 0.80729, 0.78216, 0.80729, 0.78216, 0.80729, 0.78216, 0.94299, 0.76783, 0.95961, 0.91677, 0.77512, 0.90083, 0.77512, 0.90083, 0.77512, 0.90083, 0.77512, 0.90083, 0.77512, 0.90083, 0.86523, 0.9135, 0.86523, 0.9135, 0.86523, 0.9135, 1, 1, 0.92222, 0.92168, 0.92222, 0.92168, 0.98621, 0.95381, 0.98621, 0.95381, 0.98621, 0.95381, 0.98621, 0.95381, 0.98621, 0.95381, 0.86036, 0.97096, 0.71743, 0.98981, 1, 1, 0.95298, 0.79726, 0.95381, 1, 1, 0.79726, 0.6894, 0.79726, 0.74321, 0.81691, 1.0006, 0.92222, 0.92168, 1, 1, 0.92222, 0.92168, 0.79464, 0.92098, 0.92168, 0.90637, 0.91513, 0.90637, 0.91513, 0.90637, 0.91513, 0.909, 0.87514, 0.80729, 0.95077, 1, 1, 0.80729, 0.95077, 0.76463, 0.748, 0.76463, 0.748, 1, 1, 0.76463, 0.748, 1, 1, 0.86275, 0.72651, 0.86275, 1.04502, 0.90699, 0.91677, 0.90699, 0.91677, 0.90699, 0.91677, 0.90699, 0.91677, 0.90699, 0.91677, 0.90699, 0.91677, 0.9154, 0.94236, 0.85458, 0.89364, 0.85458, 0.90531, 0.9, 0.90531, 0.9, 0.90531, 0.9, 1, 0.97276, 0.85576, 0.99613, 0.845, 0.85811, 0.90251, 0.91677, 1, 1, 0.86275, 1.04502, 1.18616, 1.18616, 1.18616, 1.18616, 1.18616, 1.18616, 1.18616, 1.18616, 1.18616, 1.00899, 1.30628, 0.85576, 0.80178, 0.66862, 0.7927, 0.69323, 0.88127, 0.72459, 0.89711, 0.95381, 0.85576, 0.80591, 0.7805, 0.94729, 0.77512, 0.90531, 0.92222, 0.90637, 0.98621, 0.81698, 0.92655, 0.98558, 0.92222, 0.85359, 0.90637, 0.90976, 0.83809, 0.94523, 0.86275, 0.83509, 0.93157, 0.85308, 0.83392, 0.92346, 0.98621, 0.83509, 0.92886, 0.91324, 0.92168, 0.95381, 0.90646, 0.92886, 0.90557, 0.86847, 0.90276, 0.91324, 0.86842, 0.92168, 0.99531, 0.95381, 0.9224, 0.85408, 0.92699, 0.86847, 1.0051, 0.91513, 0.80487, 0.93481, 1, 0.88159, 1.05214, 0.90646, 0.97355, 0.81539, 0.89398, 0.85923, 0.95381, 0.90646, 0.91513, 0.90646, 0.85923, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.9154, 0.94236, 0.9154, 0.94236, 0.9154, 0.94236, 0.85458, 0.89364, 0.96694, 1, 0.89903, 1, 1, 1, 0.91782, 0.91782, 0.91782, 1, 0.896, 0.896, 0.896, 0.9332, 0.9332, 0.95973, 1, 1.26, 1, 1, 0.80479, 0.80178, 1, 1, 0.85633, 1, 1, 1, 1, 0.97276, 1, 1, 1, 0.698, 1, 1.36145, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1.14542, 1, 0.79199, 0.78694, 1.02058, 1.03493, 1.05486, 1, 1, 1.23026, 1.08595, 1.08595, 1, 1.08595, 1.08595, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1.20006, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1];
          r2.MyriadProBoldItalicMetrics = { lineHeight: 1.2, lineGap: 0.2 };
          r2.MyriadProItalicFactors = [1.36898, 1, 1, 0.65507, 0.84943, 0.85639, 0.88465, 0.88465, 0.86936, 0.88307, 0.86948, 0.85283, 0.85283, 1.06383, 1.02058, 0.75945, 0.9219, 0.75945, 1.17337, 0.88465, 0.88465, 0.88465, 0.88465, 0.88465, 0.88465, 0.88465, 0.88465, 0.88465, 0.88465, 0.75945, 0.75945, 1.02058, 1.02058, 1.02058, 0.69046, 0.70926, 0.85158, 0.77812, 0.76852, 0.89591, 0.70466, 0.76125, 0.80094, 0.86822, 0.83864, 0.728, 0.77212, 0.79475, 0.93637, 0.87514, 0.8588, 0.76013, 0.8588, 0.72421, 0.69866, 0.77598, 0.85991, 0.80811, 0.87832, 0.78112, 0.77512, 0.8562, 1.0222, 1.18417, 1.0222, 1.27014, 0.89903, 1.15012, 0.93859, 0.94399, 0.846, 0.94399, 0.81453, 1.0186, 0.94219, 0.96017, 1.03075, 1.02175, 0.912, 1.03075, 0.96998, 0.96017, 0.93859, 0.94399, 0.94399, 0.95493, 0.746, 1.12658, 0.94578, 0.91, 0.979, 0.882, 0.882, 0.83, 0.85034, 0.83537, 0.85034, 1.02058, 0.70869, 0.88465, 0.88465, 0.88465, 0.88465, 0.83537, 0.90083, 1.15012, 0.9161, 0.94565, 0.73541, 1.02058, 0.53609, 0.69353, 0.79519, 1.08595, 1, 1, 1.15012, 1, 0.91974, 0.75945, 1.15012, 1, 0.9446, 0.73361, 0.9005, 0.9005, 0.9005, 0.62864, 0.85158, 0.85158, 0.85158, 0.85158, 0.85158, 0.85158, 0.773, 0.76852, 0.70466, 0.70466, 0.70466, 0.70466, 0.83864, 0.83864, 0.83864, 0.83864, 0.90561, 0.87514, 0.8588, 0.8588, 0.8588, 0.8588, 0.8588, 1.02058, 0.85751, 0.85991, 0.85991, 0.85991, 0.85991, 0.77512, 0.76013, 0.88075, 0.93859, 0.93859, 0.93859, 0.93859, 0.93859, 0.93859, 0.8075, 0.846, 0.81453, 0.81453, 0.81453, 0.81453, 0.82424, 0.82424, 0.82424, 0.82424, 0.9278, 0.96017, 0.93859, 0.93859, 0.93859, 0.93859, 0.93859, 1.08595, 0.8562, 0.94578, 0.94578, 0.94578, 0.94578, 0.882, 0.94578, 0.882, 0.85158, 0.93859, 0.85158, 0.93859, 0.85158, 0.93859, 0.76852, 0.846, 0.76852, 0.846, 0.76852, 0.846, 0.76852, 0.846, 0.89591, 0.8544, 0.90561, 0.94399, 0.70466, 0.81453, 0.70466, 0.81453, 0.70466, 0.81453, 0.70466, 0.81453, 0.70466, 0.81453, 0.80094, 0.94219, 0.80094, 0.94219, 0.80094, 0.94219, 1, 1, 0.86822, 0.96017, 0.86822, 0.96017, 0.83864, 0.82424, 0.83864, 0.82424, 0.83864, 0.82424, 0.83864, 1.03075, 0.83864, 0.82424, 0.81402, 1.02738, 0.728, 1.02175, 1, 1, 0.912, 0.79475, 1.03075, 1, 1, 0.79475, 0.83911, 0.79475, 0.66266, 0.80553, 1.06676, 0.87514, 0.96017, 1, 1, 0.87514, 0.96017, 0.86865, 0.87396, 0.96017, 0.8588, 0.93859, 0.8588, 0.93859, 0.8588, 0.93859, 0.867, 0.84759, 0.72421, 0.95493, 1, 1, 0.72421, 0.95493, 0.69866, 0.746, 0.69866, 0.746, 1, 1, 0.69866, 0.746, 1, 1, 0.77598, 0.88417, 0.77598, 1.12658, 0.85991, 0.94578, 0.85991, 0.94578, 0.85991, 0.94578, 0.85991, 0.94578, 0.85991, 0.94578, 0.85991, 0.94578, 0.87832, 0.979, 0.77512, 0.882, 0.77512, 0.8562, 0.83, 0.8562, 0.83, 0.8562, 0.83, 1, 0.88465, 0.85158, 0.93859, 0.773, 0.8075, 0.85751, 0.8562, 1, 1, 0.77598, 1.12658, 1.15012, 1.15012, 1.15012, 1.15012, 1.15012, 1.15313, 1.15012, 1.15012, 1.15012, 1.08106, 1.03901, 0.85158, 0.77025, 0.62264, 0.7646, 0.65351, 0.86026, 0.69461, 0.89947, 1.03075, 0.85158, 0.77812, 0.76449, 0.88836, 0.70466, 0.8562, 0.86822, 0.8588, 0.83864, 0.77212, 0.85308, 0.93637, 0.87514, 0.82352, 0.8588, 0.85701, 0.76013, 0.89058, 0.77598, 0.8156, 0.82565, 0.78112, 0.77899, 0.89386, 0.83864, 0.8156, 0.9486, 0.92388, 0.96186, 1.03075, 0.91123, 0.9486, 0.93298, 0.878, 0.93942, 0.92388, 0.84596, 0.96186, 0.95119, 1.03075, 0.922, 0.88787, 0.95829, 0.88, 0.93559, 0.93859, 0.78815, 0.93758, 1, 0.89217, 1.03737, 0.91123, 0.93969, 0.77487, 0.85769, 0.86799, 1.03075, 0.91123, 0.93859, 0.91123, 0.86799, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.87832, 0.979, 0.87832, 0.979, 0.87832, 0.979, 0.77512, 0.882, 0.9219, 1, 0.89903, 1, 1, 1, 0.87321, 0.87321, 0.87321, 1, 1.027, 1.027, 1.027, 0.86847, 0.86847, 0.79121, 1, 1.124, 1, 1, 0.73572, 0.73572, 1, 1, 0.85034, 1, 1, 1, 1, 0.88465, 1, 1, 1, 0.669, 1, 1.36145, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1.04828, 1, 0.74948, 0.75187, 1.02058, 0.98391, 1.02119, 1, 1, 1.06233, 1.08595, 1.08595, 1, 1.08595, 1.08595, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1.05233, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1];
          r2.MyriadProItalicMetrics = { lineHeight: 1.2, lineGap: 0.2 };
          r2.MyriadProRegularFactors = [1.36898, 1, 1, 0.76305, 0.82784, 0.94935, 0.89364, 0.92241, 0.89073, 0.90706, 0.98472, 0.85283, 0.85283, 1.0664, 1.02058, 0.74505, 0.9219, 0.74505, 1.23456, 0.92241, 0.92241, 0.92241, 0.92241, 0.92241, 0.92241, 0.92241, 0.92241, 0.92241, 0.92241, 0.74505, 0.74505, 1.02058, 1.02058, 1.02058, 0.73002, 0.72601, 0.91755, 0.8126, 0.80314, 0.92222, 0.73764, 0.79726, 0.83051, 0.90284, 0.86023, 0.74, 0.8126, 0.84869, 0.96518, 0.91115, 0.8858, 0.79761, 0.8858, 0.74498, 0.73914, 0.81363, 0.89591, 0.83659, 0.89633, 0.85608, 0.8111, 0.90531, 1.0222, 1.22736, 1.0222, 1.27014, 0.89903, 0.90088, 0.86667, 1.0231, 0.896, 1.01411, 0.90083, 1.05099, 1.00512, 0.99793, 1.05326, 1.09377, 0.938, 1.06226, 1.00119, 0.99793, 0.98714, 1.0231, 1.01231, 0.98196, 0.792, 1.19137, 0.99074, 0.962, 1.01915, 0.926, 0.942, 0.856, 0.85034, 0.92006, 0.85034, 1.02058, 0.69067, 0.92241, 0.92241, 0.92241, 0.92241, 0.92006, 0.9332, 0.90088, 0.91882, 0.93484, 0.75339, 1.02058, 0.56866, 0.54324, 0.79519, 1.08595, 1, 1, 0.90088, 1, 0.95325, 0.74505, 0.90088, 1, 0.97198, 0.75339, 0.91009, 0.91009, 0.91009, 0.66466, 0.91755, 0.91755, 0.91755, 0.91755, 0.91755, 0.91755, 0.788, 0.80314, 0.73764, 0.73764, 0.73764, 0.73764, 0.86023, 0.86023, 0.86023, 0.86023, 0.92915, 0.91115, 0.8858, 0.8858, 0.8858, 0.8858, 0.8858, 1.02058, 0.8858, 0.89591, 0.89591, 0.89591, 0.89591, 0.8111, 0.79611, 0.89713, 0.86667, 0.86667, 0.86667, 0.86667, 0.86667, 0.86667, 0.86936, 0.896, 0.90083, 0.90083, 0.90083, 0.90083, 0.84224, 0.84224, 0.84224, 0.84224, 0.97276, 0.99793, 0.98714, 0.98714, 0.98714, 0.98714, 0.98714, 1.08595, 0.89876, 0.99074, 0.99074, 0.99074, 0.99074, 0.942, 1.0231, 0.942, 0.91755, 0.86667, 0.91755, 0.86667, 0.91755, 0.86667, 0.80314, 0.896, 0.80314, 0.896, 0.80314, 0.896, 0.80314, 0.896, 0.92222, 0.93372, 0.92915, 1.01411, 0.73764, 0.90083, 0.73764, 0.90083, 0.73764, 0.90083, 0.73764, 0.90083, 0.73764, 0.90083, 0.83051, 1.00512, 0.83051, 1.00512, 0.83051, 1.00512, 1, 1, 0.90284, 0.99793, 0.90976, 0.99793, 0.86023, 0.84224, 0.86023, 0.84224, 0.86023, 0.84224, 0.86023, 1.05326, 0.86023, 0.84224, 0.82873, 1.07469, 0.74, 1.09377, 1, 1, 0.938, 0.84869, 1.06226, 1, 1, 0.84869, 0.83704, 0.84869, 0.81441, 0.85588, 1.08927, 0.91115, 0.99793, 1, 1, 0.91115, 0.99793, 0.91887, 0.90991, 0.99793, 0.8858, 0.98714, 0.8858, 0.98714, 0.8858, 0.98714, 0.894, 0.91434, 0.74498, 0.98196, 1, 1, 0.74498, 0.98196, 0.73914, 0.792, 0.73914, 0.792, 1, 1, 0.73914, 0.792, 1, 1, 0.81363, 0.904, 0.81363, 1.19137, 0.89591, 0.99074, 0.89591, 0.99074, 0.89591, 0.99074, 0.89591, 0.99074, 0.89591, 0.99074, 0.89591, 0.99074, 0.89633, 1.01915, 0.8111, 0.942, 0.8111, 0.90531, 0.856, 0.90531, 0.856, 0.90531, 0.856, 1, 0.92241, 0.91755, 0.86667, 0.788, 0.86936, 0.8858, 0.89876, 1, 1, 0.81363, 1.19137, 0.90088, 0.90088, 0.90088, 0.90088, 0.90088, 0.90088, 0.90088, 0.90088, 0.90088, 0.90388, 1.03901, 0.92138, 0.78105, 0.7154, 0.86169, 0.80513, 0.94007, 0.82528, 0.98612, 1.06226, 0.91755, 0.8126, 0.81884, 0.92819, 0.73764, 0.90531, 0.90284, 0.8858, 0.86023, 0.8126, 0.91172, 0.96518, 0.91115, 0.83089, 0.8858, 0.87791, 0.79761, 0.89297, 0.81363, 0.88157, 0.89992, 0.85608, 0.81992, 0.94307, 0.86023, 0.88157, 0.95308, 0.98699, 0.99793, 1.06226, 0.95817, 0.95308, 0.97358, 0.928, 0.98088, 0.98699, 0.92761, 0.99793, 0.96017, 1.06226, 0.986, 0.944, 0.95978, 0.938, 0.96705, 0.98714, 0.80442, 0.98972, 1, 0.89762, 1.04552, 0.95817, 0.99007, 0.87064, 0.91879, 0.88888, 1.06226, 0.95817, 0.98714, 0.95817, 0.88888, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.89633, 1.01915, 0.89633, 1.01915, 0.89633, 1.01915, 0.8111, 0.942, 0.9219, 1, 0.89903, 1, 1, 1, 0.93173, 0.93173, 0.93173, 1, 1.06304, 1.06304, 1.06904, 0.89903, 0.89903, 0.80549, 1, 1.156, 1, 1, 0.76575, 0.76575, 1, 1, 0.72458, 1, 1, 1, 1, 0.92241, 1, 1, 1, 0.619, 1, 1.36145, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1.07257, 1, 0.74705, 0.71119, 1.02058, 1.024, 1.02119, 1, 1, 1.1536, 1.08595, 1.08595, 1, 1.08595, 1.08595, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1.05638, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1];
          r2.MyriadProRegularMetrics = { lineHeight: 1.2, lineGap: 0.2 };
        }, (t2, r2) => {
          "use strict";
          Object.defineProperty(r2, "__esModule", { value: true });
          r2.SegoeuiRegularMetrics = r2.SegoeuiRegularFactors = r2.SegoeuiItalicMetrics = r2.SegoeuiItalicFactors = r2.SegoeuiBoldMetrics = r2.SegoeuiBoldItalicMetrics = r2.SegoeuiBoldItalicFactors = r2.SegoeuiBoldFactors = void 0;
          r2.SegoeuiBoldFactors = [1.76738, 1, 1, 0.99297, 0.9824, 1.04016, 1.06497, 1.03424, 0.97529, 1.17647, 1.23203, 1.1085, 1.1085, 1.16939, 1.2107, 0.9754, 1.21408, 0.9754, 1.59578, 1.03424, 1.03424, 1.03424, 1.03424, 1.03424, 1.03424, 1.03424, 1.03424, 1.03424, 1.03424, 0.81378, 0.81378, 1.2107, 1.2107, 1.2107, 0.71703, 0.97847, 0.97363, 0.88776, 0.8641, 1.02096, 0.79795, 0.85132, 0.914, 1.06085, 1.1406, 0.8007, 0.89858, 0.83693, 1.14889, 1.09398, 0.97489, 0.92094, 0.97489, 0.90399, 0.84041, 0.95923, 1.00135, 1, 1.06467, 0.98243, 0.90996, 0.99361, 1.1085, 1.56942, 1.1085, 1.2107, 0.74627, 0.94282, 0.96752, 1.01519, 0.86304, 1.01359, 0.97278, 1.15103, 1.01359, 0.98561, 1.02285, 1.02285, 1.00527, 1.02285, 1.0302, 0.99041, 1.0008, 1.01519, 1.01359, 1.02258, 0.79104, 1.16862, 0.99041, 0.97454, 1.02511, 0.99298, 0.96752, 0.95801, 0.94856, 1.16579, 0.94856, 1.2107, 0.9824, 1.03424, 1.03424, 1, 1.03424, 1.16579, 0.8727, 1.3871, 1.18622, 1.10818, 1.04478, 1.2107, 1.18622, 0.75155, 0.94994, 1.28826, 1.21408, 1.21408, 0.91056, 1, 0.91572, 0.9754, 0.64663, 1.18328, 1.24866, 1.04478, 1.14169, 1.15749, 1.17389, 0.71703, 0.97363, 0.97363, 0.97363, 0.97363, 0.97363, 0.97363, 0.93506, 0.8641, 0.79795, 0.79795, 0.79795, 0.79795, 1.1406, 1.1406, 1.1406, 1.1406, 1.02096, 1.09398, 0.97426, 0.97426, 0.97426, 0.97426, 0.97426, 1.2107, 0.97489, 1.00135, 1.00135, 1.00135, 1.00135, 0.90996, 0.92094, 1.02798, 0.96752, 0.96752, 0.96752, 0.96752, 0.96752, 0.96752, 0.93136, 0.86304, 0.97278, 0.97278, 0.97278, 0.97278, 1.02285, 1.02285, 1.02285, 1.02285, 0.97122, 0.99041, 1, 1, 1, 1, 1, 1.28826, 1.0008, 0.99041, 0.99041, 0.99041, 0.99041, 0.96752, 1.01519, 0.96752, 0.97363, 0.96752, 0.97363, 0.96752, 0.97363, 0.96752, 0.8641, 0.86304, 0.8641, 0.86304, 0.8641, 0.86304, 0.8641, 0.86304, 1.02096, 1.03057, 1.02096, 1.03517, 0.79795, 0.97278, 0.79795, 0.97278, 0.79795, 0.97278, 0.79795, 0.97278, 0.79795, 0.97278, 0.914, 1.01359, 0.914, 1.01359, 0.914, 1.01359, 1, 1, 1.06085, 0.98561, 1.06085, 1.00879, 1.1406, 1.02285, 1.1406, 1.02285, 1.1406, 1.02285, 1.1406, 1.02285, 1.1406, 1.02285, 0.97138, 1.08692, 0.8007, 1.02285, 1, 1, 1.00527, 0.83693, 1.02285, 1, 1, 0.83693, 0.9455, 0.83693, 0.90418, 0.83693, 1.13005, 1.09398, 0.99041, 1, 1, 1.09398, 0.99041, 0.96692, 1.09251, 0.99041, 0.97489, 1.0008, 0.97489, 1.0008, 0.97489, 1.0008, 0.93994, 0.97931, 0.90399, 1.02258, 1, 1, 0.90399, 1.02258, 0.84041, 0.79104, 0.84041, 0.79104, 0.84041, 0.79104, 0.84041, 0.79104, 1, 1, 0.95923, 1.07034, 0.95923, 1.16862, 1.00135, 0.99041, 1.00135, 0.99041, 1.00135, 0.99041, 1.00135, 0.99041, 1.00135, 0.99041, 1.00135, 0.99041, 1.06467, 1.02511, 0.90996, 0.96752, 0.90996, 0.99361, 0.95801, 0.99361, 0.95801, 0.99361, 0.95801, 1.07733, 1.03424, 0.97363, 0.96752, 0.93506, 0.93136, 0.97489, 1.0008, 1, 1, 0.95923, 1.16862, 1.15103, 1.15103, 1.01173, 1.03959, 0.75953, 0.81378, 0.79912, 1.15103, 1.21994, 0.95161, 0.87815, 1.01149, 0.81525, 0.7676, 0.98167, 1.01134, 1.02546, 0.84097, 1.03089, 1.18102, 0.97363, 0.88776, 0.85134, 0.97826, 0.79795, 0.99361, 1.06085, 0.97489, 1.1406, 0.89858, 1.0388, 1.14889, 1.09398, 0.86039, 0.97489, 1.0595, 0.92094, 0.94793, 0.95923, 0.90996, 0.99346, 0.98243, 1.02112, 0.95493, 1.1406, 0.90996, 1.03574, 1.02597, 1.0008, 1.18102, 1.06628, 1.03574, 1.0192, 1.01932, 1.00886, 0.97531, 1.0106, 1.0008, 1.13189, 1.18102, 1.02277, 0.98683, 1.0016, 0.99561, 1.07237, 1.0008, 0.90434, 0.99921, 0.93803, 0.8965, 1.23085, 1.06628, 1.04983, 0.96268, 1.0499, 0.98439, 1.18102, 1.06628, 1.0008, 1.06628, 0.98439, 0.79795, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1.09466, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.97278, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1.02065, 1, 1, 1, 1, 1, 1, 1.06467, 1.02511, 1.06467, 1.02511, 1.06467, 1.02511, 0.90996, 0.96752, 1, 1.21408, 0.89903, 1, 1, 0.75155, 1.04394, 1.04394, 1.04394, 1.04394, 0.98633, 0.98633, 0.98633, 0.73047, 0.73047, 1.20642, 0.91211, 1.25635, 1.222, 1.02956, 1.03372, 1.03372, 0.96039, 1.24633, 1, 1.12454, 0.93503, 1.03424, 1.19687, 1.03424, 1, 1, 1, 0.771, 1, 1, 1.15749, 1.15749, 1.15749, 1.10948, 0.86279, 0.94434, 0.86279, 0.94434, 0.86182, 1, 1, 1.16897, 1, 0.96085, 0.90137, 1.2107, 1.18416, 1.13973, 0.69825, 0.9716, 2.10339, 1.29004, 1.29004, 1.21172, 1.29004, 1.29004, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1.42603, 1, 0.99862, 0.99862, 1, 0.87025, 0.87025, 0.87025, 0.87025, 1.18874, 1.42603, 1, 1.42603, 1.42603, 0.99862, 1, 1, 1, 1, 1, 1.2886, 1.04315, 1.15296, 1.34163, 1, 1, 1, 1.09193, 1.09193, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1];
          r2.SegoeuiBoldMetrics = { lineHeight: 1.33008, lineGap: 0 };
          r2.SegoeuiBoldItalicFactors = [1.76738, 1, 1, 0.98946, 1.03959, 1.04016, 1.02809, 1.036, 0.97639, 1.10953, 1.23203, 1.11144, 1.11144, 1.16939, 1.21237, 0.9754, 1.21261, 0.9754, 1.59754, 1.036, 1.036, 1.036, 1.036, 1.036, 1.036, 1.036, 1.036, 1.036, 1.036, 0.81378, 0.81378, 1.21237, 1.21237, 1.21237, 0.73541, 0.97847, 0.97363, 0.89723, 0.87897, 1.0426, 0.79429, 0.85292, 0.91149, 1.05815, 1.1406, 0.79631, 0.90128, 0.83853, 1.04396, 1.10615, 0.97552, 0.94436, 0.97552, 0.88641, 0.80527, 0.96083, 1.00135, 1, 1.06777, 0.9817, 0.91142, 0.99361, 1.11144, 1.57293, 1.11144, 1.21237, 0.74627, 1.31818, 1.06585, 0.97042, 0.83055, 0.97042, 0.93503, 1.1261, 0.97042, 0.97922, 1.14236, 0.94552, 1.01054, 1.14236, 1.02471, 0.97922, 0.94165, 0.97042, 0.97042, 1.0276, 0.78929, 1.1261, 0.97922, 0.95874, 1.02197, 0.98507, 0.96752, 0.97168, 0.95107, 1.16579, 0.95107, 1.21237, 1.03959, 1.036, 1.036, 1, 1.036, 1.16579, 0.87357, 1.31818, 1.18754, 1.26781, 1.05356, 1.21237, 1.18622, 0.79487, 0.94994, 1.29004, 1.24047, 1.24047, 1.31818, 1, 0.91484, 0.9754, 1.31818, 1.1349, 1.24866, 1.05356, 1.13934, 1.15574, 1.17389, 0.73541, 0.97363, 0.97363, 0.97363, 0.97363, 0.97363, 0.97363, 0.94385, 0.87897, 0.79429, 0.79429, 0.79429, 0.79429, 1.1406, 1.1406, 1.1406, 1.1406, 1.0426, 1.10615, 0.97552, 0.97552, 0.97552, 0.97552, 0.97552, 1.21237, 0.97552, 1.00135, 1.00135, 1.00135, 1.00135, 0.91142, 0.94436, 0.98721, 1.06585, 1.06585, 1.06585, 1.06585, 1.06585, 1.06585, 0.96705, 0.83055, 0.93503, 0.93503, 0.93503, 0.93503, 1.14236, 1.14236, 1.14236, 1.14236, 0.93125, 0.97922, 0.94165, 0.94165, 0.94165, 0.94165, 0.94165, 1.29004, 0.94165, 0.97922, 0.97922, 0.97922, 0.97922, 0.96752, 0.97042, 0.96752, 0.97363, 1.06585, 0.97363, 1.06585, 0.97363, 1.06585, 0.87897, 0.83055, 0.87897, 0.83055, 0.87897, 0.83055, 0.87897, 0.83055, 1.0426, 1.0033, 1.0426, 0.97042, 0.79429, 0.93503, 0.79429, 0.93503, 0.79429, 0.93503, 0.79429, 0.93503, 0.79429, 0.93503, 0.91149, 0.97042, 0.91149, 0.97042, 0.91149, 0.97042, 1, 1, 1.05815, 0.97922, 1.05815, 0.97922, 1.1406, 1.14236, 1.1406, 1.14236, 1.1406, 1.14236, 1.1406, 1.14236, 1.1406, 1.14236, 0.97441, 1.04302, 0.79631, 1.01582, 1, 1, 1.01054, 0.83853, 1.14236, 1, 1, 0.83853, 1.09125, 0.83853, 0.90418, 0.83853, 1.19508, 1.10615, 0.97922, 1, 1, 1.10615, 0.97922, 1.01034, 1.10466, 0.97922, 0.97552, 0.94165, 0.97552, 0.94165, 0.97552, 0.94165, 0.91602, 0.91981, 0.88641, 1.0276, 1, 1, 0.88641, 1.0276, 0.80527, 0.78929, 0.80527, 0.78929, 0.80527, 0.78929, 0.80527, 0.78929, 1, 1, 0.96083, 1.05403, 0.95923, 1.16862, 1.00135, 0.97922, 1.00135, 0.97922, 1.00135, 0.97922, 1.00135, 0.97922, 1.00135, 0.97922, 1.00135, 0.97922, 1.06777, 1.02197, 0.91142, 0.96752, 0.91142, 0.99361, 0.97168, 0.99361, 0.97168, 0.99361, 0.97168, 1.23199, 1.036, 0.97363, 1.06585, 0.94385, 0.96705, 0.97552, 0.94165, 1, 1, 0.96083, 1.1261, 1.31818, 1.31818, 1.31818, 1.31818, 1.31818, 1.31818, 1.31818, 1.31818, 1.31818, 0.95161, 1.27126, 1.00811, 0.83284, 0.77702, 0.99137, 0.95253, 1.0347, 0.86142, 1.07205, 1.14236, 0.97363, 0.89723, 0.86869, 1.09818, 0.79429, 0.99361, 1.05815, 0.97552, 1.1406, 0.90128, 1.06662, 1.04396, 1.10615, 0.84918, 0.97552, 1.04694, 0.94436, 0.98015, 0.96083, 0.91142, 1.00356, 0.9817, 1.01945, 0.98999, 1.1406, 0.91142, 1.04961, 0.9898, 1.00639, 1.14236, 1.07514, 1.04961, 0.99607, 1.02897, 1.008, 0.9898, 0.95134, 1.00639, 1.11121, 1.14236, 1.00518, 0.97981, 1.02186, 1, 1.08578, 0.94165, 0.99314, 0.98387, 0.93028, 0.93377, 1.35125, 1.07514, 1.10687, 0.93491, 1.04232, 1.00351, 1.14236, 1.07514, 0.94165, 1.07514, 1.00351, 0.79429, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1.09097, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.93503, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.96609, 1, 1, 1, 1, 1, 1, 1.06777, 1.02197, 1.06777, 1.02197, 1.06777, 1.02197, 0.91142, 0.96752, 1, 1.21261, 0.89903, 1, 1, 0.75155, 1.04745, 1.04745, 1.04745, 1.04394, 0.98633, 0.98633, 0.98633, 0.72959, 0.72959, 1.20502, 0.91406, 1.26514, 1.222, 1.02956, 1.03372, 1.03372, 0.96039, 1.24633, 1, 1.09125, 0.93327, 1.03336, 1.16541, 1.036, 1, 1, 1, 0.771, 1, 1, 1.15574, 1.15574, 1.15574, 1.15574, 0.86364, 0.94434, 0.86279, 0.94434, 0.86224, 1, 1, 1.16798, 1, 0.96085, 0.90068, 1.21237, 1.18416, 1.13904, 0.69825, 0.9716, 2.10339, 1.29004, 1.29004, 1.21339, 1.29004, 1.29004, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1.42603, 1, 0.99862, 0.99862, 1, 0.87025, 0.87025, 0.87025, 0.87025, 1.18775, 1.42603, 1, 1.42603, 1.42603, 0.99862, 1, 1, 1, 1, 1, 1.2886, 1.04315, 1.15296, 1.34163, 1, 1, 1, 1.13269, 1.13269, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1];
          r2.SegoeuiBoldItalicMetrics = { lineHeight: 1.33008, lineGap: 0 };
          r2.SegoeuiItalicFactors = [1.76738, 1, 1, 0.98946, 1.14763, 1.05365, 1.06234, 0.96927, 0.92586, 1.15373, 1.18414, 0.91349, 0.91349, 1.07403, 1.17308, 0.78383, 1.20088, 0.78383, 1.42531, 0.96927, 0.96927, 0.96927, 0.96927, 0.96927, 0.96927, 0.96927, 0.96927, 0.96927, 0.96927, 0.78383, 0.78383, 1.17308, 1.17308, 1.17308, 0.77349, 0.94565, 0.94729, 0.85944, 0.88506, 0.9858, 0.74817, 0.80016, 0.88449, 0.98039, 0.95782, 0.69238, 0.89898, 0.83231, 0.98183, 1.03989, 0.96924, 0.86237, 0.96924, 0.80595, 0.74524, 0.86091, 0.95402, 0.94143, 0.98448, 0.8858, 0.83089, 0.93285, 1.0949, 1.39016, 1.0949, 1.45994, 0.74627, 1.04839, 0.97454, 0.97454, 0.87207, 0.97454, 0.87533, 1.06151, 0.97454, 1.00176, 1.16484, 1.08132, 0.98047, 1.16484, 1.02989, 1.01054, 0.96225, 0.97454, 0.97454, 1.06598, 0.79004, 1.16344, 1.00351, 0.94629, 0.9973, 0.91016, 0.96777, 0.9043, 0.91082, 0.92481, 0.91082, 1.17308, 0.95748, 0.96927, 0.96927, 1, 0.96927, 0.92481, 0.80597, 1.04839, 1.23393, 1.1781, 0.9245, 1.17308, 1.20808, 0.63218, 0.94261, 1.24822, 1.09971, 1.09971, 1.04839, 1, 0.85273, 0.78032, 1.04839, 1.09971, 1.22326, 0.9245, 1.09836, 1.13525, 1.15222, 0.70424, 0.94729, 0.94729, 0.94729, 0.94729, 0.94729, 0.94729, 0.85498, 0.88506, 0.74817, 0.74817, 0.74817, 0.74817, 0.95782, 0.95782, 0.95782, 0.95782, 0.9858, 1.03989, 0.96924, 0.96924, 0.96924, 0.96924, 0.96924, 1.17308, 0.96924, 0.95402, 0.95402, 0.95402, 0.95402, 0.83089, 0.86237, 0.88409, 0.97454, 0.97454, 0.97454, 0.97454, 0.97454, 0.97454, 0.92916, 0.87207, 0.87533, 0.87533, 0.87533, 0.87533, 0.93146, 0.93146, 0.93146, 0.93146, 0.93854, 1.01054, 0.96225, 0.96225, 0.96225, 0.96225, 0.96225, 1.24822, 0.8761, 1.00351, 1.00351, 1.00351, 1.00351, 0.96777, 0.97454, 0.96777, 0.94729, 0.97454, 0.94729, 0.97454, 0.94729, 0.97454, 0.88506, 0.87207, 0.88506, 0.87207, 0.88506, 0.87207, 0.88506, 0.87207, 0.9858, 0.95391, 0.9858, 0.97454, 0.74817, 0.87533, 0.74817, 0.87533, 0.74817, 0.87533, 0.74817, 0.87533, 0.74817, 0.87533, 0.88449, 0.97454, 0.88449, 0.97454, 0.88449, 0.97454, 1, 1, 0.98039, 1.00176, 0.98039, 1.00176, 0.95782, 0.93146, 0.95782, 0.93146, 0.95782, 0.93146, 0.95782, 1.16484, 0.95782, 0.93146, 0.84421, 1.12761, 0.69238, 1.08132, 1, 1, 0.98047, 0.83231, 1.16484, 1, 1, 0.84723, 1.04861, 0.84723, 0.78755, 0.83231, 1.23736, 1.03989, 1.01054, 1, 1, 1.03989, 1.01054, 0.9857, 1.03849, 1.01054, 0.96924, 0.96225, 0.96924, 0.96225, 0.96924, 0.96225, 0.92383, 0.90171, 0.80595, 1.06598, 1, 1, 0.80595, 1.06598, 0.74524, 0.79004, 0.74524, 0.79004, 0.74524, 0.79004, 0.74524, 0.79004, 1, 1, 0.86091, 1.02759, 0.85771, 1.16344, 0.95402, 1.00351, 0.95402, 1.00351, 0.95402, 1.00351, 0.95402, 1.00351, 0.95402, 1.00351, 0.95402, 1.00351, 0.98448, 0.9973, 0.83089, 0.96777, 0.83089, 0.93285, 0.9043, 0.93285, 0.9043, 0.93285, 0.9043, 1.31868, 0.96927, 0.94729, 0.97454, 0.85498, 0.92916, 0.96924, 0.8761, 1, 1, 0.86091, 1.16344, 1.04839, 1.04839, 1.04839, 1.04839, 1.04839, 1.04839, 1.04839, 1.04839, 1.04839, 0.81965, 0.81965, 0.94729, 0.78032, 0.71022, 0.90883, 0.84171, 0.99877, 0.77596, 1.05734, 1.2, 0.94729, 0.85944, 0.82791, 0.9607, 0.74817, 0.93285, 0.98039, 0.96924, 0.95782, 0.89898, 0.98316, 0.98183, 1.03989, 0.78614, 0.96924, 0.97642, 0.86237, 0.86075, 0.86091, 0.83089, 0.90082, 0.8858, 0.97296, 1.01284, 0.95782, 0.83089, 1.0976, 1.04, 1.03342, 1.2, 1.0675, 1.0976, 0.98205, 1.03809, 1.05097, 1.04, 0.95364, 1.03342, 1.05401, 1.2, 1.02148, 1.0119, 1.04724, 1.0127, 1.02732, 0.96225, 0.8965, 0.97783, 0.93574, 0.94818, 1.30679, 1.0675, 1.11826, 0.99821, 1.0557, 1.0326, 1.2, 1.0675, 0.96225, 1.0675, 1.0326, 0.74817, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1.03754, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.87533, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.98705, 1, 1, 1, 1, 1, 1, 0.98448, 0.9973, 0.98448, 0.9973, 0.98448, 0.9973, 0.83089, 0.96777, 1, 1.20088, 0.89903, 1, 1, 0.75155, 0.94945, 0.94945, 0.94945, 0.94945, 1.12317, 1.12317, 1.12317, 0.67603, 0.67603, 1.15621, 0.73584, 1.21191, 1.22135, 1.06483, 0.94868, 0.94868, 0.95996, 1.24633, 1, 1.07497, 0.87709, 0.96927, 1.01473, 0.96927, 1, 1, 1, 0.77295, 1, 1, 1.09836, 1.09836, 1.09836, 1.01522, 0.86321, 0.94434, 0.8649, 0.94434, 0.86182, 1, 1, 1.083, 1, 0.91578, 0.86438, 1.17308, 1.18416, 1.14589, 0.69825, 0.97622, 1.96791, 1.24822, 1.24822, 1.17308, 1.24822, 1.24822, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1.42603, 1, 0.99862, 0.99862, 1, 0.87025, 0.87025, 0.87025, 0.87025, 1.17984, 1.42603, 1, 1.42603, 1.42603, 0.99862, 1, 1, 1, 1, 1, 1.2886, 1.04315, 1.15296, 1.34163, 1, 1, 1, 1.10742, 1.10742, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1];
          r2.SegoeuiItalicMetrics = { lineHeight: 1.33008, lineGap: 0 };
          r2.SegoeuiRegularFactors = [1.76738, 1, 1, 0.98594, 1.02285, 1.10454, 1.06234, 0.96927, 0.92037, 1.19985, 1.2046, 0.90616, 0.90616, 1.07152, 1.1714, 0.78032, 1.20088, 0.78032, 1.40246, 0.96927, 0.96927, 0.96927, 0.96927, 0.96927, 0.96927, 0.96927, 0.96927, 0.96927, 0.96927, 0.78032, 0.78032, 1.1714, 1.1714, 1.1714, 0.80597, 0.94084, 0.96706, 0.85944, 0.85734, 0.97093, 0.75842, 0.79936, 0.88198, 0.9831, 0.95782, 0.71387, 0.86969, 0.84636, 1.07796, 1.03584, 0.96924, 0.83968, 0.96924, 0.82826, 0.79649, 0.85771, 0.95132, 0.93119, 0.98965, 0.88433, 0.8287, 0.93365, 1.08612, 1.3638, 1.08612, 1.45786, 0.74627, 0.80499, 0.91484, 1.05707, 0.92383, 1.05882, 0.9403, 1.12654, 1.05882, 1.01756, 1.09011, 1.09011, 0.99414, 1.09011, 1.034, 1.01756, 1.05356, 1.05707, 1.05882, 1.04399, 0.84863, 1.21968, 1.01756, 0.95801, 1.00068, 0.91797, 0.96777, 0.9043, 0.90351, 0.92105, 0.90351, 1.1714, 0.85337, 0.96927, 0.96927, 0.99912, 0.96927, 0.92105, 0.80597, 1.2434, 1.20808, 1.05937, 0.90957, 1.1714, 1.20808, 0.75155, 0.94261, 1.24644, 1.09971, 1.09971, 0.84751, 1, 0.85273, 0.78032, 0.61584, 1.05425, 1.17914, 0.90957, 1.08665, 1.11593, 1.14169, 0.73381, 0.96706, 0.96706, 0.96706, 0.96706, 0.96706, 0.96706, 0.86035, 0.85734, 0.75842, 0.75842, 0.75842, 0.75842, 0.95782, 0.95782, 0.95782, 0.95782, 0.97093, 1.03584, 0.96924, 0.96924, 0.96924, 0.96924, 0.96924, 1.1714, 0.96924, 0.95132, 0.95132, 0.95132, 0.95132, 0.8287, 0.83968, 0.89049, 0.91484, 0.91484, 0.91484, 0.91484, 0.91484, 0.91484, 0.93575, 0.92383, 0.9403, 0.9403, 0.9403, 0.9403, 0.8717, 0.8717, 0.8717, 0.8717, 1.00527, 1.01756, 1.05356, 1.05356, 1.05356, 1.05356, 1.05356, 1.24644, 0.95923, 1.01756, 1.01756, 1.01756, 1.01756, 0.96777, 1.05707, 0.96777, 0.96706, 0.91484, 0.96706, 0.91484, 0.96706, 0.91484, 0.85734, 0.92383, 0.85734, 0.92383, 0.85734, 0.92383, 0.85734, 0.92383, 0.97093, 1.0969, 0.97093, 1.05882, 0.75842, 0.9403, 0.75842, 0.9403, 0.75842, 0.9403, 0.75842, 0.9403, 0.75842, 0.9403, 0.88198, 1.05882, 0.88198, 1.05882, 0.88198, 1.05882, 1, 1, 0.9831, 1.01756, 0.9831, 1.01756, 0.95782, 0.8717, 0.95782, 0.8717, 0.95782, 0.8717, 0.95782, 1.09011, 0.95782, 0.8717, 0.84784, 1.11551, 0.71387, 1.09011, 1, 1, 0.99414, 0.84636, 1.09011, 1, 1, 0.84636, 1.0536, 0.84636, 0.94298, 0.84636, 1.23297, 1.03584, 1.01756, 1, 1, 1.03584, 1.01756, 1.00323, 1.03444, 1.01756, 0.96924, 1.05356, 0.96924, 1.05356, 0.96924, 1.05356, 0.93066, 0.98293, 0.82826, 1.04399, 1, 1, 0.82826, 1.04399, 0.79649, 0.84863, 0.79649, 0.84863, 0.79649, 0.84863, 0.79649, 0.84863, 1, 1, 0.85771, 1.17318, 0.85771, 1.21968, 0.95132, 1.01756, 0.95132, 1.01756, 0.95132, 1.01756, 0.95132, 1.01756, 0.95132, 1.01756, 0.95132, 1.01756, 0.98965, 1.00068, 0.8287, 0.96777, 0.8287, 0.93365, 0.9043, 0.93365, 0.9043, 0.93365, 0.9043, 1.08571, 0.96927, 0.96706, 0.91484, 0.86035, 0.93575, 0.96924, 0.95923, 1, 1, 0.85771, 1.21968, 1.11437, 1.11437, 0.93109, 0.91202, 0.60411, 0.84164, 0.55572, 1.01173, 0.97361, 0.81818, 0.81818, 0.96635, 0.78032, 0.72727, 0.92366, 0.98601, 1.03405, 0.77968, 1.09799, 1.2, 0.96706, 0.85944, 0.85638, 0.96491, 0.75842, 0.93365, 0.9831, 0.96924, 0.95782, 0.86969, 0.94152, 1.07796, 1.03584, 0.78437, 0.96924, 0.98715, 0.83968, 0.83491, 0.85771, 0.8287, 0.94492, 0.88433, 0.9287, 1.0098, 0.95782, 0.8287, 1.0625, 0.98248, 1.03424, 1.2, 1.01071, 1.0625, 0.95246, 1.03809, 1.04912, 0.98248, 1.00221, 1.03424, 1.05443, 1.2, 1.04785, 0.99609, 1.00169, 1.05176, 0.99346, 1.05356, 0.9087, 1.03004, 0.95542, 0.93117, 1.23362, 1.01071, 1.07831, 1.02512, 1.05205, 1.03502, 1.2, 1.01071, 1.05356, 1.01071, 1.03502, 0.75842, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1.03719, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.9403, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1.04021, 1, 1, 1, 1, 1, 1, 0.98965, 1.00068, 0.98965, 1.00068, 0.98965, 1.00068, 0.8287, 0.96777, 1, 1.20088, 0.89903, 1, 1, 0.75155, 1.03077, 1.03077, 1.03077, 1.03077, 1.13196, 1.13196, 1.13196, 0.67428, 0.67428, 1.16039, 0.73291, 1.20996, 1.22135, 1.06483, 0.94868, 0.94868, 0.95996, 1.24633, 1, 1.07497, 0.87796, 0.96927, 1.01518, 0.96927, 1, 1, 1, 0.77295, 1, 1, 1.10539, 1.10539, 1.11358, 1.06967, 0.86279, 0.94434, 0.86279, 0.94434, 0.86182, 1, 1, 1.083, 1, 0.91578, 0.86507, 1.1714, 1.18416, 1.14589, 0.69825, 0.97622, 1.9697, 1.24822, 1.24822, 1.17238, 1.24822, 1.24822, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1.42603, 1, 0.99862, 0.99862, 1, 0.87025, 0.87025, 0.87025, 0.87025, 1.18083, 1.42603, 1, 1.42603, 1.42603, 0.99862, 1, 1, 1, 1, 1, 1.2886, 1.04315, 1.15296, 1.34163, 1, 1, 1, 1.10938, 1.10938, 1, 1, 1, 1.05425, 1.09971, 1.09971, 1.09971, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1];
          r2.SegoeuiRegularMetrics = { lineHeight: 1.33008, lineGap: 0 };
        }, (t2, r2, o2) => {
          "use strict";
          Object.defineProperty(r2, "__esModule", { value: true });
          r2.SEAC_ANALYSIS_ENABLED = r2.MacStandardGlyphOrdering = r2.FontFlags = void 0;
          r2.getFontType = function getFontType(t3, r3) {
            var o3 = arguments.length > 2 && arguments[2] !== void 0 && arguments[2];
            switch (t3) {
              case "Type1":
                return o3 ? c.FontType.TYPE1STANDARD : r3 === "Type1C" ? c.FontType.TYPE1C : c.FontType.TYPE1;
              case "CIDFontType0":
                return r3 === "CIDFontType0C" ? c.FontType.CIDFONTTYPE0C : c.FontType.CIDFONTTYPE0;
              case "OpenType":
                return c.FontType.OPENTYPE;
              case "TrueType":
                return c.FontType.TRUETYPE;
              case "CIDFontType2":
                return c.FontType.CIDFONTTYPE2;
              case "MMType1":
                return c.FontType.MMTYPE1;
              case "Type0":
                return c.FontType.TYPE0;
              default:
                return c.FontType.UNKNOWN;
            }
          };
          r2.normalizeFontName = function normalizeFontName(t3) {
            return t3.replace(/[,_]/g, "-").replace(/\s/g, "");
          };
          r2.recoverGlyphName = recoverGlyphName;
          r2.type1FontGlyphMapping = function type1FontGlyphMapping(t3, r3, o3) {
            var c2, h2, g, m = /* @__PURE__ */ Object.create(null), y = !!(t3.flags & d.Symbolic);
            if (t3.isInternalFont) {
              g = r3;
              for (h2 = 0; h2 < g.length; h2++) {
                c2 = o3.indexOf(g[h2]);
                m[h2] = c2 >= 0 ? c2 : 0;
              }
            } else if (t3.baseEncodingName) {
              g = (0, l.getEncoding)(t3.baseEncodingName);
              for (h2 = 0; h2 < g.length; h2++) {
                c2 = o3.indexOf(g[h2]);
                m[h2] = c2 >= 0 ? c2 : 0;
              }
            } else if (y)
              for (h2 in r3)
                m[h2] = r3[h2];
            else {
              g = l.StandardEncoding;
              for (h2 = 0; h2 < g.length; h2++) {
                c2 = o3.indexOf(g[h2]);
                m[h2] = c2 >= 0 ? c2 : 0;
              }
            }
            var v, k = t3.differences;
            if (k)
              for (h2 in k) {
                var _ = k[h2];
                if ((c2 = o3.indexOf(_)) === -1) {
                  v || (v = (0, u.getGlyphsUnicode)());
                  var w = recoverGlyphName(_, v);
                  w !== _ && (c2 = o3.indexOf(w));
                }
                m[h2] = c2 >= 0 ? c2 : 0;
              }
            return m;
          };
          var c = o2(4), l = o2(172), u = o2(173), h = o2(174);
          r2.SEAC_ANALYSIS_ENABLED = true;
          var d = { FixedPitch: 1, Serif: 2, Symbolic: 4, Script: 8, Nonsymbolic: 32, Italic: 64, AllCap: 65536, SmallCap: 131072, ForceBold: 262144 };
          r2.FontFlags = d;
          r2.MacStandardGlyphOrdering = [".notdef", ".null", "nonmarkingreturn", "space", "exclam", "quotedbl", "numbersign", "dollar", "percent", "ampersand", "quotesingle", "parenleft", "parenright", "asterisk", "plus", "comma", "hyphen", "period", "slash", "zero", "one", "two", "three", "four", "five", "six", "seven", "eight", "nine", "colon", "semicolon", "less", "equal", "greater", "question", "at", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "bracketleft", "backslash", "bracketright", "asciicircum", "underscore", "grave", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "braceleft", "bar", "braceright", "asciitilde", "Adieresis", "Aring", "Ccedilla", "Eacute", "Ntilde", "Odieresis", "Udieresis", "aacute", "agrave", "acircumflex", "adieresis", "atilde", "aring", "ccedilla", "eacute", "egrave", "ecircumflex", "edieresis", "iacute", "igrave", "icircumflex", "idieresis", "ntilde", "oacute", "ograve", "ocircumflex", "odieresis", "otilde", "uacute", "ugrave", "ucircumflex", "udieresis", "dagger", "degree", "cent", "sterling", "section", "bullet", "paragraph", "germandbls", "registered", "copyright", "trademark", "acute", "dieresis", "notequal", "AE", "Oslash", "infinity", "plusminus", "lessequal", "greaterequal", "yen", "mu", "partialdiff", "summation", "product", "pi", "integral", "ordfeminine", "ordmasculine", "Omega", "ae", "oslash", "questiondown", "exclamdown", "logicalnot", "radical", "florin", "approxequal", "Delta", "guillemotleft", "guillemotright", "ellipsis", "nonbreakingspace", "Agrave", "Atilde", "Otilde", "OE", "oe", "endash", "emdash", "quotedblleft", "quotedblright", "quoteleft", "quoteright", "divide", "lozenge", "ydieresis", "Ydieresis", "fraction", "currency", "guilsinglleft", "guilsinglright", "fi", "fl", "daggerdbl", "periodcentered", "quotesinglbase", "quotedblbase", "perthousand", "Acircumflex", "Ecircumflex", "Aacute", "Edieresis", "Egrave", "Iacute", "Icircumflex", "Idieresis", "Igrave", "Oacute", "Ocircumflex", "apple", "Ograve", "Uacute", "Ucircumflex", "Ugrave", "dotlessi", "circumflex", "tilde", "macron", "breve", "dotaccent", "ring", "cedilla", "hungarumlaut", "ogonek", "caron", "Lslash", "lslash", "Scaron", "scaron", "Zcaron", "zcaron", "brokenbar", "Eth", "eth", "Yacute", "yacute", "Thorn", "thorn", "minus", "multiply", "onesuperior", "twosuperior", "threesuperior", "onehalf", "onequarter", "threequarters", "franc", "Gbreve", "gbreve", "Idotaccent", "Scedilla", "scedilla", "Cacute", "cacute", "Ccaron", "ccaron", "dcroat"];
          function recoverGlyphName(t3, r3) {
            if (r3[t3] !== void 0)
              return t3;
            var o3 = (0, h.getUnicodeForGlyph)(t3, r3);
            if (o3 !== -1) {
              for (var l2 in r3)
                if (r3[l2] === o3)
                  return l2;
            }
            (0, c.info)("Unable to recover a standard glyph name for: " + t3);
            return t3;
          }
        }, (t2, r2) => {
          "use strict";
          Object.defineProperty(r2, "__esModule", { value: true });
          r2.ZapfDingbatsEncoding = r2.WinAnsiEncoding = r2.SymbolSetEncoding = r2.StandardEncoding = r2.MacRomanEncoding = r2.ExpertEncoding = void 0;
          r2.getEncoding = function getEncoding(t3) {
            switch (t3) {
              case "WinAnsiEncoding":
                return h;
              case "StandardEncoding":
                return u;
              case "MacRomanEncoding":
                return l;
              case "SymbolSetEncoding":
                return d;
              case "ZapfDingbatsEncoding":
                return g;
              case "ExpertEncoding":
                return o2;
              case "MacExpertEncoding":
                return c;
              default:
                return null;
            }
          };
          var o2 = ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "space", "exclamsmall", "Hungarumlautsmall", "", "dollaroldstyle", "dollarsuperior", "ampersandsmall", "Acutesmall", "parenleftsuperior", "parenrightsuperior", "twodotenleader", "onedotenleader", "comma", "hyphen", "period", "fraction", "zerooldstyle", "oneoldstyle", "twooldstyle", "threeoldstyle", "fouroldstyle", "fiveoldstyle", "sixoldstyle", "sevenoldstyle", "eightoldstyle", "nineoldstyle", "colon", "semicolon", "commasuperior", "threequartersemdash", "periodsuperior", "questionsmall", "", "asuperior", "bsuperior", "centsuperior", "dsuperior", "esuperior", "", "", "", "isuperior", "", "", "lsuperior", "msuperior", "nsuperior", "osuperior", "", "", "rsuperior", "ssuperior", "tsuperior", "", "ff", "fi", "fl", "ffi", "ffl", "parenleftinferior", "", "parenrightinferior", "Circumflexsmall", "hyphensuperior", "Gravesmall", "Asmall", "Bsmall", "Csmall", "Dsmall", "Esmall", "Fsmall", "Gsmall", "Hsmall", "Ismall", "Jsmall", "Ksmall", "Lsmall", "Msmall", "Nsmall", "Osmall", "Psmall", "Qsmall", "Rsmall", "Ssmall", "Tsmall", "Usmall", "Vsmall", "Wsmall", "Xsmall", "Ysmall", "Zsmall", "colonmonetary", "onefitted", "rupiah", "Tildesmall", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "exclamdownsmall", "centoldstyle", "Lslashsmall", "", "", "Scaronsmall", "Zcaronsmall", "Dieresissmall", "Brevesmall", "Caronsmall", "", "Dotaccentsmall", "", "", "Macronsmall", "", "", "figuredash", "hypheninferior", "", "", "Ogoneksmall", "Ringsmall", "Cedillasmall", "", "", "", "onequarter", "onehalf", "threequarters", "questiondownsmall", "oneeighth", "threeeighths", "fiveeighths", "seveneighths", "onethird", "twothirds", "", "", "zerosuperior", "onesuperior", "twosuperior", "threesuperior", "foursuperior", "fivesuperior", "sixsuperior", "sevensuperior", "eightsuperior", "ninesuperior", "zeroinferior", "oneinferior", "twoinferior", "threeinferior", "fourinferior", "fiveinferior", "sixinferior", "seveninferior", "eightinferior", "nineinferior", "centinferior", "dollarinferior", "periodinferior", "commainferior", "Agravesmall", "Aacutesmall", "Acircumflexsmall", "Atildesmall", "Adieresissmall", "Aringsmall", "AEsmall", "Ccedillasmall", "Egravesmall", "Eacutesmall", "Ecircumflexsmall", "Edieresissmall", "Igravesmall", "Iacutesmall", "Icircumflexsmall", "Idieresissmall", "Ethsmall", "Ntildesmall", "Ogravesmall", "Oacutesmall", "Ocircumflexsmall", "Otildesmall", "Odieresissmall", "OEsmall", "Oslashsmall", "Ugravesmall", "Uacutesmall", "Ucircumflexsmall", "Udieresissmall", "Yacutesmall", "Thornsmall", "Ydieresissmall"];
          r2.ExpertEncoding = o2;
          var c = ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "space", "exclamsmall", "Hungarumlautsmall", "centoldstyle", "dollaroldstyle", "dollarsuperior", "ampersandsmall", "Acutesmall", "parenleftsuperior", "parenrightsuperior", "twodotenleader", "onedotenleader", "comma", "hyphen", "period", "fraction", "zerooldstyle", "oneoldstyle", "twooldstyle", "threeoldstyle", "fouroldstyle", "fiveoldstyle", "sixoldstyle", "sevenoldstyle", "eightoldstyle", "nineoldstyle", "colon", "semicolon", "", "threequartersemdash", "", "questionsmall", "", "", "", "", "Ethsmall", "", "", "onequarter", "onehalf", "threequarters", "oneeighth", "threeeighths", "fiveeighths", "seveneighths", "onethird", "twothirds", "", "", "", "", "", "", "ff", "fi", "fl", "ffi", "ffl", "parenleftinferior", "", "parenrightinferior", "Circumflexsmall", "hypheninferior", "Gravesmall", "Asmall", "Bsmall", "Csmall", "Dsmall", "Esmall", "Fsmall", "Gsmall", "Hsmall", "Ismall", "Jsmall", "Ksmall", "Lsmall", "Msmall", "Nsmall", "Osmall", "Psmall", "Qsmall", "Rsmall", "Ssmall", "Tsmall", "Usmall", "Vsmall", "Wsmall", "Xsmall", "Ysmall", "Zsmall", "colonmonetary", "onefitted", "rupiah", "Tildesmall", "", "", "asuperior", "centsuperior", "", "", "", "", "Aacutesmall", "Agravesmall", "Acircumflexsmall", "Adieresissmall", "Atildesmall", "Aringsmall", "Ccedillasmall", "Eacutesmall", "Egravesmall", "Ecircumflexsmall", "Edieresissmall", "Iacutesmall", "Igravesmall", "Icircumflexsmall", "Idieresissmall", "Ntildesmall", "Oacutesmall", "Ogravesmall", "Ocircumflexsmall", "Odieresissmall", "Otildesmall", "Uacutesmall", "Ugravesmall", "Ucircumflexsmall", "Udieresissmall", "", "eightsuperior", "fourinferior", "threeinferior", "sixinferior", "eightinferior", "seveninferior", "Scaronsmall", "", "centinferior", "twoinferior", "", "Dieresissmall", "", "Caronsmall", "osuperior", "fiveinferior", "", "commainferior", "periodinferior", "Yacutesmall", "", "dollarinferior", "", "", "Thornsmall", "", "nineinferior", "zeroinferior", "Zcaronsmall", "AEsmall", "Oslashsmall", "questiondownsmall", "oneinferior", "Lslashsmall", "", "", "", "", "", "", "Cedillasmall", "", "", "", "", "", "OEsmall", "figuredash", "hyphensuperior", "", "", "", "", "exclamdownsmall", "", "Ydieresissmall", "", "onesuperior", "twosuperior", "threesuperior", "foursuperior", "fivesuperior", "sixsuperior", "sevensuperior", "ninesuperior", "zerosuperior", "", "esuperior", "rsuperior", "tsuperior", "", "", "isuperior", "ssuperior", "dsuperior", "", "", "", "", "", "lsuperior", "Ogoneksmall", "Brevesmall", "Macronsmall", "bsuperior", "nsuperior", "msuperior", "commasuperior", "periodsuperior", "Dotaccentsmall", "Ringsmall", "", "", "", ""], l = ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "space", "exclam", "quotedbl", "numbersign", "dollar", "percent", "ampersand", "quotesingle", "parenleft", "parenright", "asterisk", "plus", "comma", "hyphen", "period", "slash", "zero", "one", "two", "three", "four", "five", "six", "seven", "eight", "nine", "colon", "semicolon", "less", "equal", "greater", "question", "at", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "bracketleft", "backslash", "bracketright", "asciicircum", "underscore", "grave", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "braceleft", "bar", "braceright", "asciitilde", "", "Adieresis", "Aring", "Ccedilla", "Eacute", "Ntilde", "Odieresis", "Udieresis", "aacute", "agrave", "acircumflex", "adieresis", "atilde", "aring", "ccedilla", "eacute", "egrave", "ecircumflex", "edieresis", "iacute", "igrave", "icircumflex", "idieresis", "ntilde", "oacute", "ograve", "ocircumflex", "odieresis", "otilde", "uacute", "ugrave", "ucircumflex", "udieresis", "dagger", "degree", "cent", "sterling", "section", "bullet", "paragraph", "germandbls", "registered", "copyright", "trademark", "acute", "dieresis", "notequal", "AE", "Oslash", "infinity", "plusminus", "lessequal", "greaterequal", "yen", "mu", "partialdiff", "summation", "product", "pi", "integral", "ordfeminine", "ordmasculine", "Omega", "ae", "oslash", "questiondown", "exclamdown", "logicalnot", "radical", "florin", "approxequal", "Delta", "guillemotleft", "guillemotright", "ellipsis", "space", "Agrave", "Atilde", "Otilde", "OE", "oe", "endash", "emdash", "quotedblleft", "quotedblright", "quoteleft", "quoteright", "divide", "lozenge", "ydieresis", "Ydieresis", "fraction", "currency", "guilsinglleft", "guilsinglright", "fi", "fl", "daggerdbl", "periodcentered", "quotesinglbase", "quotedblbase", "perthousand", "Acircumflex", "Ecircumflex", "Aacute", "Edieresis", "Egrave", "Iacute", "Icircumflex", "Idieresis", "Igrave", "Oacute", "Ocircumflex", "apple", "Ograve", "Uacute", "Ucircumflex", "Ugrave", "dotlessi", "circumflex", "tilde", "macron", "breve", "dotaccent", "ring", "cedilla", "hungarumlaut", "ogonek", "caron"];
          r2.MacRomanEncoding = l;
          var u = ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "space", "exclam", "quotedbl", "numbersign", "dollar", "percent", "ampersand", "quoteright", "parenleft", "parenright", "asterisk", "plus", "comma", "hyphen", "period", "slash", "zero", "one", "two", "three", "four", "five", "six", "seven", "eight", "nine", "colon", "semicolon", "less", "equal", "greater", "question", "at", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "bracketleft", "backslash", "bracketright", "asciicircum", "underscore", "quoteleft", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "braceleft", "bar", "braceright", "asciitilde", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "exclamdown", "cent", "sterling", "fraction", "yen", "florin", "section", "currency", "quotesingle", "quotedblleft", "guillemotleft", "guilsinglleft", "guilsinglright", "fi", "fl", "", "endash", "dagger", "daggerdbl", "periodcentered", "", "paragraph", "bullet", "quotesinglbase", "quotedblbase", "quotedblright", "guillemotright", "ellipsis", "perthousand", "", "questiondown", "", "grave", "acute", "circumflex", "tilde", "macron", "breve", "dotaccent", "dieresis", "", "ring", "cedilla", "", "hungarumlaut", "ogonek", "caron", "emdash", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "AE", "", "ordfeminine", "", "", "", "", "Lslash", "Oslash", "OE", "ordmasculine", "", "", "", "", "", "ae", "", "", "", "dotlessi", "", "", "lslash", "oslash", "oe", "germandbls", "", "", "", ""];
          r2.StandardEncoding = u;
          var h = ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "space", "exclam", "quotedbl", "numbersign", "dollar", "percent", "ampersand", "quotesingle", "parenleft", "parenright", "asterisk", "plus", "comma", "hyphen", "period", "slash", "zero", "one", "two", "three", "four", "five", "six", "seven", "eight", "nine", "colon", "semicolon", "less", "equal", "greater", "question", "at", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "bracketleft", "backslash", "bracketright", "asciicircum", "underscore", "grave", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "braceleft", "bar", "braceright", "asciitilde", "bullet", "Euro", "bullet", "quotesinglbase", "florin", "quotedblbase", "ellipsis", "dagger", "daggerdbl", "circumflex", "perthousand", "Scaron", "guilsinglleft", "OE", "bullet", "Zcaron", "bullet", "bullet", "quoteleft", "quoteright", "quotedblleft", "quotedblright", "bullet", "endash", "emdash", "tilde", "trademark", "scaron", "guilsinglright", "oe", "bullet", "zcaron", "Ydieresis", "space", "exclamdown", "cent", "sterling", "currency", "yen", "brokenbar", "section", "dieresis", "copyright", "ordfeminine", "guillemotleft", "logicalnot", "hyphen", "registered", "macron", "degree", "plusminus", "twosuperior", "threesuperior", "acute", "mu", "paragraph", "periodcentered", "cedilla", "onesuperior", "ordmasculine", "guillemotright", "onequarter", "onehalf", "threequarters", "questiondown", "Agrave", "Aacute", "Acircumflex", "Atilde", "Adieresis", "Aring", "AE", "Ccedilla", "Egrave", "Eacute", "Ecircumflex", "Edieresis", "Igrave", "Iacute", "Icircumflex", "Idieresis", "Eth", "Ntilde", "Ograve", "Oacute", "Ocircumflex", "Otilde", "Odieresis", "multiply", "Oslash", "Ugrave", "Uacute", "Ucircumflex", "Udieresis", "Yacute", "Thorn", "germandbls", "agrave", "aacute", "acircumflex", "atilde", "adieresis", "aring", "ae", "ccedilla", "egrave", "eacute", "ecircumflex", "edieresis", "igrave", "iacute", "icircumflex", "idieresis", "eth", "ntilde", "ograve", "oacute", "ocircumflex", "otilde", "odieresis", "divide", "oslash", "ugrave", "uacute", "ucircumflex", "udieresis", "yacute", "thorn", "ydieresis"];
          r2.WinAnsiEncoding = h;
          var d = ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "space", "exclam", "universal", "numbersign", "existential", "percent", "ampersand", "suchthat", "parenleft", "parenright", "asteriskmath", "plus", "comma", "minus", "period", "slash", "zero", "one", "two", "three", "four", "five", "six", "seven", "eight", "nine", "colon", "semicolon", "less", "equal", "greater", "question", "congruent", "Alpha", "Beta", "Chi", "Delta", "Epsilon", "Phi", "Gamma", "Eta", "Iota", "theta1", "Kappa", "Lambda", "Mu", "Nu", "Omicron", "Pi", "Theta", "Rho", "Sigma", "Tau", "Upsilon", "sigma1", "Omega", "Xi", "Psi", "Zeta", "bracketleft", "therefore", "bracketright", "perpendicular", "underscore", "radicalex", "alpha", "beta", "chi", "delta", "epsilon", "phi", "gamma", "eta", "iota", "phi1", "kappa", "lambda", "mu", "nu", "omicron", "pi", "theta", "rho", "sigma", "tau", "upsilon", "omega1", "omega", "xi", "psi", "zeta", "braceleft", "bar", "braceright", "similar", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "Euro", "Upsilon1", "minute", "lessequal", "fraction", "infinity", "florin", "club", "diamond", "heart", "spade", "arrowboth", "arrowleft", "arrowup", "arrowright", "arrowdown", "degree", "plusminus", "second", "greaterequal", "multiply", "proportional", "partialdiff", "bullet", "divide", "notequal", "equivalence", "approxequal", "ellipsis", "arrowvertex", "arrowhorizex", "carriagereturn", "aleph", "Ifraktur", "Rfraktur", "weierstrass", "circlemultiply", "circleplus", "emptyset", "intersection", "union", "propersuperset", "reflexsuperset", "notsubset", "propersubset", "reflexsubset", "element", "notelement", "angle", "gradient", "registerserif", "copyrightserif", "trademarkserif", "product", "radical", "dotmath", "logicalnot", "logicaland", "logicalor", "arrowdblboth", "arrowdblleft", "arrowdblup", "arrowdblright", "arrowdbldown", "lozenge", "angleleft", "registersans", "copyrightsans", "trademarksans", "summation", "parenlefttp", "parenleftex", "parenleftbt", "bracketlefttp", "bracketleftex", "bracketleftbt", "bracelefttp", "braceleftmid", "braceleftbt", "braceex", "", "angleright", "integral", "integraltp", "integralex", "integralbt", "parenrighttp", "parenrightex", "parenrightbt", "bracketrighttp", "bracketrightex", "bracketrightbt", "bracerighttp", "bracerightmid", "bracerightbt", ""];
          r2.SymbolSetEncoding = d;
          var g = ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "space", "a1", "a2", "a202", "a3", "a4", "a5", "a119", "a118", "a117", "a11", "a12", "a13", "a14", "a15", "a16", "a105", "a17", "a18", "a19", "a20", "a21", "a22", "a23", "a24", "a25", "a26", "a27", "a28", "a6", "a7", "a8", "a9", "a10", "a29", "a30", "a31", "a32", "a33", "a34", "a35", "a36", "a37", "a38", "a39", "a40", "a41", "a42", "a43", "a44", "a45", "a46", "a47", "a48", "a49", "a50", "a51", "a52", "a53", "a54", "a55", "a56", "a57", "a58", "a59", "a60", "a61", "a62", "a63", "a64", "a65", "a66", "a67", "a68", "a69", "a70", "a71", "a72", "a73", "a74", "a203", "a75", "a204", "a76", "a77", "a78", "a79", "a81", "a82", "a83", "a84", "a97", "a98", "a99", "a100", "", "a89", "a90", "a93", "a94", "a91", "a92", "a205", "a85", "a206", "a86", "a87", "a88", "a95", "a96", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "a101", "a102", "a103", "a104", "a106", "a107", "a108", "a112", "a111", "a110", "a109", "a120", "a121", "a122", "a123", "a124", "a125", "a126", "a127", "a128", "a129", "a130", "a131", "a132", "a133", "a134", "a135", "a136", "a137", "a138", "a139", "a140", "a141", "a142", "a143", "a144", "a145", "a146", "a147", "a148", "a149", "a150", "a151", "a152", "a153", "a154", "a155", "a156", "a157", "a158", "a159", "a160", "a161", "a163", "a164", "a196", "a165", "a192", "a166", "a167", "a168", "a169", "a170", "a171", "a172", "a173", "a162", "a174", "a175", "a176", "a177", "a178", "a179", "a193", "a180", "a199", "a181", "a200", "a182", "", "a201", "a183", "a184", "a197", "a185", "a194", "a198", "a186", "a195", "a187", "a188", "a189", "a190", "a191", ""];
          r2.ZapfDingbatsEncoding = g;
        }, (t2, r2, o2) => {
          "use strict";
          o2.r(r2);
          o2.d(r2, { getDingbatsGlyphsUnicode: () => u, getGlyphsUnicode: () => l });
          var c = o2(161);
          const l = (0, c.getArrayLookupTableFactory)(function() {
            return ["A", 65, "AE", 198, "AEacute", 508, "AEmacron", 482, "AEsmall", 63462, "Aacute", 193, "Aacutesmall", 63457, "Abreve", 258, "Abreveacute", 7854, "Abrevecyrillic", 1232, "Abrevedotbelow", 7862, "Abrevegrave", 7856, "Abrevehookabove", 7858, "Abrevetilde", 7860, "Acaron", 461, "Acircle", 9398, "Acircumflex", 194, "Acircumflexacute", 7844, "Acircumflexdotbelow", 7852, "Acircumflexgrave", 7846, "Acircumflexhookabove", 7848, "Acircumflexsmall", 63458, "Acircumflextilde", 7850, "Acute", 63177, "Acutesmall", 63412, "Acyrillic", 1040, "Adblgrave", 512, "Adieresis", 196, "Adieresiscyrillic", 1234, "Adieresismacron", 478, "Adieresissmall", 63460, "Adotbelow", 7840, "Adotmacron", 480, "Agrave", 192, "Agravesmall", 63456, "Ahookabove", 7842, "Aiecyrillic", 1236, "Ainvertedbreve", 514, "Alpha", 913, "Alphatonos", 902, "Amacron", 256, "Amonospace", 65313, "Aogonek", 260, "Aring", 197, "Aringacute", 506, "Aringbelow", 7680, "Aringsmall", 63461, "Asmall", 63329, "Atilde", 195, "Atildesmall", 63459, "Aybarmenian", 1329, "B", 66, "Bcircle", 9399, "Bdotaccent", 7682, "Bdotbelow", 7684, "Becyrillic", 1041, "Benarmenian", 1330, "Beta", 914, "Bhook", 385, "Blinebelow", 7686, "Bmonospace", 65314, "Brevesmall", 63220, "Bsmall", 63330, "Btopbar", 386, "C", 67, "Caarmenian", 1342, "Cacute", 262, "Caron", 63178, "Caronsmall", 63221, "Ccaron", 268, "Ccedilla", 199, "Ccedillaacute", 7688, "Ccedillasmall", 63463, "Ccircle", 9400, "Ccircumflex", 264, "Cdot", 266, "Cdotaccent", 266, "Cedillasmall", 63416, "Chaarmenian", 1353, "Cheabkhasiancyrillic", 1212, "Checyrillic", 1063, "Chedescenderabkhasiancyrillic", 1214, "Chedescendercyrillic", 1206, "Chedieresiscyrillic", 1268, "Cheharmenian", 1347, "Chekhakassiancyrillic", 1227, "Cheverticalstrokecyrillic", 1208, "Chi", 935, "Chook", 391, "Circumflexsmall", 63222, "Cmonospace", 65315, "Coarmenian", 1361, "Csmall", 63331, "D", 68, "DZ", 497, "DZcaron", 452, "Daarmenian", 1332, "Dafrican", 393, "Dcaron", 270, "Dcedilla", 7696, "Dcircle", 9401, "Dcircumflexbelow", 7698, "Dcroat", 272, "Ddotaccent", 7690, "Ddotbelow", 7692, "Decyrillic", 1044, "Deicoptic", 1006, "Delta", 8710, "Deltagreek", 916, "Dhook", 394, "Dieresis", 63179, "DieresisAcute", 63180, "DieresisGrave", 63181, "Dieresissmall", 63400, "Digammagreek", 988, "Djecyrillic", 1026, "Dlinebelow", 7694, "Dmonospace", 65316, "Dotaccentsmall", 63223, "Dslash", 272, "Dsmall", 63332, "Dtopbar", 395, "Dz", 498, "Dzcaron", 453, "Dzeabkhasiancyrillic", 1248, "Dzecyrillic", 1029, "Dzhecyrillic", 1039, "E", 69, "Eacute", 201, "Eacutesmall", 63465, "Ebreve", 276, "Ecaron", 282, "Ecedillabreve", 7708, "Echarmenian", 1333, "Ecircle", 9402, "Ecircumflex", 202, "Ecircumflexacute", 7870, "Ecircumflexbelow", 7704, "Ecircumflexdotbelow", 7878, "Ecircumflexgrave", 7872, "Ecircumflexhookabove", 7874, "Ecircumflexsmall", 63466, "Ecircumflextilde", 7876, "Ecyrillic", 1028, "Edblgrave", 516, "Edieresis", 203, "Edieresissmall", 63467, "Edot", 278, "Edotaccent", 278, "Edotbelow", 7864, "Efcyrillic", 1060, "Egrave", 200, "Egravesmall", 63464, "Eharmenian", 1335, "Ehookabove", 7866, "Eightroman", 8551, "Einvertedbreve", 518, "Eiotifiedcyrillic", 1124, "Elcyrillic", 1051, "Elevenroman", 8554, "Emacron", 274, "Emacronacute", 7702, "Emacrongrave", 7700, "Emcyrillic", 1052, "Emonospace", 65317, "Encyrillic", 1053, "Endescendercyrillic", 1186, "Eng", 330, "Enghecyrillic", 1188, "Enhookcyrillic", 1223, "Eogonek", 280, "Eopen", 400, "Epsilon", 917, "Epsilontonos", 904, "Ercyrillic", 1056, "Ereversed", 398, "Ereversedcyrillic", 1069, "Escyrillic", 1057, "Esdescendercyrillic", 1194, "Esh", 425, "Esmall", 63333, "Eta", 919, "Etarmenian", 1336, "Etatonos", 905, "Eth", 208, "Ethsmall", 63472, "Etilde", 7868, "Etildebelow", 7706, "Euro", 8364, "Ezh", 439, "Ezhcaron", 494, "Ezhreversed", 440, "F", 70, "Fcircle", 9403, "Fdotaccent", 7710, "Feharmenian", 1366, "Feicoptic", 996, "Fhook", 401, "Fitacyrillic", 1138, "Fiveroman", 8548, "Fmonospace", 65318, "Fourroman", 8547, "Fsmall", 63334, "G", 71, "GBsquare", 13191, "Gacute", 500, "Gamma", 915, "Gammaafrican", 404, "Gangiacoptic", 1002, "Gbreve", 286, "Gcaron", 486, "Gcedilla", 290, "Gcircle", 9404, "Gcircumflex", 284, "Gcommaaccent", 290, "Gdot", 288, "Gdotaccent", 288, "Gecyrillic", 1043, "Ghadarmenian", 1346, "Ghemiddlehookcyrillic", 1172, "Ghestrokecyrillic", 1170, "Gheupturncyrillic", 1168, "Ghook", 403, "Gimarmenian", 1331, "Gjecyrillic", 1027, "Gmacron", 7712, "Gmonospace", 65319, "Grave", 63182, "Gravesmall", 63328, "Gsmall", 63335, "Gsmallhook", 667, "Gstroke", 484, "H", 72, "H18533", 9679, "H18543", 9642, "H18551", 9643, "H22073", 9633, "HPsquare", 13259, "Haabkhasiancyrillic", 1192, "Hadescendercyrillic", 1202, "Hardsigncyrillic", 1066, "Hbar", 294, "Hbrevebelow", 7722, "Hcedilla", 7720, "Hcircle", 9405, "Hcircumflex", 292, "Hdieresis", 7718, "Hdotaccent", 7714, "Hdotbelow", 7716, "Hmonospace", 65320, "Hoarmenian", 1344, "Horicoptic", 1e3, "Hsmall", 63336, "Hungarumlaut", 63183, "Hungarumlautsmall", 63224, "Hzsquare", 13200, "I", 73, "IAcyrillic", 1071, "IJ", 306, "IUcyrillic", 1070, "Iacute", 205, "Iacutesmall", 63469, "Ibreve", 300, "Icaron", 463, "Icircle", 9406, "Icircumflex", 206, "Icircumflexsmall", 63470, "Icyrillic", 1030, "Idblgrave", 520, "Idieresis", 207, "Idieresisacute", 7726, "Idieresiscyrillic", 1252, "Idieresissmall", 63471, "Idot", 304, "Idotaccent", 304, "Idotbelow", 7882, "Iebrevecyrillic", 1238, "Iecyrillic", 1045, "Ifraktur", 8465, "Igrave", 204, "Igravesmall", 63468, "Ihookabove", 7880, "Iicyrillic", 1048, "Iinvertedbreve", 522, "Iishortcyrillic", 1049, "Imacron", 298, "Imacroncyrillic", 1250, "Imonospace", 65321, "Iniarmenian", 1339, "Iocyrillic", 1025, "Iogonek", 302, "Iota", 921, "Iotaafrican", 406, "Iotadieresis", 938, "Iotatonos", 906, "Ismall", 63337, "Istroke", 407, "Itilde", 296, "Itildebelow", 7724, "Izhitsacyrillic", 1140, "Izhitsadblgravecyrillic", 1142, "J", 74, "Jaarmenian", 1345, "Jcircle", 9407, "Jcircumflex", 308, "Jecyrillic", 1032, "Jheharmenian", 1355, "Jmonospace", 65322, "Jsmall", 63338, "K", 75, "KBsquare", 13189, "KKsquare", 13261, "Kabashkircyrillic", 1184, "Kacute", 7728, "Kacyrillic", 1050, "Kadescendercyrillic", 1178, "Kahookcyrillic", 1219, "Kappa", 922, "Kastrokecyrillic", 1182, "Kaverticalstrokecyrillic", 1180, "Kcaron", 488, "Kcedilla", 310, "Kcircle", 9408, "Kcommaaccent", 310, "Kdotbelow", 7730, "Keharmenian", 1364, "Kenarmenian", 1343, "Khacyrillic", 1061, "Kheicoptic", 998, "Khook", 408, "Kjecyrillic", 1036, "Klinebelow", 7732, "Kmonospace", 65323, "Koppacyrillic", 1152, "Koppagreek", 990, "Ksicyrillic", 1134, "Ksmall", 63339, "L", 76, "LJ", 455, "LL", 63167, "Lacute", 313, "Lambda", 923, "Lcaron", 317, "Lcedilla", 315, "Lcircle", 9409, "Lcircumflexbelow", 7740, "Lcommaaccent", 315, "Ldot", 319, "Ldotaccent", 319, "Ldotbelow", 7734, "Ldotbelowmacron", 7736, "Liwnarmenian", 1340, "Lj", 456, "Ljecyrillic", 1033, "Llinebelow", 7738, "Lmonospace", 65324, "Lslash", 321, "Lslashsmall", 63225, "Lsmall", 63340, "M", 77, "MBsquare", 13190, "Macron", 63184, "Macronsmall", 63407, "Macute", 7742, "Mcircle", 9410, "Mdotaccent", 7744, "Mdotbelow", 7746, "Menarmenian", 1348, "Mmonospace", 65325, "Msmall", 63341, "Mturned", 412, "Mu", 924, "N", 78, "NJ", 458, "Nacute", 323, "Ncaron", 327, "Ncedilla", 325, "Ncircle", 9411, "Ncircumflexbelow", 7754, "Ncommaaccent", 325, "Ndotaccent", 7748, "Ndotbelow", 7750, "Nhookleft", 413, "Nineroman", 8552, "Nj", 459, "Njecyrillic", 1034, "Nlinebelow", 7752, "Nmonospace", 65326, "Nowarmenian", 1350, "Nsmall", 63342, "Ntilde", 209, "Ntildesmall", 63473, "Nu", 925, "O", 79, "OE", 338, "OEsmall", 63226, "Oacute", 211, "Oacutesmall", 63475, "Obarredcyrillic", 1256, "Obarreddieresiscyrillic", 1258, "Obreve", 334, "Ocaron", 465, "Ocenteredtilde", 415, "Ocircle", 9412, "Ocircumflex", 212, "Ocircumflexacute", 7888, "Ocircumflexdotbelow", 7896, "Ocircumflexgrave", 7890, "Ocircumflexhookabove", 7892, "Ocircumflexsmall", 63476, "Ocircumflextilde", 7894, "Ocyrillic", 1054, "Odblacute", 336, "Odblgrave", 524, "Odieresis", 214, "Odieresiscyrillic", 1254, "Odieresissmall", 63478, "Odotbelow", 7884, "Ogoneksmall", 63227, "Ograve", 210, "Ogravesmall", 63474, "Oharmenian", 1365, "Ohm", 8486, "Ohookabove", 7886, "Ohorn", 416, "Ohornacute", 7898, "Ohorndotbelow", 7906, "Ohorngrave", 7900, "Ohornhookabove", 7902, "Ohorntilde", 7904, "Ohungarumlaut", 336, "Oi", 418, "Oinvertedbreve", 526, "Omacron", 332, "Omacronacute", 7762, "Omacrongrave", 7760, "Omega", 8486, "Omegacyrillic", 1120, "Omegagreek", 937, "Omegaroundcyrillic", 1146, "Omegatitlocyrillic", 1148, "Omegatonos", 911, "Omicron", 927, "Omicrontonos", 908, "Omonospace", 65327, "Oneroman", 8544, "Oogonek", 490, "Oogonekmacron", 492, "Oopen", 390, "Oslash", 216, "Oslashacute", 510, "Oslashsmall", 63480, "Osmall", 63343, "Ostrokeacute", 510, "Otcyrillic", 1150, "Otilde", 213, "Otildeacute", 7756, "Otildedieresis", 7758, "Otildesmall", 63477, "P", 80, "Pacute", 7764, "Pcircle", 9413, "Pdotaccent", 7766, "Pecyrillic", 1055, "Peharmenian", 1354, "Pemiddlehookcyrillic", 1190, "Phi", 934, "Phook", 420, "Pi", 928, "Piwrarmenian", 1363, "Pmonospace", 65328, "Psi", 936, "Psicyrillic", 1136, "Psmall", 63344, "Q", 81, "Qcircle", 9414, "Qmonospace", 65329, "Qsmall", 63345, "R", 82, "Raarmenian", 1356, "Racute", 340, "Rcaron", 344, "Rcedilla", 342, "Rcircle", 9415, "Rcommaaccent", 342, "Rdblgrave", 528, "Rdotaccent", 7768, "Rdotbelow", 7770, "Rdotbelowmacron", 7772, "Reharmenian", 1360, "Rfraktur", 8476, "Rho", 929, "Ringsmall", 63228, "Rinvertedbreve", 530, "Rlinebelow", 7774, "Rmonospace", 65330, "Rsmall", 63346, "Rsmallinverted", 641, "Rsmallinvertedsuperior", 694, "S", 83, "SF010000", 9484, "SF020000", 9492, "SF030000", 9488, "SF040000", 9496, "SF050000", 9532, "SF060000", 9516, "SF070000", 9524, "SF080000", 9500, "SF090000", 9508, "SF100000", 9472, "SF110000", 9474, "SF190000", 9569, "SF200000", 9570, "SF210000", 9558, "SF220000", 9557, "SF230000", 9571, "SF240000", 9553, "SF250000", 9559, "SF260000", 9565, "SF270000", 9564, "SF280000", 9563, "SF360000", 9566, "SF370000", 9567, "SF380000", 9562, "SF390000", 9556, "SF400000", 9577, "SF410000", 9574, "SF420000", 9568, "SF430000", 9552, "SF440000", 9580, "SF450000", 9575, "SF460000", 9576, "SF470000", 9572, "SF480000", 9573, "SF490000", 9561, "SF500000", 9560, "SF510000", 9554, "SF520000", 9555, "SF530000", 9579, "SF540000", 9578, "Sacute", 346, "Sacutedotaccent", 7780, "Sampigreek", 992, "Scaron", 352, "Scarondotaccent", 7782, "Scaronsmall", 63229, "Scedilla", 350, "Schwa", 399, "Schwacyrillic", 1240, "Schwadieresiscyrillic", 1242, "Scircle", 9416, "Scircumflex", 348, "Scommaaccent", 536, "Sdotaccent", 7776, "Sdotbelow", 7778, "Sdotbelowdotaccent", 7784, "Seharmenian", 1357, "Sevenroman", 8550, "Shaarmenian", 1351, "Shacyrillic", 1064, "Shchacyrillic", 1065, "Sheicoptic", 994, "Shhacyrillic", 1210, "Shimacoptic", 1004, "Sigma", 931, "Sixroman", 8549, "Smonospace", 65331, "Softsigncyrillic", 1068, "Ssmall", 63347, "Stigmagreek", 986, "T", 84, "Tau", 932, "Tbar", 358, "Tcaron", 356, "Tcedilla", 354, "Tcircle", 9417, "Tcircumflexbelow", 7792, "Tcommaaccent", 354, "Tdotaccent", 7786, "Tdotbelow", 7788, "Tecyrillic", 1058, "Tedescendercyrillic", 1196, "Tenroman", 8553, "Tetsecyrillic", 1204, "Theta", 920, "Thook", 428, "Thorn", 222, "Thornsmall", 63486, "Threeroman", 8546, "Tildesmall", 63230, "Tiwnarmenian", 1359, "Tlinebelow", 7790, "Tmonospace", 65332, "Toarmenian", 1337, "Tonefive", 444, "Tonesix", 388, "Tonetwo", 423, "Tretroflexhook", 430, "Tsecyrillic", 1062, "Tshecyrillic", 1035, "Tsmall", 63348, "Twelveroman", 8555, "Tworoman", 8545, "U", 85, "Uacute", 218, "Uacutesmall", 63482, "Ubreve", 364, "Ucaron", 467, "Ucircle", 9418, "Ucircumflex", 219, "Ucircumflexbelow", 7798, "Ucircumflexsmall", 63483, "Ucyrillic", 1059, "Udblacute", 368, "Udblgrave", 532, "Udieresis", 220, "Udieresisacute", 471, "Udieresisbelow", 7794, "Udieresiscaron", 473, "Udieresiscyrillic", 1264, "Udieresisgrave", 475, "Udieresismacron", 469, "Udieresissmall", 63484, "Udotbelow", 7908, "Ugrave", 217, "Ugravesmall", 63481, "Uhookabove", 7910, "Uhorn", 431, "Uhornacute", 7912, "Uhorndotbelow", 7920, "Uhorngrave", 7914, "Uhornhookabove", 7916, "Uhorntilde", 7918, "Uhungarumlaut", 368, "Uhungarumlautcyrillic", 1266, "Uinvertedbreve", 534, "Ukcyrillic", 1144, "Umacron", 362, "Umacroncyrillic", 1262, "Umacrondieresis", 7802, "Umonospace", 65333, "Uogonek", 370, "Upsilon", 933, "Upsilon1", 978, "Upsilonacutehooksymbolgreek", 979, "Upsilonafrican", 433, "Upsilondieresis", 939, "Upsilondieresishooksymbolgreek", 980, "Upsilonhooksymbol", 978, "Upsilontonos", 910, "Uring", 366, "Ushortcyrillic", 1038, "Usmall", 63349, "Ustraightcyrillic", 1198, "Ustraightstrokecyrillic", 1200, "Utilde", 360, "Utildeacute", 7800, "Utildebelow", 7796, "V", 86, "Vcircle", 9419, "Vdotbelow", 7806, "Vecyrillic", 1042, "Vewarmenian", 1358, "Vhook", 434, "Vmonospace", 65334, "Voarmenian", 1352, "Vsmall", 63350, "Vtilde", 7804, "W", 87, "Wacute", 7810, "Wcircle", 9420, "Wcircumflex", 372, "Wdieresis", 7812, "Wdotaccent", 7814, "Wdotbelow", 7816, "Wgrave", 7808, "Wmonospace", 65335, "Wsmall", 63351, "X", 88, "Xcircle", 9421, "Xdieresis", 7820, "Xdotaccent", 7818, "Xeharmenian", 1341, "Xi", 926, "Xmonospace", 65336, "Xsmall", 63352, "Y", 89, "Yacute", 221, "Yacutesmall", 63485, "Yatcyrillic", 1122, "Ycircle", 9422, "Ycircumflex", 374, "Ydieresis", 376, "Ydieresissmall", 63487, "Ydotaccent", 7822, "Ydotbelow", 7924, "Yericyrillic", 1067, "Yerudieresiscyrillic", 1272, "Ygrave", 7922, "Yhook", 435, "Yhookabove", 7926, "Yiarmenian", 1349, "Yicyrillic", 1031, "Yiwnarmenian", 1362, "Ymonospace", 65337, "Ysmall", 63353, "Ytilde", 7928, "Yusbigcyrillic", 1130, "Yusbigiotifiedcyrillic", 1132, "Yuslittlecyrillic", 1126, "Yuslittleiotifiedcyrillic", 1128, "Z", 90, "Zaarmenian", 1334, "Zacute", 377, "Zcaron", 381, "Zcaronsmall", 63231, "Zcircle", 9423, "Zcircumflex", 7824, "Zdot", 379, "Zdotaccent", 379, "Zdotbelow", 7826, "Zecyrillic", 1047, "Zedescendercyrillic", 1176, "Zedieresiscyrillic", 1246, "Zeta", 918, "Zhearmenian", 1338, "Zhebrevecyrillic", 1217, "Zhecyrillic", 1046, "Zhedescendercyrillic", 1174, "Zhedieresiscyrillic", 1244, "Zlinebelow", 7828, "Zmonospace", 65338, "Zsmall", 63354, "Zstroke", 437, "a", 97, "aabengali", 2438, "aacute", 225, "aadeva", 2310, "aagujarati", 2694, "aagurmukhi", 2566, "aamatragurmukhi", 2622, "aarusquare", 13059, "aavowelsignbengali", 2494, "aavowelsigndeva", 2366, "aavowelsigngujarati", 2750, "abbreviationmarkarmenian", 1375, "abbreviationsigndeva", 2416, "abengali", 2437, "abopomofo", 12570, "abreve", 259, "abreveacute", 7855, "abrevecyrillic", 1233, "abrevedotbelow", 7863, "abrevegrave", 7857, "abrevehookabove", 7859, "abrevetilde", 7861, "acaron", 462, "acircle", 9424, "acircumflex", 226, "acircumflexacute", 7845, "acircumflexdotbelow", 7853, "acircumflexgrave", 7847, "acircumflexhookabove", 7849, "acircumflextilde", 7851, "acute", 180, "acutebelowcmb", 791, "acutecmb", 769, "acutecomb", 769, "acutedeva", 2388, "acutelowmod", 719, "acutetonecmb", 833, "acyrillic", 1072, "adblgrave", 513, "addakgurmukhi", 2673, "adeva", 2309, "adieresis", 228, "adieresiscyrillic", 1235, "adieresismacron", 479, "adotbelow", 7841, "adotmacron", 481, "ae", 230, "aeacute", 509, "aekorean", 12624, "aemacron", 483, "afii00208", 8213, "afii08941", 8356, "afii10017", 1040, "afii10018", 1041, "afii10019", 1042, "afii10020", 1043, "afii10021", 1044, "afii10022", 1045, "afii10023", 1025, "afii10024", 1046, "afii10025", 1047, "afii10026", 1048, "afii10027", 1049, "afii10028", 1050, "afii10029", 1051, "afii10030", 1052, "afii10031", 1053, "afii10032", 1054, "afii10033", 1055, "afii10034", 1056, "afii10035", 1057, "afii10036", 1058, "afii10037", 1059, "afii10038", 1060, "afii10039", 1061, "afii10040", 1062, "afii10041", 1063, "afii10042", 1064, "afii10043", 1065, "afii10044", 1066, "afii10045", 1067, "afii10046", 1068, "afii10047", 1069, "afii10048", 1070, "afii10049", 1071, "afii10050", 1168, "afii10051", 1026, "afii10052", 1027, "afii10053", 1028, "afii10054", 1029, "afii10055", 1030, "afii10056", 1031, "afii10057", 1032, "afii10058", 1033, "afii10059", 1034, "afii10060", 1035, "afii10061", 1036, "afii10062", 1038, "afii10063", 63172, "afii10064", 63173, "afii10065", 1072, "afii10066", 1073, "afii10067", 1074, "afii10068", 1075, "afii10069", 1076, "afii10070", 1077, "afii10071", 1105, "afii10072", 1078, "afii10073", 1079, "afii10074", 1080, "afii10075", 1081, "afii10076", 1082, "afii10077", 1083, "afii10078", 1084, "afii10079", 1085, "afii10080", 1086, "afii10081", 1087, "afii10082", 1088, "afii10083", 1089, "afii10084", 1090, "afii10085", 1091, "afii10086", 1092, "afii10087", 1093, "afii10088", 1094, "afii10089", 1095, "afii10090", 1096, "afii10091", 1097, "afii10092", 1098, "afii10093", 1099, "afii10094", 1100, "afii10095", 1101, "afii10096", 1102, "afii10097", 1103, "afii10098", 1169, "afii10099", 1106, "afii10100", 1107, "afii10101", 1108, "afii10102", 1109, "afii10103", 1110, "afii10104", 1111, "afii10105", 1112, "afii10106", 1113, "afii10107", 1114, "afii10108", 1115, "afii10109", 1116, "afii10110", 1118, "afii10145", 1039, "afii10146", 1122, "afii10147", 1138, "afii10148", 1140, "afii10192", 63174, "afii10193", 1119, "afii10194", 1123, "afii10195", 1139, "afii10196", 1141, "afii10831", 63175, "afii10832", 63176, "afii10846", 1241, "afii299", 8206, "afii300", 8207, "afii301", 8205, "afii57381", 1642, "afii57388", 1548, "afii57392", 1632, "afii57393", 1633, "afii57394", 1634, "afii57395", 1635, "afii57396", 1636, "afii57397", 1637, "afii57398", 1638, "afii57399", 1639, "afii57400", 1640, "afii57401", 1641, "afii57403", 1563, "afii57407", 1567, "afii57409", 1569, "afii57410", 1570, "afii57411", 1571, "afii57412", 1572, "afii57413", 1573, "afii57414", 1574, "afii57415", 1575, "afii57416", 1576, "afii57417", 1577, "afii57418", 1578, "afii57419", 1579, "afii57420", 1580, "afii57421", 1581, "afii57422", 1582, "afii57423", 1583, "afii57424", 1584, "afii57425", 1585, "afii57426", 1586, "afii57427", 1587, "afii57428", 1588, "afii57429", 1589, "afii57430", 1590, "afii57431", 1591, "afii57432", 1592, "afii57433", 1593, "afii57434", 1594, "afii57440", 1600, "afii57441", 1601, "afii57442", 1602, "afii57443", 1603, "afii57444", 1604, "afii57445", 1605, "afii57446", 1606, "afii57448", 1608, "afii57449", 1609, "afii57450", 1610, "afii57451", 1611, "afii57452", 1612, "afii57453", 1613, "afii57454", 1614, "afii57455", 1615, "afii57456", 1616, "afii57457", 1617, "afii57458", 1618, "afii57470", 1607, "afii57505", 1700, "afii57506", 1662, "afii57507", 1670, "afii57508", 1688, "afii57509", 1711, "afii57511", 1657, "afii57512", 1672, "afii57513", 1681, "afii57514", 1722, "afii57519", 1746, "afii57534", 1749, "afii57636", 8362, "afii57645", 1470, "afii57658", 1475, "afii57664", 1488, "afii57665", 1489, "afii57666", 1490, "afii57667", 1491, "afii57668", 1492, "afii57669", 1493, "afii57670", 1494, "afii57671", 1495, "afii57672", 1496, "afii57673", 1497, "afii57674", 1498, "afii57675", 1499, "afii57676", 1500, "afii57677", 1501, "afii57678", 1502, "afii57679", 1503, "afii57680", 1504, "afii57681", 1505, "afii57682", 1506, "afii57683", 1507, "afii57684", 1508, "afii57685", 1509, "afii57686", 1510, "afii57687", 1511, "afii57688", 1512, "afii57689", 1513, "afii57690", 1514, "afii57694", 64298, "afii57695", 64299, "afii57700", 64331, "afii57705", 64287, "afii57716", 1520, "afii57717", 1521, "afii57718", 1522, "afii57723", 64309, "afii57793", 1460, "afii57794", 1461, "afii57795", 1462, "afii57796", 1467, "afii57797", 1464, "afii57798", 1463, "afii57799", 1456, "afii57800", 1458, "afii57801", 1457, "afii57802", 1459, "afii57803", 1474, "afii57804", 1473, "afii57806", 1465, "afii57807", 1468, "afii57839", 1469, "afii57841", 1471, "afii57842", 1472, "afii57929", 700, "afii61248", 8453, "afii61289", 8467, "afii61352", 8470, "afii61573", 8236, "afii61574", 8237, "afii61575", 8238, "afii61664", 8204, "afii63167", 1645, "afii64937", 701, "agrave", 224, "agujarati", 2693, "agurmukhi", 2565, "ahiragana", 12354, "ahookabove", 7843, "aibengali", 2448, "aibopomofo", 12574, "aideva", 2320, "aiecyrillic", 1237, "aigujarati", 2704, "aigurmukhi", 2576, "aimatragurmukhi", 2632, "ainarabic", 1593, "ainfinalarabic", 65226, "aininitialarabic", 65227, "ainmedialarabic", 65228, "ainvertedbreve", 515, "aivowelsignbengali", 2504, "aivowelsigndeva", 2376, "aivowelsigngujarati", 2760, "akatakana", 12450, "akatakanahalfwidth", 65393, "akorean", 12623, "alef", 1488, "alefarabic", 1575, "alefdageshhebrew", 64304, "aleffinalarabic", 65166, "alefhamzaabovearabic", 1571, "alefhamzaabovefinalarabic", 65156, "alefhamzabelowarabic", 1573, "alefhamzabelowfinalarabic", 65160, "alefhebrew", 1488, "aleflamedhebrew", 64335, "alefmaddaabovearabic", 1570, "alefmaddaabovefinalarabic", 65154, "alefmaksuraarabic", 1609, "alefmaksurafinalarabic", 65264, "alefmaksurainitialarabic", 65267, "alefmaksuramedialarabic", 65268, "alefpatahhebrew", 64302, "alefqamatshebrew", 64303, "aleph", 8501, "allequal", 8780, "alpha", 945, "alphatonos", 940, "amacron", 257, "amonospace", 65345, "ampersand", 38, "ampersandmonospace", 65286, "ampersandsmall", 63270, "amsquare", 13250, "anbopomofo", 12578, "angbopomofo", 12580, "angbracketleft", 12296, "angbracketright", 12297, "angkhankhuthai", 3674, "angle", 8736, "anglebracketleft", 12296, "anglebracketleftvertical", 65087, "anglebracketright", 12297, "anglebracketrightvertical", 65088, "angleleft", 9001, "angleright", 9002, "angstrom", 8491, "anoteleia", 903, "anudattadeva", 2386, "anusvarabengali", 2434, "anusvaradeva", 2306, "anusvaragujarati", 2690, "aogonek", 261, "apaatosquare", 13056, "aparen", 9372, "apostrophearmenian", 1370, "apostrophemod", 700, "apple", 63743, "approaches", 8784, "approxequal", 8776, "approxequalorimage", 8786, "approximatelyequal", 8773, "araeaekorean", 12686, "araeakorean", 12685, "arc", 8978, "arighthalfring", 7834, "aring", 229, "aringacute", 507, "aringbelow", 7681, "arrowboth", 8596, "arrowdashdown", 8675, "arrowdashleft", 8672, "arrowdashright", 8674, "arrowdashup", 8673, "arrowdblboth", 8660, "arrowdbldown", 8659, "arrowdblleft", 8656, "arrowdblright", 8658, "arrowdblup", 8657, "arrowdown", 8595, "arrowdownleft", 8601, "arrowdownright", 8600, "arrowdownwhite", 8681, "arrowheaddownmod", 709, "arrowheadleftmod", 706, "arrowheadrightmod", 707, "arrowheadupmod", 708, "arrowhorizex", 63719, "arrowleft", 8592, "arrowleftdbl", 8656, "arrowleftdblstroke", 8653, "arrowleftoverright", 8646, "arrowleftwhite", 8678, "arrowright", 8594, "arrowrightdblstroke", 8655, "arrowrightheavy", 10142, "arrowrightoverleft", 8644, "arrowrightwhite", 8680, "arrowtableft", 8676, "arrowtabright", 8677, "arrowup", 8593, "arrowupdn", 8597, "arrowupdnbse", 8616, "arrowupdownbase", 8616, "arrowupleft", 8598, "arrowupleftofdown", 8645, "arrowupright", 8599, "arrowupwhite", 8679, "arrowvertex", 63718, "asciicircum", 94, "asciicircummonospace", 65342, "asciitilde", 126, "asciitildemonospace", 65374, "ascript", 593, "ascriptturned", 594, "asmallhiragana", 12353, "asmallkatakana", 12449, "asmallkatakanahalfwidth", 65383, "asterisk", 42, "asteriskaltonearabic", 1645, "asteriskarabic", 1645, "asteriskmath", 8727, "asteriskmonospace", 65290, "asterisksmall", 65121, "asterism", 8258, "asuperior", 63209, "asymptoticallyequal", 8771, "at", 64, "atilde", 227, "atmonospace", 65312, "atsmall", 65131, "aturned", 592, "aubengali", 2452, "aubopomofo", 12576, "audeva", 2324, "augujarati", 2708, "augurmukhi", 2580, "aulengthmarkbengali", 2519, "aumatragurmukhi", 2636, "auvowelsignbengali", 2508, "auvowelsigndeva", 2380, "auvowelsigngujarati", 2764, "avagrahadeva", 2365, "aybarmenian", 1377, "ayin", 1506, "ayinaltonehebrew", 64288, "ayinhebrew", 1506, "b", 98, "babengali", 2476, "backslash", 92, "backslashmonospace", 65340, "badeva", 2348, "bagujarati", 2732, "bagurmukhi", 2604, "bahiragana", 12400, "bahtthai", 3647, "bakatakana", 12496, "bar", 124, "barmonospace", 65372, "bbopomofo", 12549, "bcircle", 9425, "bdotaccent", 7683, "bdotbelow", 7685, "beamedsixteenthnotes", 9836, "because", 8757, "becyrillic", 1073, "beharabic", 1576, "behfinalarabic", 65168, "behinitialarabic", 65169, "behiragana", 12409, "behmedialarabic", 65170, "behmeeminitialarabic", 64671, "behmeemisolatedarabic", 64520, "behnoonfinalarabic", 64621, "bekatakana", 12505, "benarmenian", 1378, "bet", 1489, "beta", 946, "betasymbolgreek", 976, "betdagesh", 64305, "betdageshhebrew", 64305, "bethebrew", 1489, "betrafehebrew", 64332, "bhabengali", 2477, "bhadeva", 2349, "bhagujarati", 2733, "bhagurmukhi", 2605, "bhook", 595, "bihiragana", 12403, "bikatakana", 12499, "bilabialclick", 664, "bindigurmukhi", 2562, "birusquare", 13105, "blackcircle", 9679, "blackdiamond", 9670, "blackdownpointingtriangle", 9660, "blackleftpointingpointer", 9668, "blackleftpointingtriangle", 9664, "blacklenticularbracketleft", 12304, "blacklenticularbracketleftvertical", 65083, "blacklenticularbracketright", 12305, "blacklenticularbracketrightvertical", 65084, "blacklowerlefttriangle", 9699, "blacklowerrighttriangle", 9698, "blackrectangle", 9644, "blackrightpointingpointer", 9658, "blackrightpointingtriangle", 9654, "blacksmallsquare", 9642, "blacksmilingface", 9787, "blacksquare", 9632, "blackstar", 9733, "blackupperlefttriangle", 9700, "blackupperrighttriangle", 9701, "blackuppointingsmalltriangle", 9652, "blackuppointingtriangle", 9650, "blank", 9251, "blinebelow", 7687, "block", 9608, "bmonospace", 65346, "bobaimaithai", 3610, "bohiragana", 12412, "bokatakana", 12508, "bparen", 9373, "bqsquare", 13251, "braceex", 63732, "braceleft", 123, "braceleftbt", 63731, "braceleftmid", 63730, "braceleftmonospace", 65371, "braceleftsmall", 65115, "bracelefttp", 63729, "braceleftvertical", 65079, "braceright", 125, "bracerightbt", 63742, "bracerightmid", 63741, "bracerightmonospace", 65373, "bracerightsmall", 65116, "bracerighttp", 63740, "bracerightvertical", 65080, "bracketleft", 91, "bracketleftbt", 63728, "bracketleftex", 63727, "bracketleftmonospace", 65339, "bracketlefttp", 63726, "bracketright", 93, "bracketrightbt", 63739, "bracketrightex", 63738, "bracketrightmonospace", 65341, "bracketrighttp", 63737, "breve", 728, "brevebelowcmb", 814, "brevecmb", 774, "breveinvertedbelowcmb", 815, "breveinvertedcmb", 785, "breveinverteddoublecmb", 865, "bridgebelowcmb", 810, "bridgeinvertedbelowcmb", 826, "brokenbar", 166, "bstroke", 384, "bsuperior", 63210, "btopbar", 387, "buhiragana", 12406, "bukatakana", 12502, "bullet", 8226, "bulletinverse", 9688, "bulletoperator", 8729, "bullseye", 9678, "c", 99, "caarmenian", 1390, "cabengali", 2458, "cacute", 263, "cadeva", 2330, "cagujarati", 2714, "cagurmukhi", 2586, "calsquare", 13192, "candrabindubengali", 2433, "candrabinducmb", 784, "candrabindudeva", 2305, "candrabindugujarati", 2689, "capslock", 8682, "careof", 8453, "caron", 711, "caronbelowcmb", 812, "caroncmb", 780, "carriagereturn", 8629, "cbopomofo", 12568, "ccaron", 269, "ccedilla", 231, "ccedillaacute", 7689, "ccircle", 9426, "ccircumflex", 265, "ccurl", 597, "cdot", 267, "cdotaccent", 267, "cdsquare", 13253, "cedilla", 184, "cedillacmb", 807, "cent", 162, "centigrade", 8451, "centinferior", 63199, "centmonospace", 65504, "centoldstyle", 63394, "centsuperior", 63200, "chaarmenian", 1401, "chabengali", 2459, "chadeva", 2331, "chagujarati", 2715, "chagurmukhi", 2587, "chbopomofo", 12564, "cheabkhasiancyrillic", 1213, "checkmark", 10003, "checyrillic", 1095, "chedescenderabkhasiancyrillic", 1215, "chedescendercyrillic", 1207, "chedieresiscyrillic", 1269, "cheharmenian", 1395, "chekhakassiancyrillic", 1228, "cheverticalstrokecyrillic", 1209, "chi", 967, "chieuchacirclekorean", 12919, "chieuchaparenkorean", 12823, "chieuchcirclekorean", 12905, "chieuchkorean", 12618, "chieuchparenkorean", 12809, "chochangthai", 3594, "chochanthai", 3592, "chochingthai", 3593, "chochoethai", 3596, "chook", 392, "cieucacirclekorean", 12918, "cieucaparenkorean", 12822, "cieuccirclekorean", 12904, "cieuckorean", 12616, "cieucparenkorean", 12808, "cieucuparenkorean", 12828, "circle", 9675, "circlecopyrt", 169, "circlemultiply", 8855, "circleot", 8857, "circleplus", 8853, "circlepostalmark", 12342, "circlewithlefthalfblack", 9680, "circlewithrighthalfblack", 9681, "circumflex", 710, "circumflexbelowcmb", 813, "circumflexcmb", 770, "clear", 8999, "clickalveolar", 450, "clickdental", 448, "clicklateral", 449, "clickretroflex", 451, "club", 9827, "clubsuitblack", 9827, "clubsuitwhite", 9831, "cmcubedsquare", 13220, "cmonospace", 65347, "cmsquaredsquare", 13216, "coarmenian", 1409, "colon", 58, "colonmonetary", 8353, "colonmonospace", 65306, "colonsign", 8353, "colonsmall", 65109, "colontriangularhalfmod", 721, "colontriangularmod", 720, "comma", 44, "commaabovecmb", 787, "commaaboverightcmb", 789, "commaaccent", 63171, "commaarabic", 1548, "commaarmenian", 1373, "commainferior", 63201, "commamonospace", 65292, "commareversedabovecmb", 788, "commareversedmod", 701, "commasmall", 65104, "commasuperior", 63202, "commaturnedabovecmb", 786, "commaturnedmod", 699, "compass", 9788, "congruent", 8773, "contourintegral", 8750, "control", 8963, "controlACK", 6, "controlBEL", 7, "controlBS", 8, "controlCAN", 24, "controlCR", 13, "controlDC1", 17, "controlDC2", 18, "controlDC3", 19, "controlDC4", 20, "controlDEL", 127, "controlDLE", 16, "controlEM", 25, "controlENQ", 5, "controlEOT", 4, "controlESC", 27, "controlETB", 23, "controlETX", 3, "controlFF", 12, "controlFS", 28, "controlGS", 29, "controlHT", 9, "controlLF", 10, "controlNAK", 21, "controlNULL", 0, "controlRS", 30, "controlSI", 15, "controlSO", 14, "controlSOT", 2, "controlSTX", 1, "controlSUB", 26, "controlSYN", 22, "controlUS", 31, "controlVT", 11, "copyright", 169, "copyrightsans", 63721, "copyrightserif", 63193, "cornerbracketleft", 12300, "cornerbracketlefthalfwidth", 65378, "cornerbracketleftvertical", 65089, "cornerbracketright", 12301, "cornerbracketrighthalfwidth", 65379, "cornerbracketrightvertical", 65090, "corporationsquare", 13183, "cosquare", 13255, "coverkgsquare", 13254, "cparen", 9374, "cruzeiro", 8354, "cstretched", 663, "curlyand", 8911, "curlyor", 8910, "currency", 164, "cyrBreve", 63185, "cyrFlex", 63186, "cyrbreve", 63188, "cyrflex", 63189, "d", 100, "daarmenian", 1380, "dabengali", 2470, "dadarabic", 1590, "dadeva", 2342, "dadfinalarabic", 65214, "dadinitialarabic", 65215, "dadmedialarabic", 65216, "dagesh", 1468, "dageshhebrew", 1468, "dagger", 8224, "daggerdbl", 8225, "dagujarati", 2726, "dagurmukhi", 2598, "dahiragana", 12384, "dakatakana", 12480, "dalarabic", 1583, "dalet", 1491, "daletdagesh", 64307, "daletdageshhebrew", 64307, "dalethebrew", 1491, "dalfinalarabic", 65194, "dammaarabic", 1615, "dammalowarabic", 1615, "dammatanaltonearabic", 1612, "dammatanarabic", 1612, "danda", 2404, "dargahebrew", 1447, "dargalefthebrew", 1447, "dasiapneumatacyrilliccmb", 1157, "dblGrave", 63187, "dblanglebracketleft", 12298, "dblanglebracketleftvertical", 65085, "dblanglebracketright", 12299, "dblanglebracketrightvertical", 65086, "dblarchinvertedbelowcmb", 811, "dblarrowleft", 8660, "dblarrowright", 8658, "dbldanda", 2405, "dblgrave", 63190, "dblgravecmb", 783, "dblintegral", 8748, "dbllowline", 8215, "dbllowlinecmb", 819, "dbloverlinecmb", 831, "dblprimemod", 698, "dblverticalbar", 8214, "dblverticallineabovecmb", 782, "dbopomofo", 12553, "dbsquare", 13256, "dcaron", 271, "dcedilla", 7697, "dcircle", 9427, "dcircumflexbelow", 7699, "dcroat", 273, "ddabengali", 2465, "ddadeva", 2337, "ddagujarati", 2721, "ddagurmukhi", 2593, "ddalarabic", 1672, "ddalfinalarabic", 64393, "dddhadeva", 2396, "ddhabengali", 2466, "ddhadeva", 2338, "ddhagujarati", 2722, "ddhagurmukhi", 2594, "ddotaccent", 7691, "ddotbelow", 7693, "decimalseparatorarabic", 1643, "decimalseparatorpersian", 1643, "decyrillic", 1076, "degree", 176, "dehihebrew", 1453, "dehiragana", 12391, "deicoptic", 1007, "dekatakana", 12487, "deleteleft", 9003, "deleteright", 8998, "delta", 948, "deltaturned", 397, "denominatorminusonenumeratorbengali", 2552, "dezh", 676, "dhabengali", 2471, "dhadeva", 2343, "dhagujarati", 2727, "dhagurmukhi", 2599, "dhook", 599, "dialytikatonos", 901, "dialytikatonoscmb", 836, "diamond", 9830, "diamondsuitwhite", 9826, "dieresis", 168, "dieresisacute", 63191, "dieresisbelowcmb", 804, "dieresiscmb", 776, "dieresisgrave", 63192, "dieresistonos", 901, "dihiragana", 12386, "dikatakana", 12482, "dittomark", 12291, "divide", 247, "divides", 8739, "divisionslash", 8725, "djecyrillic", 1106, "dkshade", 9619, "dlinebelow", 7695, "dlsquare", 13207, "dmacron", 273, "dmonospace", 65348, "dnblock", 9604, "dochadathai", 3598, "dodekthai", 3604, "dohiragana", 12393, "dokatakana", 12489, "dollar", 36, "dollarinferior", 63203, "dollarmonospace", 65284, "dollaroldstyle", 63268, "dollarsmall", 65129, "dollarsuperior", 63204, "dong", 8363, "dorusquare", 13094, "dotaccent", 729, "dotaccentcmb", 775, "dotbelowcmb", 803, "dotbelowcomb", 803, "dotkatakana", 12539, "dotlessi", 305, "dotlessj", 63166, "dotlessjstrokehook", 644, "dotmath", 8901, "dottedcircle", 9676, "doubleyodpatah", 64287, "doubleyodpatahhebrew", 64287, "downtackbelowcmb", 798, "downtackmod", 725, "dparen", 9375, "dsuperior", 63211, "dtail", 598, "dtopbar", 396, "duhiragana", 12389, "dukatakana", 12485, "dz", 499, "dzaltone", 675, "dzcaron", 454, "dzcurl", 677, "dzeabkhasiancyrillic", 1249, "dzecyrillic", 1109, "dzhecyrillic", 1119, "e", 101, "eacute", 233, "earth", 9793, "ebengali", 2447, "ebopomofo", 12572, "ebreve", 277, "ecandradeva", 2317, "ecandragujarati", 2701, "ecandravowelsigndeva", 2373, "ecandravowelsigngujarati", 2757, "ecaron", 283, "ecedillabreve", 7709, "echarmenian", 1381, "echyiwnarmenian", 1415, "ecircle", 9428, "ecircumflex", 234, "ecircumflexacute", 7871, "ecircumflexbelow", 7705, "ecircumflexdotbelow", 7879, "ecircumflexgrave", 7873, "ecircumflexhookabove", 7875, "ecircumflextilde", 7877, "ecyrillic", 1108, "edblgrave", 517, "edeva", 2319, "edieresis", 235, "edot", 279, "edotaccent", 279, "edotbelow", 7865, "eegurmukhi", 2575, "eematragurmukhi", 2631, "efcyrillic", 1092, "egrave", 232, "egujarati", 2703, "eharmenian", 1383, "ehbopomofo", 12573, "ehiragana", 12360, "ehookabove", 7867, "eibopomofo", 12575, "eight", 56, "eightarabic", 1640, "eightbengali", 2542, "eightcircle", 9319, "eightcircleinversesansserif", 10129, "eightdeva", 2414, "eighteencircle", 9329, "eighteenparen", 9349, "eighteenperiod", 9369, "eightgujarati", 2798, "eightgurmukhi", 2670, "eighthackarabic", 1640, "eighthangzhou", 12328, "eighthnotebeamed", 9835, "eightideographicparen", 12839, "eightinferior", 8328, "eightmonospace", 65304, "eightoldstyle", 63288, "eightparen", 9339, "eightperiod", 9359, "eightpersian", 1784, "eightroman", 8567, "eightsuperior", 8312, "eightthai", 3672, "einvertedbreve", 519, "eiotifiedcyrillic", 1125, "ekatakana", 12456, "ekatakanahalfwidth", 65396, "ekonkargurmukhi", 2676, "ekorean", 12628, "elcyrillic", 1083, "element", 8712, "elevencircle", 9322, "elevenparen", 9342, "elevenperiod", 9362, "elevenroman", 8570, "ellipsis", 8230, "ellipsisvertical", 8942, "emacron", 275, "emacronacute", 7703, "emacrongrave", 7701, "emcyrillic", 1084, "emdash", 8212, "emdashvertical", 65073, "emonospace", 65349, "emphasismarkarmenian", 1371, "emptyset", 8709, "enbopomofo", 12579, "encyrillic", 1085, "endash", 8211, "endashvertical", 65074, "endescendercyrillic", 1187, "eng", 331, "engbopomofo", 12581, "enghecyrillic", 1189, "enhookcyrillic", 1224, "enspace", 8194, "eogonek", 281, "eokorean", 12627, "eopen", 603, "eopenclosed", 666, "eopenreversed", 604, "eopenreversedclosed", 606, "eopenreversedhook", 605, "eparen", 9376, "epsilon", 949, "epsilontonos", 941, "equal", 61, "equalmonospace", 65309, "equalsmall", 65126, "equalsuperior", 8316, "equivalence", 8801, "erbopomofo", 12582, "ercyrillic", 1088, "ereversed", 600, "ereversedcyrillic", 1101, "escyrillic", 1089, "esdescendercyrillic", 1195, "esh", 643, "eshcurl", 646, "eshortdeva", 2318, "eshortvowelsigndeva", 2374, "eshreversedloop", 426, "eshsquatreversed", 645, "esmallhiragana", 12359, "esmallkatakana", 12455, "esmallkatakanahalfwidth", 65386, "estimated", 8494, "esuperior", 63212, "eta", 951, "etarmenian", 1384, "etatonos", 942, "eth", 240, "etilde", 7869, "etildebelow", 7707, "etnahtafoukhhebrew", 1425, "etnahtafoukhlefthebrew", 1425, "etnahtahebrew", 1425, "etnahtalefthebrew", 1425, "eturned", 477, "eukorean", 12641, "euro", 8364, "evowelsignbengali", 2503, "evowelsigndeva", 2375, "evowelsigngujarati", 2759, "exclam", 33, "exclamarmenian", 1372, "exclamdbl", 8252, "exclamdown", 161, "exclamdownsmall", 63393, "exclammonospace", 65281, "exclamsmall", 63265, "existential", 8707, "ezh", 658, "ezhcaron", 495, "ezhcurl", 659, "ezhreversed", 441, "ezhtail", 442, "f", 102, "fadeva", 2398, "fagurmukhi", 2654, "fahrenheit", 8457, "fathaarabic", 1614, "fathalowarabic", 1614, "fathatanarabic", 1611, "fbopomofo", 12552, "fcircle", 9429, "fdotaccent", 7711, "feharabic", 1601, "feharmenian", 1414, "fehfinalarabic", 65234, "fehinitialarabic", 65235, "fehmedialarabic", 65236, "feicoptic", 997, "female", 9792, "ff", 64256, "f_f", 64256, "ffi", 64259, "ffl", 64260, "fi", 64257, "fifteencircle", 9326, "fifteenparen", 9346, "fifteenperiod", 9366, "figuredash", 8210, "filledbox", 9632, "filledrect", 9644, "finalkaf", 1498, "finalkafdagesh", 64314, "finalkafdageshhebrew", 64314, "finalkafhebrew", 1498, "finalmem", 1501, "finalmemhebrew", 1501, "finalnun", 1503, "finalnunhebrew", 1503, "finalpe", 1507, "finalpehebrew", 1507, "finaltsadi", 1509, "finaltsadihebrew", 1509, "firsttonechinese", 713, "fisheye", 9673, "fitacyrillic", 1139, "five", 53, "fivearabic", 1637, "fivebengali", 2539, "fivecircle", 9316, "fivecircleinversesansserif", 10126, "fivedeva", 2411, "fiveeighths", 8541, "fivegujarati", 2795, "fivegurmukhi", 2667, "fivehackarabic", 1637, "fivehangzhou", 12325, "fiveideographicparen", 12836, "fiveinferior", 8325, "fivemonospace", 65301, "fiveoldstyle", 63285, "fiveparen", 9336, "fiveperiod", 9356, "fivepersian", 1781, "fiveroman", 8564, "fivesuperior", 8309, "fivethai", 3669, "fl", 64258, "florin", 402, "fmonospace", 65350, "fmsquare", 13209, "fofanthai", 3615, "fofathai", 3613, "fongmanthai", 3663, "forall", 8704, "four", 52, "fourarabic", 1636, "fourbengali", 2538, "fourcircle", 9315, "fourcircleinversesansserif", 10125, "fourdeva", 2410, "fourgujarati", 2794, "fourgurmukhi", 2666, "fourhackarabic", 1636, "fourhangzhou", 12324, "fourideographicparen", 12835, "fourinferior", 8324, "fourmonospace", 65300, "fournumeratorbengali", 2551, "fouroldstyle", 63284, "fourparen", 9335, "fourperiod", 9355, "fourpersian", 1780, "fourroman", 8563, "foursuperior", 8308, "fourteencircle", 9325, "fourteenparen", 9345, "fourteenperiod", 9365, "fourthai", 3668, "fourthtonechinese", 715, "fparen", 9377, "fraction", 8260, "franc", 8355, "g", 103, "gabengali", 2455, "gacute", 501, "gadeva", 2327, "gafarabic", 1711, "gaffinalarabic", 64403, "gafinitialarabic", 64404, "gafmedialarabic", 64405, "gagujarati", 2711, "gagurmukhi", 2583, "gahiragana", 12364, "gakatakana", 12460, "gamma", 947, "gammalatinsmall", 611, "gammasuperior", 736, "gangiacoptic", 1003, "gbopomofo", 12557, "gbreve", 287, "gcaron", 487, "gcedilla", 291, "gcircle", 9430, "gcircumflex", 285, "gcommaaccent", 291, "gdot", 289, "gdotaccent", 289, "gecyrillic", 1075, "gehiragana", 12370, "gekatakana", 12466, "geometricallyequal", 8785, "gereshaccenthebrew", 1436, "gereshhebrew", 1523, "gereshmuqdamhebrew", 1437, "germandbls", 223, "gershayimaccenthebrew", 1438, "gershayimhebrew", 1524, "getamark", 12307, "ghabengali", 2456, "ghadarmenian", 1394, "ghadeva", 2328, "ghagujarati", 2712, "ghagurmukhi", 2584, "ghainarabic", 1594, "ghainfinalarabic", 65230, "ghaininitialarabic", 65231, "ghainmedialarabic", 65232, "ghemiddlehookcyrillic", 1173, "ghestrokecyrillic", 1171, "gheupturncyrillic", 1169, "ghhadeva", 2394, "ghhagurmukhi", 2650, "ghook", 608, "ghzsquare", 13203, "gihiragana", 12366, "gikatakana", 12462, "gimarmenian", 1379, "gimel", 1490, "gimeldagesh", 64306, "gimeldageshhebrew", 64306, "gimelhebrew", 1490, "gjecyrillic", 1107, "glottalinvertedstroke", 446, "glottalstop", 660, "glottalstopinverted", 662, "glottalstopmod", 704, "glottalstopreversed", 661, "glottalstopreversedmod", 705, "glottalstopreversedsuperior", 740, "glottalstopstroke", 673, "glottalstopstrokereversed", 674, "gmacron", 7713, "gmonospace", 65351, "gohiragana", 12372, "gokatakana", 12468, "gparen", 9378, "gpasquare", 13228, "gradient", 8711, "grave", 96, "gravebelowcmb", 790, "gravecmb", 768, "gravecomb", 768, "gravedeva", 2387, "gravelowmod", 718, "gravemonospace", 65344, "gravetonecmb", 832, "greater", 62, "greaterequal", 8805, "greaterequalorless", 8923, "greatermonospace", 65310, "greaterorequivalent", 8819, "greaterorless", 8823, "greateroverequal", 8807, "greatersmall", 65125, "gscript", 609, "gstroke", 485, "guhiragana", 12368, "guillemotleft", 171, "guillemotright", 187, "guilsinglleft", 8249, "guilsinglright", 8250, "gukatakana", 12464, "guramusquare", 13080, "gysquare", 13257, "h", 104, "haabkhasiancyrillic", 1193, "haaltonearabic", 1729, "habengali", 2489, "hadescendercyrillic", 1203, "hadeva", 2361, "hagujarati", 2745, "hagurmukhi", 2617, "haharabic", 1581, "hahfinalarabic", 65186, "hahinitialarabic", 65187, "hahiragana", 12399, "hahmedialarabic", 65188, "haitusquare", 13098, "hakatakana", 12495, "hakatakanahalfwidth", 65418, "halantgurmukhi", 2637, "hamzaarabic", 1569, "hamzalowarabic", 1569, "hangulfiller", 12644, "hardsigncyrillic", 1098, "harpoonleftbarbup", 8636, "harpoonrightbarbup", 8640, "hasquare", 13258, "hatafpatah", 1458, "hatafpatah16", 1458, "hatafpatah23", 1458, "hatafpatah2f", 1458, "hatafpatahhebrew", 1458, "hatafpatahnarrowhebrew", 1458, "hatafpatahquarterhebrew", 1458, "hatafpatahwidehebrew", 1458, "hatafqamats", 1459, "hatafqamats1b", 1459, "hatafqamats28", 1459, "hatafqamats34", 1459, "hatafqamatshebrew", 1459, "hatafqamatsnarrowhebrew", 1459, "hatafqamatsquarterhebrew", 1459, "hatafqamatswidehebrew", 1459, "hatafsegol", 1457, "hatafsegol17", 1457, "hatafsegol24", 1457, "hatafsegol30", 1457, "hatafsegolhebrew", 1457, "hatafsegolnarrowhebrew", 1457, "hatafsegolquarterhebrew", 1457, "hatafsegolwidehebrew", 1457, "hbar", 295, "hbopomofo", 12559, "hbrevebelow", 7723, "hcedilla", 7721, "hcircle", 9431, "hcircumflex", 293, "hdieresis", 7719, "hdotaccent", 7715, "hdotbelow", 7717, "he", 1492, "heart", 9829, "heartsuitblack", 9829, "heartsuitwhite", 9825, "hedagesh", 64308, "hedageshhebrew", 64308, "hehaltonearabic", 1729, "heharabic", 1607, "hehebrew", 1492, "hehfinalaltonearabic", 64423, "hehfinalalttwoarabic", 65258, "hehfinalarabic", 65258, "hehhamzaabovefinalarabic", 64421, "hehhamzaaboveisolatedarabic", 64420, "hehinitialaltonearabic", 64424, "hehinitialarabic", 65259, "hehiragana", 12408, "hehmedialaltonearabic", 64425, "hehmedialarabic", 65260, "heiseierasquare", 13179, "hekatakana", 12504, "hekatakanahalfwidth", 65421, "hekutaarusquare", 13110, "henghook", 615, "herutusquare", 13113, "het", 1495, "hethebrew", 1495, "hhook", 614, "hhooksuperior", 689, "hieuhacirclekorean", 12923, "hieuhaparenkorean", 12827, "hieuhcirclekorean", 12909, "hieuhkorean", 12622, "hieuhparenkorean", 12813, "hihiragana", 12402, "hikatakana", 12498, "hikatakanahalfwidth", 65419, "hiriq", 1460, "hiriq14", 1460, "hiriq21", 1460, "hiriq2d", 1460, "hiriqhebrew", 1460, "hiriqnarrowhebrew", 1460, "hiriqquarterhebrew", 1460, "hiriqwidehebrew", 1460, "hlinebelow", 7830, "hmonospace", 65352, "hoarmenian", 1392, "hohipthai", 3627, "hohiragana", 12411, "hokatakana", 12507, "hokatakanahalfwidth", 65422, "holam", 1465, "holam19", 1465, "holam26", 1465, "holam32", 1465, "holamhebrew", 1465, "holamnarrowhebrew", 1465, "holamquarterhebrew", 1465, "holamwidehebrew", 1465, "honokhukthai", 3630, "hookabovecomb", 777, "hookcmb", 777, "hookpalatalizedbelowcmb", 801, "hookretroflexbelowcmb", 802, "hoonsquare", 13122, "horicoptic", 1001, "horizontalbar", 8213, "horncmb", 795, "hotsprings", 9832, "house", 8962, "hparen", 9379, "hsuperior", 688, "hturned", 613, "huhiragana", 12405, "huiitosquare", 13107, "hukatakana", 12501, "hukatakanahalfwidth", 65420, "hungarumlaut", 733, "hungarumlautcmb", 779, "hv", 405, "hyphen", 45, "hypheninferior", 63205, "hyphenmonospace", 65293, "hyphensmall", 65123, "hyphensuperior", 63206, "hyphentwo", 8208, "i", 105, "iacute", 237, "iacyrillic", 1103, "ibengali", 2439, "ibopomofo", 12583, "ibreve", 301, "icaron", 464, "icircle", 9432, "icircumflex", 238, "icyrillic", 1110, "idblgrave", 521, "ideographearthcircle", 12943, "ideographfirecircle", 12939, "ideographicallianceparen", 12863, "ideographiccallparen", 12858, "ideographiccentrecircle", 12965, "ideographicclose", 12294, "ideographiccomma", 12289, "ideographiccommaleft", 65380, "ideographiccongratulationparen", 12855, "ideographiccorrectcircle", 12963, "ideographicearthparen", 12847, "ideographicenterpriseparen", 12861, "ideographicexcellentcircle", 12957, "ideographicfestivalparen", 12864, "ideographicfinancialcircle", 12950, "ideographicfinancialparen", 12854, "ideographicfireparen", 12843, "ideographichaveparen", 12850, "ideographichighcircle", 12964, "ideographiciterationmark", 12293, "ideographiclaborcircle", 12952, "ideographiclaborparen", 12856, "ideographicleftcircle", 12967, "ideographiclowcircle", 12966, "ideographicmedicinecircle", 12969, "ideographicmetalparen", 12846, "ideographicmoonparen", 12842, "ideographicnameparen", 12852, "ideographicperiod", 12290, "ideographicprintcircle", 12958, "ideographicreachparen", 12867, "ideographicrepresentparen", 12857, "ideographicresourceparen", 12862, "ideographicrightcircle", 12968, "ideographicsecretcircle", 12953, "ideographicselfparen", 12866, "ideographicsocietyparen", 12851, "ideographicspace", 12288, "ideographicspecialparen", 12853, "ideographicstockparen", 12849, "ideographicstudyparen", 12859, "ideographicsunparen", 12848, "ideographicsuperviseparen", 12860, "ideographicwaterparen", 12844, "ideographicwoodparen", 12845, "ideographiczero", 12295, "ideographmetalcircle", 12942, "ideographmooncircle", 12938, "ideographnamecircle", 12948, "ideographsuncircle", 12944, "ideographwatercircle", 12940, "ideographwoodcircle", 12941, "ideva", 2311, "idieresis", 239, "idieresisacute", 7727, "idieresiscyrillic", 1253, "idotbelow", 7883, "iebrevecyrillic", 1239, "iecyrillic", 1077, "ieungacirclekorean", 12917, "ieungaparenkorean", 12821, "ieungcirclekorean", 12903, "ieungkorean", 12615, "ieungparenkorean", 12807, "igrave", 236, "igujarati", 2695, "igurmukhi", 2567, "ihiragana", 12356, "ihookabove", 7881, "iibengali", 2440, "iicyrillic", 1080, "iideva", 2312, "iigujarati", 2696, "iigurmukhi", 2568, "iimatragurmukhi", 2624, "iinvertedbreve", 523, "iishortcyrillic", 1081, "iivowelsignbengali", 2496, "iivowelsigndeva", 2368, "iivowelsigngujarati", 2752, "ij", 307, "ikatakana", 12452, "ikatakanahalfwidth", 65394, "ikorean", 12643, "ilde", 732, "iluyhebrew", 1452, "imacron", 299, "imacroncyrillic", 1251, "imageorapproximatelyequal", 8787, "imatragurmukhi", 2623, "imonospace", 65353, "increment", 8710, "infinity", 8734, "iniarmenian", 1387, "integral", 8747, "integralbottom", 8993, "integralbt", 8993, "integralex", 63733, "integraltop", 8992, "integraltp", 8992, "intersection", 8745, "intisquare", 13061, "invbullet", 9688, "invcircle", 9689, "invsmileface", 9787, "iocyrillic", 1105, "iogonek", 303, "iota", 953, "iotadieresis", 970, "iotadieresistonos", 912, "iotalatin", 617, "iotatonos", 943, "iparen", 9380, "irigurmukhi", 2674, "ismallhiragana", 12355, "ismallkatakana", 12451, "ismallkatakanahalfwidth", 65384, "issharbengali", 2554, "istroke", 616, "isuperior", 63213, "iterationhiragana", 12445, "iterationkatakana", 12541, "itilde", 297, "itildebelow", 7725, "iubopomofo", 12585, "iucyrillic", 1102, "ivowelsignbengali", 2495, "ivowelsigndeva", 2367, "ivowelsigngujarati", 2751, "izhitsacyrillic", 1141, "izhitsadblgravecyrillic", 1143, "j", 106, "jaarmenian", 1393, "jabengali", 2460, "jadeva", 2332, "jagujarati", 2716, "jagurmukhi", 2588, "jbopomofo", 12560, "jcaron", 496, "jcircle", 9433, "jcircumflex", 309, "jcrossedtail", 669, "jdotlessstroke", 607, "jecyrillic", 1112, "jeemarabic", 1580, "jeemfinalarabic", 65182, "jeeminitialarabic", 65183, "jeemmedialarabic", 65184, "jeharabic", 1688, "jehfinalarabic", 64395, "jhabengali", 2461, "jhadeva", 2333, "jhagujarati", 2717, "jhagurmukhi", 2589, "jheharmenian", 1403, "jis", 12292, "jmonospace", 65354, "jparen", 9381, "jsuperior", 690, "k", 107, "kabashkircyrillic", 1185, "kabengali", 2453, "kacute", 7729, "kacyrillic", 1082, "kadescendercyrillic", 1179, "kadeva", 2325, "kaf", 1499, "kafarabic", 1603, "kafdagesh", 64315, "kafdageshhebrew", 64315, "kaffinalarabic", 65242, "kafhebrew", 1499, "kafinitialarabic", 65243, "kafmedialarabic", 65244, "kafrafehebrew", 64333, "kagujarati", 2709, "kagurmukhi", 2581, "kahiragana", 12363, "kahookcyrillic", 1220, "kakatakana", 12459, "kakatakanahalfwidth", 65398, "kappa", 954, "kappasymbolgreek", 1008, "kapyeounmieumkorean", 12657, "kapyeounphieuphkorean", 12676, "kapyeounpieupkorean", 12664, "kapyeounssangpieupkorean", 12665, "karoriisquare", 13069, "kashidaautoarabic", 1600, "kashidaautonosidebearingarabic", 1600, "kasmallkatakana", 12533, "kasquare", 13188, "kasraarabic", 1616, "kasratanarabic", 1613, "kastrokecyrillic", 1183, "katahiraprolongmarkhalfwidth", 65392, "kaverticalstrokecyrillic", 1181, "kbopomofo", 12558, "kcalsquare", 13193, "kcaron", 489, "kcedilla", 311, "kcircle", 9434, "kcommaaccent", 311, "kdotbelow", 7731, "keharmenian", 1412, "kehiragana", 12369, "kekatakana", 12465, "kekatakanahalfwidth", 65401, "kenarmenian", 1391, "kesmallkatakana", 12534, "kgreenlandic", 312, "khabengali", 2454, "khacyrillic", 1093, "khadeva", 2326, "khagujarati", 2710, "khagurmukhi", 2582, "khaharabic", 1582, "khahfinalarabic", 65190, "khahinitialarabic", 65191, "khahmedialarabic", 65192, "kheicoptic", 999, "khhadeva", 2393, "khhagurmukhi", 2649, "khieukhacirclekorean", 12920, "khieukhaparenkorean", 12824, "khieukhcirclekorean", 12906, "khieukhkorean", 12619, "khieukhparenkorean", 12810, "khokhaithai", 3586, "khokhonthai", 3589, "khokhuatthai", 3587, "khokhwaithai", 3588, "khomutthai", 3675, "khook", 409, "khorakhangthai", 3590, "khzsquare", 13201, "kihiragana", 12365, "kikatakana", 12461, "kikatakanahalfwidth", 65399, "kiroguramusquare", 13077, "kiromeetorusquare", 13078, "kirosquare", 13076, "kiyeokacirclekorean", 12910, "kiyeokaparenkorean", 12814, "kiyeokcirclekorean", 12896, "kiyeokkorean", 12593, "kiyeokparenkorean", 12800, "kiyeoksioskorean", 12595, "kjecyrillic", 1116, "klinebelow", 7733, "klsquare", 13208, "kmcubedsquare", 13222, "kmonospace", 65355, "kmsquaredsquare", 13218, "kohiragana", 12371, "kohmsquare", 13248, "kokaithai", 3585, "kokatakana", 12467, "kokatakanahalfwidth", 65402, "kooposquare", 13086, "koppacyrillic", 1153, "koreanstandardsymbol", 12927, "koroniscmb", 835, "kparen", 9382, "kpasquare", 13226, "ksicyrillic", 1135, "ktsquare", 13263, "kturned", 670, "kuhiragana", 12367, "kukatakana", 12463, "kukatakanahalfwidth", 65400, "kvsquare", 13240, "kwsquare", 13246, "l", 108, "labengali", 2482, "lacute", 314, "ladeva", 2354, "lagujarati", 2738, "lagurmukhi", 2610, "lakkhangyaothai", 3653, "lamaleffinalarabic", 65276, "lamalefhamzaabovefinalarabic", 65272, "lamalefhamzaaboveisolatedarabic", 65271, "lamalefhamzabelowfinalarabic", 65274, "lamalefhamzabelowisolatedarabic", 65273, "lamalefisolatedarabic", 65275, "lamalefmaddaabovefinalarabic", 65270, "lamalefmaddaaboveisolatedarabic", 65269, "lamarabic", 1604, "lambda", 955, "lambdastroke", 411, "lamed", 1500, "lameddagesh", 64316, "lameddageshhebrew", 64316, "lamedhebrew", 1500, "lamfinalarabic", 65246, "lamhahinitialarabic", 64714, "laminitialarabic", 65247, "lamjeeminitialarabic", 64713, "lamkhahinitialarabic", 64715, "lamlamhehisolatedarabic", 65010, "lammedialarabic", 65248, "lammeemhahinitialarabic", 64904, "lammeeminitialarabic", 64716, "largecircle", 9711, "lbar", 410, "lbelt", 620, "lbopomofo", 12556, "lcaron", 318, "lcedilla", 316, "lcircle", 9435, "lcircumflexbelow", 7741, "lcommaaccent", 316, "ldot", 320, "ldotaccent", 320, "ldotbelow", 7735, "ldotbelowmacron", 7737, "leftangleabovecmb", 794, "lefttackbelowcmb", 792, "less", 60, "lessequal", 8804, "lessequalorgreater", 8922, "lessmonospace", 65308, "lessorequivalent", 8818, "lessorgreater", 8822, "lessoverequal", 8806, "lesssmall", 65124, "lezh", 622, "lfblock", 9612, "lhookretroflex", 621, "lira", 8356, "liwnarmenian", 1388, "lj", 457, "ljecyrillic", 1113, "ll", 63168, "lladeva", 2355, "llagujarati", 2739, "llinebelow", 7739, "llladeva", 2356, "llvocalicbengali", 2529, "llvocalicdeva", 2401, "llvocalicvowelsignbengali", 2531, "llvocalicvowelsigndeva", 2403, "lmiddletilde", 619, "lmonospace", 65356, "lmsquare", 13264, "lochulathai", 3628, "logicaland", 8743, "logicalnot", 172, "logicalnotreversed", 8976, "logicalor", 8744, "lolingthai", 3621, "longs", 383, "lowlinecenterline", 65102, "lowlinecmb", 818, "lowlinedashed", 65101, "lozenge", 9674, "lparen", 9383, "lslash", 322, "lsquare", 8467, "lsuperior", 63214, "ltshade", 9617, "luthai", 3622, "lvocalicbengali", 2444, "lvocalicdeva", 2316, "lvocalicvowelsignbengali", 2530, "lvocalicvowelsigndeva", 2402, "lxsquare", 13267, "m", 109, "mabengali", 2478, "macron", 175, "macronbelowcmb", 817, "macroncmb", 772, "macronlowmod", 717, "macronmonospace", 65507, "macute", 7743, "madeva", 2350, "magujarati", 2734, "magurmukhi", 2606, "mahapakhhebrew", 1444, "mahapakhlefthebrew", 1444, "mahiragana", 12414, "maichattawalowleftthai", 63637, "maichattawalowrightthai", 63636, "maichattawathai", 3659, "maichattawaupperleftthai", 63635, "maieklowleftthai", 63628, "maieklowrightthai", 63627, "maiekthai", 3656, "maiekupperleftthai", 63626, "maihanakatleftthai", 63620, "maihanakatthai", 3633, "maitaikhuleftthai", 63625, "maitaikhuthai", 3655, "maitholowleftthai", 63631, "maitholowrightthai", 63630, "maithothai", 3657, "maithoupperleftthai", 63629, "maitrilowleftthai", 63634, "maitrilowrightthai", 63633, "maitrithai", 3658, "maitriupperleftthai", 63632, "maiyamokthai", 3654, "makatakana", 12510, "makatakanahalfwidth", 65423, "male", 9794, "mansyonsquare", 13127, "maqafhebrew", 1470, "mars", 9794, "masoracirclehebrew", 1455, "masquare", 13187, "mbopomofo", 12551, "mbsquare", 13268, "mcircle", 9436, "mcubedsquare", 13221, "mdotaccent", 7745, "mdotbelow", 7747, "meemarabic", 1605, "meemfinalarabic", 65250, "meeminitialarabic", 65251, "meemmedialarabic", 65252, "meemmeeminitialarabic", 64721, "meemmeemisolatedarabic", 64584, "meetorusquare", 13133, "mehiragana", 12417, "meizierasquare", 13182, "mekatakana", 12513, "mekatakanahalfwidth", 65426, "mem", 1502, "memdagesh", 64318, "memdageshhebrew", 64318, "memhebrew", 1502, "menarmenian", 1396, "merkhahebrew", 1445, "merkhakefulahebrew", 1446, "merkhakefulalefthebrew", 1446, "merkhalefthebrew", 1445, "mhook", 625, "mhzsquare", 13202, "middledotkatakanahalfwidth", 65381, "middot", 183, "mieumacirclekorean", 12914, "mieumaparenkorean", 12818, "mieumcirclekorean", 12900, "mieumkorean", 12609, "mieumpansioskorean", 12656, "mieumparenkorean", 12804, "mieumpieupkorean", 12654, "mieumsioskorean", 12655, "mihiragana", 12415, "mikatakana", 12511, "mikatakanahalfwidth", 65424, "minus", 8722, "minusbelowcmb", 800, "minuscircle", 8854, "minusmod", 727, "minusplus", 8723, "minute", 8242, "miribaarusquare", 13130, "mirisquare", 13129, "mlonglegturned", 624, "mlsquare", 13206, "mmcubedsquare", 13219, "mmonospace", 65357, "mmsquaredsquare", 13215, "mohiragana", 12418, "mohmsquare", 13249, "mokatakana", 12514, "mokatakanahalfwidth", 65427, "molsquare", 13270, "momathai", 3617, "moverssquare", 13223, "moverssquaredsquare", 13224, "mparen", 9384, "mpasquare", 13227, "mssquare", 13235, "msuperior", 63215, "mturned", 623, "mu", 181, "mu1", 181, "muasquare", 13186, "muchgreater", 8811, "muchless", 8810, "mufsquare", 13196, "mugreek", 956, "mugsquare", 13197, "muhiragana", 12416, "mukatakana", 12512, "mukatakanahalfwidth", 65425, "mulsquare", 13205, "multiply", 215, "mumsquare", 13211, "munahhebrew", 1443, "munahlefthebrew", 1443, "musicalnote", 9834, "musicalnotedbl", 9835, "musicflatsign", 9837, "musicsharpsign", 9839, "mussquare", 13234, "muvsquare", 13238, "muwsquare", 13244, "mvmegasquare", 13241, "mvsquare", 13239, "mwmegasquare", 13247, "mwsquare", 13245, "n", 110, "nabengali", 2472, "nabla", 8711, "nacute", 324, "nadeva", 2344, "nagujarati", 2728, "nagurmukhi", 2600, "nahiragana", 12394, "nakatakana", 12490, "nakatakanahalfwidth", 65413, "napostrophe", 329, "nasquare", 13185, "nbopomofo", 12555, "nbspace", 160, "ncaron", 328, "ncedilla", 326, "ncircle", 9437, "ncircumflexbelow", 7755, "ncommaaccent", 326, "ndotaccent", 7749, "ndotbelow", 7751, "nehiragana", 12397, "nekatakana", 12493, "nekatakanahalfwidth", 65416, "newsheqelsign", 8362, "nfsquare", 13195, "ngabengali", 2457, "ngadeva", 2329, "ngagujarati", 2713, "ngagurmukhi", 2585, "ngonguthai", 3591, "nhiragana", 12435, "nhookleft", 626, "nhookretroflex", 627, "nieunacirclekorean", 12911, "nieunaparenkorean", 12815, "nieuncieuckorean", 12597, "nieuncirclekorean", 12897, "nieunhieuhkorean", 12598, "nieunkorean", 12596, "nieunpansioskorean", 12648, "nieunparenkorean", 12801, "nieunsioskorean", 12647, "nieuntikeutkorean", 12646, "nihiragana", 12395, "nikatakana", 12491, "nikatakanahalfwidth", 65414, "nikhahitleftthai", 63641, "nikhahitthai", 3661, "nine", 57, "ninearabic", 1641, "ninebengali", 2543, "ninecircle", 9320, "ninecircleinversesansserif", 10130, "ninedeva", 2415, "ninegujarati", 2799, "ninegurmukhi", 2671, "ninehackarabic", 1641, "ninehangzhou", 12329, "nineideographicparen", 12840, "nineinferior", 8329, "ninemonospace", 65305, "nineoldstyle", 63289, "nineparen", 9340, "nineperiod", 9360, "ninepersian", 1785, "nineroman", 8568, "ninesuperior", 8313, "nineteencircle", 9330, "nineteenparen", 9350, "nineteenperiod", 9370, "ninethai", 3673, "nj", 460, "njecyrillic", 1114, "nkatakana", 12531, "nkatakanahalfwidth", 65437, "nlegrightlong", 414, "nlinebelow", 7753, "nmonospace", 65358, "nmsquare", 13210, "nnabengali", 2467, "nnadeva", 2339, "nnagujarati", 2723, "nnagurmukhi", 2595, "nnnadeva", 2345, "nohiragana", 12398, "nokatakana", 12494, "nokatakanahalfwidth", 65417, "nonbreakingspace", 160, "nonenthai", 3603, "nonuthai", 3609, "noonarabic", 1606, "noonfinalarabic", 65254, "noonghunnaarabic", 1722, "noonghunnafinalarabic", 64415, "nooninitialarabic", 65255, "noonjeeminitialarabic", 64722, "noonjeemisolatedarabic", 64587, "noonmedialarabic", 65256, "noonmeeminitialarabic", 64725, "noonmeemisolatedarabic", 64590, "noonnoonfinalarabic", 64653, "notcontains", 8716, "notelement", 8713, "notelementof", 8713, "notequal", 8800, "notgreater", 8815, "notgreaternorequal", 8817, "notgreaternorless", 8825, "notidentical", 8802, "notless", 8814, "notlessnorequal", 8816, "notparallel", 8742, "notprecedes", 8832, "notsubset", 8836, "notsucceeds", 8833, "notsuperset", 8837, "nowarmenian", 1398, "nparen", 9385, "nssquare", 13233, "nsuperior", 8319, "ntilde", 241, "nu", 957, "nuhiragana", 12396, "nukatakana", 12492, "nukatakanahalfwidth", 65415, "nuktabengali", 2492, "nuktadeva", 2364, "nuktagujarati", 2748, "nuktagurmukhi", 2620, "numbersign", 35, "numbersignmonospace", 65283, "numbersignsmall", 65119, "numeralsigngreek", 884, "numeralsignlowergreek", 885, "numero", 8470, "nun", 1504, "nundagesh", 64320, "nundageshhebrew", 64320, "nunhebrew", 1504, "nvsquare", 13237, "nwsquare", 13243, "nyabengali", 2462, "nyadeva", 2334, "nyagujarati", 2718, "nyagurmukhi", 2590, "o", 111, "oacute", 243, "oangthai", 3629, "obarred", 629, "obarredcyrillic", 1257, "obarreddieresiscyrillic", 1259, "obengali", 2451, "obopomofo", 12571, "obreve", 335, "ocandradeva", 2321, "ocandragujarati", 2705, "ocandravowelsigndeva", 2377, "ocandravowelsigngujarati", 2761, "ocaron", 466, "ocircle", 9438, "ocircumflex", 244, "ocircumflexacute", 7889, "ocircumflexdotbelow", 7897, "ocircumflexgrave", 7891, "ocircumflexhookabove", 7893, "ocircumflextilde", 7895, "ocyrillic", 1086, "odblacute", 337, "odblgrave", 525, "odeva", 2323, "odieresis", 246, "odieresiscyrillic", 1255, "odotbelow", 7885, "oe", 339, "oekorean", 12634, "ogonek", 731, "ogonekcmb", 808, "ograve", 242, "ogujarati", 2707, "oharmenian", 1413, "ohiragana", 12362, "ohookabove", 7887, "ohorn", 417, "ohornacute", 7899, "ohorndotbelow", 7907, "ohorngrave", 7901, "ohornhookabove", 7903, "ohorntilde", 7905, "ohungarumlaut", 337, "oi", 419, "oinvertedbreve", 527, "okatakana", 12458, "okatakanahalfwidth", 65397, "okorean", 12631, "olehebrew", 1451, "omacron", 333, "omacronacute", 7763, "omacrongrave", 7761, "omdeva", 2384, "omega", 969, "omega1", 982, "omegacyrillic", 1121, "omegalatinclosed", 631, "omegaroundcyrillic", 1147, "omegatitlocyrillic", 1149, "omegatonos", 974, "omgujarati", 2768, "omicron", 959, "omicrontonos", 972, "omonospace", 65359, "one", 49, "onearabic", 1633, "onebengali", 2535, "onecircle", 9312, "onecircleinversesansserif", 10122, "onedeva", 2407, "onedotenleader", 8228, "oneeighth", 8539, "onefitted", 63196, "onegujarati", 2791, "onegurmukhi", 2663, "onehackarabic", 1633, "onehalf", 189, "onehangzhou", 12321, "oneideographicparen", 12832, "oneinferior", 8321, "onemonospace", 65297, "onenumeratorbengali", 2548, "oneoldstyle", 63281, "oneparen", 9332, "oneperiod", 9352, "onepersian", 1777, "onequarter", 188, "oneroman", 8560, "onesuperior", 185, "onethai", 3665, "onethird", 8531, "oogonek", 491, "oogonekmacron", 493, "oogurmukhi", 2579, "oomatragurmukhi", 2635, "oopen", 596, "oparen", 9386, "openbullet", 9702, "option", 8997, "ordfeminine", 170, "ordmasculine", 186, "orthogonal", 8735, "oshortdeva", 2322, "oshortvowelsigndeva", 2378, "oslash", 248, "oslashacute", 511, "osmallhiragana", 12361, "osmallkatakana", 12457, "osmallkatakanahalfwidth", 65387, "ostrokeacute", 511, "osuperior", 63216, "otcyrillic", 1151, "otilde", 245, "otildeacute", 7757, "otildedieresis", 7759, "oubopomofo", 12577, "overline", 8254, "overlinecenterline", 65098, "overlinecmb", 773, "overlinedashed", 65097, "overlinedblwavy", 65100, "overlinewavy", 65099, "overscore", 175, "ovowelsignbengali", 2507, "ovowelsigndeva", 2379, "ovowelsigngujarati", 2763, "p", 112, "paampssquare", 13184, "paasentosquare", 13099, "pabengali", 2474, "pacute", 7765, "padeva", 2346, "pagedown", 8671, "pageup", 8670, "pagujarati", 2730, "pagurmukhi", 2602, "pahiragana", 12401, "paiyannoithai", 3631, "pakatakana", 12497, "palatalizationcyrilliccmb", 1156, "palochkacyrillic", 1216, "pansioskorean", 12671, "paragraph", 182, "parallel", 8741, "parenleft", 40, "parenleftaltonearabic", 64830, "parenleftbt", 63725, "parenleftex", 63724, "parenleftinferior", 8333, "parenleftmonospace", 65288, "parenleftsmall", 65113, "parenleftsuperior", 8317, "parenlefttp", 63723, "parenleftvertical", 65077, "parenright", 41, "parenrightaltonearabic", 64831, "parenrightbt", 63736, "parenrightex", 63735, "parenrightinferior", 8334, "parenrightmonospace", 65289, "parenrightsmall", 65114, "parenrightsuperior", 8318, "parenrighttp", 63734, "parenrightvertical", 65078, "partialdiff", 8706, "paseqhebrew", 1472, "pashtahebrew", 1433, "pasquare", 13225, "patah", 1463, "patah11", 1463, "patah1d", 1463, "patah2a", 1463, "patahhebrew", 1463, "patahnarrowhebrew", 1463, "patahquarterhebrew", 1463, "patahwidehebrew", 1463, "pazerhebrew", 1441, "pbopomofo", 12550, "pcircle", 9439, "pdotaccent", 7767, "pe", 1508, "pecyrillic", 1087, "pedagesh", 64324, "pedageshhebrew", 64324, "peezisquare", 13115, "pefinaldageshhebrew", 64323, "peharabic", 1662, "peharmenian", 1402, "pehebrew", 1508, "pehfinalarabic", 64343, "pehinitialarabic", 64344, "pehiragana", 12410, "pehmedialarabic", 64345, "pekatakana", 12506, "pemiddlehookcyrillic", 1191, "perafehebrew", 64334, "percent", 37, "percentarabic", 1642, "percentmonospace", 65285, "percentsmall", 65130, "period", 46, "periodarmenian", 1417, "periodcentered", 183, "periodhalfwidth", 65377, "periodinferior", 63207, "periodmonospace", 65294, "periodsmall", 65106, "periodsuperior", 63208, "perispomenigreekcmb", 834, "perpendicular", 8869, "perthousand", 8240, "peseta", 8359, "pfsquare", 13194, "phabengali", 2475, "phadeva", 2347, "phagujarati", 2731, "phagurmukhi", 2603, "phi", 966, "phi1", 981, "phieuphacirclekorean", 12922, "phieuphaparenkorean", 12826, "phieuphcirclekorean", 12908, "phieuphkorean", 12621, "phieuphparenkorean", 12812, "philatin", 632, "phinthuthai", 3642, "phisymbolgreek", 981, "phook", 421, "phophanthai", 3614, "phophungthai", 3612, "phosamphaothai", 3616, "pi", 960, "pieupacirclekorean", 12915, "pieupaparenkorean", 12819, "pieupcieuckorean", 12662, "pieupcirclekorean", 12901, "pieupkiyeokkorean", 12658, "pieupkorean", 12610, "pieupparenkorean", 12805, "pieupsioskiyeokkorean", 12660, "pieupsioskorean", 12612, "pieupsiostikeutkorean", 12661, "pieupthieuthkorean", 12663, "pieuptikeutkorean", 12659, "pihiragana", 12404, "pikatakana", 12500, "pisymbolgreek", 982, "piwrarmenian", 1411, "plus", 43, "plusbelowcmb", 799, "pluscircle", 8853, "plusminus", 177, "plusmod", 726, "plusmonospace", 65291, "plussmall", 65122, "plussuperior", 8314, "pmonospace", 65360, "pmsquare", 13272, "pohiragana", 12413, "pointingindexdownwhite", 9759, "pointingindexleftwhite", 9756, "pointingindexrightwhite", 9758, "pointingindexupwhite", 9757, "pokatakana", 12509, "poplathai", 3611, "postalmark", 12306, "postalmarkface", 12320, "pparen", 9387, "precedes", 8826, "prescription", 8478, "primemod", 697, "primereversed", 8245, "product", 8719, "projective", 8965, "prolongedkana", 12540, "propellor", 8984, "propersubset", 8834, "propersuperset", 8835, "proportion", 8759, "proportional", 8733, "psi", 968, "psicyrillic", 1137, "psilipneumatacyrilliccmb", 1158, "pssquare", 13232, "puhiragana", 12407, "pukatakana", 12503, "pvsquare", 13236, "pwsquare", 13242, "q", 113, "qadeva", 2392, "qadmahebrew", 1448, "qafarabic", 1602, "qaffinalarabic", 65238, "qafinitialarabic", 65239, "qafmedialarabic", 65240, "qamats", 1464, "qamats10", 1464, "qamats1a", 1464, "qamats1c", 1464, "qamats27", 1464, "qamats29", 1464, "qamats33", 1464, "qamatsde", 1464, "qamatshebrew", 1464, "qamatsnarrowhebrew", 1464, "qamatsqatanhebrew", 1464, "qamatsqatannarrowhebrew", 1464, "qamatsqatanquarterhebrew", 1464, "qamatsqatanwidehebrew", 1464, "qamatsquarterhebrew", 1464, "qamatswidehebrew", 1464, "qarneyparahebrew", 1439, "qbopomofo", 12561, "qcircle", 9440, "qhook", 672, "qmonospace", 65361, "qof", 1511, "qofdagesh", 64327, "qofdageshhebrew", 64327, "qofhebrew", 1511, "qparen", 9388, "quarternote", 9833, "qubuts", 1467, "qubuts18", 1467, "qubuts25", 1467, "qubuts31", 1467, "qubutshebrew", 1467, "qubutsnarrowhebrew", 1467, "qubutsquarterhebrew", 1467, "qubutswidehebrew", 1467, "question", 63, "questionarabic", 1567, "questionarmenian", 1374, "questiondown", 191, "questiondownsmall", 63423, "questiongreek", 894, "questionmonospace", 65311, "questionsmall", 63295, "quotedbl", 34, "quotedblbase", 8222, "quotedblleft", 8220, "quotedblmonospace", 65282, "quotedblprime", 12318, "quotedblprimereversed", 12317, "quotedblright", 8221, "quoteleft", 8216, "quoteleftreversed", 8219, "quotereversed", 8219, "quoteright", 8217, "quoterightn", 329, "quotesinglbase", 8218, "quotesingle", 39, "quotesinglemonospace", 65287, "r", 114, "raarmenian", 1404, "rabengali", 2480, "racute", 341, "radeva", 2352, "radical", 8730, "radicalex", 63717, "radoverssquare", 13230, "radoverssquaredsquare", 13231, "radsquare", 13229, "rafe", 1471, "rafehebrew", 1471, "ragujarati", 2736, "ragurmukhi", 2608, "rahiragana", 12425, "rakatakana", 12521, "rakatakanahalfwidth", 65431, "ralowerdiagonalbengali", 2545, "ramiddlediagonalbengali", 2544, "ramshorn", 612, "ratio", 8758, "rbopomofo", 12566, "rcaron", 345, "rcedilla", 343, "rcircle", 9441, "rcommaaccent", 343, "rdblgrave", 529, "rdotaccent", 7769, "rdotbelow", 7771, "rdotbelowmacron", 7773, "referencemark", 8251, "reflexsubset", 8838, "reflexsuperset", 8839, "registered", 174, "registersans", 63720, "registerserif", 63194, "reharabic", 1585, "reharmenian", 1408, "rehfinalarabic", 65198, "rehiragana", 12428, "rekatakana", 12524, "rekatakanahalfwidth", 65434, "resh", 1512, "reshdageshhebrew", 64328, "reshhebrew", 1512, "reversedtilde", 8765, "reviahebrew", 1431, "reviamugrashhebrew", 1431, "revlogicalnot", 8976, "rfishhook", 638, "rfishhookreversed", 639, "rhabengali", 2525, "rhadeva", 2397, "rho", 961, "rhook", 637, "rhookturned", 635, "rhookturnedsuperior", 693, "rhosymbolgreek", 1009, "rhotichookmod", 734, "rieulacirclekorean", 12913, "rieulaparenkorean", 12817, "rieulcirclekorean", 12899, "rieulhieuhkorean", 12608, "rieulkiyeokkorean", 12602, "rieulkiyeoksioskorean", 12649, "rieulkorean", 12601, "rieulmieumkorean", 12603, "rieulpansioskorean", 12652, "rieulparenkorean", 12803, "rieulphieuphkorean", 12607, "rieulpieupkorean", 12604, "rieulpieupsioskorean", 12651, "rieulsioskorean", 12605, "rieulthieuthkorean", 12606, "rieultikeutkorean", 12650, "rieulyeorinhieuhkorean", 12653, "rightangle", 8735, "righttackbelowcmb", 793, "righttriangle", 8895, "rihiragana", 12426, "rikatakana", 12522, "rikatakanahalfwidth", 65432, "ring", 730, "ringbelowcmb", 805, "ringcmb", 778, "ringhalfleft", 703, "ringhalfleftarmenian", 1369, "ringhalfleftbelowcmb", 796, "ringhalfleftcentered", 723, "ringhalfright", 702, "ringhalfrightbelowcmb", 825, "ringhalfrightcentered", 722, "rinvertedbreve", 531, "rittorusquare", 13137, "rlinebelow", 7775, "rlongleg", 636, "rlonglegturned", 634, "rmonospace", 65362, "rohiragana", 12429, "rokatakana", 12525, "rokatakanahalfwidth", 65435, "roruathai", 3619, "rparen", 9389, "rrabengali", 2524, "rradeva", 2353, "rragurmukhi", 2652, "rreharabic", 1681, "rrehfinalarabic", 64397, "rrvocalicbengali", 2528, "rrvocalicdeva", 2400, "rrvocalicgujarati", 2784, "rrvocalicvowelsignbengali", 2500, "rrvocalicvowelsigndeva", 2372, "rrvocalicvowelsigngujarati", 2756, "rsuperior", 63217, "rtblock", 9616, "rturned", 633, "rturnedsuperior", 692, "ruhiragana", 12427, "rukatakana", 12523, "rukatakanahalfwidth", 65433, "rupeemarkbengali", 2546, "rupeesignbengali", 2547, "rupiah", 63197, "ruthai", 3620, "rvocalicbengali", 2443, "rvocalicdeva", 2315, "rvocalicgujarati", 2699, "rvocalicvowelsignbengali", 2499, "rvocalicvowelsigndeva", 2371, "rvocalicvowelsigngujarati", 2755, "s", 115, "sabengali", 2488, "sacute", 347, "sacutedotaccent", 7781, "sadarabic", 1589, "sadeva", 2360, "sadfinalarabic", 65210, "sadinitialarabic", 65211, "sadmedialarabic", 65212, "sagujarati", 2744, "sagurmukhi", 2616, "sahiragana", 12373, "sakatakana", 12469, "sakatakanahalfwidth", 65403, "sallallahoualayhewasallamarabic", 65018, "samekh", 1505, "samekhdagesh", 64321, "samekhdageshhebrew", 64321, "samekhhebrew", 1505, "saraaathai", 3634, "saraaethai", 3649, "saraaimaimalaithai", 3652, "saraaimaimuanthai", 3651, "saraamthai", 3635, "saraathai", 3632, "saraethai", 3648, "saraiileftthai", 63622, "saraiithai", 3637, "saraileftthai", 63621, "saraithai", 3636, "saraothai", 3650, "saraueeleftthai", 63624, "saraueethai", 3639, "saraueleftthai", 63623, "sarauethai", 3638, "sarauthai", 3640, "sarauuthai", 3641, "sbopomofo", 12569, "scaron", 353, "scarondotaccent", 7783, "scedilla", 351, "schwa", 601, "schwacyrillic", 1241, "schwadieresiscyrillic", 1243, "schwahook", 602, "scircle", 9442, "scircumflex", 349, "scommaaccent", 537, "sdotaccent", 7777, "sdotbelow", 7779, "sdotbelowdotaccent", 7785, "seagullbelowcmb", 828, "second", 8243, "secondtonechinese", 714, "section", 167, "seenarabic", 1587, "seenfinalarabic", 65202, "seeninitialarabic", 65203, "seenmedialarabic", 65204, "segol", 1462, "segol13", 1462, "segol1f", 1462, "segol2c", 1462, "segolhebrew", 1462, "segolnarrowhebrew", 1462, "segolquarterhebrew", 1462, "segoltahebrew", 1426, "segolwidehebrew", 1462, "seharmenian", 1405, "sehiragana", 12379, "sekatakana", 12475, "sekatakanahalfwidth", 65406, "semicolon", 59, "semicolonarabic", 1563, "semicolonmonospace", 65307, "semicolonsmall", 65108, "semivoicedmarkkana", 12444, "semivoicedmarkkanahalfwidth", 65439, "sentisquare", 13090, "sentosquare", 13091, "seven", 55, "sevenarabic", 1639, "sevenbengali", 2541, "sevencircle", 9318, "sevencircleinversesansserif", 10128, "sevendeva", 2413, "seveneighths", 8542, "sevengujarati", 2797, "sevengurmukhi", 2669, "sevenhackarabic", 1639, "sevenhangzhou", 12327, "sevenideographicparen", 12838, "seveninferior", 8327, "sevenmonospace", 65303, "sevenoldstyle", 63287, "sevenparen", 9338, "sevenperiod", 9358, "sevenpersian", 1783, "sevenroman", 8566, "sevensuperior", 8311, "seventeencircle", 9328, "seventeenparen", 9348, "seventeenperiod", 9368, "seventhai", 3671, "sfthyphen", 173, "shaarmenian", 1399, "shabengali", 2486, "shacyrillic", 1096, "shaddaarabic", 1617, "shaddadammaarabic", 64609, "shaddadammatanarabic", 64606, "shaddafathaarabic", 64608, "shaddakasraarabic", 64610, "shaddakasratanarabic", 64607, "shade", 9618, "shadedark", 9619, "shadelight", 9617, "shademedium", 9618, "shadeva", 2358, "shagujarati", 2742, "shagurmukhi", 2614, "shalshelethebrew", 1427, "shbopomofo", 12565, "shchacyrillic", 1097, "sheenarabic", 1588, "sheenfinalarabic", 65206, "sheeninitialarabic", 65207, "sheenmedialarabic", 65208, "sheicoptic", 995, "sheqel", 8362, "sheqelhebrew", 8362, "sheva", 1456, "sheva115", 1456, "sheva15", 1456, "sheva22", 1456, "sheva2e", 1456, "shevahebrew", 1456, "shevanarrowhebrew", 1456, "shevaquarterhebrew", 1456, "shevawidehebrew", 1456, "shhacyrillic", 1211, "shimacoptic", 1005, "shin", 1513, "shindagesh", 64329, "shindageshhebrew", 64329, "shindageshshindot", 64300, "shindageshshindothebrew", 64300, "shindageshsindot", 64301, "shindageshsindothebrew", 64301, "shindothebrew", 1473, "shinhebrew", 1513, "shinshindot", 64298, "shinshindothebrew", 64298, "shinsindot", 64299, "shinsindothebrew", 64299, "shook", 642, "sigma", 963, "sigma1", 962, "sigmafinal", 962, "sigmalunatesymbolgreek", 1010, "sihiragana", 12375, "sikatakana", 12471, "sikatakanahalfwidth", 65404, "siluqhebrew", 1469, "siluqlefthebrew", 1469, "similar", 8764, "sindothebrew", 1474, "siosacirclekorean", 12916, "siosaparenkorean", 12820, "sioscieuckorean", 12670, "sioscirclekorean", 12902, "sioskiyeokkorean", 12666, "sioskorean", 12613, "siosnieunkorean", 12667, "siosparenkorean", 12806, "siospieupkorean", 12669, "siostikeutkorean", 12668, "six", 54, "sixarabic", 1638, "sixbengali", 2540, "sixcircle", 9317, "sixcircleinversesansserif", 10127, "sixdeva", 2412, "sixgujarati", 2796, "sixgurmukhi", 2668, "sixhackarabic", 1638, "sixhangzhou", 12326, "sixideographicparen", 12837, "sixinferior", 8326, "sixmonospace", 65302, "sixoldstyle", 63286, "sixparen", 9337, "sixperiod", 9357, "sixpersian", 1782, "sixroman", 8565, "sixsuperior", 8310, "sixteencircle", 9327, "sixteencurrencydenominatorbengali", 2553, "sixteenparen", 9347, "sixteenperiod", 9367, "sixthai", 3670, "slash", 47, "slashmonospace", 65295, "slong", 383, "slongdotaccent", 7835, "smileface", 9786, "smonospace", 65363, "sofpasuqhebrew", 1475, "softhyphen", 173, "softsigncyrillic", 1100, "sohiragana", 12381, "sokatakana", 12477, "sokatakanahalfwidth", 65407, "soliduslongoverlaycmb", 824, "solidusshortoverlaycmb", 823, "sorusithai", 3625, "sosalathai", 3624, "sosothai", 3595, "sosuathai", 3626, "space", 32, "spacehackarabic", 32, "spade", 9824, "spadesuitblack", 9824, "spadesuitwhite", 9828, "sparen", 9390, "squarebelowcmb", 827, "squarecc", 13252, "squarecm", 13213, "squarediagonalcrosshatchfill", 9641, "squarehorizontalfill", 9636, "squarekg", 13199, "squarekm", 13214, "squarekmcapital", 13262, "squareln", 13265, "squarelog", 13266, "squaremg", 13198, "squaremil", 13269, "squaremm", 13212, "squaremsquared", 13217, "squareorthogonalcrosshatchfill", 9638, "squareupperlefttolowerrightfill", 9639, "squareupperrighttolowerleftfill", 9640, "squareverticalfill", 9637, "squarewhitewithsmallblack", 9635, "srsquare", 13275, "ssabengali", 2487, "ssadeva", 2359, "ssagujarati", 2743, "ssangcieuckorean", 12617, "ssanghieuhkorean", 12677, "ssangieungkorean", 12672, "ssangkiyeokkorean", 12594, "ssangnieunkorean", 12645, "ssangpieupkorean", 12611, "ssangsioskorean", 12614, "ssangtikeutkorean", 12600, "ssuperior", 63218, "sterling", 163, "sterlingmonospace", 65505, "strokelongoverlaycmb", 822, "strokeshortoverlaycmb", 821, "subset", 8834, "subsetnotequal", 8842, "subsetorequal", 8838, "succeeds", 8827, "suchthat", 8715, "suhiragana", 12377, "sukatakana", 12473, "sukatakanahalfwidth", 65405, "sukunarabic", 1618, "summation", 8721, "sun", 9788, "superset", 8835, "supersetnotequal", 8843, "supersetorequal", 8839, "svsquare", 13276, "syouwaerasquare", 13180, "t", 116, "tabengali", 2468, "tackdown", 8868, "tackleft", 8867, "tadeva", 2340, "tagujarati", 2724, "tagurmukhi", 2596, "taharabic", 1591, "tahfinalarabic", 65218, "tahinitialarabic", 65219, "tahiragana", 12383, "tahmedialarabic", 65220, "taisyouerasquare", 13181, "takatakana", 12479, "takatakanahalfwidth", 65408, "tatweelarabic", 1600, "tau", 964, "tav", 1514, "tavdages", 64330, "tavdagesh", 64330, "tavdageshhebrew", 64330, "tavhebrew", 1514, "tbar", 359, "tbopomofo", 12554, "tcaron", 357, "tccurl", 680, "tcedilla", 355, "tcheharabic", 1670, "tchehfinalarabic", 64379, "tchehinitialarabic", 64380, "tchehmedialarabic", 64381, "tcircle", 9443, "tcircumflexbelow", 7793, "tcommaaccent", 355, "tdieresis", 7831, "tdotaccent", 7787, "tdotbelow", 7789, "tecyrillic", 1090, "tedescendercyrillic", 1197, "teharabic", 1578, "tehfinalarabic", 65174, "tehhahinitialarabic", 64674, "tehhahisolatedarabic", 64524, "tehinitialarabic", 65175, "tehiragana", 12390, "tehjeeminitialarabic", 64673, "tehjeemisolatedarabic", 64523, "tehmarbutaarabic", 1577, "tehmarbutafinalarabic", 65172, "tehmedialarabic", 65176, "tehmeeminitialarabic", 64676, "tehmeemisolatedarabic", 64526, "tehnoonfinalarabic", 64627, "tekatakana", 12486, "tekatakanahalfwidth", 65411, "telephone", 8481, "telephoneblack", 9742, "telishagedolahebrew", 1440, "telishaqetanahebrew", 1449, "tencircle", 9321, "tenideographicparen", 12841, "tenparen", 9341, "tenperiod", 9361, "tenroman", 8569, "tesh", 679, "tet", 1496, "tetdagesh", 64312, "tetdageshhebrew", 64312, "tethebrew", 1496, "tetsecyrillic", 1205, "tevirhebrew", 1435, "tevirlefthebrew", 1435, "thabengali", 2469, "thadeva", 2341, "thagujarati", 2725, "thagurmukhi", 2597, "thalarabic", 1584, "thalfinalarabic", 65196, "thanthakhatlowleftthai", 63640, "thanthakhatlowrightthai", 63639, "thanthakhatthai", 3660, "thanthakhatupperleftthai", 63638, "theharabic", 1579, "thehfinalarabic", 65178, "thehinitialarabic", 65179, "thehmedialarabic", 65180, "thereexists", 8707, "therefore", 8756, "theta", 952, "theta1", 977, "thetasymbolgreek", 977, "thieuthacirclekorean", 12921, "thieuthaparenkorean", 12825, "thieuthcirclekorean", 12907, "thieuthkorean", 12620, "thieuthparenkorean", 12811, "thirteencircle", 9324, "thirteenparen", 9344, "thirteenperiod", 9364, "thonangmonthothai", 3601, "thook", 429, "thophuthaothai", 3602, "thorn", 254, "thothahanthai", 3607, "thothanthai", 3600, "thothongthai", 3608, "thothungthai", 3606, "thousandcyrillic", 1154, "thousandsseparatorarabic", 1644, "thousandsseparatorpersian", 1644, "three", 51, "threearabic", 1635, "threebengali", 2537, "threecircle", 9314, "threecircleinversesansserif", 10124, "threedeva", 2409, "threeeighths", 8540, "threegujarati", 2793, "threegurmukhi", 2665, "threehackarabic", 1635, "threehangzhou", 12323, "threeideographicparen", 12834, "threeinferior", 8323, "threemonospace", 65299, "threenumeratorbengali", 2550, "threeoldstyle", 63283, "threeparen", 9334, "threeperiod", 9354, "threepersian", 1779, "threequarters", 190, "threequartersemdash", 63198, "threeroman", 8562, "threesuperior", 179, "threethai", 3667, "thzsquare", 13204, "tihiragana", 12385, "tikatakana", 12481, "tikatakanahalfwidth", 65409, "tikeutacirclekorean", 12912, "tikeutaparenkorean", 12816, "tikeutcirclekorean", 12898, "tikeutkorean", 12599, "tikeutparenkorean", 12802, "tilde", 732, "tildebelowcmb", 816, "tildecmb", 771, "tildecomb", 771, "tildedoublecmb", 864, "tildeoperator", 8764, "tildeoverlaycmb", 820, "tildeverticalcmb", 830, "timescircle", 8855, "tipehahebrew", 1430, "tipehalefthebrew", 1430, "tippigurmukhi", 2672, "titlocyrilliccmb", 1155, "tiwnarmenian", 1407, "tlinebelow", 7791, "tmonospace", 65364, "toarmenian", 1385, "tohiragana", 12392, "tokatakana", 12488, "tokatakanahalfwidth", 65412, "tonebarextrahighmod", 741, "tonebarextralowmod", 745, "tonebarhighmod", 742, "tonebarlowmod", 744, "tonebarmidmod", 743, "tonefive", 445, "tonesix", 389, "tonetwo", 424, "tonos", 900, "tonsquare", 13095, "topatakthai", 3599, "tortoiseshellbracketleft", 12308, "tortoiseshellbracketleftsmall", 65117, "tortoiseshellbracketleftvertical", 65081, "tortoiseshellbracketright", 12309, "tortoiseshellbracketrightsmall", 65118, "tortoiseshellbracketrightvertical", 65082, "totaothai", 3605, "tpalatalhook", 427, "tparen", 9391, "trademark", 8482, "trademarksans", 63722, "trademarkserif", 63195, "tretroflexhook", 648, "triagdn", 9660, "triaglf", 9668, "triagrt", 9658, "triagup", 9650, "ts", 678, "tsadi", 1510, "tsadidagesh", 64326, "tsadidageshhebrew", 64326, "tsadihebrew", 1510, "tsecyrillic", 1094, "tsere", 1461, "tsere12", 1461, "tsere1e", 1461, "tsere2b", 1461, "tserehebrew", 1461, "tserenarrowhebrew", 1461, "tserequarterhebrew", 1461, "tserewidehebrew", 1461, "tshecyrillic", 1115, "tsuperior", 63219, "ttabengali", 2463, "ttadeva", 2335, "ttagujarati", 2719, "ttagurmukhi", 2591, "tteharabic", 1657, "ttehfinalarabic", 64359, "ttehinitialarabic", 64360, "ttehmedialarabic", 64361, "tthabengali", 2464, "tthadeva", 2336, "tthagujarati", 2720, "tthagurmukhi", 2592, "tturned", 647, "tuhiragana", 12388, "tukatakana", 12484, "tukatakanahalfwidth", 65410, "tusmallhiragana", 12387, "tusmallkatakana", 12483, "tusmallkatakanahalfwidth", 65391, "twelvecircle", 9323, "twelveparen", 9343, "twelveperiod", 9363, "twelveroman", 8571, "twentycircle", 9331, "twentyhangzhou", 21316, "twentyparen", 9351, "twentyperiod", 9371, "two", 50, "twoarabic", 1634, "twobengali", 2536, "twocircle", 9313, "twocircleinversesansserif", 10123, "twodeva", 2408, "twodotenleader", 8229, "twodotleader", 8229, "twodotleadervertical", 65072, "twogujarati", 2792, "twogurmukhi", 2664, "twohackarabic", 1634, "twohangzhou", 12322, "twoideographicparen", 12833, "twoinferior", 8322, "twomonospace", 65298, "twonumeratorbengali", 2549, "twooldstyle", 63282, "twoparen", 9333, "twoperiod", 9353, "twopersian", 1778, "tworoman", 8561, "twostroke", 443, "twosuperior", 178, "twothai", 3666, "twothirds", 8532, "u", 117, "uacute", 250, "ubar", 649, "ubengali", 2441, "ubopomofo", 12584, "ubreve", 365, "ucaron", 468, "ucircle", 9444, "ucircumflex", 251, "ucircumflexbelow", 7799, "ucyrillic", 1091, "udattadeva", 2385, "udblacute", 369, "udblgrave", 533, "udeva", 2313, "udieresis", 252, "udieresisacute", 472, "udieresisbelow", 7795, "udieresiscaron", 474, "udieresiscyrillic", 1265, "udieresisgrave", 476, "udieresismacron", 470, "udotbelow", 7909, "ugrave", 249, "ugujarati", 2697, "ugurmukhi", 2569, "uhiragana", 12358, "uhookabove", 7911, "uhorn", 432, "uhornacute", 7913, "uhorndotbelow", 7921, "uhorngrave", 7915, "uhornhookabove", 7917, "uhorntilde", 7919, "uhungarumlaut", 369, "uhungarumlautcyrillic", 1267, "uinvertedbreve", 535, "ukatakana", 12454, "ukatakanahalfwidth", 65395, "ukcyrillic", 1145, "ukorean", 12636, "umacron", 363, "umacroncyrillic", 1263, "umacrondieresis", 7803, "umatragurmukhi", 2625, "umonospace", 65365, "underscore", 95, "underscoredbl", 8215, "underscoremonospace", 65343, "underscorevertical", 65075, "underscorewavy", 65103, "union", 8746, "universal", 8704, "uogonek", 371, "uparen", 9392, "upblock", 9600, "upperdothebrew", 1476, "upsilon", 965, "upsilondieresis", 971, "upsilondieresistonos", 944, "upsilonlatin", 650, "upsilontonos", 973, "uptackbelowcmb", 797, "uptackmod", 724, "uragurmukhi", 2675, "uring", 367, "ushortcyrillic", 1118, "usmallhiragana", 12357, "usmallkatakana", 12453, "usmallkatakanahalfwidth", 65385, "ustraightcyrillic", 1199, "ustraightstrokecyrillic", 1201, "utilde", 361, "utildeacute", 7801, "utildebelow", 7797, "uubengali", 2442, "uudeva", 2314, "uugujarati", 2698, "uugurmukhi", 2570, "uumatragurmukhi", 2626, "uuvowelsignbengali", 2498, "uuvowelsigndeva", 2370, "uuvowelsigngujarati", 2754, "uvowelsignbengali", 2497, "uvowelsigndeva", 2369, "uvowelsigngujarati", 2753, "v", 118, "vadeva", 2357, "vagujarati", 2741, "vagurmukhi", 2613, "vakatakana", 12535, "vav", 1493, "vavdagesh", 64309, "vavdagesh65", 64309, "vavdageshhebrew", 64309, "vavhebrew", 1493, "vavholam", 64331, "vavholamhebrew", 64331, "vavvavhebrew", 1520, "vavyodhebrew", 1521, "vcircle", 9445, "vdotbelow", 7807, "vecyrillic", 1074, "veharabic", 1700, "vehfinalarabic", 64363, "vehinitialarabic", 64364, "vehmedialarabic", 64365, "vekatakana", 12537, "venus", 9792, "verticalbar", 124, "verticallineabovecmb", 781, "verticallinebelowcmb", 809, "verticallinelowmod", 716, "verticallinemod", 712, "vewarmenian", 1406, "vhook", 651, "vikatakana", 12536, "viramabengali", 2509, "viramadeva", 2381, "viramagujarati", 2765, "visargabengali", 2435, "visargadeva", 2307, "visargagujarati", 2691, "vmonospace", 65366, "voarmenian", 1400, "voicediterationhiragana", 12446, "voicediterationkatakana", 12542, "voicedmarkkana", 12443, "voicedmarkkanahalfwidth", 65438, "vokatakana", 12538, "vparen", 9393, "vtilde", 7805, "vturned", 652, "vuhiragana", 12436, "vukatakana", 12532, "w", 119, "wacute", 7811, "waekorean", 12633, "wahiragana", 12431, "wakatakana", 12527, "wakatakanahalfwidth", 65436, "wakorean", 12632, "wasmallhiragana", 12430, "wasmallkatakana", 12526, "wattosquare", 13143, "wavedash", 12316, "wavyunderscorevertical", 65076, "wawarabic", 1608, "wawfinalarabic", 65262, "wawhamzaabovearabic", 1572, "wawhamzaabovefinalarabic", 65158, "wbsquare", 13277, "wcircle", 9446, "wcircumflex", 373, "wdieresis", 7813, "wdotaccent", 7815, "wdotbelow", 7817, "wehiragana", 12433, "weierstrass", 8472, "wekatakana", 12529, "wekorean", 12638, "weokorean", 12637, "wgrave", 7809, "whitebullet", 9702, "whitecircle", 9675, "whitecircleinverse", 9689, "whitecornerbracketleft", 12302, "whitecornerbracketleftvertical", 65091, "whitecornerbracketright", 12303, "whitecornerbracketrightvertical", 65092, "whitediamond", 9671, "whitediamondcontainingblacksmalldiamond", 9672, "whitedownpointingsmalltriangle", 9663, "whitedownpointingtriangle", 9661, "whiteleftpointingsmalltriangle", 9667, "whiteleftpointingtriangle", 9665, "whitelenticularbracketleft", 12310, "whitelenticularbracketright", 12311, "whiterightpointingsmalltriangle", 9657, "whiterightpointingtriangle", 9655, "whitesmallsquare", 9643, "whitesmilingface", 9786, "whitesquare", 9633, "whitestar", 9734, "whitetelephone", 9743, "whitetortoiseshellbracketleft", 12312, "whitetortoiseshellbracketright", 12313, "whiteuppointingsmalltriangle", 9653, "whiteuppointingtriangle", 9651, "wihiragana", 12432, "wikatakana", 12528, "wikorean", 12639, "wmonospace", 65367, "wohiragana", 12434, "wokatakana", 12530, "wokatakanahalfwidth", 65382, "won", 8361, "wonmonospace", 65510, "wowaenthai", 3623, "wparen", 9394, "wring", 7832, "wsuperior", 695, "wturned", 653, "wynn", 447, "x", 120, "xabovecmb", 829, "xbopomofo", 12562, "xcircle", 9447, "xdieresis", 7821, "xdotaccent", 7819, "xeharmenian", 1389, "xi", 958, "xmonospace", 65368, "xparen", 9395, "xsuperior", 739, "y", 121, "yaadosquare", 13134, "yabengali", 2479, "yacute", 253, "yadeva", 2351, "yaekorean", 12626, "yagujarati", 2735, "yagurmukhi", 2607, "yahiragana", 12420, "yakatakana", 12516, "yakatakanahalfwidth", 65428, "yakorean", 12625, "yamakkanthai", 3662, "yasmallhiragana", 12419, "yasmallkatakana", 12515, "yasmallkatakanahalfwidth", 65388, "yatcyrillic", 1123, "ycircle", 9448, "ycircumflex", 375, "ydieresis", 255, "ydotaccent", 7823, "ydotbelow", 7925, "yeharabic", 1610, "yehbarreearabic", 1746, "yehbarreefinalarabic", 64431, "yehfinalarabic", 65266, "yehhamzaabovearabic", 1574, "yehhamzaabovefinalarabic", 65162, "yehhamzaaboveinitialarabic", 65163, "yehhamzaabovemedialarabic", 65164, "yehinitialarabic", 65267, "yehmedialarabic", 65268, "yehmeeminitialarabic", 64733, "yehmeemisolatedarabic", 64600, "yehnoonfinalarabic", 64660, "yehthreedotsbelowarabic", 1745, "yekorean", 12630, "yen", 165, "yenmonospace", 65509, "yeokorean", 12629, "yeorinhieuhkorean", 12678, "yerahbenyomohebrew", 1450, "yerahbenyomolefthebrew", 1450, "yericyrillic", 1099, "yerudieresiscyrillic", 1273, "yesieungkorean", 12673, "yesieungpansioskorean", 12675, "yesieungsioskorean", 12674, "yetivhebrew", 1434, "ygrave", 7923, "yhook", 436, "yhookabove", 7927, "yiarmenian", 1397, "yicyrillic", 1111, "yikorean", 12642, "yinyang", 9775, "yiwnarmenian", 1410, "ymonospace", 65369, "yod", 1497, "yoddagesh", 64313, "yoddageshhebrew", 64313, "yodhebrew", 1497, "yodyodhebrew", 1522, "yodyodpatahhebrew", 64287, "yohiragana", 12424, "yoikorean", 12681, "yokatakana", 12520, "yokatakanahalfwidth", 65430, "yokorean", 12635, "yosmallhiragana", 12423, "yosmallkatakana", 12519, "yosmallkatakanahalfwidth", 65390, "yotgreek", 1011, "yoyaekorean", 12680, "yoyakorean", 12679, "yoyakthai", 3618, "yoyingthai", 3597, "yparen", 9396, "ypogegrammeni", 890, "ypogegrammenigreekcmb", 837, "yr", 422, "yring", 7833, "ysuperior", 696, "ytilde", 7929, "yturned", 654, "yuhiragana", 12422, "yuikorean", 12684, "yukatakana", 12518, "yukatakanahalfwidth", 65429, "yukorean", 12640, "yusbigcyrillic", 1131, "yusbigiotifiedcyrillic", 1133, "yuslittlecyrillic", 1127, "yuslittleiotifiedcyrillic", 1129, "yusmallhiragana", 12421, "yusmallkatakana", 12517, "yusmallkatakanahalfwidth", 65389, "yuyekorean", 12683, "yuyeokorean", 12682, "yyabengali", 2527, "yyadeva", 2399, "z", 122, "zaarmenian", 1382, "zacute", 378, "zadeva", 2395, "zagurmukhi", 2651, "zaharabic", 1592, "zahfinalarabic", 65222, "zahinitialarabic", 65223, "zahiragana", 12374, "zahmedialarabic", 65224, "zainarabic", 1586, "zainfinalarabic", 65200, "zakatakana", 12470, "zaqefgadolhebrew", 1429, "zaqefqatanhebrew", 1428, "zarqahebrew", 1432, "zayin", 1494, "zayindagesh", 64310, "zayindageshhebrew", 64310, "zayinhebrew", 1494, "zbopomofo", 12567, "zcaron", 382, "zcircle", 9449, "zcircumflex", 7825, "zcurl", 657, "zdot", 380, "zdotaccent", 380, "zdotbelow", 7827, "zecyrillic", 1079, "zedescendercyrillic", 1177, "zedieresiscyrillic", 1247, "zehiragana", 12380, "zekatakana", 12476, "zero", 48, "zeroarabic", 1632, "zerobengali", 2534, "zerodeva", 2406, "zerogujarati", 2790, "zerogurmukhi", 2662, "zerohackarabic", 1632, "zeroinferior", 8320, "zeromonospace", 65296, "zerooldstyle", 63280, "zeropersian", 1776, "zerosuperior", 8304, "zerothai", 3664, "zerowidthjoiner", 65279, "zerowidthnonjoiner", 8204, "zerowidthspace", 8203, "zeta", 950, "zhbopomofo", 12563, "zhearmenian", 1386, "zhebrevecyrillic", 1218, "zhecyrillic", 1078, "zhedescendercyrillic", 1175, "zhedieresiscyrillic", 1245, "zihiragana", 12376, "zikatakana", 12472, "zinorhebrew", 1454, "zlinebelow", 7829, "zmonospace", 65370, "zohiragana", 12382, "zokatakana", 12478, "zparen", 9397, "zretroflexhook", 656, "zstroke", 438, "zuhiragana", 12378, "zukatakana", 12474, ".notdef", 0, "angbracketleftbig", 9001, "angbracketleftBig", 9001, "angbracketleftbigg", 9001, "angbracketleftBigg", 9001, "angbracketrightBig", 9002, "angbracketrightbig", 9002, "angbracketrightBigg", 9002, "angbracketrightbigg", 9002, "arrowhookleft", 8618, "arrowhookright", 8617, "arrowlefttophalf", 8636, "arrowleftbothalf", 8637, "arrownortheast", 8599, "arrownorthwest", 8598, "arrowrighttophalf", 8640, "arrowrightbothalf", 8641, "arrowsoutheast", 8600, "arrowsouthwest", 8601, "backslashbig", 8726, "backslashBig", 8726, "backslashBigg", 8726, "backslashbigg", 8726, "bardbl", 8214, "bracehtipdownleft", 65079, "bracehtipdownright", 65079, "bracehtipupleft", 65080, "bracehtipupright", 65080, "braceleftBig", 123, "braceleftbig", 123, "braceleftbigg", 123, "braceleftBigg", 123, "bracerightBig", 125, "bracerightbig", 125, "bracerightbigg", 125, "bracerightBigg", 125, "bracketleftbig", 91, "bracketleftBig", 91, "bracketleftbigg", 91, "bracketleftBigg", 91, "bracketrightBig", 93, "bracketrightbig", 93, "bracketrightbigg", 93, "bracketrightBigg", 93, "ceilingleftbig", 8968, "ceilingleftBig", 8968, "ceilingleftBigg", 8968, "ceilingleftbigg", 8968, "ceilingrightbig", 8969, "ceilingrightBig", 8969, "ceilingrightbigg", 8969, "ceilingrightBigg", 8969, "circledotdisplay", 8857, "circledottext", 8857, "circlemultiplydisplay", 8855, "circlemultiplytext", 8855, "circleplusdisplay", 8853, "circleplustext", 8853, "contintegraldisplay", 8750, "contintegraltext", 8750, "coproductdisplay", 8720, "coproducttext", 8720, "floorleftBig", 8970, "floorleftbig", 8970, "floorleftbigg", 8970, "floorleftBigg", 8970, "floorrightbig", 8971, "floorrightBig", 8971, "floorrightBigg", 8971, "floorrightbigg", 8971, "hatwide", 770, "hatwider", 770, "hatwidest", 770, "intercal", 7488, "integraldisplay", 8747, "integraltext", 8747, "intersectiondisplay", 8898, "intersectiontext", 8898, "logicalanddisplay", 8743, "logicalandtext", 8743, "logicalordisplay", 8744, "logicalortext", 8744, "parenleftBig", 40, "parenleftbig", 40, "parenleftBigg", 40, "parenleftbigg", 40, "parenrightBig", 41, "parenrightbig", 41, "parenrightBigg", 41, "parenrightbigg", 41, "prime", 8242, "productdisplay", 8719, "producttext", 8719, "radicalbig", 8730, "radicalBig", 8730, "radicalBigg", 8730, "radicalbigg", 8730, "radicalbt", 8730, "radicaltp", 8730, "radicalvertex", 8730, "slashbig", 47, "slashBig", 47, "slashBigg", 47, "slashbigg", 47, "summationdisplay", 8721, "summationtext", 8721, "tildewide", 732, "tildewider", 732, "tildewidest", 732, "uniondisplay", 8899, "unionmultidisplay", 8846, "unionmultitext", 8846, "unionsqdisplay", 8852, "unionsqtext", 8852, "uniontext", 8899, "vextenddouble", 8741, "vextendsingle", 8739];
          }), u = (0, c.getArrayLookupTableFactory)(function() {
            return ["space", 32, "a1", 9985, "a2", 9986, "a202", 9987, "a3", 9988, "a4", 9742, "a5", 9990, "a119", 9991, "a118", 9992, "a117", 9993, "a11", 9755, "a12", 9758, "a13", 9996, "a14", 9997, "a15", 9998, "a16", 9999, "a105", 1e4, "a17", 10001, "a18", 10002, "a19", 10003, "a20", 10004, "a21", 10005, "a22", 10006, "a23", 10007, "a24", 10008, "a25", 10009, "a26", 10010, "a27", 10011, "a28", 10012, "a6", 10013, "a7", 10014, "a8", 10015, "a9", 10016, "a10", 10017, "a29", 10018, "a30", 10019, "a31", 10020, "a32", 10021, "a33", 10022, "a34", 10023, "a35", 9733, "a36", 10025, "a37", 10026, "a38", 10027, "a39", 10028, "a40", 10029, "a41", 10030, "a42", 10031, "a43", 10032, "a44", 10033, "a45", 10034, "a46", 10035, "a47", 10036, "a48", 10037, "a49", 10038, "a50", 10039, "a51", 10040, "a52", 10041, "a53", 10042, "a54", 10043, "a55", 10044, "a56", 10045, "a57", 10046, "a58", 10047, "a59", 10048, "a60", 10049, "a61", 10050, "a62", 10051, "a63", 10052, "a64", 10053, "a65", 10054, "a66", 10055, "a67", 10056, "a68", 10057, "a69", 10058, "a70", 10059, "a71", 9679, "a72", 10061, "a73", 9632, "a74", 10063, "a203", 10064, "a75", 10065, "a204", 10066, "a76", 9650, "a77", 9660, "a78", 9670, "a79", 10070, "a81", 9687, "a82", 10072, "a83", 10073, "a84", 10074, "a97", 10075, "a98", 10076, "a99", 10077, "a100", 10078, "a101", 10081, "a102", 10082, "a103", 10083, "a104", 10084, "a106", 10085, "a107", 10086, "a108", 10087, "a112", 9827, "a111", 9830, "a110", 9829, "a109", 9824, "a120", 9312, "a121", 9313, "a122", 9314, "a123", 9315, "a124", 9316, "a125", 9317, "a126", 9318, "a127", 9319, "a128", 9320, "a129", 9321, "a130", 10102, "a131", 10103, "a132", 10104, "a133", 10105, "a134", 10106, "a135", 10107, "a136", 10108, "a137", 10109, "a138", 10110, "a139", 10111, "a140", 10112, "a141", 10113, "a142", 10114, "a143", 10115, "a144", 10116, "a145", 10117, "a146", 10118, "a147", 10119, "a148", 10120, "a149", 10121, "a150", 10122, "a151", 10123, "a152", 10124, "a153", 10125, "a154", 10126, "a155", 10127, "a156", 10128, "a157", 10129, "a158", 10130, "a159", 10131, "a160", 10132, "a161", 8594, "a163", 8596, "a164", 8597, "a196", 10136, "a165", 10137, "a192", 10138, "a166", 10139, "a167", 10140, "a168", 10141, "a169", 10142, "a170", 10143, "a171", 10144, "a172", 10145, "a173", 10146, "a162", 10147, "a174", 10148, "a175", 10149, "a176", 10150, "a177", 10151, "a178", 10152, "a179", 10153, "a193", 10154, "a180", 10155, "a199", 10156, "a181", 10157, "a200", 10158, "a182", 10159, "a201", 10161, "a183", 10162, "a184", 10163, "a197", 10164, "a185", 10165, "a194", 10166, "a198", 10167, "a186", 10168, "a195", 10169, "a187", 10170, "a188", 10171, "a189", 10172, "a190", 10173, "a191", 10174, "a89", 10088, "a90", 10089, "a93", 10090, "a94", 10091, "a91", 10092, "a92", 10093, "a205", 10094, "a85", 10095, "a206", 10096, "a86", 10097, "a87", 10098, "a88", 10099, "a95", 10100, "a96", 10101, ".notdef", 0];
          });
        }, (t2, r2, o2) => {
          "use strict";
          o2.r(r2);
          o2.d(r2, { clearUnicodeCaches: () => clearUnicodeCaches, getCharUnicodeCategory: () => getCharUnicodeCategory, getNormalizedUnicodes: () => h, getUnicodeForGlyph: () => getUnicodeForGlyph, getUnicodeRangeFor: () => getUnicodeRangeFor, mapSpecialUnicodeValues: () => mapSpecialUnicodeValues, reverseIfRtl: () => reverseIfRtl });
          var c = o2(161);
          const l = (0, c.getLookupTableFactory)(function(t3) {
            t3[63721] = 169;
            t3[63193] = 169;
            t3[63720] = 174;
            t3[63194] = 174;
            t3[63722] = 8482;
            t3[63195] = 8482;
            t3[63729] = 9127;
            t3[63730] = 9128;
            t3[63731] = 9129;
            t3[63740] = 9131;
            t3[63741] = 9132;
            t3[63742] = 9133;
            t3[63726] = 9121;
            t3[63727] = 9122;
            t3[63728] = 9123;
            t3[63737] = 9124;
            t3[63738] = 9125;
            t3[63739] = 9126;
            t3[63723] = 9115;
            t3[63724] = 9116;
            t3[63725] = 9117;
            t3[63734] = 9118;
            t3[63735] = 9119;
            t3[63736] = 9120;
          });
          function mapSpecialUnicodeValues(t3) {
            return t3 >= 65520 && t3 <= 65535 ? 0 : t3 >= 62976 && t3 <= 63743 ? l()[t3] || t3 : t3 === 173 ? 45 : t3;
          }
          function getUnicodeForGlyph(t3, r3) {
            let o3 = r3[t3];
            if (o3 !== void 0)
              return o3;
            if (!t3)
              return -1;
            if (t3[0] === "u") {
              const r4 = t3.length;
              let c2;
              if (r4 === 7 && t3[1] === "n" && t3[2] === "i")
                c2 = t3.substring(3);
              else {
                if (!(r4 >= 5 && r4 <= 7))
                  return -1;
                c2 = t3.substring(1);
              }
              if (c2 === c2.toUpperCase()) {
                o3 = parseInt(c2, 16);
                if (o3 >= 0)
                  return o3;
              }
            }
            return -1;
          }
          const u = [{ begin: 0, end: 127 }, { begin: 128, end: 255 }, { begin: 256, end: 383 }, { begin: 384, end: 591 }, { begin: 592, end: 687 }, { begin: 688, end: 767 }, { begin: 768, end: 879 }, { begin: 880, end: 1023 }, { begin: 11392, end: 11519 }, { begin: 1024, end: 1279 }, { begin: 1328, end: 1423 }, { begin: 1424, end: 1535 }, { begin: 42240, end: 42559 }, { begin: 1536, end: 1791 }, { begin: 1984, end: 2047 }, { begin: 2304, end: 2431 }, { begin: 2432, end: 2559 }, { begin: 2560, end: 2687 }, { begin: 2688, end: 2815 }, { begin: 2816, end: 2943 }, { begin: 2944, end: 3071 }, { begin: 3072, end: 3199 }, { begin: 3200, end: 3327 }, { begin: 3328, end: 3455 }, { begin: 3584, end: 3711 }, { begin: 3712, end: 3839 }, { begin: 4256, end: 4351 }, { begin: 6912, end: 7039 }, { begin: 4352, end: 4607 }, { begin: 7680, end: 7935 }, { begin: 7936, end: 8191 }, { begin: 8192, end: 8303 }, { begin: 8304, end: 8351 }, { begin: 8352, end: 8399 }, { begin: 8400, end: 8447 }, { begin: 8448, end: 8527 }, { begin: 8528, end: 8591 }, { begin: 8592, end: 8703 }, { begin: 8704, end: 8959 }, { begin: 8960, end: 9215 }, { begin: 9216, end: 9279 }, { begin: 9280, end: 9311 }, { begin: 9312, end: 9471 }, { begin: 9472, end: 9599 }, { begin: 9600, end: 9631 }, { begin: 9632, end: 9727 }, { begin: 9728, end: 9983 }, { begin: 9984, end: 10175 }, { begin: 12288, end: 12351 }, { begin: 12352, end: 12447 }, { begin: 12448, end: 12543 }, { begin: 12544, end: 12591 }, { begin: 12592, end: 12687 }, { begin: 43072, end: 43135 }, { begin: 12800, end: 13055 }, { begin: 13056, end: 13311 }, { begin: 44032, end: 55215 }, { begin: 55296, end: 57343 }, { begin: 67840, end: 67871 }, { begin: 19968, end: 40959 }, { begin: 57344, end: 63743 }, { begin: 12736, end: 12783 }, { begin: 64256, end: 64335 }, { begin: 64336, end: 65023 }, { begin: 65056, end: 65071 }, { begin: 65040, end: 65055 }, { begin: 65104, end: 65135 }, { begin: 65136, end: 65279 }, { begin: 65280, end: 65519 }, { begin: 65520, end: 65535 }, { begin: 3840, end: 4095 }, { begin: 1792, end: 1871 }, { begin: 1920, end: 1983 }, { begin: 3456, end: 3583 }, { begin: 4096, end: 4255 }, { begin: 4608, end: 4991 }, { begin: 5024, end: 5119 }, { begin: 5120, end: 5759 }, { begin: 5760, end: 5791 }, { begin: 5792, end: 5887 }, { begin: 6016, end: 6143 }, { begin: 6144, end: 6319 }, { begin: 10240, end: 10495 }, { begin: 40960, end: 42127 }, { begin: 5888, end: 5919 }, { begin: 66304, end: 66351 }, { begin: 66352, end: 66383 }, { begin: 66560, end: 66639 }, { begin: 118784, end: 119039 }, { begin: 119808, end: 120831 }, { begin: 1044480, end: 1048573 }, { begin: 65024, end: 65039 }, { begin: 917504, end: 917631 }, { begin: 6400, end: 6479 }, { begin: 6480, end: 6527 }, { begin: 6528, end: 6623 }, { begin: 6656, end: 6687 }, { begin: 11264, end: 11359 }, { begin: 11568, end: 11647 }, { begin: 19904, end: 19967 }, { begin: 43008, end: 43055 }, { begin: 65536, end: 65663 }, { begin: 65856, end: 65935 }, { begin: 66432, end: 66463 }, { begin: 66464, end: 66527 }, { begin: 66640, end: 66687 }, { begin: 66688, end: 66735 }, { begin: 67584, end: 67647 }, { begin: 68096, end: 68191 }, { begin: 119552, end: 119647 }, { begin: 73728, end: 74751 }, { begin: 119648, end: 119679 }, { begin: 7040, end: 7103 }, { begin: 7168, end: 7247 }, { begin: 7248, end: 7295 }, { begin: 43136, end: 43231 }, { begin: 43264, end: 43311 }, { begin: 43312, end: 43359 }, { begin: 43520, end: 43615 }, { begin: 65936, end: 65999 }, { begin: 66e3, end: 66047 }, { begin: 66208, end: 66271 }, { begin: 127024, end: 127135 }];
          function getUnicodeRangeFor(t3) {
            for (let r3 = 0, o3 = u.length; r3 < o3; r3++) {
              const o4 = u[r3];
              if (t3 >= o4.begin && t3 < o4.end)
                return r3;
            }
            return -1;
          }
          const h = (0, c.getArrayLookupTableFactory)(function() {
            return ["\xA8", " \u0308", "\xAF", " \u0304", "\xB4", " \u0301", "\xB5", "\u03BC", "\xB8", " \u0327", "\u0132", "IJ", "\u0133", "ij", "\u013F", "L\xB7", "\u0140", "l\xB7", "\u0149", "\u02BCn", "\u017F", "s", "\u01C4", "D\u017D", "\u01C5", "D\u017E", "\u01C6", "d\u017E", "\u01C7", "LJ", "\u01C8", "Lj", "\u01C9", "lj", "\u01CA", "NJ", "\u01CB", "Nj", "\u01CC", "nj", "\u01F1", "DZ", "\u01F2", "Dz", "\u01F3", "dz", "\u02D8", " \u0306", "\u02D9", " \u0307", "\u02DA", " \u030A", "\u02DB", " \u0328", "\u02DC", " \u0303", "\u02DD", " \u030B", "\u037A", " \u0345", "\u0384", " \u0301", "\u03D0", "\u03B2", "\u03D1", "\u03B8", "\u03D2", "\u03A5", "\u03D5", "\u03C6", "\u03D6", "\u03C0", "\u03F0", "\u03BA", "\u03F1", "\u03C1", "\u03F2", "\u03C2", "\u03F4", "\u0398", "\u03F5", "\u03B5", "\u03F9", "\u03A3", "\u0587", "\u0565\u0582", "\u0675", "\u0627\u0674", "\u0676", "\u0648\u0674", "\u0677", "\u06C7\u0674", "\u0678", "\u064A\u0674", "\u0E33", "\u0E4D\u0E32", "\u0EB3", "\u0ECD\u0EB2", "\u0EDC", "\u0EAB\u0E99", "\u0EDD", "\u0EAB\u0EA1", "\u0F77", "\u0FB2\u0F81", "\u0F79", "\u0FB3\u0F81", "\u1E9A", "a\u02BE", "\u1FBD", " \u0313", "\u1FBF", " \u0313", "\u1FC0", " \u0342", "\u1FFE", " \u0314", "\u2002", " ", "\u2003", " ", "\u2004", " ", "\u2005", " ", "\u2006", " ", "\u2008", " ", "\u2009", " ", "\u200A", " ", "\u2017", " \u0333", "\u2024", ".", "\u2025", "..", "\u2026", "...", "\u2033", "\u2032\u2032", "\u2034", "\u2032\u2032\u2032", "\u2036", "\u2035\u2035", "\u2037", "\u2035\u2035\u2035", "\u203C", "!!", "\u203E", " \u0305", "\u2047", "??", "\u2048", "?!", "\u2049", "!?", "\u2057", "\u2032\u2032\u2032\u2032", "\u205F", " ", "\u20A8", "Rs", "\u2100", "a/c", "\u2101", "a/s", "\u2103", "\xB0C", "\u2105", "c/o", "\u2106", "c/u", "\u2107", "\u0190", "\u2109", "\xB0F", "\u2116", "No", "\u2121", "TEL", "\u2135", "\u05D0", "\u2136", "\u05D1", "\u2137", "\u05D2", "\u2138", "\u05D3", "\u213B", "FAX", "\u2160", "I", "\u2161", "II", "\u2162", "III", "\u2163", "IV", "\u2164", "V", "\u2165", "VI", "\u2166", "VII", "\u2167", "VIII", "\u2168", "IX", "\u2169", "X", "\u216A", "XI", "\u216B", "XII", "\u216C", "L", "\u216D", "C", "\u216E", "D", "\u216F", "M", "\u2170", "i", "\u2171", "ii", "\u2172", "iii", "\u2173", "iv", "\u2174", "v", "\u2175", "vi", "\u2176", "vii", "\u2177", "viii", "\u2178", "ix", "\u2179", "x", "\u217A", "xi", "\u217B", "xii", "\u217C", "l", "\u217D", "c", "\u217E", "d", "\u217F", "m", "\u222C", "\u222B\u222B", "\u222D", "\u222B\u222B\u222B", "\u222F", "\u222E\u222E", "\u2230", "\u222E\u222E\u222E", "\u2474", "(1)", "\u2475", "(2)", "\u2476", "(3)", "\u2477", "(4)", "\u2478", "(5)", "\u2479", "(6)", "\u247A", "(7)", "\u247B", "(8)", "\u247C", "(9)", "\u247D", "(10)", "\u247E", "(11)", "\u247F", "(12)", "\u2480", "(13)", "\u2481", "(14)", "\u2482", "(15)", "\u2483", "(16)", "\u2484", "(17)", "\u2485", "(18)", "\u2486", "(19)", "\u2487", "(20)", "\u2488", "1.", "\u2489", "2.", "\u248A", "3.", "\u248B", "4.", "\u248C", "5.", "\u248D", "6.", "\u248E", "7.", "\u248F", "8.", "\u2490", "9.", "\u2491", "10.", "\u2492", "11.", "\u2493", "12.", "\u2494", "13.", "\u2495", "14.", "\u2496", "15.", "\u2497", "16.", "\u2498", "17.", "\u2499", "18.", "\u249A", "19.", "\u249B", "20.", "\u249C", "(a)", "\u249D", "(b)", "\u249E", "(c)", "\u249F", "(d)", "\u24A0", "(e)", "\u24A1", "(f)", "\u24A2", "(g)", "\u24A3", "(h)", "\u24A4", "(i)", "\u24A5", "(j)", "\u24A6", "(k)", "\u24A7", "(l)", "\u24A8", "(m)", "\u24A9", "(n)", "\u24AA", "(o)", "\u24AB", "(p)", "\u24AC", "(q)", "\u24AD", "(r)", "\u24AE", "(s)", "\u24AF", "(t)", "\u24B0", "(u)", "\u24B1", "(v)", "\u24B2", "(w)", "\u24B3", "(x)", "\u24B4", "(y)", "\u24B5", "(z)", "\u2A0C", "\u222B\u222B\u222B\u222B", "\u2A74", "::=", "\u2A75", "==", "\u2A76", "===", "\u2E9F", "\u6BCD", "\u2EF3", "\u9F9F", "\u2F00", "\u4E00", "\u2F01", "\u4E28", "\u2F02", "\u4E36", "\u2F03", "\u4E3F", "\u2F04", "\u4E59", "\u2F05", "\u4E85", "\u2F06", "\u4E8C", "\u2F07", "\u4EA0", "\u2F08", "\u4EBA", "\u2F09", "\u513F", "\u2F0A", "\u5165", "\u2F0B", "\u516B", "\u2F0C", "\u5182", "\u2F0D", "\u5196", "\u2F0E", "\u51AB", "\u2F0F", "\u51E0", "\u2F10", "\u51F5", "\u2F11", "\u5200", "\u2F12", "\u529B", "\u2F13", "\u52F9", "\u2F14", "\u5315", "\u2F15", "\u531A", "\u2F16", "\u5338", "\u2F17", "\u5341", "\u2F18", "\u535C", "\u2F19", "\u5369", "\u2F1A", "\u5382", "\u2F1B", "\u53B6", "\u2F1C", "\u53C8", "\u2F1D", "\u53E3", "\u2F1E", "\u56D7", "\u2F1F", "\u571F", "\u2F20", "\u58EB", "\u2F21", "\u5902", "\u2F22", "\u590A", "\u2F23", "\u5915", "\u2F24", "\u5927", "\u2F25", "\u5973", "\u2F26", "\u5B50", "\u2F27", "\u5B80", "\u2F28", "\u5BF8", "\u2F29", "\u5C0F", "\u2F2A", "\u5C22", "\u2F2B", "\u5C38", "\u2F2C", "\u5C6E", "\u2F2D", "\u5C71", "\u2F2E", "\u5DDB", "\u2F2F", "\u5DE5", "\u2F30", "\u5DF1", "\u2F31", "\u5DFE", "\u2F32", "\u5E72", "\u2F33", "\u5E7A", "\u2F34", "\u5E7F", "\u2F35", "\u5EF4", "\u2F36", "\u5EFE", "\u2F37", "\u5F0B", "\u2F38", "\u5F13", "\u2F39", "\u5F50", "\u2F3A", "\u5F61", "\u2F3B", "\u5F73", "\u2F3C", "\u5FC3", "\u2F3D", "\u6208", "\u2F3E", "\u6236", "\u2F3F", "\u624B", "\u2F40", "\u652F", "\u2F41", "\u6534", "\u2F42", "\u6587", "\u2F43", "\u6597", "\u2F44", "\u65A4", "\u2F45", "\u65B9", "\u2F46", "\u65E0", "\u2F47", "\u65E5", "\u2F48", "\u66F0", "\u2F49", "\u6708", "\u2F4A", "\u6728", "\u2F4B", "\u6B20", "\u2F4C", "\u6B62", "\u2F4D", "\u6B79", "\u2F4E", "\u6BB3", "\u2F4F", "\u6BCB", "\u2F50", "\u6BD4", "\u2F51", "\u6BDB", "\u2F52", "\u6C0F", "\u2F53", "\u6C14", "\u2F54", "\u6C34", "\u2F55", "\u706B", "\u2F56", "\u722A", "\u2F57", "\u7236", "\u2F58", "\u723B", "\u2F59", "\u723F", "\u2F5A", "\u7247", "\u2F5B", "\u7259", "\u2F5C", "\u725B", "\u2F5D", "\u72AC", "\u2F5E", "\u7384", "\u2F5F", "\u7389", "\u2F60", "\u74DC", "\u2F61", "\u74E6", "\u2F62", "\u7518", "\u2F63", "\u751F", "\u2F64", "\u7528", "\u2F65", "\u7530", "\u2F66", "\u758B", "\u2F67", "\u7592", "\u2F68", "\u7676", "\u2F69", "\u767D", "\u2F6A", "\u76AE", "\u2F6B", "\u76BF", "\u2F6C", "\u76EE", "\u2F6D", "\u77DB", "\u2F6E", "\u77E2", "\u2F6F", "\u77F3", "\u2F70", "\u793A", "\u2F71", "\u79B8", "\u2F72", "\u79BE", "\u2F73", "\u7A74", "\u2F74", "\u7ACB", "\u2F75", "\u7AF9", "\u2F76", "\u7C73", "\u2F77", "\u7CF8", "\u2F78", "\u7F36", "\u2F79", "\u7F51", "\u2F7A", "\u7F8A", "\u2F7B", "\u7FBD", "\u2F7C", "\u8001", "\u2F7D", "\u800C", "\u2F7E", "\u8012", "\u2F7F", "\u8033", "\u2F80", "\u807F", "\u2F81", "\u8089", "\u2F82", "\u81E3", "\u2F83", "\u81EA", "\u2F84", "\u81F3", "\u2F85", "\u81FC", "\u2F86", "\u820C", "\u2F87", "\u821B", "\u2F88", "\u821F", "\u2F89", "\u826E", "\u2F8A", "\u8272", "\u2F8B", "\u8278", "\u2F8C", "\u864D", "\u2F8D", "\u866B", "\u2F8E", "\u8840", "\u2F8F", "\u884C", "\u2F90", "\u8863", "\u2F91", "\u897E", "\u2F92", "\u898B", "\u2F93", "\u89D2", "\u2F94", "\u8A00", "\u2F95", "\u8C37", "\u2F96", "\u8C46", "\u2F97", "\u8C55", "\u2F98", "\u8C78", "\u2F99", "\u8C9D", "\u2F9A", "\u8D64", "\u2F9B", "\u8D70", "\u2F9C", "\u8DB3", "\u2F9D", "\u8EAB", "\u2F9E", "\u8ECA", "\u2F9F", "\u8F9B", "\u2FA0", "\u8FB0", "\u2FA1", "\u8FB5", "\u2FA2", "\u9091", "\u2FA3", "\u9149", "\u2FA4", "\u91C6", "\u2FA5", "\u91CC", "\u2FA6", "\u91D1", "\u2FA7", "\u9577", "\u2FA8", "\u9580", "\u2FA9", "\u961C", "\u2FAA", "\u96B6", "\u2FAB", "\u96B9", "\u2FAC", "\u96E8", "\u2FAD", "\u9751", "\u2FAE", "\u975E", "\u2FAF", "\u9762", "\u2FB0", "\u9769", "\u2FB1", "\u97CB", "\u2FB2", "\u97ED", "\u2FB3", "\u97F3", "\u2FB4", "\u9801", "\u2FB5", "\u98A8", "\u2FB6", "\u98DB", "\u2FB7", "\u98DF", "\u2FB8", "\u9996", "\u2FB9", "\u9999", "\u2FBA", "\u99AC", "\u2FBB", "\u9AA8", "\u2FBC", "\u9AD8", "\u2FBD", "\u9ADF", "\u2FBE", "\u9B25", "\u2FBF", "\u9B2F", "\u2FC0", "\u9B32", "\u2FC1", "\u9B3C", "\u2FC2", "\u9B5A", "\u2FC3", "\u9CE5", "\u2FC4", "\u9E75", "\u2FC5", "\u9E7F", "\u2FC6", "\u9EA5", "\u2FC7", "\u9EBB", "\u2FC8", "\u9EC3", "\u2FC9", "\u9ECD", "\u2FCA", "\u9ED1", "\u2FCB", "\u9EF9", "\u2FCC", "\u9EFD", "\u2FCD", "\u9F0E", "\u2FCE", "\u9F13", "\u2FCF", "\u9F20", "\u2FD0", "\u9F3B", "\u2FD1", "\u9F4A", "\u2FD2", "\u9F52", "\u2FD3", "\u9F8D", "\u2FD4", "\u9F9C", "\u2FD5", "\u9FA0", "\u3036", "\u3012", "\u3038", "\u5341", "\u3039", "\u5344", "\u303A", "\u5345", "\u309B", " \u3099", "\u309C", " \u309A", "\u3131", "\u1100", "\u3132", "\u1101", "\u3133", "\u11AA", "\u3134", "\u1102", "\u3135", "\u11AC", "\u3136", "\u11AD", "\u3137", "\u1103", "\u3138", "\u1104", "\u3139", "\u1105", "\u313A", "\u11B0", "\u313B", "\u11B1", "\u313C", "\u11B2", "\u313D", "\u11B3", "\u313E", "\u11B4", "\u313F", "\u11B5", "\u3140", "\u111A", "\u3141", "\u1106", "\u3142", "\u1107", "\u3143", "\u1108", "\u3144", "\u1121", "\u3145", "\u1109", "\u3146", "\u110A", "\u3147", "\u110B", "\u3148", "\u110C", "\u3149", "\u110D", "\u314A", "\u110E", "\u314B", "\u110F", "\u314C", "\u1110", "\u314D", "\u1111", "\u314E", "\u1112", "\u314F", "\u1161", "\u3150", "\u1162", "\u3151", "\u1163", "\u3152", "\u1164", "\u3153", "\u1165", "\u3154", "\u1166", "\u3155", "\u1167", "\u3156", "\u1168", "\u3157", "\u1169", "\u3158", "\u116A", "\u3159", "\u116B", "\u315A", "\u116C", "\u315B", "\u116D", "\u315C", "\u116E", "\u315D", "\u116F", "\u315E", "\u1170", "\u315F", "\u1171", "\u3160", "\u1172", "\u3161", "\u1173", "\u3162", "\u1174", "\u3163", "\u1175", "\u3164", "\u1160", "\u3165", "\u1114", "\u3166", "\u1115", "\u3167", "\u11C7", "\u3168", "\u11C8", "\u3169", "\u11CC", "\u316A", "\u11CE", "\u316B", "\u11D3", "\u316C", "\u11D7", "\u316D", "\u11D9", "\u316E", "\u111C", "\u316F", "\u11DD", "\u3170", "\u11DF", "\u3171", "\u111D", "\u3172", "\u111E", "\u3173", "\u1120", "\u3174", "\u1122", "\u3175", "\u1123", "\u3176", "\u1127", "\u3177", "\u1129", "\u3178", "\u112B", "\u3179", "\u112C", "\u317A", "\u112D", "\u317B", "\u112E", "\u317C", "\u112F", "\u317D", "\u1132", "\u317E", "\u1136", "\u317F", "\u1140", "\u3180", "\u1147", "\u3181", "\u114C", "\u3182", "\u11F1", "\u3183", "\u11F2", "\u3184", "\u1157", "\u3185", "\u1158", "\u3186", "\u1159", "\u3187", "\u1184", "\u3188", "\u1185", "\u3189", "\u1188", "\u318A", "\u1191", "\u318B", "\u1192", "\u318C", "\u1194", "\u318D", "\u119E", "\u318E", "\u11A1", "\u3200", "(\u1100)", "\u3201", "(\u1102)", "\u3202", "(\u1103)", "\u3203", "(\u1105)", "\u3204", "(\u1106)", "\u3205", "(\u1107)", "\u3206", "(\u1109)", "\u3207", "(\u110B)", "\u3208", "(\u110C)", "\u3209", "(\u110E)", "\u320A", "(\u110F)", "\u320B", "(\u1110)", "\u320C", "(\u1111)", "\u320D", "(\u1112)", "\u320E", "(\u1100\u1161)", "\u320F", "(\u1102\u1161)", "\u3210", "(\u1103\u1161)", "\u3211", "(\u1105\u1161)", "\u3212", "(\u1106\u1161)", "\u3213", "(\u1107\u1161)", "\u3214", "(\u1109\u1161)", "\u3215", "(\u110B\u1161)", "\u3216", "(\u110C\u1161)", "\u3217", "(\u110E\u1161)", "\u3218", "(\u110F\u1161)", "\u3219", "(\u1110\u1161)", "\u321A", "(\u1111\u1161)", "\u321B", "(\u1112\u1161)", "\u321C", "(\u110C\u116E)", "\u321D", "(\u110B\u1169\u110C\u1165\u11AB)", "\u321E", "(\u110B\u1169\u1112\u116E)", "\u3220", "(\u4E00)", "\u3221", "(\u4E8C)", "\u3222", "(\u4E09)", "\u3223", "(\u56DB)", "\u3224", "(\u4E94)", "\u3225", "(\u516D)", "\u3226", "(\u4E03)", "\u3227", "(\u516B)", "\u3228", "(\u4E5D)", "\u3229", "(\u5341)", "\u322A", "(\u6708)", "\u322B", "(\u706B)", "\u322C", "(\u6C34)", "\u322D", "(\u6728)", "\u322E", "(\u91D1)", "\u322F", "(\u571F)", "\u3230", "(\u65E5)", "\u3231", "(\u682A)", "\u3232", "(\u6709)", "\u3233", "(\u793E)", "\u3234", "(\u540D)", "\u3235", "(\u7279)", "\u3236", "(\u8CA1)", "\u3237", "(\u795D)", "\u3238", "(\u52B4)", "\u3239", "(\u4EE3)", "\u323A", "(\u547C)", "\u323B", "(\u5B66)", "\u323C", "(\u76E3)", "\u323D", "(\u4F01)", "\u323E", "(\u8CC7)", "\u323F", "(\u5354)", "\u3240", "(\u796D)", "\u3241", "(\u4F11)", "\u3242", "(\u81EA)", "\u3243", "(\u81F3)", "\u32C0", "1\u6708", "\u32C1", "2\u6708", "\u32C2", "3\u6708", "\u32C3", "4\u6708", "\u32C4", "5\u6708", "\u32C5", "6\u6708", "\u32C6", "7\u6708", "\u32C7", "8\u6708", "\u32C8", "9\u6708", "\u32C9", "10\u6708", "\u32CA", "11\u6708", "\u32CB", "12\u6708", "\u3358", "0\u70B9", "\u3359", "1\u70B9", "\u335A", "2\u70B9", "\u335B", "3\u70B9", "\u335C", "4\u70B9", "\u335D", "5\u70B9", "\u335E", "6\u70B9", "\u335F", "7\u70B9", "\u3360", "8\u70B9", "\u3361", "9\u70B9", "\u3362", "10\u70B9", "\u3363", "11\u70B9", "\u3364", "12\u70B9", "\u3365", "13\u70B9", "\u3366", "14\u70B9", "\u3367", "15\u70B9", "\u3368", "16\u70B9", "\u3369", "17\u70B9", "\u336A", "18\u70B9", "\u336B", "19\u70B9", "\u336C", "20\u70B9", "\u336D", "21\u70B9", "\u336E", "22\u70B9", "\u336F", "23\u70B9", "\u3370", "24\u70B9", "\u33E0", "1\u65E5", "\u33E1", "2\u65E5", "\u33E2", "3\u65E5", "\u33E3", "4\u65E5", "\u33E4", "5\u65E5", "\u33E5", "6\u65E5", "\u33E6", "7\u65E5", "\u33E7", "8\u65E5", "\u33E8", "9\u65E5", "\u33E9", "10\u65E5", "\u33EA", "11\u65E5", "\u33EB", "12\u65E5", "\u33EC", "13\u65E5", "\u33ED", "14\u65E5", "\u33EE", "15\u65E5", "\u33EF", "16\u65E5", "\u33F0", "17\u65E5", "\u33F1", "18\u65E5", "\u33F2", "19\u65E5", "\u33F3", "20\u65E5", "\u33F4", "21\u65E5", "\u33F5", "22\u65E5", "\u33F6", "23\u65E5", "\u33F7", "24\u65E5", "\u33F8", "25\u65E5", "\u33F9", "26\u65E5", "\u33FA", "27\u65E5", "\u33FB", "28\u65E5", "\u33FC", "29\u65E5", "\u33FD", "30\u65E5", "\u33FE", "31\u65E5", "\uFB00", "ff", "\uFB01", "fi", "\uFB02", "fl", "\uFB03", "ffi", "\uFB04", "ffl", "\uFB05", "\u017Ft", "\uFB06", "st", "\uFB13", "\u0574\u0576", "\uFB14", "\u0574\u0565", "\uFB15", "\u0574\u056B", "\uFB16", "\u057E\u0576", "\uFB17", "\u0574\u056D", "\uFB4F", "\u05D0\u05DC", "\uFB50", "\u0671", "\uFB51", "\u0671", "\uFB52", "\u067B", "\uFB53", "\u067B", "\uFB54", "\u067B", "\uFB55", "\u067B", "\uFB56", "\u067E", "\uFB57", "\u067E", "\uFB58", "\u067E", "\uFB59", "\u067E", "\uFB5A", "\u0680", "\uFB5B", "\u0680", "\uFB5C", "\u0680", "\uFB5D", "\u0680", "\uFB5E", "\u067A", "\uFB5F", "\u067A", "\uFB60", "\u067A", "\uFB61", "\u067A", "\uFB62", "\u067F", "\uFB63", "\u067F", "\uFB64", "\u067F", "\uFB65", "\u067F", "\uFB66", "\u0679", "\uFB67", "\u0679", "\uFB68", "\u0679", "\uFB69", "\u0679", "\uFB6A", "\u06A4", "\uFB6B", "\u06A4", "\uFB6C", "\u06A4", "\uFB6D", "\u06A4", "\uFB6E", "\u06A6", "\uFB6F", "\u06A6", "\uFB70", "\u06A6", "\uFB71", "\u06A6", "\uFB72", "\u0684", "\uFB73", "\u0684", "\uFB74", "\u0684", "\uFB75", "\u0684", "\uFB76", "\u0683", "\uFB77", "\u0683", "\uFB78", "\u0683", "\uFB79", "\u0683", "\uFB7A", "\u0686", "\uFB7B", "\u0686", "\uFB7C", "\u0686", "\uFB7D", "\u0686", "\uFB7E", "\u0687", "\uFB7F", "\u0687", "\uFB80", "\u0687", "\uFB81", "\u0687", "\uFB82", "\u068D", "\uFB83", "\u068D", "\uFB84", "\u068C", "\uFB85", "\u068C", "\uFB86", "\u068E", "\uFB87", "\u068E", "\uFB88", "\u0688", "\uFB89", "\u0688", "\uFB8A", "\u0698", "\uFB8B", "\u0698", "\uFB8C", "\u0691", "\uFB8D", "\u0691", "\uFB8E", "\u06A9", "\uFB8F", "\u06A9", "\uFB90", "\u06A9", "\uFB91", "\u06A9", "\uFB92", "\u06AF", "\uFB93", "\u06AF", "\uFB94", "\u06AF", "\uFB95", "\u06AF", "\uFB96", "\u06B3", "\uFB97", "\u06B3", "\uFB98", "\u06B3", "\uFB99", "\u06B3", "\uFB9A", "\u06B1", "\uFB9B", "\u06B1", "\uFB9C", "\u06B1", "\uFB9D", "\u06B1", "\uFB9E", "\u06BA", "\uFB9F", "\u06BA", "\uFBA0", "\u06BB", "\uFBA1", "\u06BB", "\uFBA2", "\u06BB", "\uFBA3", "\u06BB", "\uFBA4", "\u06C0", "\uFBA5", "\u06C0", "\uFBA6", "\u06C1", "\uFBA7", "\u06C1", "\uFBA8", "\u06C1", "\uFBA9", "\u06C1", "\uFBAA", "\u06BE", "\uFBAB", "\u06BE", "\uFBAC", "\u06BE", "\uFBAD", "\u06BE", "\uFBAE", "\u06D2", "\uFBAF", "\u06D2", "\uFBB0", "\u06D3", "\uFBB1", "\u06D3", "\uFBD3", "\u06AD", "\uFBD4", "\u06AD", "\uFBD5", "\u06AD", "\uFBD6", "\u06AD", "\uFBD7", "\u06C7", "\uFBD8", "\u06C7", "\uFBD9", "\u06C6", "\uFBDA", "\u06C6", "\uFBDB", "\u06C8", "\uFBDC", "\u06C8", "\uFBDD", "\u0677", "\uFBDE", "\u06CB", "\uFBDF", "\u06CB", "\uFBE0", "\u06C5", "\uFBE1", "\u06C5", "\uFBE2", "\u06C9", "\uFBE3", "\u06C9", "\uFBE4", "\u06D0", "\uFBE5", "\u06D0", "\uFBE6", "\u06D0", "\uFBE7", "\u06D0", "\uFBE8", "\u0649", "\uFBE9", "\u0649", "\uFBEA", "\u0626\u0627", "\uFBEB", "\u0626\u0627", "\uFBEC", "\u0626\u06D5", "\uFBED", "\u0626\u06D5", "\uFBEE", "\u0626\u0648", "\uFBEF", "\u0626\u0648", "\uFBF0", "\u0626\u06C7", "\uFBF1", "\u0626\u06C7", "\uFBF2", "\u0626\u06C6", "\uFBF3", "\u0626\u06C6", "\uFBF4", "\u0626\u06C8", "\uFBF5", "\u0626\u06C8", "\uFBF6", "\u0626\u06D0", "\uFBF7", "\u0626\u06D0", "\uFBF8", "\u0626\u06D0", "\uFBF9", "\u0626\u0649", "\uFBFA", "\u0626\u0649", "\uFBFB", "\u0626\u0649", "\uFBFC", "\u06CC", "\uFBFD", "\u06CC", "\uFBFE", "\u06CC", "\uFBFF", "\u06CC", "\uFC00", "\u0626\u062C", "\uFC01", "\u0626\u062D", "\uFC02", "\u0626\u0645", "\uFC03", "\u0626\u0649", "\uFC04", "\u0626\u064A", "\uFC05", "\u0628\u062C", "\uFC06", "\u0628\u062D", "\uFC07", "\u0628\u062E", "\uFC08", "\u0628\u0645", "\uFC09", "\u0628\u0649", "\uFC0A", "\u0628\u064A", "\uFC0B", "\u062A\u062C", "\uFC0C", "\u062A\u062D", "\uFC0D", "\u062A\u062E", "\uFC0E", "\u062A\u0645", "\uFC0F", "\u062A\u0649", "\uFC10", "\u062A\u064A", "\uFC11", "\u062B\u062C", "\uFC12", "\u062B\u0645", "\uFC13", "\u062B\u0649", "\uFC14", "\u062B\u064A", "\uFC15", "\u062C\u062D", "\uFC16", "\u062C\u0645", "\uFC17", "\u062D\u062C", "\uFC18", "\u062D\u0645", "\uFC19", "\u062E\u062C", "\uFC1A", "\u062E\u062D", "\uFC1B", "\u062E\u0645", "\uFC1C", "\u0633\u062C", "\uFC1D", "\u0633\u062D", "\uFC1E", "\u0633\u062E", "\uFC1F", "\u0633\u0645", "\uFC20", "\u0635\u062D", "\uFC21", "\u0635\u0645", "\uFC22", "\u0636\u062C", "\uFC23", "\u0636\u062D", "\uFC24", "\u0636\u062E", "\uFC25", "\u0636\u0645", "\uFC26", "\u0637\u062D", "\uFC27", "\u0637\u0645", "\uFC28", "\u0638\u0645", "\uFC29", "\u0639\u062C", "\uFC2A", "\u0639\u0645", "\uFC2B", "\u063A\u062C", "\uFC2C", "\u063A\u0645", "\uFC2D", "\u0641\u062C", "\uFC2E", "\u0641\u062D", "\uFC2F", "\u0641\u062E", "\uFC30", "\u0641\u0645", "\uFC31", "\u0641\u0649", "\uFC32", "\u0641\u064A", "\uFC33", "\u0642\u062D", "\uFC34", "\u0642\u0645", "\uFC35", "\u0642\u0649", "\uFC36", "\u0642\u064A", "\uFC37", "\u0643\u0627", "\uFC38", "\u0643\u062C", "\uFC39", "\u0643\u062D", "\uFC3A", "\u0643\u062E", "\uFC3B", "\u0643\u0644", "\uFC3C", "\u0643\u0645", "\uFC3D", "\u0643\u0649", "\uFC3E", "\u0643\u064A", "\uFC3F", "\u0644\u062C", "\uFC40", "\u0644\u062D", "\uFC41", "\u0644\u062E", "\uFC42", "\u0644\u0645", "\uFC43", "\u0644\u0649", "\uFC44", "\u0644\u064A", "\uFC45", "\u0645\u062C", "\uFC46", "\u0645\u062D", "\uFC47", "\u0645\u062E", "\uFC48", "\u0645\u0645", "\uFC49", "\u0645\u0649", "\uFC4A", "\u0645\u064A", "\uFC4B", "\u0646\u062C", "\uFC4C", "\u0646\u062D", "\uFC4D", "\u0646\u062E", "\uFC4E", "\u0646\u0645", "\uFC4F", "\u0646\u0649", "\uFC50", "\u0646\u064A", "\uFC51", "\u0647\u062C", "\uFC52", "\u0647\u0645", "\uFC53", "\u0647\u0649", "\uFC54", "\u0647\u064A", "\uFC55", "\u064A\u062C", "\uFC56", "\u064A\u062D", "\uFC57", "\u064A\u062E", "\uFC58", "\u064A\u0645", "\uFC59", "\u064A\u0649", "\uFC5A", "\u064A\u064A", "\uFC5B", "\u0630\u0670", "\uFC5C", "\u0631\u0670", "\uFC5D", "\u0649\u0670", "\uFC5E", " \u064C\u0651", "\uFC5F", " \u064D\u0651", "\uFC60", " \u064E\u0651", "\uFC61", " \u064F\u0651", "\uFC62", " \u0650\u0651", "\uFC63", " \u0651\u0670", "\uFC64", "\u0626\u0631", "\uFC65", "\u0626\u0632", "\uFC66", "\u0626\u0645", "\uFC67", "\u0626\u0646", "\uFC68", "\u0626\u0649", "\uFC69", "\u0626\u064A", "\uFC6A", "\u0628\u0631", "\uFC6B", "\u0628\u0632", "\uFC6C", "\u0628\u0645", "\uFC6D", "\u0628\u0646", "\uFC6E", "\u0628\u0649", "\uFC6F", "\u0628\u064A", "\uFC70", "\u062A\u0631", "\uFC71", "\u062A\u0632", "\uFC72", "\u062A\u0645", "\uFC73", "\u062A\u0646", "\uFC74", "\u062A\u0649", "\uFC75", "\u062A\u064A", "\uFC76", "\u062B\u0631", "\uFC77", "\u062B\u0632", "\uFC78", "\u062B\u0645", "\uFC79", "\u062B\u0646", "\uFC7A", "\u062B\u0649", "\uFC7B", "\u062B\u064A", "\uFC7C", "\u0641\u0649", "\uFC7D", "\u0641\u064A", "\uFC7E", "\u0642\u0649", "\uFC7F", "\u0642\u064A", "\uFC80", "\u0643\u0627", "\uFC81", "\u0643\u0644", "\uFC82", "\u0643\u0645", "\uFC83", "\u0643\u0649", "\uFC84", "\u0643\u064A", "\uFC85", "\u0644\u0645", "\uFC86", "\u0644\u0649", "\uFC87", "\u0644\u064A", "\uFC88", "\u0645\u0627", "\uFC89", "\u0645\u0645", "\uFC8A", "\u0646\u0631", "\uFC8B", "\u0646\u0632", "\uFC8C", "\u0646\u0645", "\uFC8D", "\u0646\u0646", "\uFC8E", "\u0646\u0649", "\uFC8F", "\u0646\u064A", "\uFC90", "\u0649\u0670", "\uFC91", "\u064A\u0631", "\uFC92", "\u064A\u0632", "\uFC93", "\u064A\u0645", "\uFC94", "\u064A\u0646", "\uFC95", "\u064A\u0649", "\uFC96", "\u064A\u064A", "\uFC97", "\u0626\u062C", "\uFC98", "\u0626\u062D", "\uFC99", "\u0626\u062E", "\uFC9A", "\u0626\u0645", "\uFC9B", "\u0626\u0647", "\uFC9C", "\u0628\u062C", "\uFC9D", "\u0628\u062D", "\uFC9E", "\u0628\u062E", "\uFC9F", "\u0628\u0645", "\uFCA0", "\u0628\u0647", "\uFCA1", "\u062A\u062C", "\uFCA2", "\u062A\u062D", "\uFCA3", "\u062A\u062E", "\uFCA4", "\u062A\u0645", "\uFCA5", "\u062A\u0647", "\uFCA6", "\u062B\u0645", "\uFCA7", "\u062C\u062D", "\uFCA8", "\u062C\u0645", "\uFCA9", "\u062D\u062C", "\uFCAA", "\u062D\u0645", "\uFCAB", "\u062E\u062C", "\uFCAC", "\u062E\u0645", "\uFCAD", "\u0633\u062C", "\uFCAE", "\u0633\u062D", "\uFCAF", "\u0633\u062E", "\uFCB0", "\u0633\u0645", "\uFCB1", "\u0635\u062D", "\uFCB2", "\u0635\u062E", "\uFCB3", "\u0635\u0645", "\uFCB4", "\u0636\u062C", "\uFCB5", "\u0636\u062D", "\uFCB6", "\u0636\u062E", "\uFCB7", "\u0636\u0645", "\uFCB8", "\u0637\u062D", "\uFCB9", "\u0638\u0645", "\uFCBA", "\u0639\u062C", "\uFCBB", "\u0639\u0645", "\uFCBC", "\u063A\u062C", "\uFCBD", "\u063A\u0645", "\uFCBE", "\u0641\u062C", "\uFCBF", "\u0641\u062D", "\uFCC0", "\u0641\u062E", "\uFCC1", "\u0641\u0645", "\uFCC2", "\u0642\u062D", "\uFCC3", "\u0642\u0645", "\uFCC4", "\u0643\u062C", "\uFCC5", "\u0643\u062D", "\uFCC6", "\u0643\u062E", "\uFCC7", "\u0643\u0644", "\uFCC8", "\u0643\u0645", "\uFCC9", "\u0644\u062C", "\uFCCA", "\u0644\u062D", "\uFCCB", "\u0644\u062E", "\uFCCC", "\u0644\u0645", "\uFCCD", "\u0644\u0647", "\uFCCE", "\u0645\u062C", "\uFCCF", "\u0645\u062D", "\uFCD0", "\u0645\u062E", "\uFCD1", "\u0645\u0645", "\uFCD2", "\u0646\u062C", "\uFCD3", "\u0646\u062D", "\uFCD4", "\u0646\u062E", "\uFCD5", "\u0646\u0645", "\uFCD6", "\u0646\u0647", "\uFCD7", "\u0647\u062C", "\uFCD8", "\u0647\u0645", "\uFCD9", "\u0647\u0670", "\uFCDA", "\u064A\u062C", "\uFCDB", "\u064A\u062D", "\uFCDC", "\u064A\u062E", "\uFCDD", "\u064A\u0645", "\uFCDE", "\u064A\u0647", "\uFCDF", "\u0626\u0645", "\uFCE0", "\u0626\u0647", "\uFCE1", "\u0628\u0645", "\uFCE2", "\u0628\u0647", "\uFCE3", "\u062A\u0645", "\uFCE4", "\u062A\u0647", "\uFCE5", "\u062B\u0645", "\uFCE6", "\u062B\u0647", "\uFCE7", "\u0633\u0645", "\uFCE8", "\u0633\u0647", "\uFCE9", "\u0634\u0645", "\uFCEA", "\u0634\u0647", "\uFCEB", "\u0643\u0644", "\uFCEC", "\u0643\u0645", "\uFCED", "\u0644\u0645", "\uFCEE", "\u0646\u0645", "\uFCEF", "\u0646\u0647", "\uFCF0", "\u064A\u0645", "\uFCF1", "\u064A\u0647", "\uFCF2", "\u0640\u064E\u0651", "\uFCF3", "\u0640\u064F\u0651", "\uFCF4", "\u0640\u0650\u0651", "\uFCF5", "\u0637\u0649", "\uFCF6", "\u0637\u064A", "\uFCF7", "\u0639\u0649", "\uFCF8", "\u0639\u064A", "\uFCF9", "\u063A\u0649", "\uFCFA", "\u063A\u064A", "\uFCFB", "\u0633\u0649", "\uFCFC", "\u0633\u064A", "\uFCFD", "\u0634\u0649", "\uFCFE", "\u0634\u064A", "\uFCFF", "\u062D\u0649", "\uFD00", "\u062D\u064A", "\uFD01", "\u062C\u0649", "\uFD02", "\u062C\u064A", "\uFD03", "\u062E\u0649", "\uFD04", "\u062E\u064A", "\uFD05", "\u0635\u0649", "\uFD06", "\u0635\u064A", "\uFD07", "\u0636\u0649", "\uFD08", "\u0636\u064A", "\uFD09", "\u0634\u062C", "\uFD0A", "\u0634\u062D", "\uFD0B", "\u0634\u062E", "\uFD0C", "\u0634\u0645", "\uFD0D", "\u0634\u0631", "\uFD0E", "\u0633\u0631", "\uFD0F", "\u0635\u0631", "\uFD10", "\u0636\u0631", "\uFD11", "\u0637\u0649", "\uFD12", "\u0637\u064A", "\uFD13", "\u0639\u0649", "\uFD14", "\u0639\u064A", "\uFD15", "\u063A\u0649", "\uFD16", "\u063A\u064A", "\uFD17", "\u0633\u0649", "\uFD18", "\u0633\u064A", "\uFD19", "\u0634\u0649", "\uFD1A", "\u0634\u064A", "\uFD1B", "\u062D\u0649", "\uFD1C", "\u062D\u064A", "\uFD1D", "\u062C\u0649", "\uFD1E", "\u062C\u064A", "\uFD1F", "\u062E\u0649", "\uFD20", "\u062E\u064A", "\uFD21", "\u0635\u0649", "\uFD22", "\u0635\u064A", "\uFD23", "\u0636\u0649", "\uFD24", "\u0636\u064A", "\uFD25", "\u0634\u062C", "\uFD26", "\u0634\u062D", "\uFD27", "\u0634\u062E", "\uFD28", "\u0634\u0645", "\uFD29", "\u0634\u0631", "\uFD2A", "\u0633\u0631", "\uFD2B", "\u0635\u0631", "\uFD2C", "\u0636\u0631", "\uFD2D", "\u0634\u062C", "\uFD2E", "\u0634\u062D", "\uFD2F", "\u0634\u062E", "\uFD30", "\u0634\u0645", "\uFD31", "\u0633\u0647", "\uFD32", "\u0634\u0647", "\uFD33", "\u0637\u0645", "\uFD34", "\u0633\u062C", "\uFD35", "\u0633\u062D", "\uFD36", "\u0633\u062E", "\uFD37", "\u0634\u062C", "\uFD38", "\u0634\u062D", "\uFD39", "\u0634\u062E", "\uFD3A", "\u0637\u0645", "\uFD3B", "\u0638\u0645", "\uFD3C", "\u0627\u064B", "\uFD3D", "\u0627\u064B", "\uFD50", "\u062A\u062C\u0645", "\uFD51", "\u062A\u062D\u062C", "\uFD52", "\u062A\u062D\u062C", "\uFD53", "\u062A\u062D\u0645", "\uFD54", "\u062A\u062E\u0645", "\uFD55", "\u062A\u0645\u062C", "\uFD56", "\u062A\u0645\u062D", "\uFD57", "\u062A\u0645\u062E", "\uFD58", "\u062C\u0645\u062D", "\uFD59", "\u062C\u0645\u062D", "\uFD5A", "\u062D\u0645\u064A", "\uFD5B", "\u062D\u0645\u0649", "\uFD5C", "\u0633\u062D\u062C", "\uFD5D", "\u0633\u062C\u062D", "\uFD5E", "\u0633\u062C\u0649", "\uFD5F", "\u0633\u0645\u062D", "\uFD60", "\u0633\u0645\u062D", "\uFD61", "\u0633\u0645\u062C", "\uFD62", "\u0633\u0645\u0645", "\uFD63", "\u0633\u0645\u0645", "\uFD64", "\u0635\u062D\u062D", "\uFD65", "\u0635\u062D\u062D", "\uFD66", "\u0635\u0645\u0645", "\uFD67", "\u0634\u062D\u0645", "\uFD68", "\u0634\u062D\u0645", "\uFD69", "\u0634\u062C\u064A", "\uFD6A", "\u0634\u0645\u062E", "\uFD6B", "\u0634\u0645\u062E", "\uFD6C", "\u0634\u0645\u0645", "\uFD6D", "\u0634\u0645\u0645", "\uFD6E", "\u0636\u062D\u0649", "\uFD6F", "\u0636\u062E\u0645", "\uFD70", "\u0636\u062E\u0645", "\uFD71", "\u0637\u0645\u062D", "\uFD72", "\u0637\u0645\u062D", "\uFD73", "\u0637\u0645\u0645", "\uFD74", "\u0637\u0645\u064A", "\uFD75", "\u0639\u062C\u0645", "\uFD76", "\u0639\u0645\u0645", "\uFD77", "\u0639\u0645\u0645", "\uFD78", "\u0639\u0645\u0649", "\uFD79", "\u063A\u0645\u0645", "\uFD7A", "\u063A\u0645\u064A", "\uFD7B", "\u063A\u0645\u0649", "\uFD7C", "\u0641\u062E\u0645", "\uFD7D", "\u0641\u062E\u0645", "\uFD7E", "\u0642\u0645\u062D", "\uFD7F", "\u0642\u0645\u0645", "\uFD80", "\u0644\u062D\u0645", "\uFD81", "\u0644\u062D\u064A", "\uFD82", "\u0644\u062D\u0649", "\uFD83", "\u0644\u062C\u062C", "\uFD84", "\u0644\u062C\u062C", "\uFD85", "\u0644\u062E\u0645", "\uFD86", "\u0644\u062E\u0645", "\uFD87", "\u0644\u0645\u062D", "\uFD88", "\u0644\u0645\u062D", "\uFD89", "\u0645\u062D\u062C", "\uFD8A", "\u0645\u062D\u0645", "\uFD8B", "\u0645\u062D\u064A", "\uFD8C", "\u0645\u062C\u062D", "\uFD8D", "\u0645\u062C\u0645", "\uFD8E", "\u0645\u062E\u062C", "\uFD8F", "\u0645\u062E\u0645", "\uFD92", "\u0645\u062C\u062E", "\uFD93", "\u0647\u0645\u062C", "\uFD94", "\u0647\u0645\u0645", "\uFD95", "\u0646\u062D\u0645", "\uFD96", "\u0646\u062D\u0649", "\uFD97", "\u0646\u062C\u0645", "\uFD98", "\u0646\u062C\u0645", "\uFD99", "\u0646\u062C\u0649", "\uFD9A", "\u0646\u0645\u064A", "\uFD9B", "\u0646\u0645\u0649", "\uFD9C", "\u064A\u0645\u0645", "\uFD9D", "\u064A\u0645\u0645", "\uFD9E", "\u0628\u062E\u064A", "\uFD9F", "\u062A\u062C\u064A", "\uFDA0", "\u062A\u062C\u0649", "\uFDA1", "\u062A\u062E\u064A", "\uFDA2", "\u062A\u062E\u0649", "\uFDA3", "\u062A\u0645\u064A", "\uFDA4", "\u062A\u0645\u0649", "\uFDA5", "\u062C\u0645\u064A", "\uFDA6", "\u062C\u062D\u0649", "\uFDA7", "\u062C\u0645\u0649", "\uFDA8", "\u0633\u062E\u0649", "\uFDA9", "\u0635\u062D\u064A", "\uFDAA", "\u0634\u062D\u064A", "\uFDAB", "\u0636\u062D\u064A", "\uFDAC", "\u0644\u062C\u064A", "\uFDAD", "\u0644\u0645\u064A", "\uFDAE", "\u064A\u062D\u064A", "\uFDAF", "\u064A\u062C\u064A", "\uFDB0", "\u064A\u0645\u064A", "\uFDB1", "\u0645\u0645\u064A", "\uFDB2", "\u0642\u0645\u064A", "\uFDB3", "\u0646\u062D\u064A", "\uFDB4", "\u0642\u0645\u062D", "\uFDB5", "\u0644\u062D\u0645", "\uFDB6", "\u0639\u0645\u064A", "\uFDB7", "\u0643\u0645\u064A", "\uFDB8", "\u0646\u062C\u062D", "\uFDB9", "\u0645\u062E\u064A", "\uFDBA", "\u0644\u062C\u0645", "\uFDBB", "\u0643\u0645\u0645", "\uFDBC", "\u0644\u062C\u0645", "\uFDBD", "\u0646\u062C\u062D", "\uFDBE", "\u062C\u062D\u064A", "\uFDBF", "\u062D\u062C\u064A", "\uFDC0", "\u0645\u062C\u064A", "\uFDC1", "\u0641\u0645\u064A", "\uFDC2", "\u0628\u062D\u064A", "\uFDC3", "\u0643\u0645\u0645", "\uFDC4", "\u0639\u062C\u0645", "\uFDC5", "\u0635\u0645\u0645", "\uFDC6", "\u0633\u062E\u064A", "\uFDC7", "\u0646\u062C\u064A", "\uFE49", "\u203E", "\uFE4A", "\u203E", "\uFE4B", "\u203E", "\uFE4C", "\u203E", "\uFE4D", "_", "\uFE4E", "_", "\uFE4F", "_", "\uFE80", "\u0621", "\uFE81", "\u0622", "\uFE82", "\u0622", "\uFE83", "\u0623", "\uFE84", "\u0623", "\uFE85", "\u0624", "\uFE86", "\u0624", "\uFE87", "\u0625", "\uFE88", "\u0625", "\uFE89", "\u0626", "\uFE8A", "\u0626", "\uFE8B", "\u0626", "\uFE8C", "\u0626", "\uFE8D", "\u0627", "\uFE8E", "\u0627", "\uFE8F", "\u0628", "\uFE90", "\u0628", "\uFE91", "\u0628", "\uFE92", "\u0628", "\uFE93", "\u0629", "\uFE94", "\u0629", "\uFE95", "\u062A", "\uFE96", "\u062A", "\uFE97", "\u062A", "\uFE98", "\u062A", "\uFE99", "\u062B", "\uFE9A", "\u062B", "\uFE9B", "\u062B", "\uFE9C", "\u062B", "\uFE9D", "\u062C", "\uFE9E", "\u062C", "\uFE9F", "\u062C", "\uFEA0", "\u062C", "\uFEA1", "\u062D", "\uFEA2", "\u062D", "\uFEA3", "\u062D", "\uFEA4", "\u062D", "\uFEA5", "\u062E", "\uFEA6", "\u062E", "\uFEA7", "\u062E", "\uFEA8", "\u062E", "\uFEA9", "\u062F", "\uFEAA", "\u062F", "\uFEAB", "\u0630", "\uFEAC", "\u0630", "\uFEAD", "\u0631", "\uFEAE", "\u0631", "\uFEAF", "\u0632", "\uFEB0", "\u0632", "\uFEB1", "\u0633", "\uFEB2", "\u0633", "\uFEB3", "\u0633", "\uFEB4", "\u0633", "\uFEB5", "\u0634", "\uFEB6", "\u0634", "\uFEB7", "\u0634", "\uFEB8", "\u0634", "\uFEB9", "\u0635", "\uFEBA", "\u0635", "\uFEBB", "\u0635", "\uFEBC", "\u0635", "\uFEBD", "\u0636", "\uFEBE", "\u0636", "\uFEBF", "\u0636", "\uFEC0", "\u0636", "\uFEC1", "\u0637", "\uFEC2", "\u0637", "\uFEC3", "\u0637", "\uFEC4", "\u0637", "\uFEC5", "\u0638", "\uFEC6", "\u0638", "\uFEC7", "\u0638", "\uFEC8", "\u0638", "\uFEC9", "\u0639", "\uFECA", "\u0639", "\uFECB", "\u0639", "\uFECC", "\u0639", "\uFECD", "\u063A", "\uFECE", "\u063A", "\uFECF", "\u063A", "\uFED0", "\u063A", "\uFED1", "\u0641", "\uFED2", "\u0641", "\uFED3", "\u0641", "\uFED4", "\u0641", "\uFED5", "\u0642", "\uFED6", "\u0642", "\uFED7", "\u0642", "\uFED8", "\u0642", "\uFED9", "\u0643", "\uFEDA", "\u0643", "\uFEDB", "\u0643", "\uFEDC", "\u0643", "\uFEDD", "\u0644", "\uFEDE", "\u0644", "\uFEDF", "\u0644", "\uFEE0", "\u0644", "\uFEE1", "\u0645", "\uFEE2", "\u0645", "\uFEE3", "\u0645", "\uFEE4", "\u0645", "\uFEE5", "\u0646", "\uFEE6", "\u0646", "\uFEE7", "\u0646", "\uFEE8", "\u0646", "\uFEE9", "\u0647", "\uFEEA", "\u0647", "\uFEEB", "\u0647", "\uFEEC", "\u0647", "\uFEED", "\u0648", "\uFEEE", "\u0648", "\uFEEF", "\u0649", "\uFEF0", "\u0649", "\uFEF1", "\u064A", "\uFEF2", "\u064A", "\uFEF3", "\u064A", "\uFEF4", "\u064A", "\uFEF5", "\u0644\u0622", "\uFEF6", "\u0644\u0622", "\uFEF7", "\u0644\u0623", "\uFEF8", "\u0644\u0623", "\uFEF9", "\u0644\u0625", "\uFEFA", "\u0644\u0625", "\uFEFB", "\u0644\u0627", "\uFEFC", "\u0644\u0627"];
          });
          function reverseIfRtl(t3) {
            const r3 = t3.length;
            if (r3 <= 1 || !function isRTLRangeFor(t4) {
              let r4 = u[13];
              if (t4 >= r4.begin && t4 < r4.end)
                return true;
              r4 = u[11];
              return t4 >= r4.begin && t4 < r4.end;
            }(t3.charCodeAt(0)))
              return t3;
            const o3 = [];
            for (let c2 = r3 - 1; c2 >= 0; c2--)
              o3.push(t3[c2]);
            return o3.join("");
          }
          const d = new RegExp("^(\\s)|(\\p{Mn})|(\\p{Cf})$", "u"), g = /* @__PURE__ */ new Map();
          function getCharUnicodeCategory(t3) {
            const r3 = g.get(t3);
            if (r3)
              return r3;
            const o3 = t3.match(d), c2 = { isWhitespace: !(!o3 || !o3[1]), isZeroWidthDiacritic: !(!o3 || !o3[2]), isInvisibleFormatMark: !(!o3 || !o3[3]) };
            g.set(t3, c2);
            return c2;
          }
          function clearUnicodeCaches() {
            g.clear();
          }
        }, (t2, r2, o2) => {
          "use strict";
          function _typeof(t3) {
            return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t4) {
              return typeof t4;
            } : function(t4) {
              return t4 && typeof Symbol == "function" && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
            }, _typeof(t3);
          }
          Object.defineProperty(r2, "__esModule", { value: true });
          r2.MarkupAnnotation = r2.AnnotationFactory = r2.AnnotationBorderStyle = r2.Annotation = void 0;
          r2.getQuadPoints = getQuadPoints;
          var c = function _interopRequireDefault(t3) {
            return t3 && t3.__esModule ? t3 : { default: t3 };
          }(o2(2)), l = o2(4), u = o2(161), h = o2(176), d = o2(158), g = o2(162), m = o2(213), y = o2(218), v = o2(177), k = o2(221), _ = o2(225), w = o2(215), S = o2(163), C = o2(226), x = o2(229);
          function _get() {
            _get = typeof Reflect != "undefined" && Reflect.get ? Reflect.get : function _get2(t3, r3, o3) {
              var c2 = _superPropBase(t3, r3);
              if (c2) {
                var l2 = Object.getOwnPropertyDescriptor(c2, r3);
                return l2.get ? l2.get.call(arguments.length < 3 ? t3 : o3) : l2.value;
              }
            };
            return _get.apply(this, arguments);
          }
          function _superPropBase(t3, r3) {
            for (; !Object.prototype.hasOwnProperty.call(t3, r3) && (t3 = _getPrototypeOf(t3)) !== null; )
              ;
            return t3;
          }
          function _inherits(t3, r3) {
            if (typeof r3 != "function" && r3 !== null)
              throw new TypeError("Super expression must either be null or a function");
            t3.prototype = Object.create(r3 && r3.prototype, { constructor: { value: t3, writable: true, configurable: true } });
            Object.defineProperty(t3, "prototype", { writable: false });
            r3 && _setPrototypeOf(t3, r3);
          }
          function _setPrototypeOf(t3, r3) {
            _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(t4, r4) {
              t4.__proto__ = r4;
              return t4;
            };
            return _setPrototypeOf(t3, r3);
          }
          function _createSuper(t3) {
            var r3 = function _isNativeReflectConstruct() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                }));
                return true;
              } catch (t4) {
                return false;
              }
            }();
            return function _createSuperInternal() {
              var o3, c2 = _getPrototypeOf(t3);
              if (r3) {
                var l2 = _getPrototypeOf(this).constructor;
                o3 = Reflect.construct(c2, arguments, l2);
              } else
                o3 = c2.apply(this, arguments);
              return _possibleConstructorReturn(this, o3);
            };
          }
          function _possibleConstructorReturn(t3, r3) {
            if (r3 && (_typeof(r3) === "object" || typeof r3 == "function"))
              return r3;
            if (r3 !== void 0)
              throw new TypeError("Derived constructors may only return object or undefined");
            return _assertThisInitialized(t3);
          }
          function _assertThisInitialized(t3) {
            if (t3 === void 0)
              throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return t3;
          }
          function _getPrototypeOf(t3) {
            _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(t4) {
              return t4.__proto__ || Object.getPrototypeOf(t4);
            };
            return _getPrototypeOf(t3);
          }
          function _createForOfIteratorHelper(t3, r3) {
            var o3 = typeof Symbol != "undefined" && t3[Symbol.iterator] || t3["@@iterator"];
            if (!o3) {
              if (Array.isArray(t3) || (o3 = _unsupportedIterableToArray(t3)) || r3 && t3 && typeof t3.length == "number") {
                o3 && (t3 = o3);
                var c2 = 0, l2 = function F() {
                };
                return { s: l2, n: function n() {
                  return c2 >= t3.length ? { done: true } : { done: false, value: t3[c2++] };
                }, e: function e(t4) {
                  throw t4;
                }, f: l2 };
              }
              throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
            }
            var u2, h2 = true, d2 = false;
            return { s: function s() {
              o3 = o3.call(t3);
            }, n: function n() {
              var t4 = o3.next();
              h2 = t4.done;
              return t4;
            }, e: function e(t4) {
              d2 = true;
              u2 = t4;
            }, f: function f() {
              try {
                h2 || o3.return == null || o3.return();
              } finally {
                if (d2)
                  throw u2;
              }
            } };
          }
          function asyncGeneratorStep(t3, r3, o3, c2, l2, u2, h2) {
            try {
              var d2 = t3[u2](h2), g2 = d2.value;
            } catch (t4) {
              o3(t4);
              return;
            }
            d2.done ? r3(g2) : Promise.resolve(g2).then(c2, l2);
          }
          function _asyncToGenerator(t3) {
            return function() {
              var r3 = this, o3 = arguments;
              return new Promise(function(c2, l2) {
                var u2 = t3.apply(r3, o3);
                function _next(t4) {
                  asyncGeneratorStep(u2, c2, l2, _next, _throw, "next", t4);
                }
                function _throw(t4) {
                  asyncGeneratorStep(u2, c2, l2, _next, _throw, "throw", t4);
                }
                _next(void 0);
              });
            };
          }
          function _slicedToArray(t3, r3) {
            return function _arrayWithHoles(t4) {
              if (Array.isArray(t4))
                return t4;
            }(t3) || function _iterableToArrayLimit(t4, r4) {
              var o3 = t4 == null ? null : typeof Symbol != "undefined" && t4[Symbol.iterator] || t4["@@iterator"];
              if (o3 == null)
                return;
              var c2, l2, u2 = [], h2 = true, d2 = false;
              try {
                for (o3 = o3.call(t4); !(h2 = (c2 = o3.next()).done); h2 = true) {
                  u2.push(c2.value);
                  if (r4 && u2.length === r4)
                    break;
                }
              } catch (t5) {
                d2 = true;
                l2 = t5;
              } finally {
                try {
                  h2 || o3.return == null || o3.return();
                } finally {
                  if (d2)
                    throw l2;
                }
              }
              return u2;
            }(t3, r3) || _unsupportedIterableToArray(t3, r3) || function _nonIterableRest() {
              throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
            }();
          }
          function _unsupportedIterableToArray(t3, r3) {
            if (t3) {
              if (typeof t3 == "string")
                return _arrayLikeToArray(t3, r3);
              var o3 = Object.prototype.toString.call(t3).slice(8, -1);
              o3 === "Object" && t3.constructor && (o3 = t3.constructor.name);
              return o3 === "Map" || o3 === "Set" ? Array.from(t3) : o3 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(o3) ? _arrayLikeToArray(t3, r3) : void 0;
            }
          }
          function _arrayLikeToArray(t3, r3) {
            (r3 == null || r3 > t3.length) && (r3 = t3.length);
            for (var o3 = 0, c2 = new Array(r3); o3 < r3; o3++)
              c2[o3] = t3[o3];
            return c2;
          }
          function _classCallCheck(t3, r3) {
            if (!(t3 instanceof r3))
              throw new TypeError("Cannot call a class as a function");
          }
          function _defineProperties(t3, r3) {
            for (var o3 = 0; o3 < r3.length; o3++) {
              var c2 = r3[o3];
              c2.enumerable = c2.enumerable || false;
              c2.configurable = true;
              "value" in c2 && (c2.writable = true);
              Object.defineProperty(t3, c2.key, c2);
            }
          }
          function _createClass(t3, r3, o3) {
            r3 && _defineProperties(t3.prototype, r3);
            o3 && _defineProperties(t3, o3);
            Object.defineProperty(t3, "prototype", { writable: false });
            return t3;
          }
          var O = 1.35, T = function() {
            function AnnotationFactory() {
              _classCallCheck(this, AnnotationFactory);
            }
            _createClass(AnnotationFactory, null, [{ key: "create", value: function create(t4, r3, o3, c2, l2) {
              var u2 = this;
              return Promise.all([o3.ensureCatalog("acroForm"), o3.ensureCatalog("baseUrl"), o3.ensureDoc("xfaDatasets"), l2 ? this._getPageIndex(t4, r3, o3) : -1]).then(function(h2) {
                var d2 = _slicedToArray(h2, 4), g2 = d2[0], m2 = (d2[1], d2[2]), y2 = d2[3];
                return o3.ensure(u2, "_create", [t4, r3, o3, c2, g2, m2, l2, y2]);
              });
            } }, { key: "_create", value: function _create(t4, r3, o3, c2, h2, g2, m2) {
              var y2 = arguments.length > 7 && arguments[7] !== void 0 ? arguments[7] : -1, v2 = t4.fetchIfRef(r3);
              if (v2 instanceof d.Dict) {
                var k2 = r3 instanceof d.Ref ? r3.toString() : "annot_".concat(c2.createObjId()), _2 = v2.get("Subtype"), w2 = { xref: t4, ref: r3, dict: v2, subtype: _2 = _2 instanceof d.Name ? _2.name : null, id: k2, pdfManager: o3, acroForm: h2 instanceof d.Dict ? h2 : d.Dict.empty, xfaDatasets: g2, collectFields: m2, pageIndex: y2 };
                switch (_2) {
                  case "Link":
                    return new $(w2);
                  case "Text":
                    return new H(w2);
                  case "Widget":
                    var S2 = (0, u.getInheritableProperty)({ dict: v2, key: "FT" });
                    switch (S2 = S2 instanceof d.Name ? S2.name : null) {
                      case "Tx":
                        return new j(w2);
                      case "Btn":
                        return new L(w2);
                      case "Ch":
                        return new N(w2);
                      case "Sig":
                        return new U(w2);
                    }
                    (0, l.warn)('Unimplemented widget field type "'.concat(S2, '", ') + "falling back to base field type.");
                    return new D(w2);
                  case "Popup":
                    return new X(w2);
                  case "FreeText":
                    return new q(w2);
                  case "Line":
                    return new G(w2);
                  case "Square":
                    return new z(w2);
                  case "Circle":
                    return new W(w2);
                  case "PolyLine":
                    return new V(w2);
                  case "Polygon":
                    return new K(w2);
                  case "Caret":
                    return new Y(w2);
                  case "Ink":
                    return new J(w2);
                  case "Highlight":
                    return new Z(w2);
                  case "Underline":
                    return new Q(w2);
                  case "Squiggly":
                    return new ee(w2);
                  case "StrikeOut":
                    return new te(w2);
                  case "Stamp":
                    return new re(w2);
                  case "FileAttachment":
                    return new ae(w2);
                  default:
                    m2 || (_2 ? (0, l.warn)('Unimplemented annotation type "'.concat(_2, '", ') + "falling back to base annotation.") : (0, l.warn)("Annotation is missing the required /Subtype."));
                    return new E(w2);
                }
              }
            } }, { key: "_getPageIndex", value: (t3 = _asyncToGenerator(c.default.mark(function _callee(t4, r3, o3) {
              var u2, h2, g2;
              return c.default.wrap(function _callee$(c2) {
                for (; ; )
                  switch (c2.prev = c2.next) {
                    case 0:
                      c2.prev = 0;
                      c2.next = 3;
                      return t4.fetchIfRefAsync(r3);
                    case 3:
                      if ((u2 = c2.sent) instanceof d.Dict) {
                        c2.next = 6;
                        break;
                      }
                      return c2.abrupt("return", -1);
                    case 6:
                      if ((h2 = u2.getRaw("P")) instanceof d.Ref) {
                        c2.next = 9;
                        break;
                      }
                      return c2.abrupt("return", -1);
                    case 9:
                      c2.next = 11;
                      return o3.ensureCatalog("getPageIndex", [h2]);
                    case 11:
                      g2 = c2.sent;
                      return c2.abrupt("return", g2);
                    case 15:
                      c2.prev = 15;
                      c2.t0 = c2.catch(0);
                      (0, l.warn)('_getPageIndex: "'.concat(c2.t0, '".'));
                      return c2.abrupt("return", -1);
                    case 19:
                    case "end":
                      return c2.stop();
                  }
              }, _callee, null, [[0, 15]]);
            })), function _getPageIndex(r3, o3, c2) {
              return t3.apply(this, arguments);
            }) }]);
            var t3;
            return AnnotationFactory;
          }();
          r2.AnnotationFactory = T;
          function getRgbColor(t3) {
            var r3 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : new Uint8ClampedArray(3);
            if (!Array.isArray(t3))
              return r3;
            var o3 = r3 || new Uint8ClampedArray(3);
            switch (t3.length) {
              case 0:
                return null;
              case 1:
                v.ColorSpace.singletons.gray.getRgbItem(t3, 0, o3, 0);
                return o3;
              case 3:
                v.ColorSpace.singletons.rgb.getRgbItem(t3, 0, o3, 0);
                return o3;
              case 4:
                v.ColorSpace.singletons.cmyk.getRgbItem(t3, 0, o3, 0);
                return o3;
              default:
                return r3;
            }
          }
          function getQuadPoints(t3, r3) {
            if (!t3.has("QuadPoints"))
              return null;
            var o3 = t3.getArray("QuadPoints");
            if (!Array.isArray(o3) || o3.length === 0 || o3.length % 8 > 0)
              return null;
            for (var c2 = [], l2 = 0, u2 = o3.length / 8; l2 < u2; l2++) {
              c2.push([]);
              for (var h2 = 8 * l2, d2 = 8 * l2 + 8; h2 < d2; h2 += 2) {
                var g2 = o3[h2], m2 = o3[h2 + 1];
                if (r3 !== null && (g2 < r3[0] || g2 > r3[2] || m2 < r3[1] || m2 > r3[3]))
                  return null;
                c2[l2].push({ x: g2, y: m2 });
              }
            }
            return c2.map(function(t4) {
              var r4 = t4.reduce(function(t5, r5) {
                var o5 = _slicedToArray(t5, 4), c4 = o5[0], l4 = o5[1], u4 = o5[2], h4 = o5[3];
                return [Math.min(c4, r5.x), Math.max(l4, r5.x), Math.min(u4, r5.y), Math.max(h4, r5.y)];
              }, [Number.MAX_VALUE, Number.MIN_VALUE, Number.MAX_VALUE, Number.MIN_VALUE]), o4 = _slicedToArray(r4, 4), c3 = o4[0], l3 = o4[1], u3 = o4[2], h3 = o4[3];
              return [{ x: c3, y: h3 }, { x: l3, y: h3 }, { x: c3, y: u3 }, { x: l3, y: u3 }];
            });
          }
          function getTransformMatrix(t3, r3, o3) {
            var c2 = _slicedToArray(l.Util.getAxialAlignedBoundingBox(r3, o3), 4), u2 = c2[0], h2 = c2[1], d2 = c2[2], g2 = c2[3];
            if (u2 === d2 || h2 === g2)
              return [1, 0, 0, 1, t3[0], t3[1]];
            var m2 = (t3[2] - t3[0]) / (d2 - u2), y2 = (t3[3] - t3[1]) / (g2 - h2);
            return [m2, 0, 0, y2, t3[0] - u2 * m2, t3[1] - h2 * y2];
          }
          var E = function() {
            function Annotation(t4) {
              _classCallCheck(this, Annotation);
              var r3 = t4.dict;
              this.setTitle(r3.get("T"));
              this.setContents(r3.get("Contents"));
              this.setModificationDate(r3.get("M"));
              this.setFlags(r3.get("F"));
              this.setRectangle(r3.getArray("Rect"));
              this.setColor(r3.getArray("C"));
              this.setBorderStyle(r3);
              this.setAppearance(r3);
              this.setBorderAndBackgroundColors(r3.get("MK"));
              this._streams = [];
              this.appearance && this._streams.push(this.appearance);
              this.data = { annotationFlags: this.flags, borderStyle: this.borderStyle, color: this.color, backgroundColor: this.backgroundColor, borderColor: this.borderColor, contentsObj: this._contents, hasAppearance: !!this.appearance, id: t4.id, modificationDate: this.modificationDate, rect: this.rectangle, subtype: t4.subtype, hasOwnCanvas: false };
              if (t4.collectFields) {
                var o3 = r3.get("Kids");
                if (Array.isArray(o3)) {
                  var c2, h2 = [], g2 = _createForOfIteratorHelper(o3);
                  try {
                    for (g2.s(); !(c2 = g2.n()).done; ) {
                      var m2 = c2.value;
                      m2 instanceof d.Ref && h2.push(m2.toString());
                    }
                  } catch (t5) {
                    g2.e(t5);
                  } finally {
                    g2.f();
                  }
                  h2.length !== 0 && (this.data.kidIds = h2);
                }
                this.data.actions = (0, u.collectActions)(t4.xref, r3, l.AnnotationActionEventType);
                this.data.fieldName = this._constructFieldName(r3);
                this.data.pageIndex = t4.pageIndex;
              }
              this._fallbackFontDict = null;
            }
            _createClass(Annotation, [{ key: "_hasFlag", value: function _hasFlag(t4, r3) {
              return !!(t4 & r3);
            } }, { key: "_isViewable", value: function _isViewable(t4) {
              return !this._hasFlag(t4, l.AnnotationFlag.INVISIBLE) && !this._hasFlag(t4, l.AnnotationFlag.NOVIEW);
            } }, { key: "_isPrintable", value: function _isPrintable(t4) {
              return this._hasFlag(t4, l.AnnotationFlag.PRINT) && !this._hasFlag(t4, l.AnnotationFlag.INVISIBLE);
            } }, { key: "mustBeViewed", value: function mustBeViewed(t4) {
              var r3 = t4 && t4.get(this.data.id);
              return r3 && r3.hidden !== void 0 ? !r3.hidden : this.viewable && !this._hasFlag(this.flags, l.AnnotationFlag.HIDDEN);
            } }, { key: "mustBePrinted", value: function mustBePrinted(t4) {
              var r3 = t4 && t4.get(this.data.id);
              return r3 && r3.print !== void 0 ? r3.print : this.printable;
            } }, { key: "viewable", get: function get() {
              return this.data.quadPoints !== null && (this.flags === 0 || this._isViewable(this.flags));
            } }, { key: "printable", get: function get() {
              return this.data.quadPoints !== null && (this.flags !== 0 && this._isPrintable(this.flags));
            } }, { key: "_parseStringHelper", value: function _parseStringHelper(t4) {
              var r3 = typeof t4 == "string" ? (0, l.stringToPDFString)(t4) : "";
              return { str: r3, dir: r3 && (0, m.bidi)(r3).dir === "rtl" ? "rtl" : "ltr" };
            } }, { key: "setTitle", value: function setTitle(t4) {
              this._title = this._parseStringHelper(t4);
            } }, { key: "setContents", value: function setContents(t4) {
              this._contents = this._parseStringHelper(t4);
            } }, { key: "setModificationDate", value: function setModificationDate(t4) {
              this.modificationDate = typeof t4 == "string" ? t4 : null;
            } }, { key: "setFlags", value: function setFlags(t4) {
              this.flags = Number.isInteger(t4) && t4 > 0 ? t4 : 0;
            } }, { key: "hasFlag", value: function hasFlag(t4) {
              return this._hasFlag(this.flags, t4);
            } }, { key: "setRectangle", value: function setRectangle(t4) {
              Array.isArray(t4) && t4.length === 4 ? this.rectangle = l.Util.normalizeRect(t4) : this.rectangle = [0, 0, 0, 0];
            } }, { key: "setColor", value: function setColor(t4) {
              this.color = getRgbColor(t4);
            } }, { key: "setLineEndings", value: function setLineEndings(t4) {
              this.lineEndings = ["None", "None"];
              if (Array.isArray(t4) && t4.length === 2)
                for (var r3 = 0; r3 < 2; r3++) {
                  var o3 = t4[r3];
                  if (o3 instanceof d.Name)
                    switch (o3.name) {
                      case "None":
                        continue;
                      case "Square":
                      case "Circle":
                      case "Diamond":
                      case "OpenArrow":
                      case "ClosedArrow":
                      case "Butt":
                      case "ROpenArrow":
                      case "RClosedArrow":
                      case "Slash":
                        this.lineEndings[r3] = o3.name;
                        continue;
                    }
                  (0, l.warn)("Ignoring invalid lineEnding: ".concat(o3));
                }
            } }, { key: "setBorderAndBackgroundColors", value: function setBorderAndBackgroundColors(t4) {
              if (t4 instanceof d.Dict) {
                this.borderColor = getRgbColor(t4.getArray("BC"), null);
                this.backgroundColor = getRgbColor(t4.getArray("BG"), null);
              } else
                this.borderColor = this.backgroundColor = null;
            } }, { key: "setBorderStyle", value: function setBorderStyle(t4) {
              this.borderStyle = new M();
              if (t4 instanceof d.Dict)
                if (t4.has("BS")) {
                  var r3 = t4.get("BS"), o3 = r3.get("Type");
                  if (!o3 || (0, d.isName)(o3, "Border")) {
                    this.borderStyle.setWidth(r3.get("W"), this.rectangle);
                    this.borderStyle.setStyle(r3.get("S"));
                    this.borderStyle.setDashArray(r3.getArray("D"));
                  }
                } else if (t4.has("Border")) {
                  var c2 = t4.getArray("Border");
                  if (Array.isArray(c2) && c2.length >= 3) {
                    this.borderStyle.setHorizontalCornerRadius(c2[0]);
                    this.borderStyle.setVerticalCornerRadius(c2[1]);
                    this.borderStyle.setWidth(c2[2], this.rectangle);
                    c2.length === 4 && this.borderStyle.setDashArray(c2[3], true);
                  }
                } else
                  this.borderStyle.setWidth(0);
            } }, { key: "setAppearance", value: function setAppearance(t4) {
              this.appearance = null;
              var r3 = t4.get("AP");
              if (r3 instanceof d.Dict) {
                var o3 = r3.get("N");
                if (o3 instanceof g.BaseStream)
                  this.appearance = o3;
                else if (o3 instanceof d.Dict) {
                  var c2 = t4.get("AS");
                  c2 instanceof d.Name && o3.has(c2.name) && (this.appearance = o3.get(c2.name));
                }
              }
            } }, { key: "loadResources", value: function loadResources(t4, r3) {
              return r3.dict.getAsync("Resources").then(function(r4) {
                if (r4) {
                  return new _.ObjectLoader(r4, t4, r4.xref).load().then(function() {
                    return r4;
                  });
                }
              });
            } }, { key: "getOperatorList", value: function getOperatorList(t4, r3, o3, c2, u2) {
              var h2 = this, g2 = this.data, m2 = this.appearance, y2 = g2.hasOwnCanvas && o3 & l.RenderingIntentFlag.DISPLAY;
              if (!m2) {
                if (!y2)
                  return Promise.resolve(new w.OperatorList());
                (m2 = new S.StringStream("")).dict = new d.Dict();
              }
              var v2 = m2.dict, k2 = this.loadResources(["ExtGState", "ColorSpace", "Pattern", "Shading", "XObject", "Font"], m2), _2 = v2.getArray("BBox") || [0, 0, 1, 1], C2 = v2.getArray("Matrix") || [1, 0, 0, 1, 0, 0], x2 = getTransformMatrix(g2.rect, _2, C2);
              return k2.then(function(o4) {
                var c3 = new w.OperatorList();
                c3.addOp(l.OPS.beginAnnotation, [g2.id, g2.rect, x2, C2, y2]);
                return t4.getOperatorList({ stream: m2, task: r3, resources: o4, operatorList: c3, fallbackFontDict: h2._fallbackFontDict }).then(function() {
                  c3.addOp(l.OPS.endAnnotation, []);
                  h2.reset();
                  return c3;
                });
              });
            } }, { key: "save", value: (t3 = _asyncToGenerator(c.default.mark(function _callee2(t4, r3, o3) {
              return c.default.wrap(function _callee2$(t5) {
                for (; ; )
                  switch (t5.prev = t5.next) {
                    case 0:
                      return t5.abrupt("return", null);
                    case 1:
                    case "end":
                      return t5.stop();
                  }
              }, _callee2);
            })), function save(r3, o3, c2) {
              return t3.apply(this, arguments);
            }) }, { key: "getFieldObject", value: function getFieldObject() {
              return this.data.kidIds ? { id: this.data.id, actions: this.data.actions, name: this.data.fieldName, strokeColor: this.data.borderColor, fillColor: this.data.backgroundColor, type: "", kidIds: this.data.kidIds, page: this.data.pageIndex } : null;
            } }, { key: "reset", value: function reset() {
              var t4, r3 = _createForOfIteratorHelper(this._streams);
              try {
                for (r3.s(); !(t4 = r3.n()).done; ) {
                  t4.value.reset();
                }
              } catch (t5) {
                r3.e(t5);
              } finally {
                r3.f();
              }
            } }, { key: "_constructFieldName", value: function _constructFieldName(t4) {
              if (!t4.has("T") && !t4.has("Parent")) {
                (0, l.warn)("Unknown field name, falling back to empty field name.");
                return "";
              }
              if (!t4.has("Parent"))
                return (0, l.stringToPDFString)(t4.get("T"));
              var r3 = [];
              t4.has("T") && r3.unshift((0, l.stringToPDFString)(t4.get("T")));
              var o3 = t4, c2 = new d.RefSet();
              t4.objId && c2.put(t4.objId);
              for (; o3.has("Parent") && (o3 = o3.get("Parent")) instanceof d.Dict && (!o3.objId || !c2.has(o3.objId)); ) {
                o3.objId && c2.put(o3.objId);
                o3.has("T") && r3.unshift((0, l.stringToPDFString)(o3.get("T")));
              }
              return r3.join(".");
            } }]);
            var t3;
            return Annotation;
          }();
          r2.Annotation = E;
          var M = function() {
            function AnnotationBorderStyle() {
              _classCallCheck(this, AnnotationBorderStyle);
              this.width = 1;
              this.style = l.AnnotationBorderStyleType.SOLID;
              this.dashArray = [3];
              this.horizontalCornerRadius = 0;
              this.verticalCornerRadius = 0;
            }
            _createClass(AnnotationBorderStyle, [{ key: "setWidth", value: function setWidth(t3) {
              var r3 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [0, 0, 0, 0];
              if (t3 instanceof d.Name)
                this.width = 0;
              else if (typeof t3 == "number") {
                if (t3 > 0) {
                  var o3 = (r3[2] - r3[0]) / 2, c2 = (r3[3] - r3[1]) / 2;
                  if (o3 > 0 && c2 > 0 && (t3 > o3 || t3 > c2)) {
                    (0, l.warn)("AnnotationBorderStyle.setWidth - ignoring width: ".concat(t3));
                    t3 = 1;
                  }
                }
                this.width = t3;
              }
            } }, { key: "setStyle", value: function setStyle(t3) {
              if (t3 instanceof d.Name)
                switch (t3.name) {
                  case "S":
                    this.style = l.AnnotationBorderStyleType.SOLID;
                    break;
                  case "D":
                    this.style = l.AnnotationBorderStyleType.DASHED;
                    break;
                  case "B":
                    this.style = l.AnnotationBorderStyleType.BEVELED;
                    break;
                  case "I":
                    this.style = l.AnnotationBorderStyleType.INSET;
                    break;
                  case "U":
                    this.style = l.AnnotationBorderStyleType.UNDERLINE;
                }
            } }, { key: "setDashArray", value: function setDashArray(t3) {
              var r3 = arguments.length > 1 && arguments[1] !== void 0 && arguments[1];
              if (Array.isArray(t3) && t3.length > 0) {
                var o3, c2 = true, l2 = true, u2 = _createForOfIteratorHelper(t3);
                try {
                  for (u2.s(); !(o3 = u2.n()).done; ) {
                    var h2 = o3.value, g2 = +h2 >= 0;
                    if (!g2) {
                      c2 = false;
                      break;
                    }
                    h2 > 0 && (l2 = false);
                  }
                } catch (t4) {
                  u2.e(t4);
                } finally {
                  u2.f();
                }
                if (c2 && !l2) {
                  this.dashArray = t3;
                  r3 && this.setStyle(d.Name.get("D"));
                } else
                  this.width = 0;
              } else
                t3 && (this.width = 0);
            } }, { key: "setHorizontalCornerRadius", value: function setHorizontalCornerRadius(t3) {
              Number.isInteger(t3) && (this.horizontalCornerRadius = t3);
            } }, { key: "setVerticalCornerRadius", value: function setVerticalCornerRadius(t3) {
              Number.isInteger(t3) && (this.verticalCornerRadius = t3);
            } }]);
            return AnnotationBorderStyle;
          }();
          r2.AnnotationBorderStyle = M;
          var R = function(t3) {
            _inherits(MarkupAnnotation, t3);
            var r3 = _createSuper(MarkupAnnotation);
            function MarkupAnnotation(t4) {
              var o3;
              _classCallCheck(this, MarkupAnnotation);
              o3 = r3.call(this, t4);
              var c2 = t4.dict;
              if (c2.has("IRT")) {
                var u2 = c2.getRaw("IRT");
                o3.data.inReplyTo = u2 instanceof d.Ref ? u2.toString() : null;
                var h2 = c2.get("RT");
                o3.data.replyType = h2 instanceof d.Name ? h2.name : l.AnnotationReplyType.REPLY;
              }
              if (o3.data.replyType === l.AnnotationReplyType.GROUP) {
                var g2 = c2.get("IRT");
                o3.setTitle(g2.get("T"));
                o3.data.titleObj = o3._title;
                o3.setContents(g2.get("Contents"));
                o3.data.contentsObj = o3._contents;
                if (g2.has("CreationDate")) {
                  o3.setCreationDate(g2.get("CreationDate"));
                  o3.data.creationDate = o3.creationDate;
                } else
                  o3.data.creationDate = null;
                if (g2.has("M")) {
                  o3.setModificationDate(g2.get("M"));
                  o3.data.modificationDate = o3.modificationDate;
                } else
                  o3.data.modificationDate = null;
                o3.data.hasPopup = g2.has("Popup");
                if (g2.has("C")) {
                  o3.setColor(g2.getArray("C"));
                  o3.data.color = o3.color;
                } else
                  o3.data.color = null;
              } else {
                o3.data.titleObj = o3._title;
                o3.setCreationDate(c2.get("CreationDate"));
                o3.data.creationDate = o3.creationDate;
                o3.data.hasPopup = c2.has("Popup");
                c2.has("C") || (o3.data.color = null);
              }
              c2.has("RC") && (o3.data.richText = x.XFAFactory.getRichTextAsHtml(c2.get("RC")));
              return o3;
            }
            _createClass(MarkupAnnotation, [{ key: "setCreationDate", value: function setCreationDate(t4) {
              this.creationDate = typeof t4 == "string" ? t4 : null;
            } }, { key: "_setDefaultAppearance", value: function _setDefaultAppearance(t4) {
              var r4 = t4.xref, o3 = t4.extra, c2 = t4.strokeColor, l2 = t4.fillColor, u2 = t4.blendMode, h2 = t4.strokeAlpha, g2 = t4.fillAlpha, m2 = t4.pointsCallback, y2 = Number.MAX_VALUE, v2 = Number.MAX_VALUE, k2 = Number.MIN_VALUE, _2 = Number.MIN_VALUE, w2 = ["q"];
              o3 && w2.push(o3);
              c2 && w2.push("".concat(c2[0], " ").concat(c2[1], " ").concat(c2[2], " RG"));
              l2 && w2.push("".concat(l2[0], " ").concat(l2[1], " ").concat(l2[2], " rg"));
              var C2 = this.data.quadPoints;
              C2 || (C2 = [[{ x: this.rectangle[0], y: this.rectangle[3] }, { x: this.rectangle[2], y: this.rectangle[3] }, { x: this.rectangle[0], y: this.rectangle[1] }, { x: this.rectangle[2], y: this.rectangle[1] }]]);
              var x2, O2 = _createForOfIteratorHelper(C2);
              try {
                for (O2.s(); !(x2 = O2.n()).done; ) {
                  var T2 = _slicedToArray(m2(w2, x2.value), 4), E2 = T2[0], M2 = T2[1], R2 = T2[2], D2 = T2[3];
                  y2 = Math.min(y2, E2);
                  k2 = Math.max(k2, M2);
                  v2 = Math.min(v2, R2);
                  _2 = Math.max(_2, D2);
                }
              } catch (t5) {
                O2.e(t5);
              } finally {
                O2.f();
              }
              w2.push("Q");
              var j2 = new d.Dict(r4), L2 = new d.Dict(r4);
              L2.set("Subtype", d.Name.get("Form"));
              var N2 = new S.StringStream(w2.join(" "));
              N2.dict = L2;
              j2.set("Fm0", N2);
              var U2 = new d.Dict(r4);
              u2 && U2.set("BM", d.Name.get(u2));
              typeof h2 == "number" && U2.set("CA", h2);
              typeof g2 == "number" && U2.set("ca", g2);
              var H2 = new d.Dict(r4);
              H2.set("GS0", U2);
              var $2 = new d.Dict(r4);
              $2.set("ExtGState", H2);
              $2.set("XObject", j2);
              var X2 = new d.Dict(r4);
              X2.set("Resources", $2);
              var q2 = this.data.rect = [y2, v2, k2, _2];
              X2.set("BBox", q2);
              this.appearance = new S.StringStream("/GS0 gs /Fm0 Do");
              this.appearance.dict = X2;
              this._streams.push(this.appearance, N2);
            } }]);
            return MarkupAnnotation;
          }(E);
          r2.MarkupAnnotation = R;
          var D = function(t3) {
            _inherits(WidgetAnnotation, t3);
            var r3, o3, g2, m2 = _createSuper(WidgetAnnotation);
            function WidgetAnnotation(t4) {
              var r4;
              _classCallCheck(this, WidgetAnnotation);
              r4 = m2.call(this, t4);
              var o4 = t4.dict, c2 = r4.data;
              r4.ref = t4.ref;
              c2.annotationType = l.AnnotationType.WIDGET;
              c2.fieldName === void 0 && (c2.fieldName = r4._constructFieldName(o4));
              c2.actions === void 0 && (c2.actions = (0, u.collectActions)(t4.xref, o4, l.AnnotationActionEventType));
              var g3 = (0, u.getInheritableProperty)({ dict: o4, key: "V", getArray: true });
              c2.fieldValue = r4._decodeFormValue(g3);
              var y2 = (0, u.getInheritableProperty)({ dict: o4, key: "DV", getArray: true });
              c2.defaultFieldValue = r4._decodeFormValue(y2);
              if (g3 === void 0 && t4.xfaDatasets) {
                var v2 = r4._title.str;
                if (v2) {
                  r4._hasValueFromXFA = true;
                  c2.fieldValue = g3 = t4.xfaDatasets.getValue(v2);
                }
              }
              g3 === void 0 && c2.defaultFieldValue !== null && (c2.fieldValue = c2.defaultFieldValue);
              c2.alternativeText = (0, l.stringToPDFString)(o4.get("TU") || "");
              var k2 = (0, u.getInheritableProperty)({ dict: o4, key: "DA" }) || t4.acroForm.get("DA");
              r4._defaultAppearance = typeof k2 == "string" ? k2 : "";
              c2.defaultAppearanceData = (0, h.parseDefaultAppearance)(r4._defaultAppearance);
              var _2 = (0, u.getInheritableProperty)({ dict: o4, key: "FT" });
              c2.fieldType = _2 instanceof d.Name ? _2.name : null;
              var w2 = (0, u.getInheritableProperty)({ dict: o4, key: "DR" }), S2 = t4.acroForm.get("DR"), C2 = r4.appearance && r4.appearance.dict.get("Resources");
              r4._fieldResources = { localResources: w2, acroFormResources: S2, appearanceResources: C2, mergedResources: d.Dict.merge({ xref: t4.xref, dictArray: [w2, C2, S2], mergeSubDicts: true }) };
              c2.fieldFlags = (0, u.getInheritableProperty)({ dict: o4, key: "Ff" });
              (!Number.isInteger(c2.fieldFlags) || c2.fieldFlags < 0) && (c2.fieldFlags = 0);
              c2.readOnly = r4.hasFieldFlag(l.AnnotationFieldFlag.READONLY);
              c2.hidden = r4._hasFlag(c2.annotationFlags, l.AnnotationFlag.HIDDEN);
              return r4;
            }
            _createClass(WidgetAnnotation, [{ key: "_decodeFormValue", value: function _decodeFormValue(t4) {
              return Array.isArray(t4) ? t4.filter(function(t5) {
                return typeof t5 == "string";
              }).map(function(t5) {
                return (0, l.stringToPDFString)(t5);
              }) : t4 instanceof d.Name ? (0, l.stringToPDFString)(t4.name) : typeof t4 == "string" ? (0, l.stringToPDFString)(t4) : null;
            } }, { key: "hasFieldFlag", value: function hasFieldFlag(t4) {
              return !!(this.data.fieldFlags & t4);
            } }, { key: "getOperatorList", value: function getOperatorList(t4, r4, o4, c2, u2) {
              var h2 = this;
              return !c2 || this instanceof U ? this._hasText ? this._getAppearance(t4, r4, u2).then(function(d2) {
                if (h2.appearance && d2 === null)
                  return _get(_getPrototypeOf(WidgetAnnotation.prototype), "getOperatorList", h2).call(h2, t4, r4, o4, c2, u2);
                var g3 = new w.OperatorList();
                if (!h2._defaultAppearance || d2 === null)
                  return g3;
                var m3 = [1, 0, 0, 1, 0, 0], y2 = [0, 0, h2.data.rect[2] - h2.data.rect[0], h2.data.rect[3] - h2.data.rect[1]], v2 = getTransformMatrix(h2.data.rect, y2, m3);
                g3.addOp(l.OPS.beginAnnotation, [h2.data.id, h2.data.rect, v2, m3]);
                var k2 = new S.StringStream(d2);
                return t4.getOperatorList({ stream: k2, task: r4, resources: h2._fieldResources.mergedResources, operatorList: g3 }).then(function() {
                  g3.addOp(l.OPS.endAnnotation, []);
                  return g3;
                });
              }) : _get(_getPrototypeOf(WidgetAnnotation.prototype), "getOperatorList", this).call(this, t4, r4, o4, c2, u2) : Promise.resolve(new w.OperatorList());
            } }, { key: "save", value: (g2 = _asyncToGenerator(c.default.mark(function _callee3(t4, r4, o4) {
              var u2, h2, g3, m3, y2, v2, k2, _2, w2, S2, x2, O2, T2, E2, M2, R2, D2 = this;
              return c.default.wrap(function _callee3$(c2) {
                for (; ; )
                  switch (c2.prev = c2.next) {
                    case 0:
                      u2 = o4 ? o4.get(this.data.id) : void 0;
                      if ((h2 = u2 && u2.value) !== this.data.fieldValue && h2 !== void 0) {
                        c2.next = 6;
                        break;
                      }
                      if (this._hasValueFromXFA) {
                        c2.next = 5;
                        break;
                      }
                      return c2.abrupt("return", null);
                    case 5:
                      h2 = h2 || this.data.fieldValue;
                    case 6:
                      if (this._hasValueFromXFA || !Array.isArray(h2) || !Array.isArray(this.data.fieldValue) || h2.length !== this.data.fieldValue.length || !h2.every(function(t5, r5) {
                        return t5 === D2.data.fieldValue[r5];
                      })) {
                        c2.next = 8;
                        break;
                      }
                      return c2.abrupt("return", null);
                    case 8:
                      c2.next = 10;
                      return this._getAppearance(t4, r4, o4);
                    case 10:
                      if ((g3 = c2.sent) !== null) {
                        c2.next = 13;
                        break;
                      }
                      return c2.abrupt("return", null);
                    case 13:
                      m3 = t4.xref;
                      if ((y2 = m3.fetchIfRef(this.ref)) instanceof d.Dict) {
                        c2.next = 17;
                        break;
                      }
                      return c2.abrupt("return", null);
                    case 17:
                      v2 = [0, 0, this.data.rect[2] - this.data.rect[0], this.data.rect[3] - this.data.rect[1]];
                      k2 = { path: (0, l.stringToPDFString)(y2.get("T") || ""), value: h2 };
                      _2 = m3.getNewRef();
                      (w2 = new d.Dict(m3)).set("N", _2);
                      S2 = m3.encrypt;
                      x2 = null;
                      O2 = null;
                      if (S2) {
                        x2 = S2.createCipherTransform(this.ref.num, this.ref.gen);
                        O2 = S2.createCipherTransform(_2.num, _2.gen);
                        g3 = O2.encryptString(g3);
                      }
                      T2 = function encoder(t5) {
                        return (0, l.isAscii)(t5) ? t5 : (0, l.stringToUTF16BEString)(t5);
                      };
                      y2.set("V", Array.isArray(h2) ? h2.map(T2) : T2(h2));
                      y2.set("AP", w2);
                      y2.set("M", "D:".concat((0, l.getModificationDate)()));
                      (E2 = new d.Dict(m3)).set("Length", g3.length);
                      E2.set("Subtype", d.Name.get("Form"));
                      E2.set("Resources", this._getSaveFieldResources(m3));
                      E2.set("BBox", v2);
                      M2 = ["".concat(this.ref.num, " ").concat(this.ref.gen, " obj\n")];
                      (0, C.writeDict)(y2, M2, x2);
                      M2.push("\nendobj\n");
                      R2 = ["".concat(_2.num, " ").concat(_2.gen, " obj\n")];
                      (0, C.writeDict)(E2, R2, O2);
                      R2.push(" stream\n", g3, "\nendstream\nendobj\n");
                      return c2.abrupt("return", [{ ref: this.ref, data: M2.join(""), xfa: k2 }, { ref: _2, data: R2.join(""), xfa: null }]);
                    case 42:
                    case "end":
                      return c2.stop();
                  }
              }, _callee3, this);
            })), function save(t4, r4, o4) {
              return g2.apply(this, arguments);
            }) }, { key: "_getAppearance", value: (o3 = _asyncToGenerator(c.default.mark(function _callee4(t4, r4, o4) {
              var u2, d2, g3, m3, y2, v2, k2, _2, w2, S2, C2, x2, O2, T2, E2, M2, R2;
              return c.default.wrap(function _callee4$(c2) {
                for (; ; )
                  switch (c2.prev = c2.next) {
                    case 0:
                      if (!this.hasFieldFlag(l.AnnotationFieldFlag.PASSWORD)) {
                        c2.next = 3;
                        break;
                      }
                      return c2.abrupt("return", null);
                    case 3:
                      u2 = o4 ? o4.get(this.data.id) : void 0;
                      if ((d2 = u2 && (u2.formattedValue || u2.value)) !== void 0) {
                        c2.next = 11;
                        break;
                      }
                      if (this._hasValueFromXFA && !this.appearance) {
                        c2.next = 8;
                        break;
                      }
                      return c2.abrupt("return", null);
                    case 8:
                      if (d2 = this.data.fieldValue) {
                        c2.next = 11;
                        break;
                      }
                      return c2.abrupt("return", "");
                    case 11:
                      (0, l.assert)(typeof d2 == "string", "Expected `value` to be a string.");
                      if ((d2 = d2.trim()) !== "") {
                        c2.next = 15;
                        break;
                      }
                      return c2.abrupt("return", "");
                    case 15:
                      g3 = -1;
                      this.data.multiLine && (g3 = d2.split(/\r\n|\r|\n/).length);
                      y2 = m3 = 2;
                      v2 = this.data.rect[3] - this.data.rect[1];
                      k2 = this.data.rect[2] - this.data.rect[0];
                      this._defaultAppearance || (this.data.defaultAppearanceData = (0, h.parseDefaultAppearance)(this._defaultAppearance = "/Helvetica 0 Tf 0 g"));
                      c2.next = 24;
                      return this._getFontData(t4, r4);
                    case 24:
                      _2 = c2.sent;
                      w2 = this._computeFontSize(v2 - m3, k2 - 2 * y2, d2, _2, g3), S2 = _slicedToArray(w2, 2), C2 = S2[0], x2 = S2[1];
                      O2 = _2.descent;
                      isNaN(O2) && (O2 = 0);
                      T2 = m3 + Math.abs(O2) * x2;
                      E2 = this.data.textAlignment;
                      if (!this.data.multiLine) {
                        c2.next = 32;
                        break;
                      }
                      return c2.abrupt("return", this._getMultilineAppearance(C2, d2, _2, x2, k2, v2, E2, y2, T2));
                    case 32:
                      M2 = _2.encodeString(d2).join("");
                      if (!this.data.comb) {
                        c2.next = 35;
                        break;
                      }
                      return c2.abrupt("return", this._getCombAppearance(C2, _2, M2, k2, y2, T2));
                    case 35:
                      if (!(E2 === 0 || E2 > 2)) {
                        c2.next = 37;
                        break;
                      }
                      return c2.abrupt("return", "/Tx BMC q BT " + C2 + " 1 0 0 1 ".concat(y2, " ").concat(T2, " Tm (").concat((0, l.escapeString)(M2), ") Tj") + " ET Q EMC");
                    case 37:
                      R2 = this._renderText(M2, _2, x2, k2, E2, y2, T2);
                      return c2.abrupt("return", "/Tx BMC q BT " + C2 + " 1 0 0 1 0 0 Tm ".concat(R2) + " ET Q EMC");
                    case 39:
                    case "end":
                      return c2.stop();
                  }
              }, _callee4, this);
            })), function _getAppearance(t4, r4, c2) {
              return o3.apply(this, arguments);
            }) }, { key: "_getFontData", value: (r3 = _asyncToGenerator(c.default.mark(function _callee5(t4, r4) {
              var o4, l2, u2, h2, g3;
              return c.default.wrap(function _callee5$(c2) {
                for (; ; )
                  switch (c2.prev = c2.next) {
                    case 0:
                      o4 = new w.OperatorList();
                      l2 = { font: null, clone: function clone() {
                        return this;
                      } };
                      u2 = this.data.defaultAppearanceData, h2 = u2.fontName, g3 = u2.fontSize;
                      c2.next = 5;
                      return t4.handleSetFont(this._fieldResources.mergedResources, [h2 && d.Name.get(h2), g3], null, o4, r4, l2, null);
                    case 5:
                      return c2.abrupt("return", l2.font);
                    case 6:
                    case "end":
                      return c2.stop();
                  }
              }, _callee5, this);
            })), function _getFontData(t4, o4) {
              return r3.apply(this, arguments);
            }) }, { key: "_getTextWidth", value: function _getTextWidth(t4, r4) {
              return r4.charsToGlyphs(t4).reduce(function(t5, r5) {
                return t5 + r5.width;
              }, 0) / 1e3;
            } }, { key: "_computeFontSize", value: function _computeFontSize(t4, r4, o4, c2, l2) {
              var u2 = this, d2 = this.data.defaultAppearanceData.fontSize;
              if (!d2) {
                var g3 = function roundWithTwoDigits(t5) {
                  return Math.floor(100 * t5) / 100;
                };
                if (l2 === -1) {
                  var m3 = this._getTextWidth(o4, c2);
                  d2 = g3(Math.min(t4 / O, r4 / m3));
                } else {
                  var y2, v2 = o4.split(/\r\n?|\n/), k2 = [], _2 = _createForOfIteratorHelper(v2);
                  try {
                    for (_2.s(); !(y2 = _2.n()).done; ) {
                      var w2 = y2.value, S2 = c2.encodeString(w2).join(""), C2 = c2.charsToGlyphs(S2), x2 = c2.getCharPositions(S2);
                      k2.push({ line: S2, glyphs: C2, positions: x2 });
                    }
                  } catch (t5) {
                    _2.e(t5);
                  } finally {
                    _2.f();
                  }
                  var T2 = function isTooBig(o5) {
                    var l3, h2 = 0, d3 = _createForOfIteratorHelper(k2);
                    try {
                      for (d3.s(); !(l3 = d3.n()).done; ) {
                        var g4 = l3.value;
                        if ((h2 += u2._splitLine(null, c2, o5, r4, g4).length * o5) > t4)
                          return true;
                      }
                    } catch (t5) {
                      d3.e(t5);
                    } finally {
                      d3.f();
                    }
                    return false;
                  }, E2 = (d2 = 12) * O, M2 = Math.round(t4 / E2);
                  M2 = Math.max(M2, l2);
                  for (; T2(d2 = g3((E2 = t4 / M2) / O)); )
                    M2++;
                }
                var R2 = this.data.defaultAppearanceData, D2 = R2.fontName, j2 = R2.fontColor;
                this._defaultAppearance = (0, h.createDefaultAppearance)({ fontSize: d2, fontName: D2, fontColor: j2 });
              }
              return [this._defaultAppearance, d2];
            } }, { key: "_renderText", value: function _renderText(t4, r4, o4, c2, u2, h2, d2) {
              var g3;
              if (u2 === 1) {
                g3 = (c2 - this._getTextWidth(t4, r4) * o4) / 2;
              } else if (u2 === 2) {
                g3 = c2 - this._getTextWidth(t4, r4) * o4 - h2;
              } else
                g3 = h2;
              g3 = g3.toFixed(2);
              d2 = d2.toFixed(2);
              return "".concat(g3, " ").concat(d2, " Td (").concat((0, l.escapeString)(t4), ") Tj");
            } }, { key: "_getSaveFieldResources", value: function _getSaveFieldResources(t4) {
              var r4 = this._fieldResources, o4 = r4.localResources, c2 = r4.appearanceResources, l2 = r4.acroFormResources, u2 = this.data.defaultAppearanceData && this.data.defaultAppearanceData.fontName;
              if (!u2)
                return o4 || d.Dict.empty;
              for (var h2 = 0, g3 = [o4, c2]; h2 < g3.length; h2++) {
                var m3 = g3[h2];
                if (m3 instanceof d.Dict) {
                  var y2 = m3.get("Font");
                  if (y2 instanceof d.Dict && y2.has(u2))
                    return m3;
                }
              }
              if (l2 instanceof d.Dict) {
                var v2 = l2.get("Font");
                if (v2 instanceof d.Dict && v2.has(u2)) {
                  var k2 = new d.Dict(t4);
                  k2.set(u2, v2.getRaw(u2));
                  var _2 = new d.Dict(t4);
                  _2.set("Font", k2);
                  return d.Dict.merge({ xref: t4, dictArray: [_2, o4], mergeSubDicts: true });
                }
              }
              return o4 || d.Dict.empty;
            } }, { key: "getFieldObject", value: function getFieldObject() {
              return null;
            } }]);
            return WidgetAnnotation;
          }(E), j = function(t3) {
            _inherits(TextWidgetAnnotation, t3);
            var r3 = _createSuper(TextWidgetAnnotation);
            function TextWidgetAnnotation(t4) {
              var o3;
              _classCallCheck(this, TextWidgetAnnotation);
              (o3 = r3.call(this, t4))._hasText = true;
              var c2 = t4.dict;
              typeof o3.data.fieldValue != "string" && (o3.data.fieldValue = "");
              var h2 = (0, u.getInheritableProperty)({ dict: c2, key: "Q" });
              (!Number.isInteger(h2) || h2 < 0 || h2 > 2) && (h2 = null);
              o3.data.textAlignment = h2;
              var d2 = (0, u.getInheritableProperty)({ dict: c2, key: "MaxLen" });
              (!Number.isInteger(d2) || d2 < 0) && (d2 = null);
              o3.data.maxLen = d2;
              o3.data.multiLine = o3.hasFieldFlag(l.AnnotationFieldFlag.MULTILINE);
              o3.data.comb = o3.hasFieldFlag(l.AnnotationFieldFlag.COMB) && !o3.hasFieldFlag(l.AnnotationFieldFlag.MULTILINE) && !o3.hasFieldFlag(l.AnnotationFieldFlag.PASSWORD) && !o3.hasFieldFlag(l.AnnotationFieldFlag.FILESELECT) && o3.data.maxLen !== null;
              return o3;
            }
            _createClass(TextWidgetAnnotation, [{ key: "_getCombAppearance", value: function _getCombAppearance(t4, r4, o3, c2, u2, h2) {
              var d2, g2 = (c2 / this.data.maxLen).toFixed(2), m2 = [], y2 = _createForOfIteratorHelper(r4.getCharPositions(o3));
              try {
                for (y2.s(); !(d2 = y2.n()).done; ) {
                  var v2 = _slicedToArray(d2.value, 2), k2 = v2[0], _2 = v2[1];
                  m2.push("(".concat((0, l.escapeString)(o3.substring(k2, _2)), ") Tj"));
                }
              } catch (t5) {
                y2.e(t5);
              } finally {
                y2.f();
              }
              var w2 = m2.join(" ".concat(g2, " 0 Td "));
              return "/Tx BMC q BT " + t4 + " 1 0 0 1 ".concat(u2, " ").concat(h2, " Tm ").concat(w2) + " ET Q EMC";
            } }, { key: "_getMultilineAppearance", value: function _getMultilineAppearance(t4, r4, o3, c2, l2, u2, h2, d2, g2) {
              var m2, y2 = [], v2 = l2 - 2 * d2, k2 = _createForOfIteratorHelper(r4.split(/\r\n?|\n/));
              try {
                for (k2.s(); !(m2 = k2.n()).done; ) {
                  var _2, w2 = m2.value, S2 = _createForOfIteratorHelper(this._splitLine(w2, o3, c2, v2));
                  try {
                    for (S2.s(); !(_2 = S2.n()).done; ) {
                      var C2 = _2.value, x2 = y2.length === 0 ? d2 : 0;
                      y2.push(this._renderText(C2, o3, c2, l2, h2, x2, -c2));
                    }
                  } catch (t5) {
                    S2.e(t5);
                  } finally {
                    S2.f();
                  }
                }
              } catch (t5) {
                k2.e(t5);
              } finally {
                k2.f();
              }
              var O2 = y2.join("\n");
              return "/Tx BMC q BT " + t4 + " 1 0 0 1 0 ".concat(u2, " Tm ").concat(O2) + " ET Q EMC";
            } }, { key: "_splitLine", value: function _splitLine(t4, r4, o3, c2) {
              var l2 = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : {};
              t4 = l2.line || r4.encodeString(t4).join("");
              var u2 = l2.glyphs || r4.charsToGlyphs(t4);
              if (u2.length <= 1)
                return [t4];
              for (var h2 = l2.positions || r4.getCharPositions(t4), d2 = o3 / 1e3, g2 = [], m2 = -1, y2 = -1, v2 = -1, k2 = 0, _2 = 0, w2 = 0, S2 = u2.length; w2 < S2; w2++) {
                var C2 = _slicedToArray(h2[w2], 2), x2 = C2[0], O2 = C2[1], T2 = u2[w2], E2 = T2.width * d2;
                if (T2.unicode === " ")
                  if (_2 + E2 > c2) {
                    g2.push(t4.substring(k2, x2));
                    k2 = x2;
                    _2 = E2;
                    m2 = -1;
                    v2 = -1;
                  } else {
                    _2 += E2;
                    m2 = x2;
                    y2 = O2;
                    v2 = w2;
                  }
                else if (_2 + E2 > c2)
                  if (m2 !== -1) {
                    g2.push(t4.substring(k2, y2));
                    k2 = y2;
                    w2 = v2 + 1;
                    m2 = -1;
                    _2 = 0;
                  } else {
                    g2.push(t4.substring(k2, x2));
                    k2 = x2;
                    _2 = E2;
                  }
                else
                  _2 += E2;
              }
              k2 < t4.length && g2.push(t4.substring(k2, t4.length));
              return g2;
            } }, { key: "getFieldObject", value: function getFieldObject() {
              return { id: this.data.id, value: this.data.fieldValue, defaultValue: this.data.defaultFieldValue || "", multiline: this.data.multiLine, password: this.hasFieldFlag(l.AnnotationFieldFlag.PASSWORD), charLimit: this.data.maxLen, comb: this.data.comb, editable: !this.data.readOnly, hidden: this.data.hidden, name: this.data.fieldName, rect: this.data.rect, actions: this.data.actions, page: this.data.pageIndex, strokeColor: this.data.borderColor, fillColor: this.data.backgroundColor, type: "text" };
            } }]);
            return TextWidgetAnnotation;
          }(D), L = function(t3) {
            _inherits(ButtonWidgetAnnotation, t3);
            var r3, o3, u2, h2, g2 = _createSuper(ButtonWidgetAnnotation);
            function ButtonWidgetAnnotation(t4) {
              var r4;
              _classCallCheck(this, ButtonWidgetAnnotation);
              (r4 = g2.call(this, t4)).checkedAppearance = null;
              r4.uncheckedAppearance = null;
              r4.data.checkBox = !r4.hasFieldFlag(l.AnnotationFieldFlag.RADIO) && !r4.hasFieldFlag(l.AnnotationFieldFlag.PUSHBUTTON);
              r4.data.radioButton = r4.hasFieldFlag(l.AnnotationFieldFlag.RADIO) && !r4.hasFieldFlag(l.AnnotationFieldFlag.PUSHBUTTON);
              r4.data.pushButton = r4.hasFieldFlag(l.AnnotationFieldFlag.PUSHBUTTON);
              r4.data.isTooltipOnly = false;
              if (r4.data.checkBox)
                r4._processCheckBox(t4);
              else if (r4.data.radioButton)
                r4._processRadioButton(t4);
              else if (r4.data.pushButton) {
                r4.data.hasOwnCanvas = true;
                r4._processPushButton(t4);
              } else
                (0, l.warn)("Invalid field flags for button widget annotation");
              return r4;
            }
            _createClass(ButtonWidgetAnnotation, [{ key: "getOperatorList", value: (h2 = _asyncToGenerator(c.default.mark(function _callee6(t4, r4, o4, l2, u3) {
              var h3, d2, g3, m2, y2;
              return c.default.wrap(function _callee6$(c2) {
                for (; ; )
                  switch (c2.prev = c2.next) {
                    case 0:
                      if (!this.data.pushButton) {
                        c2.next = 2;
                        break;
                      }
                      return c2.abrupt("return", _get(_getPrototypeOf(ButtonWidgetAnnotation.prototype), "getOperatorList", this).call(this, t4, r4, o4, false, u3));
                    case 2:
                      h3 = null;
                      if (u3) {
                        d2 = u3.get(this.data.id);
                        h3 = d2 ? d2.value : null;
                      }
                      if (h3 !== null) {
                        c2.next = 8;
                        break;
                      }
                      if (!this.appearance) {
                        c2.next = 7;
                        break;
                      }
                      return c2.abrupt("return", _get(_getPrototypeOf(ButtonWidgetAnnotation.prototype), "getOperatorList", this).call(this, t4, r4, o4, l2, u3));
                    case 7:
                      h3 = this.data.checkBox ? this.data.fieldValue === this.data.exportValue : this.data.fieldValue === this.data.buttonValue;
                    case 8:
                      if (!(g3 = h3 ? this.checkedAppearance : this.uncheckedAppearance)) {
                        c2.next = 15;
                        break;
                      }
                      m2 = this.appearance;
                      this.appearance = g3;
                      y2 = _get(_getPrototypeOf(ButtonWidgetAnnotation.prototype), "getOperatorList", this).call(this, t4, r4, o4, l2, u3);
                      this.appearance = m2;
                      return c2.abrupt("return", y2);
                    case 15:
                      return c2.abrupt("return", new w.OperatorList());
                    case 16:
                    case "end":
                      return c2.stop();
                  }
              }, _callee6, this);
            })), function getOperatorList(t4, r4, o4, c2, l2) {
              return h2.apply(this, arguments);
            }) }, { key: "save", value: (u2 = _asyncToGenerator(c.default.mark(function _callee7(t4, r4, o4) {
              return c.default.wrap(function _callee7$(c2) {
                for (; ; )
                  switch (c2.prev = c2.next) {
                    case 0:
                      if (!this.data.checkBox) {
                        c2.next = 2;
                        break;
                      }
                      return c2.abrupt("return", this._saveCheckbox(t4, r4, o4));
                    case 2:
                      if (!this.data.radioButton) {
                        c2.next = 4;
                        break;
                      }
                      return c2.abrupt("return", this._saveRadioButton(t4, r4, o4));
                    case 4:
                      return c2.abrupt("return", null);
                    case 5:
                    case "end":
                      return c2.stop();
                  }
              }, _callee7, this);
            })), function save(t4, r4, o4) {
              return u2.apply(this, arguments);
            }) }, { key: "_saveCheckbox", value: (o3 = _asyncToGenerator(c.default.mark(function _callee8(t4, r4, o4) {
              var u3, h3, g3, m2, y2, v2, k2, _2;
              return c.default.wrap(function _callee8$(r5) {
                for (; ; )
                  switch (r5.prev = r5.next) {
                    case 0:
                      if (o4) {
                        r5.next = 2;
                        break;
                      }
                      return r5.abrupt("return", null);
                    case 2:
                      u3 = o4.get(this.data.id);
                      if ((h3 = u3 && u3.value) !== void 0) {
                        r5.next = 6;
                        break;
                      }
                      return r5.abrupt("return", null);
                    case 6:
                      if (this.data.fieldValue === this.data.exportValue !== h3) {
                        r5.next = 9;
                        break;
                      }
                      return r5.abrupt("return", null);
                    case 9:
                      if ((g3 = t4.xref.fetchIfRef(this.ref)) instanceof d.Dict) {
                        r5.next = 12;
                        break;
                      }
                      return r5.abrupt("return", null);
                    case 12:
                      m2 = { path: (0, l.stringToPDFString)(g3.get("T") || ""), value: h3 ? this.data.exportValue : "" };
                      y2 = d.Name.get(h3 ? this.data.exportValue : "Off");
                      g3.set("V", y2);
                      g3.set("AS", y2);
                      g3.set("M", "D:".concat((0, l.getModificationDate)()));
                      v2 = t4.xref.encrypt;
                      k2 = null;
                      v2 && (k2 = v2.createCipherTransform(this.ref.num, this.ref.gen));
                      _2 = ["".concat(this.ref.num, " ").concat(this.ref.gen, " obj\n")];
                      (0, C.writeDict)(g3, _2, k2);
                      _2.push("\nendobj\n");
                      return r5.abrupt("return", [{ ref: this.ref, data: _2.join(""), xfa: m2 }]);
                    case 24:
                    case "end":
                      return r5.stop();
                  }
              }, _callee8, this);
            })), function _saveCheckbox(t4, r4, c2) {
              return o3.apply(this, arguments);
            }) }, { key: "_saveRadioButton", value: (r3 = _asyncToGenerator(c.default.mark(function _callee9(t4, r4, o4) {
              var u3, h3, g3, m2, y2, v2, k2, _2, w2, S2, x2, O2;
              return c.default.wrap(function _callee9$(r5) {
                for (; ; )
                  switch (r5.prev = r5.next) {
                    case 0:
                      if (o4) {
                        r5.next = 2;
                        break;
                      }
                      return r5.abrupt("return", null);
                    case 2:
                      u3 = o4.get(this.data.id);
                      if ((h3 = u3 && u3.value) !== void 0) {
                        r5.next = 6;
                        break;
                      }
                      return r5.abrupt("return", null);
                    case 6:
                      if (this.data.fieldValue === this.data.buttonValue !== h3) {
                        r5.next = 9;
                        break;
                      }
                      return r5.abrupt("return", null);
                    case 9:
                      if ((g3 = t4.xref.fetchIfRef(this.ref)) instanceof d.Dict) {
                        r5.next = 12;
                        break;
                      }
                      return r5.abrupt("return", null);
                    case 12:
                      m2 = { path: (0, l.stringToPDFString)(g3.get("T") || ""), value: h3 ? this.data.buttonValue : "" };
                      y2 = d.Name.get(h3 ? this.data.buttonValue : "Off");
                      v2 = null;
                      k2 = t4.xref.encrypt;
                      if (h3)
                        if (this.parent instanceof d.Ref) {
                          _2 = t4.xref.fetch(this.parent);
                          w2 = null;
                          k2 && (w2 = k2.createCipherTransform(this.parent.num, this.parent.gen));
                          _2.set("V", y2);
                          v2 = ["".concat(this.parent.num, " ").concat(this.parent.gen, " obj\n")];
                          (0, C.writeDict)(_2, v2, w2);
                          v2.push("\nendobj\n");
                        } else
                          this.parent instanceof d.Dict && this.parent.set("V", y2);
                      g3.set("AS", y2);
                      g3.set("M", "D:".concat((0, l.getModificationDate)()));
                      S2 = null;
                      k2 && (S2 = k2.createCipherTransform(this.ref.num, this.ref.gen));
                      x2 = ["".concat(this.ref.num, " ").concat(this.ref.gen, " obj\n")];
                      (0, C.writeDict)(g3, x2, S2);
                      x2.push("\nendobj\n");
                      O2 = [{ ref: this.ref, data: x2.join(""), xfa: m2 }];
                      v2 !== null && O2.push({ ref: this.parent, data: v2.join(""), xfa: null });
                      return r5.abrupt("return", O2);
                    case 27:
                    case "end":
                      return r5.stop();
                  }
              }, _callee9, this);
            })), function _saveRadioButton(t4, o4, c2) {
              return r3.apply(this, arguments);
            }) }, { key: "_getDefaultCheckedAppearance", value: function _getDefaultCheckedAppearance(t4, r4) {
              var o4, c2, u3 = this.data.rect[2] - this.data.rect[0], h3 = this.data.rect[3] - this.data.rect[1], g3 = [0, 0, u3, h3], m2 = 0.8 * Math.min(u3, h3);
              if (r4 === "check") {
                o4 = { width: 0.755 * m2, height: 0.705 * m2 };
                c2 = "3";
              } else if (r4 === "disc") {
                o4 = { width: 0.791 * m2, height: 0.705 * m2 };
                c2 = "l";
              } else
                (0, l.unreachable)("_getDefaultCheckedAppearance - unsupported type: ".concat(r4));
              var y2 = (u3 - o4.width) / 2, v2 = (h3 - o4.height) / 2, k2 = "q BT /PdfJsZaDb ".concat(m2, " Tf 0 g ").concat(y2, " ").concat(v2, " Td (").concat(c2, ") Tj ET Q"), _2 = new d.Dict(t4.xref);
              _2.set("FormType", 1);
              _2.set("Subtype", d.Name.get("Form"));
              _2.set("Type", d.Name.get("XObject"));
              _2.set("BBox", g3);
              _2.set("Matrix", [1, 0, 0, 1, 0, 0]);
              _2.set("Length", k2.length);
              var w2 = new d.Dict(t4.xref), C2 = new d.Dict(t4.xref);
              C2.set("PdfJsZaDb", this.fallbackFontDict);
              w2.set("Font", C2);
              _2.set("Resources", w2);
              this.checkedAppearance = new S.StringStream(k2);
              this.checkedAppearance.dict = _2;
              this._streams.push(this.checkedAppearance);
            } }, { key: "_processCheckBox", value: function _processCheckBox(t4) {
              var r4 = t4.dict.get("AP");
              if (r4 instanceof d.Dict) {
                var o4 = r4.get("N");
                if (o4 instanceof d.Dict) {
                  var c2 = this._decodeFormValue(t4.dict.get("AS"));
                  typeof c2 == "string" && (this.data.fieldValue = c2);
                  var l2 = this.data.fieldValue !== null && this.data.fieldValue !== "Off" ? this.data.fieldValue : "Yes", u3 = o4.getKeys();
                  if (u3.length === 0)
                    u3.push("Off", l2);
                  else if (u3.length === 1)
                    u3[0] === "Off" ? u3.push(l2) : u3.unshift("Off");
                  else if (u3.includes(l2)) {
                    u3.length = 0;
                    u3.push("Off", l2);
                  } else {
                    var h3 = u3.find(function(t5) {
                      return t5 !== "Off";
                    });
                    u3.length = 0;
                    u3.push("Off", h3);
                  }
                  u3.includes(this.data.fieldValue) || (this.data.fieldValue = "Off");
                  this.data.exportValue = u3[1];
                  this.checkedAppearance = o4.get(this.data.exportValue) || null;
                  this.uncheckedAppearance = o4.get("Off") || null;
                  this.checkedAppearance ? this._streams.push(this.checkedAppearance) : this._getDefaultCheckedAppearance(t4, "check");
                  this.uncheckedAppearance && this._streams.push(this.uncheckedAppearance);
                  this._fallbackFontDict = this.fallbackFontDict;
                }
              }
            } }, { key: "_processRadioButton", value: function _processRadioButton(t4) {
              this.data.fieldValue = this.data.buttonValue = null;
              var r4 = t4.dict.get("Parent");
              if (r4 instanceof d.Dict) {
                this.parent = t4.dict.getRaw("Parent");
                var o4 = r4.get("V");
                o4 instanceof d.Name && (this.data.fieldValue = this._decodeFormValue(o4));
              }
              var c2 = t4.dict.get("AP");
              if (c2 instanceof d.Dict) {
                var l2 = c2.get("N");
                if (l2 instanceof d.Dict) {
                  var u3, h3 = _createForOfIteratorHelper(l2.getKeys());
                  try {
                    for (h3.s(); !(u3 = h3.n()).done; ) {
                      var g3 = u3.value;
                      if (g3 !== "Off") {
                        this.data.buttonValue = this._decodeFormValue(g3);
                        break;
                      }
                    }
                  } catch (t5) {
                    h3.e(t5);
                  } finally {
                    h3.f();
                  }
                  this.checkedAppearance = l2.get(this.data.buttonValue) || null;
                  this.uncheckedAppearance = l2.get("Off") || null;
                  this.checkedAppearance ? this._streams.push(this.checkedAppearance) : this._getDefaultCheckedAppearance(t4, "disc");
                  this.uncheckedAppearance && this._streams.push(this.uncheckedAppearance);
                  this._fallbackFontDict = this.fallbackFontDict;
                }
              }
            } }, { key: "_processPushButton", value: function _processPushButton(t4) {
              if (t4.dict.has("A") || t4.dict.has("AA") || this.data.alternativeText) {
                this.data.isTooltipOnly = !t4.dict.has("A") && !t4.dict.has("AA");
                y.Catalog.parseDestDictionary({ destDict: t4.dict, resultObj: this.data, docBaseUrl: t4.pdfManager.docBaseUrl });
              } else
                (0, l.warn)("Push buttons without action dictionaries are not supported");
            } }, { key: "getFieldObject", value: function getFieldObject() {
              var t4, r4 = "button";
              if (this.data.checkBox) {
                r4 = "checkbox";
                t4 = this.data.exportValue;
              } else if (this.data.radioButton) {
                r4 = "radiobutton";
                t4 = this.data.buttonValue;
              }
              return { id: this.data.id, value: this.data.fieldValue || "Off", defaultValue: this.data.defaultFieldValue, exportValues: t4, editable: !this.data.readOnly, name: this.data.fieldName, rect: this.data.rect, hidden: this.data.hidden, actions: this.data.actions, page: this.data.pageIndex, strokeColor: this.data.borderColor, fillColor: this.data.backgroundColor, type: r4 };
            } }, { key: "fallbackFontDict", get: function get() {
              var t4 = new d.Dict();
              t4.set("BaseFont", d.Name.get("ZapfDingbats"));
              t4.set("Type", d.Name.get("FallbackType"));
              t4.set("Subtype", d.Name.get("FallbackType"));
              t4.set("Encoding", d.Name.get("ZapfDingbatsEncoding"));
              return (0, l.shadow)(this, "fallbackFontDict", t4);
            } }]);
            return ButtonWidgetAnnotation;
          }(D), N = function(t3) {
            _inherits(ChoiceWidgetAnnotation, t3);
            var r3, o3 = _createSuper(ChoiceWidgetAnnotation);
            function ChoiceWidgetAnnotation(t4) {
              var r4;
              _classCallCheck(this, ChoiceWidgetAnnotation);
              (r4 = o3.call(this, t4)).data.options = [];
              var c2 = (0, u.getInheritableProperty)({ dict: t4.dict, key: "Opt" });
              if (Array.isArray(c2))
                for (var h2 = t4.xref, d2 = 0, g2 = c2.length; d2 < g2; d2++) {
                  var m2 = h2.fetchIfRef(c2[d2]), y2 = Array.isArray(m2);
                  r4.data.options[d2] = { exportValue: r4._decodeFormValue(y2 ? h2.fetchIfRef(m2[0]) : m2), displayValue: r4._decodeFormValue(y2 ? h2.fetchIfRef(m2[1]) : m2) };
                }
              typeof r4.data.fieldValue == "string" ? r4.data.fieldValue = [r4.data.fieldValue] : r4.data.fieldValue || (r4.data.fieldValue = []);
              r4.data.combo = r4.hasFieldFlag(l.AnnotationFieldFlag.COMBO);
              r4.data.multiSelect = r4.hasFieldFlag(l.AnnotationFieldFlag.MULTISELECT);
              r4._hasText = true;
              return r4;
            }
            _createClass(ChoiceWidgetAnnotation, [{ key: "getFieldObject", value: function getFieldObject() {
              var t4 = this.data.combo ? "combobox" : "listbox", r4 = this.data.fieldValue.length > 0 ? this.data.fieldValue[0] : null;
              return { id: this.data.id, value: r4, defaultValue: this.data.defaultFieldValue, editable: !this.data.readOnly, name: this.data.fieldName, rect: this.data.rect, numItems: this.data.fieldValue.length, multipleSelection: this.data.multiSelect, hidden: this.data.hidden, actions: this.data.actions, items: this.data.options, page: this.data.pageIndex, strokeColor: this.data.borderColor, fillColor: this.data.backgroundColor, type: t4 };
            } }, { key: "_getAppearance", value: (r3 = _asyncToGenerator(c.default.mark(function _callee10(t4, r4, o4) {
              var l2, u2, d2, g2, m2, y2, v2, k2, _2, w2, S2, C2, x2, T2, E2, M2, R2, D2, j2, L2, N2, U2, H2, $2, X2, q2, G2, z2, W2, V2, K2, Y2, J2, Z2, Q2, ee2;
              return c.default.wrap(function _callee10$(c2) {
                for (; ; )
                  switch (c2.prev = c2.next) {
                    case 0:
                      if (!this.data.combo) {
                        c2.next = 2;
                        break;
                      }
                      return c2.abrupt("return", _get(_getPrototypeOf(ChoiceWidgetAnnotation.prototype), "_getAppearance", this).call(this, t4, r4, o4));
                    case 2:
                      if (o4) {
                        c2.next = 4;
                        break;
                      }
                      return c2.abrupt("return", null);
                    case 4:
                      l2 = o4.get(this.data.id);
                      if ((u2 = l2 && l2.value) !== void 0) {
                        c2.next = 8;
                        break;
                      }
                      return c2.abrupt("return", null);
                    case 8:
                      Array.isArray(u2) || (u2 = [u2]);
                      g2 = d2 = 2;
                      m2 = this.data.rect[3] - this.data.rect[1];
                      y2 = this.data.rect[2] - this.data.rect[0];
                      v2 = this.data.options.length;
                      k2 = [];
                      for (_2 = 0; _2 < v2; _2++) {
                        w2 = this.data.options[_2].exportValue;
                        u2.includes(w2) && k2.push(_2);
                      }
                      this._defaultAppearance || (this.data.defaultAppearanceData = (0, h.parseDefaultAppearance)(this._defaultAppearance = "/Helvetica 0 Tf 0 g"));
                      c2.next = 19;
                      return this._getFontData(t4, r4);
                    case 19:
                      S2 = c2.sent;
                      if (x2 = this.data.defaultAppearanceData.fontSize)
                        C2 = this._defaultAppearance;
                      else {
                        T2 = (m2 - d2) / v2;
                        E2 = -1;
                        R2 = _createForOfIteratorHelper(this.data.options);
                        try {
                          for (R2.s(); !(D2 = R2.n()).done; ) {
                            j2 = D2.value.displayValue;
                            if ((L2 = this._getTextWidth(j2)) > E2) {
                              E2 = L2;
                              M2 = j2;
                            }
                          }
                        } catch (t5) {
                          R2.e(t5);
                        } finally {
                          R2.f();
                        }
                        N2 = this._computeFontSize(T2, y2 - 2 * g2, M2, S2, -1);
                        U2 = _slicedToArray(N2, 2);
                        C2 = U2[0];
                        x2 = U2[1];
                      }
                      $2 = ((H2 = x2 * O) - x2) / 2;
                      X2 = Math.floor(m2 / H2);
                      if (k2.length === 1) {
                        G2 = k2[0];
                        q2 = G2 - G2 % X2;
                      } else
                        q2 = k2.length ? k2[0] : 0;
                      z2 = Math.min(q2 + X2 + 1, v2);
                      W2 = ["/Tx BMC q", "1 1 ".concat(y2, " ").concat(m2, " re W n")];
                      if (k2.length) {
                        W2.push("0.600006 0.756866 0.854904 rg");
                        V2 = _createForOfIteratorHelper(k2);
                        try {
                          for (V2.s(); !(K2 = V2.n()).done; ) {
                            Y2 = K2.value;
                            q2 <= Y2 && Y2 < z2 && W2.push("1 ".concat(m2 - (Y2 - q2 + 1) * H2, " ").concat(y2, " ").concat(H2, " re f"));
                          }
                        } catch (t5) {
                          V2.e(t5);
                        } finally {
                          V2.f();
                        }
                      }
                      W2.push("BT", C2, "1 0 0 1 0 ".concat(m2, " Tm"));
                      for (J2 = q2; J2 < z2; J2++) {
                        Z2 = this.data.options[J2].displayValue;
                        Q2 = J2 === q2 ? g2 : 0;
                        ee2 = J2 === q2 ? $2 : 0;
                        W2.push(this._renderText(Z2, S2, x2, y2, 0, Q2, -H2 + ee2));
                      }
                      W2.push("ET Q EMC");
                      return c2.abrupt("return", W2.join("\n"));
                    case 33:
                    case "end":
                      return c2.stop();
                  }
              }, _callee10, this);
            })), function _getAppearance(t4, o4, c2) {
              return r3.apply(this, arguments);
            }) }]);
            return ChoiceWidgetAnnotation;
          }(D), U = function(t3) {
            _inherits(SignatureWidgetAnnotation, t3);
            var r3 = _createSuper(SignatureWidgetAnnotation);
            function SignatureWidgetAnnotation(t4) {
              var o3;
              _classCallCheck(this, SignatureWidgetAnnotation);
              (o3 = r3.call(this, t4)).data.fieldValue = null;
              return o3;
            }
            _createClass(SignatureWidgetAnnotation, [{ key: "getFieldObject", value: function getFieldObject() {
              return { id: this.data.id, value: null, page: this.data.pageIndex, type: "signature" };
            } }]);
            return SignatureWidgetAnnotation;
          }(D), H = function(t3) {
            _inherits(TextAnnotation, t3);
            var r3 = _createSuper(TextAnnotation);
            function TextAnnotation(t4) {
              var o3;
              _classCallCheck(this, TextAnnotation);
              o3 = r3.call(this, t4);
              var c2 = t4.dict;
              o3.data.annotationType = l.AnnotationType.TEXT;
              if (o3.data.hasAppearance)
                o3.data.name = "NoIcon";
              else {
                o3.data.rect[1] = o3.data.rect[3] - 22;
                o3.data.rect[2] = o3.data.rect[0] + 22;
                o3.data.name = c2.has("Name") ? c2.get("Name").name : "Note";
              }
              if (c2.has("State")) {
                o3.data.state = c2.get("State") || null;
                o3.data.stateModel = c2.get("StateModel") || null;
              } else {
                o3.data.state = null;
                o3.data.stateModel = null;
              }
              return o3;
            }
            return _createClass(TextAnnotation);
          }(R), $ = function(t3) {
            _inherits(LinkAnnotation, t3);
            var r3 = _createSuper(LinkAnnotation);
            function LinkAnnotation(t4) {
              var o3;
              _classCallCheck(this, LinkAnnotation);
              (o3 = r3.call(this, t4)).data.annotationType = l.AnnotationType.LINK;
              var c2 = getQuadPoints(t4.dict, o3.rectangle);
              c2 && (o3.data.quadPoints = c2);
              y.Catalog.parseDestDictionary({ destDict: t4.dict, resultObj: o3.data, docBaseUrl: t4.pdfManager.docBaseUrl });
              return o3;
            }
            return _createClass(LinkAnnotation);
          }(E), X = function(t3) {
            _inherits(PopupAnnotation, t3);
            var r3 = _createSuper(PopupAnnotation);
            function PopupAnnotation(t4) {
              var o3;
              _classCallCheck(this, PopupAnnotation);
              (o3 = r3.call(this, t4)).data.annotationType = l.AnnotationType.POPUP;
              var c2 = t4.dict.get("Parent");
              if (!c2) {
                (0, l.warn)("Popup annotation has a missing or invalid parent annotation.");
                return _possibleConstructorReturn(o3);
              }
              var u2 = c2.get("Subtype");
              o3.data.parentType = u2 instanceof d.Name ? u2.name : null;
              var h2 = t4.dict.getRaw("Parent");
              o3.data.parentId = h2 instanceof d.Ref ? h2.toString() : null;
              var g2 = c2.getArray("Rect");
              Array.isArray(g2) && g2.length === 4 ? o3.data.parentRect = l.Util.normalizeRect(g2) : o3.data.parentRect = [0, 0, 0, 0];
              var m2 = c2.get("RT");
              (0, d.isName)(m2, l.AnnotationReplyType.GROUP) && (c2 = c2.get("IRT"));
              if (c2.has("M")) {
                o3.setModificationDate(c2.get("M"));
                o3.data.modificationDate = o3.modificationDate;
              } else
                o3.data.modificationDate = null;
              if (c2.has("C")) {
                o3.setColor(c2.getArray("C"));
                o3.data.color = o3.color;
              } else
                o3.data.color = null;
              if (!o3.viewable) {
                var y2 = c2.get("F");
                o3._isViewable(y2) && o3.setFlags(y2);
              }
              o3.setTitle(c2.get("T"));
              o3.data.titleObj = o3._title;
              o3.setContents(c2.get("Contents"));
              o3.data.contentsObj = o3._contents;
              c2.has("RC") && (o3.data.richText = x.XFAFactory.getRichTextAsHtml(c2.get("RC")));
              return o3;
            }
            return _createClass(PopupAnnotation);
          }(E), q = function(t3) {
            _inherits(FreeTextAnnotation, t3);
            var r3 = _createSuper(FreeTextAnnotation);
            function FreeTextAnnotation(t4) {
              var o3;
              _classCallCheck(this, FreeTextAnnotation);
              (o3 = r3.call(this, t4)).data.annotationType = l.AnnotationType.FREETEXT;
              return o3;
            }
            return _createClass(FreeTextAnnotation);
          }(R), G = function(t3) {
            _inherits(LineAnnotation, t3);
            var r3 = _createSuper(LineAnnotation);
            function LineAnnotation(t4) {
              var o3;
              _classCallCheck(this, LineAnnotation);
              o3 = r3.call(this, t4);
              var c2 = t4.dict;
              o3.data.annotationType = l.AnnotationType.LINE;
              var u2 = c2.getArray("L");
              o3.data.lineCoordinates = l.Util.normalizeRect(u2);
              o3.setLineEndings(c2.getArray("LE"));
              o3.data.lineEndings = o3.lineEndings;
              if (!o3.appearance) {
                var h2 = o3.color ? Array.from(o3.color).map(function(t5) {
                  return t5 / 255;
                }) : [0, 0, 0], d2 = c2.get("CA"), g2 = null, m2 = c2.getArray("IC");
                m2 && (g2 = (m2 = getRgbColor(m2, null)) ? Array.from(m2).map(function(t5) {
                  return t5 / 255;
                }) : null);
                var y2 = g2 ? d2 : null, v2 = o3.borderStyle.width || 1, k2 = 2 * v2, _2 = [o3.data.lineCoordinates[0] - k2, o3.data.lineCoordinates[1] - k2, o3.data.lineCoordinates[2] + k2, o3.data.lineCoordinates[3] + k2];
                l.Util.intersect(o3.rectangle, _2) || (o3.rectangle = _2);
                o3._setDefaultAppearance({ xref: t4.xref, extra: "".concat(v2, " w"), strokeColor: h2, fillColor: g2, strokeAlpha: d2, fillAlpha: y2, pointsCallback: function pointsCallback(t5, r4) {
                  t5.push("".concat(u2[0], " ").concat(u2[1], " m"), "".concat(u2[2], " ").concat(u2[3], " l"), "S");
                  return [r4[0].x - v2, r4[1].x + v2, r4[3].y - v2, r4[1].y + v2];
                } });
              }
              return o3;
            }
            return _createClass(LineAnnotation);
          }(R), z = function(t3) {
            _inherits(SquareAnnotation, t3);
            var r3 = _createSuper(SquareAnnotation);
            function SquareAnnotation(t4) {
              var o3;
              _classCallCheck(this, SquareAnnotation);
              (o3 = r3.call(this, t4)).data.annotationType = l.AnnotationType.SQUARE;
              if (!o3.appearance) {
                var c2 = o3.color ? Array.from(o3.color).map(function(t5) {
                  return t5 / 255;
                }) : [0, 0, 0], u2 = t4.dict.get("CA"), h2 = null, d2 = t4.dict.getArray("IC");
                if (d2) {
                  d2 = getRgbColor(d2, null);
                  h2 = d2 ? Array.from(d2).map(function(t5) {
                    return t5 / 255;
                  }) : null;
                }
                var g2 = h2 ? u2 : null;
                if (o3.borderStyle.width === 0 && !h2)
                  return _possibleConstructorReturn(o3);
                o3._setDefaultAppearance({ xref: t4.xref, extra: "".concat(o3.borderStyle.width, " w"), strokeColor: c2, fillColor: h2, strokeAlpha: u2, fillAlpha: g2, pointsCallback: function pointsCallback(t5, r4) {
                  var c3 = r4[2].x + o3.borderStyle.width / 2, l2 = r4[2].y + o3.borderStyle.width / 2, u3 = r4[3].x - r4[2].x - o3.borderStyle.width, d3 = r4[1].y - r4[3].y - o3.borderStyle.width;
                  t5.push("".concat(c3, " ").concat(l2, " ").concat(u3, " ").concat(d3, " re"));
                  h2 ? t5.push("B") : t5.push("S");
                  return [r4[0].x, r4[1].x, r4[3].y, r4[1].y];
                } });
              }
              return o3;
            }
            return _createClass(SquareAnnotation);
          }(R), W = function(t3) {
            _inherits(CircleAnnotation, t3);
            var r3 = _createSuper(CircleAnnotation);
            function CircleAnnotation(t4) {
              var o3;
              _classCallCheck(this, CircleAnnotation);
              (o3 = r3.call(this, t4)).data.annotationType = l.AnnotationType.CIRCLE;
              if (!o3.appearance) {
                var c2 = o3.color ? Array.from(o3.color).map(function(t5) {
                  return t5 / 255;
                }) : [0, 0, 0], u2 = t4.dict.get("CA"), h2 = null, d2 = t4.dict.getArray("IC");
                if (d2) {
                  d2 = getRgbColor(d2, null);
                  h2 = d2 ? Array.from(d2).map(function(t5) {
                    return t5 / 255;
                  }) : null;
                }
                var g2 = h2 ? u2 : null;
                if (o3.borderStyle.width === 0 && !h2)
                  return _possibleConstructorReturn(o3);
                var m2 = 4 / 3 * Math.tan(Math.PI / 8);
                o3._setDefaultAppearance({ xref: t4.xref, extra: "".concat(o3.borderStyle.width, " w"), strokeColor: c2, fillColor: h2, strokeAlpha: u2, fillAlpha: g2, pointsCallback: function pointsCallback(t5, r4) {
                  var c3 = r4[0].x + o3.borderStyle.width / 2, l2 = r4[0].y - o3.borderStyle.width / 2, u3 = r4[3].x - o3.borderStyle.width / 2, d3 = r4[3].y + o3.borderStyle.width / 2, g3 = c3 + (u3 - c3) / 2, y2 = l2 + (d3 - l2) / 2, v2 = (u3 - c3) / 2 * m2, k2 = (d3 - l2) / 2 * m2;
                  t5.push("".concat(g3, " ").concat(d3, " m"), "".concat(g3 + v2, " ").concat(d3, " ").concat(u3, " ").concat(y2 + k2, " ").concat(u3, " ").concat(y2, " c"), "".concat(u3, " ").concat(y2 - k2, " ").concat(g3 + v2, " ").concat(l2, " ").concat(g3, " ").concat(l2, " c"), "".concat(g3 - v2, " ").concat(l2, " ").concat(c3, " ").concat(y2 - k2, " ").concat(c3, " ").concat(y2, " c"), "".concat(c3, " ").concat(y2 + k2, " ").concat(g3 - v2, " ").concat(d3, " ").concat(g3, " ").concat(d3, " c"), "h");
                  h2 ? t5.push("B") : t5.push("S");
                  return [r4[0].x, r4[1].x, r4[3].y, r4[1].y];
                } });
              }
              return o3;
            }
            return _createClass(CircleAnnotation);
          }(R), V = function(t3) {
            _inherits(PolylineAnnotation, t3);
            var r3 = _createSuper(PolylineAnnotation);
            function PolylineAnnotation(t4) {
              var o3;
              _classCallCheck(this, PolylineAnnotation);
              o3 = r3.call(this, t4);
              var c2 = t4.dict;
              o3.data.annotationType = l.AnnotationType.POLYLINE;
              o3.data.vertices = [];
              if (!(_assertThisInitialized(o3) instanceof K)) {
                o3.setLineEndings(c2.getArray("LE"));
                o3.data.lineEndings = o3.lineEndings;
              }
              var u2 = c2.getArray("Vertices");
              if (!Array.isArray(u2))
                return _possibleConstructorReturn(o3);
              for (var h2 = 0, d2 = u2.length; h2 < d2; h2 += 2)
                o3.data.vertices.push({ x: u2[h2], y: u2[h2 + 1] });
              if (!o3.appearance) {
                var g2, m2 = o3.color ? Array.from(o3.color).map(function(t5) {
                  return t5 / 255;
                }) : [0, 0, 0], y2 = c2.get("CA"), v2 = o3.borderStyle.width || 1, k2 = 2 * v2, _2 = [1 / 0, 1 / 0, -1 / 0, -1 / 0], w2 = _createForOfIteratorHelper(o3.data.vertices);
                try {
                  for (w2.s(); !(g2 = w2.n()).done; ) {
                    var S2 = g2.value;
                    _2[0] = Math.min(_2[0], S2.x - k2);
                    _2[1] = Math.min(_2[1], S2.y - k2);
                    _2[2] = Math.max(_2[2], S2.x + k2);
                    _2[3] = Math.max(_2[3], S2.y + k2);
                  }
                } catch (t5) {
                  w2.e(t5);
                } finally {
                  w2.f();
                }
                l.Util.intersect(o3.rectangle, _2) || (o3.rectangle = _2);
                o3._setDefaultAppearance({ xref: t4.xref, extra: "".concat(v2, " w"), strokeColor: m2, strokeAlpha: y2, pointsCallback: function pointsCallback(t5, r4) {
                  for (var c3 = o3.data.vertices, l2 = 0, u3 = c3.length; l2 < u3; l2++)
                    t5.push("".concat(c3[l2].x, " ").concat(c3[l2].y, " ").concat(l2 === 0 ? "m" : "l"));
                  t5.push("S");
                  return [r4[0].x, r4[1].x, r4[3].y, r4[1].y];
                } });
              }
              return o3;
            }
            return _createClass(PolylineAnnotation);
          }(R), K = function(t3) {
            _inherits(PolygonAnnotation, t3);
            var r3 = _createSuper(PolygonAnnotation);
            function PolygonAnnotation(t4) {
              var o3;
              _classCallCheck(this, PolygonAnnotation);
              (o3 = r3.call(this, t4)).data.annotationType = l.AnnotationType.POLYGON;
              return o3;
            }
            return _createClass(PolygonAnnotation);
          }(V), Y = function(t3) {
            _inherits(CaretAnnotation, t3);
            var r3 = _createSuper(CaretAnnotation);
            function CaretAnnotation(t4) {
              var o3;
              _classCallCheck(this, CaretAnnotation);
              (o3 = r3.call(this, t4)).data.annotationType = l.AnnotationType.CARET;
              return o3;
            }
            return _createClass(CaretAnnotation);
          }(R), J = function(t3) {
            _inherits(InkAnnotation, t3);
            var r3 = _createSuper(InkAnnotation);
            function InkAnnotation(t4) {
              var o3;
              _classCallCheck(this, InkAnnotation);
              (o3 = r3.call(this, t4)).data.annotationType = l.AnnotationType.INK;
              o3.data.inkLists = [];
              var c2 = t4.dict.getArray("InkList");
              if (!Array.isArray(c2))
                return _possibleConstructorReturn(o3);
              for (var u2 = t4.xref, h2 = 0, d2 = c2.length; h2 < d2; ++h2) {
                o3.data.inkLists.push([]);
                for (var g2 = 0, m2 = c2[h2].length; g2 < m2; g2 += 2)
                  o3.data.inkLists[h2].push({ x: u2.fetchIfRef(c2[h2][g2]), y: u2.fetchIfRef(c2[h2][g2 + 1]) });
              }
              if (!o3.appearance) {
                var y2, v2 = o3.color ? Array.from(o3.color).map(function(t5) {
                  return t5 / 255;
                }) : [0, 0, 0], k2 = t4.dict.get("CA"), _2 = o3.borderStyle.width || 1, w2 = 2 * _2, S2 = [1 / 0, 1 / 0, -1 / 0, -1 / 0], C2 = _createForOfIteratorHelper(o3.data.inkLists);
                try {
                  for (C2.s(); !(y2 = C2.n()).done; ) {
                    var x2, O2 = _createForOfIteratorHelper(y2.value);
                    try {
                      for (O2.s(); !(x2 = O2.n()).done; ) {
                        var T2 = x2.value;
                        S2[0] = Math.min(S2[0], T2.x - w2);
                        S2[1] = Math.min(S2[1], T2.y - w2);
                        S2[2] = Math.max(S2[2], T2.x + w2);
                        S2[3] = Math.max(S2[3], T2.y + w2);
                      }
                    } catch (t5) {
                      O2.e(t5);
                    } finally {
                      O2.f();
                    }
                  }
                } catch (t5) {
                  C2.e(t5);
                } finally {
                  C2.f();
                }
                l.Util.intersect(o3.rectangle, S2) || (o3.rectangle = S2);
                o3._setDefaultAppearance({ xref: t4.xref, extra: "".concat(_2, " w"), strokeColor: v2, strokeAlpha: k2, pointsCallback: function pointsCallback(t5, r4) {
                  var c3, l2 = _createForOfIteratorHelper(o3.data.inkLists);
                  try {
                    for (l2.s(); !(c3 = l2.n()).done; ) {
                      for (var u3 = c3.value, h3 = 0, d3 = u3.length; h3 < d3; h3++)
                        t5.push("".concat(u3[h3].x, " ").concat(u3[h3].y, " ").concat(h3 === 0 ? "m" : "l"));
                      t5.push("S");
                    }
                  } catch (t6) {
                    l2.e(t6);
                  } finally {
                    l2.f();
                  }
                  return [r4[0].x, r4[1].x, r4[3].y, r4[1].y];
                } });
              }
              return o3;
            }
            return _createClass(InkAnnotation);
          }(R), Z = function(t3) {
            _inherits(HighlightAnnotation, t3);
            var r3 = _createSuper(HighlightAnnotation);
            function HighlightAnnotation(t4) {
              var o3;
              _classCallCheck(this, HighlightAnnotation);
              (o3 = r3.call(this, t4)).data.annotationType = l.AnnotationType.HIGHLIGHT;
              if (o3.data.quadPoints = getQuadPoints(t4.dict, null)) {
                var c2 = o3.appearance && o3.appearance.dict.get("Resources");
                if (!o3.appearance || !c2 || !c2.has("ExtGState")) {
                  o3.appearance && (0, l.warn)("HighlightAnnotation - ignoring built-in appearance stream.");
                  var u2 = o3.color ? Array.from(o3.color).map(function(t5) {
                    return t5 / 255;
                  }) : [1, 1, 0], h2 = t4.dict.get("CA");
                  o3._setDefaultAppearance({ xref: t4.xref, fillColor: u2, blendMode: "Multiply", fillAlpha: h2, pointsCallback: function pointsCallback(t5, r4) {
                    t5.push("".concat(r4[0].x, " ").concat(r4[0].y, " m"), "".concat(r4[1].x, " ").concat(r4[1].y, " l"), "".concat(r4[3].x, " ").concat(r4[3].y, " l"), "".concat(r4[2].x, " ").concat(r4[2].y, " l"), "f");
                    return [r4[0].x, r4[1].x, r4[3].y, r4[1].y];
                  } });
                }
              } else
                o3.data.hasPopup = false;
              return o3;
            }
            return _createClass(HighlightAnnotation);
          }(R), Q = function(t3) {
            _inherits(UnderlineAnnotation, t3);
            var r3 = _createSuper(UnderlineAnnotation);
            function UnderlineAnnotation(t4) {
              var o3;
              _classCallCheck(this, UnderlineAnnotation);
              (o3 = r3.call(this, t4)).data.annotationType = l.AnnotationType.UNDERLINE;
              if (o3.data.quadPoints = getQuadPoints(t4.dict, null)) {
                if (!o3.appearance) {
                  var c2 = o3.color ? Array.from(o3.color).map(function(t5) {
                    return t5 / 255;
                  }) : [0, 0, 0], u2 = t4.dict.get("CA");
                  o3._setDefaultAppearance({ xref: t4.xref, extra: "[] 0 d 1 w", strokeColor: c2, strokeAlpha: u2, pointsCallback: function pointsCallback(t5, r4) {
                    t5.push("".concat(r4[2].x, " ").concat(r4[2].y, " m"), "".concat(r4[3].x, " ").concat(r4[3].y, " l"), "S");
                    return [r4[0].x, r4[1].x, r4[3].y, r4[1].y];
                  } });
                }
              } else
                o3.data.hasPopup = false;
              return o3;
            }
            return _createClass(UnderlineAnnotation);
          }(R), ee = function(t3) {
            _inherits(SquigglyAnnotation, t3);
            var r3 = _createSuper(SquigglyAnnotation);
            function SquigglyAnnotation(t4) {
              var o3;
              _classCallCheck(this, SquigglyAnnotation);
              (o3 = r3.call(this, t4)).data.annotationType = l.AnnotationType.SQUIGGLY;
              if (o3.data.quadPoints = getQuadPoints(t4.dict, null)) {
                if (!o3.appearance) {
                  var c2 = o3.color ? Array.from(o3.color).map(function(t5) {
                    return t5 / 255;
                  }) : [0, 0, 0], u2 = t4.dict.get("CA");
                  o3._setDefaultAppearance({ xref: t4.xref, extra: "[] 0 d 1 w", strokeColor: c2, strokeAlpha: u2, pointsCallback: function pointsCallback(t5, r4) {
                    var o4 = (r4[0].y - r4[2].y) / 6, c3 = o4, l2 = r4[2].x, u3 = r4[2].y, h2 = r4[3].x;
                    t5.push("".concat(l2, " ").concat(u3 + c3, " m"));
                    do {
                      l2 += 2;
                      c3 = c3 === 0 ? o4 : 0;
                      t5.push("".concat(l2, " ").concat(u3 + c3, " l"));
                    } while (l2 < h2);
                    t5.push("S");
                    return [r4[2].x, h2, u3 - 2 * o4, u3 + 2 * o4];
                  } });
                }
              } else
                o3.data.hasPopup = false;
              return o3;
            }
            return _createClass(SquigglyAnnotation);
          }(R), te = function(t3) {
            _inherits(StrikeOutAnnotation, t3);
            var r3 = _createSuper(StrikeOutAnnotation);
            function StrikeOutAnnotation(t4) {
              var o3;
              _classCallCheck(this, StrikeOutAnnotation);
              (o3 = r3.call(this, t4)).data.annotationType = l.AnnotationType.STRIKEOUT;
              if (o3.data.quadPoints = getQuadPoints(t4.dict, null)) {
                if (!o3.appearance) {
                  var c2 = o3.color ? Array.from(o3.color).map(function(t5) {
                    return t5 / 255;
                  }) : [0, 0, 0], u2 = t4.dict.get("CA");
                  o3._setDefaultAppearance({ xref: t4.xref, extra: "[] 0 d 1 w", strokeColor: c2, strokeAlpha: u2, pointsCallback: function pointsCallback(t5, r4) {
                    t5.push("".concat((r4[0].x + r4[2].x) / 2, " ") + "".concat((r4[0].y + r4[2].y) / 2, " m"), "".concat((r4[1].x + r4[3].x) / 2, " ") + "".concat((r4[1].y + r4[3].y) / 2, " l"), "S");
                    return [r4[0].x, r4[1].x, r4[3].y, r4[1].y];
                  } });
                }
              } else
                o3.data.hasPopup = false;
              return o3;
            }
            return _createClass(StrikeOutAnnotation);
          }(R), re = function(t3) {
            _inherits(StampAnnotation, t3);
            var r3 = _createSuper(StampAnnotation);
            function StampAnnotation(t4) {
              var o3;
              _classCallCheck(this, StampAnnotation);
              (o3 = r3.call(this, t4)).data.annotationType = l.AnnotationType.STAMP;
              return o3;
            }
            return _createClass(StampAnnotation);
          }(R), ae = function(t3) {
            _inherits(FileAttachmentAnnotation, t3);
            var r3 = _createSuper(FileAttachmentAnnotation);
            function FileAttachmentAnnotation(t4) {
              var o3;
              _classCallCheck(this, FileAttachmentAnnotation);
              o3 = r3.call(this, t4);
              var c2 = new k.FileSpec(t4.dict.get("FS"), t4.xref);
              o3.data.annotationType = l.AnnotationType.FILEATTACHMENT;
              o3.data.file = c2.serializable;
              return o3;
            }
            return _createClass(FileAttachmentAnnotation);
          }(R);
        }, (t2, r2, o2) => {
          "use strict";
          function _typeof(t3) {
            return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t4) {
              return typeof t4;
            } : function(t4) {
              return t4 && typeof Symbol == "function" && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
            }, _typeof(t3);
          }
          Object.defineProperty(r2, "__esModule", { value: true });
          r2.createDefaultAppearance = function createDefaultAppearance(t3) {
            var r3, o3 = t3.fontSize, c2 = t3.fontName, l2 = t3.fontColor;
            r3 = l2.every(function(t4) {
              return t4 === 0;
            }) ? "0 g" : Array.from(l2).map(function(t4) {
              return (t4 / 255).toFixed(2);
            }).join(" ") + " rg";
            return "/".concat((0, u.escapePDFName)(c2), " ").concat(o3, " Tf ").concat(r3);
          };
          r2.parseDefaultAppearance = function parseDefaultAppearance(t3) {
            return new m(t3).parse();
          };
          var c = o2(4), l = o2(177), u = o2(161), h = o2(178), d = o2(158), g = o2(163);
          function _slicedToArray(t3, r3) {
            return function _arrayWithHoles(t4) {
              if (Array.isArray(t4))
                return t4;
            }(t3) || function _iterableToArrayLimit(t4, r4) {
              var o3 = t4 == null ? null : typeof Symbol != "undefined" && t4[Symbol.iterator] || t4["@@iterator"];
              if (o3 == null)
                return;
              var c2, l2, u2 = [], h2 = true, d2 = false;
              try {
                for (o3 = o3.call(t4); !(h2 = (c2 = o3.next()).done); h2 = true) {
                  u2.push(c2.value);
                  if (r4 && u2.length === r4)
                    break;
                }
              } catch (t5) {
                d2 = true;
                l2 = t5;
              } finally {
                try {
                  h2 || o3.return == null || o3.return();
                } finally {
                  if (d2)
                    throw l2;
                }
              }
              return u2;
            }(t3, r3) || function _unsupportedIterableToArray(t4, r4) {
              if (!t4)
                return;
              if (typeof t4 == "string")
                return _arrayLikeToArray(t4, r4);
              var o3 = Object.prototype.toString.call(t4).slice(8, -1);
              o3 === "Object" && t4.constructor && (o3 = t4.constructor.name);
              if (o3 === "Map" || o3 === "Set")
                return Array.from(t4);
              if (o3 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(o3))
                return _arrayLikeToArray(t4, r4);
            }(t3, r3) || function _nonIterableRest() {
              throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
            }();
          }
          function _arrayLikeToArray(t3, r3) {
            (r3 == null || r3 > t3.length) && (r3 = t3.length);
            for (var o3 = 0, c2 = new Array(r3); o3 < r3; o3++)
              c2[o3] = t3[o3];
            return c2;
          }
          function _defineProperties(t3, r3) {
            for (var o3 = 0; o3 < r3.length; o3++) {
              var c2 = r3[o3];
              c2.enumerable = c2.enumerable || false;
              c2.configurable = true;
              "value" in c2 && (c2.writable = true);
              Object.defineProperty(t3, c2.key, c2);
            }
          }
          function _setPrototypeOf(t3, r3) {
            _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(t4, r4) {
              t4.__proto__ = r4;
              return t4;
            };
            return _setPrototypeOf(t3, r3);
          }
          function _createSuper(t3) {
            var r3 = function _isNativeReflectConstruct() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                }));
                return true;
              } catch (t4) {
                return false;
              }
            }();
            return function _createSuperInternal() {
              var o3, c2 = _getPrototypeOf(t3);
              if (r3) {
                var l2 = _getPrototypeOf(this).constructor;
                o3 = Reflect.construct(c2, arguments, l2);
              } else
                o3 = c2.apply(this, arguments);
              return _possibleConstructorReturn(this, o3);
            };
          }
          function _possibleConstructorReturn(t3, r3) {
            if (r3 && (_typeof(r3) === "object" || typeof r3 == "function"))
              return r3;
            if (r3 !== void 0)
              throw new TypeError("Derived constructors may only return object or undefined");
            return function _assertThisInitialized(t4) {
              if (t4 === void 0)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return t4;
            }(t3);
          }
          function _getPrototypeOf(t3) {
            _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(t4) {
              return t4.__proto__ || Object.getPrototypeOf(t4);
            };
            return _getPrototypeOf(t3);
          }
          var m = function(t3) {
            !function _inherits(t4, r4) {
              if (typeof r4 != "function" && r4 !== null)
                throw new TypeError("Super expression must either be null or a function");
              t4.prototype = Object.create(r4 && r4.prototype, { constructor: { value: t4, writable: true, configurable: true } });
              Object.defineProperty(t4, "prototype", { writable: false });
              r4 && _setPrototypeOf(t4, r4);
            }(DefaultAppearanceEvaluator, t3);
            var r3 = _createSuper(DefaultAppearanceEvaluator);
            function DefaultAppearanceEvaluator(t4) {
              !function _classCallCheck(t5, r4) {
                if (!(t5 instanceof r4))
                  throw new TypeError("Cannot call a class as a function");
              }(this, DefaultAppearanceEvaluator);
              return r3.call(this, new g.StringStream(t4));
            }
            !function _createClass(t4, r4, o3) {
              r4 && _defineProperties(t4.prototype, r4);
              o3 && _defineProperties(t4, o3);
              Object.defineProperty(t4, "prototype", { writable: false });
              return t4;
            }(DefaultAppearanceEvaluator, [{ key: "parse", value: function parse() {
              var t4 = { fn: 0, args: [] }, r4 = { fontSize: 0, fontName: "", fontColor: new Uint8ClampedArray(3) };
              try {
                for (; ; ) {
                  t4.args.length = 0;
                  if (!this.read(t4))
                    break;
                  if (this.savedStatesDepth === 0) {
                    var o3 = t4.fn, u2 = t4.args;
                    switch (0 | o3) {
                      case c.OPS.setFont:
                        var h2 = _slicedToArray(u2, 2), g2 = h2[0], m2 = h2[1];
                        g2 instanceof d.Name && (r4.fontName = g2.name);
                        typeof m2 == "number" && m2 > 0 && (r4.fontSize = m2);
                        break;
                      case c.OPS.setFillRGBColor:
                        l.ColorSpace.singletons.rgb.getRgbItem(u2, 0, r4.fontColor, 0);
                        break;
                      case c.OPS.setFillGray:
                        l.ColorSpace.singletons.gray.getRgbItem(u2, 0, r4.fontColor, 0);
                        break;
                      case c.OPS.setFillColorSpace:
                        l.ColorSpace.singletons.cmyk.getRgbItem(u2, 0, r4.fontColor, 0);
                    }
                  }
                }
              } catch (t5) {
                (0, c.warn)('parseDefaultAppearance - ignoring errors: "'.concat(t5, '".'));
              }
              return r4;
            } }]);
            return DefaultAppearanceEvaluator;
          }(h.EvaluatorPreprocessor);
        }, (t2, r2, o2) => {
          "use strict";
          function _typeof(t3) {
            return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t4) {
              return typeof t4;
            } : function(t4) {
              return t4 && typeof Symbol == "function" && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
            }, _typeof(t3);
          }
          Object.defineProperty(r2, "__esModule", { value: true });
          r2.ColorSpace = void 0;
          var c = function _interopRequireDefault(t3) {
            return t3 && t3.__esModule ? t3 : { default: t3 };
          }(o2(2)), l = o2(4), u = o2(158), h = o2(162), d = o2(161);
          function _inherits(t3, r3) {
            if (typeof r3 != "function" && r3 !== null)
              throw new TypeError("Super expression must either be null or a function");
            t3.prototype = Object.create(r3 && r3.prototype, { constructor: { value: t3, writable: true, configurable: true } });
            Object.defineProperty(t3, "prototype", { writable: false });
            r3 && _setPrototypeOf(t3, r3);
          }
          function _setPrototypeOf(t3, r3) {
            _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(t4, r4) {
              t4.__proto__ = r4;
              return t4;
            };
            return _setPrototypeOf(t3, r3);
          }
          function _createSuper(t3) {
            var r3 = function _isNativeReflectConstruct() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                }));
                return true;
              } catch (t4) {
                return false;
              }
            }();
            return function _createSuperInternal() {
              var o3, c2 = _getPrototypeOf(t3);
              if (r3) {
                var l2 = _getPrototypeOf(this).constructor;
                o3 = Reflect.construct(c2, arguments, l2);
              } else
                o3 = c2.apply(this, arguments);
              return _possibleConstructorReturn(this, o3);
            };
          }
          function _possibleConstructorReturn(t3, r3) {
            if (r3 && (_typeof(r3) === "object" || typeof r3 == "function"))
              return r3;
            if (r3 !== void 0)
              throw new TypeError("Derived constructors may only return object or undefined");
            return function _assertThisInitialized(t4) {
              if (t4 === void 0)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return t4;
            }(t3);
          }
          function _getPrototypeOf(t3) {
            _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(t4) {
              return t4.__proto__ || Object.getPrototypeOf(t4);
            };
            return _getPrototypeOf(t3);
          }
          function asyncGeneratorStep(t3, r3, o3, c2, l2, u2, h2) {
            try {
              var d2 = t3[u2](h2), g2 = d2.value;
            } catch (t4) {
              o3(t4);
              return;
            }
            d2.done ? r3(g2) : Promise.resolve(g2).then(c2, l2);
          }
          function _classCallCheck(t3, r3) {
            if (!(t3 instanceof r3))
              throw new TypeError("Cannot call a class as a function");
          }
          function _defineProperties(t3, r3) {
            for (var o3 = 0; o3 < r3.length; o3++) {
              var c2 = r3[o3];
              c2.enumerable = c2.enumerable || false;
              c2.configurable = true;
              "value" in c2 && (c2.writable = true);
              Object.defineProperty(t3, c2.key, c2);
            }
          }
          function _createClass(t3, r3, o3) {
            r3 && _defineProperties(t3.prototype, r3);
            o3 && _defineProperties(t3, o3);
            Object.defineProperty(t3, "prototype", { writable: false });
            return t3;
          }
          var g = function() {
            function ColorSpace(t4, r3) {
              _classCallCheck(this, ColorSpace);
              this.constructor === ColorSpace && (0, l.unreachable)("Cannot initialize ColorSpace.");
              this.name = t4;
              this.numComps = r3;
            }
            _createClass(ColorSpace, [{ key: "getRgb", value: function getRgb(t4, r3) {
              var o3 = new Uint8ClampedArray(3);
              this.getRgbItem(t4, r3, o3, 0);
              return o3;
            } }, { key: "getRgbItem", value: function getRgbItem(t4, r3, o3, c2) {
              (0, l.unreachable)("Should not call ColorSpace.getRgbItem");
            } }, { key: "getRgbBuffer", value: function getRgbBuffer(t4, r3, o3, c2, u2, h2, d2) {
              (0, l.unreachable)("Should not call ColorSpace.getRgbBuffer");
            } }, { key: "getOutputLength", value: function getOutputLength(t4, r3) {
              (0, l.unreachable)("Should not call ColorSpace.getOutputLength");
            } }, { key: "isPassthrough", value: function isPassthrough(t4) {
              return false;
            } }, { key: "isDefaultDecode", value: function isDefaultDecode(t4, r3) {
              return ColorSpace.isDefaultDecode(t4, this.numComps);
            } }, { key: "fillRgb", value: function fillRgb(t4, r3, o3, c2, l2, u2, h2, d2, g2) {
              var m2 = r3 * o3, y2 = null, v2 = 1 << h2, k2 = o3 !== l2 || r3 !== c2;
              if (this.isPassthrough(h2))
                y2 = d2;
              else if (this.numComps === 1 && m2 > v2 && this.name !== "DeviceGray" && this.name !== "DeviceRGB") {
                for (var _2 = h2 <= 8 ? new Uint8Array(v2) : new Uint16Array(v2), w2 = 0; w2 < v2; w2++)
                  _2[w2] = w2;
                var S2 = new Uint8ClampedArray(3 * v2);
                this.getRgbBuffer(_2, 0, v2, S2, 0, h2, 0);
                if (k2) {
                  y2 = new Uint8Array(3 * m2);
                  for (var C2 = 0, x2 = 0; x2 < m2; ++x2) {
                    var O = 3 * d2[x2];
                    y2[C2++] = S2[O];
                    y2[C2++] = S2[O + 1];
                    y2[C2++] = S2[O + 2];
                  }
                } else
                  for (var T = 0, E = 0; E < m2; ++E) {
                    var M = 3 * d2[E];
                    t4[T++] = S2[M];
                    t4[T++] = S2[M + 1];
                    t4[T++] = S2[M + 2];
                    T += g2;
                  }
              } else if (k2) {
                y2 = new Uint8ClampedArray(3 * m2);
                this.getRgbBuffer(d2, 0, m2, y2, 0, h2, 0);
              } else
                this.getRgbBuffer(d2, 0, c2 * u2, t4, 0, h2, g2);
              if (y2)
                if (k2)
                  !function resizeRgbImage(t5, r4, o4, c3, l3, u3, h3) {
                    h3 = h3 !== 1 ? 0 : h3;
                    for (var d3, g3 = o4 / l3, m3 = c3 / u3, y3 = 0, v3 = new Uint16Array(l3), k3 = 3 * o4, _3 = 0; _3 < l3; _3++)
                      v3[_3] = 3 * Math.floor(_3 * g3);
                    for (var w3 = 0; w3 < u3; w3++)
                      for (var S3 = Math.floor(w3 * m3) * k3, C3 = 0; C3 < l3; C3++) {
                        d3 = S3 + v3[C3];
                        r4[y3++] = t5[d3++];
                        r4[y3++] = t5[d3++];
                        r4[y3++] = t5[d3++];
                        y3 += h3;
                      }
                  }(y2, t4, r3, o3, c2, l2, g2);
                else
                  for (var R = 0, D = 0, j = 0, L = c2 * u2; j < L; j++) {
                    t4[R++] = y2[D++];
                    t4[R++] = y2[D++];
                    t4[R++] = y2[D++];
                    R += g2;
                  }
            } }, { key: "usesZeroToOneRange", get: function get() {
              return (0, l.shadow)(this, "usesZeroToOneRange", true);
            } }], [{ key: "_cache", value: function _cache(t4, r3, o3, c2) {
              if (!o3)
                throw new Error('ColorSpace._cache - expected "localColorSpaceCache" argument.');
              if (!c2)
                throw new Error('ColorSpace._cache - expected "parsedColorSpace" argument.');
              var l2, h2;
              if (t4 instanceof u.Ref) {
                h2 = t4;
                t4 = r3.fetch(t4);
              }
              t4 instanceof u.Name && (l2 = t4.name);
              (l2 || h2) && o3.set(l2, h2, c2);
            } }, { key: "getCached", value: function getCached(t4, r3, o3) {
              if (!o3)
                throw new Error('ColorSpace.getCached - expected "localColorSpaceCache" argument.');
              if (t4 instanceof u.Ref) {
                var c2 = o3.getByRef(t4);
                if (c2)
                  return c2;
                try {
                  t4 = r3.fetch(t4);
                } catch (t5) {
                  if (t5 instanceof d.MissingDataException)
                    throw t5;
                }
              }
              if (t4 instanceof u.Name) {
                var l2 = o3.getByName(t4.name);
                if (l2)
                  return l2;
              }
              return null;
            } }, { key: "parseAsync", value: (t3 = function _asyncToGenerator(t4) {
              return function() {
                var r3 = this, o3 = arguments;
                return new Promise(function(c2, l2) {
                  var u2 = t4.apply(r3, o3);
                  function _next(t5) {
                    asyncGeneratorStep(u2, c2, l2, _next, _throw, "next", t5);
                  }
                  function _throw(t5) {
                    asyncGeneratorStep(u2, c2, l2, _next, _throw, "throw", t5);
                  }
                  _next(void 0);
                });
              };
            }(c.default.mark(function _callee(t4) {
              var r3, o3, l2, u2, h2, d2, g2;
              return c.default.wrap(function _callee$(c2) {
                for (; ; )
                  switch (c2.prev = c2.next) {
                    case 0:
                      r3 = t4.cs, o3 = t4.xref, l2 = t4.resources, u2 = l2 === void 0 ? null : l2, h2 = t4.pdfFunctionFactory, d2 = t4.localColorSpaceCache;
                      g2 = this._parse(r3, o3, u2, h2);
                      this._cache(r3, o3, d2, g2);
                      return c2.abrupt("return", g2);
                    case 4:
                    case "end":
                      return c2.stop();
                  }
              }, _callee, this);
            })), function parseAsync(r3) {
              return t3.apply(this, arguments);
            }) }, { key: "parse", value: function parse(t4) {
              var r3 = t4.cs, o3 = t4.xref, c2 = t4.resources, l2 = c2 === void 0 ? null : c2, u2 = t4.pdfFunctionFactory, h2 = t4.localColorSpaceCache, d2 = this.getCached(r3, o3, h2);
              if (d2)
                return d2;
              var g2 = this._parse(r3, o3, l2, u2);
              this._cache(r3, o3, h2, g2);
              return g2;
            } }, { key: "_parse", value: function _parse(t4, r3) {
              var o3 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null, c2 = arguments.length > 3 ? arguments[3] : void 0;
              if ((t4 = r3.fetchIfRef(t4)) instanceof u.Name)
                switch (t4.name) {
                  case "G":
                  case "DeviceGray":
                    return this.singletons.gray;
                  case "RGB":
                  case "DeviceRGB":
                    return this.singletons.rgb;
                  case "CMYK":
                  case "DeviceCMYK":
                    return this.singletons.cmyk;
                  case "Pattern":
                    return new y(null);
                  default:
                    if (o3 instanceof u.Dict) {
                      var h2 = o3.get("ColorSpace");
                      if (h2 instanceof u.Dict) {
                        var d2 = h2.get(t4.name);
                        if (d2) {
                          if (d2 instanceof u.Name)
                            return this._parse(d2, r3, o3, c2);
                          t4 = d2;
                          break;
                        }
                      }
                    }
                    throw new l.FormatError("Unrecognized ColorSpace: ".concat(t4.name));
                }
              if (Array.isArray(t4)) {
                var g2, k2, _2, w2, O, T, E = r3.fetchIfRef(t4[0]).name;
                switch (E) {
                  case "G":
                  case "DeviceGray":
                    return this.singletons.gray;
                  case "RGB":
                  case "DeviceRGB":
                    return this.singletons.rgb;
                  case "CMYK":
                  case "DeviceCMYK":
                    return this.singletons.cmyk;
                  case "CalGray":
                    w2 = (g2 = r3.fetchIfRef(t4[1])).getArray("WhitePoint");
                    O = g2.getArray("BlackPoint");
                    T = g2.get("Gamma");
                    return new S(w2, O, T);
                  case "CalRGB":
                    w2 = (g2 = r3.fetchIfRef(t4[1])).getArray("WhitePoint");
                    O = g2.getArray("BlackPoint");
                    T = g2.getArray("Gamma");
                    var M = g2.getArray("Matrix");
                    return new C(w2, O, T, M);
                  case "ICCBased":
                    var R = r3.fetchIfRef(t4[1]), D = R.dict;
                    k2 = D.get("N");
                    var j = D.get("Alternate");
                    if (j) {
                      var L = this._parse(j, r3, o3, c2);
                      if (L.numComps === k2)
                        return L;
                      (0, l.warn)("ICCBased color space: Ignoring incorrect /Alternate entry.");
                    }
                    if (k2 === 1)
                      return this.singletons.gray;
                    if (k2 === 3)
                      return this.singletons.rgb;
                    if (k2 === 4)
                      return this.singletons.cmyk;
                    break;
                  case "Pattern":
                    (_2 = t4[1] || null) && (_2 = this._parse(_2, r3, o3, c2));
                    return new y(_2);
                  case "I":
                  case "Indexed":
                    _2 = this._parse(t4[1], r3, o3, c2);
                    var N = r3.fetchIfRef(t4[2]) + 1, U = r3.fetchIfRef(t4[3]);
                    return new v(_2, N, U);
                  case "Separation":
                  case "DeviceN":
                    var H = r3.fetchIfRef(t4[1]);
                    k2 = Array.isArray(H) ? H.length : 1;
                    _2 = this._parse(t4[2], r3, o3, c2);
                    var $ = c2.create(t4[3]);
                    return new m(k2, _2, $);
                  case "Lab":
                    w2 = (g2 = r3.fetchIfRef(t4[1])).getArray("WhitePoint");
                    O = g2.getArray("BlackPoint");
                    var X = g2.getArray("Range");
                    return new x(w2, O, X);
                  default:
                    throw new l.FormatError("Unimplemented ColorSpace object: ".concat(E));
                }
              }
              throw new l.FormatError("Unrecognized ColorSpace object: ".concat(t4));
            } }, { key: "isDefaultDecode", value: function isDefaultDecode(t4, r3) {
              if (!Array.isArray(t4))
                return true;
              if (2 * r3 !== t4.length) {
                (0, l.warn)("The decode map is not the correct length");
                return true;
              }
              for (var o3 = 0, c2 = t4.length; o3 < c2; o3 += 2)
                if (t4[o3] !== 0 || t4[o3 + 1] !== 1)
                  return false;
              return true;
            } }, { key: "singletons", get: function get() {
              return (0, l.shadow)(this, "singletons", { get gray() {
                return (0, l.shadow)(this, "gray", new k());
              }, get rgb() {
                return (0, l.shadow)(this, "rgb", new _());
              }, get cmyk() {
                return (0, l.shadow)(this, "cmyk", new w());
              } });
            } }]);
            var t3;
            return ColorSpace;
          }();
          r2.ColorSpace = g;
          var m = function(t3) {
            _inherits(AlternateCS, t3);
            var r3 = _createSuper(AlternateCS);
            function AlternateCS(t4, o3, c2) {
              var l2;
              _classCallCheck(this, AlternateCS);
              (l2 = r3.call(this, "Alternate", t4)).base = o3;
              l2.tintFn = c2;
              l2.tmpBuf = new Float32Array(o3.numComps);
              return l2;
            }
            _createClass(AlternateCS, [{ key: "getRgbItem", value: function getRgbItem(t4, r4, o3, c2) {
              var l2 = this.tmpBuf;
              this.tintFn(t4, r4, l2, 0);
              this.base.getRgbItem(l2, 0, o3, c2);
            } }, { key: "getRgbBuffer", value: function getRgbBuffer(t4, r4, o3, c2, l2, u2, h2) {
              var d2, g2, m2 = this.tintFn, y2 = this.base, v2 = 1 / ((1 << u2) - 1), k2 = y2.numComps, _2 = y2.usesZeroToOneRange, w2 = (y2.isPassthrough(8) || !_2) && h2 === 0, S2 = w2 ? l2 : 0, C2 = w2 ? c2 : new Uint8ClampedArray(k2 * o3), x2 = this.numComps, O = new Float32Array(x2), T = new Float32Array(k2);
              for (d2 = 0; d2 < o3; d2++) {
                for (g2 = 0; g2 < x2; g2++)
                  O[g2] = t4[r4++] * v2;
                m2(O, 0, T, 0);
                if (_2)
                  for (g2 = 0; g2 < k2; g2++)
                    C2[S2++] = 255 * T[g2];
                else {
                  y2.getRgbItem(T, 0, C2, S2);
                  S2 += k2;
                }
              }
              w2 || y2.getRgbBuffer(C2, 0, o3, c2, l2, 8, h2);
            } }, { key: "getOutputLength", value: function getOutputLength(t4, r4) {
              return this.base.getOutputLength(t4 * this.base.numComps / this.numComps, r4);
            } }]);
            return AlternateCS;
          }(g), y = function(t3) {
            _inherits(PatternCS, t3);
            var r3 = _createSuper(PatternCS);
            function PatternCS(t4) {
              var o3;
              _classCallCheck(this, PatternCS);
              (o3 = r3.call(this, "Pattern", null)).base = t4;
              return o3;
            }
            _createClass(PatternCS, [{ key: "isDefaultDecode", value: function isDefaultDecode(t4, r4) {
              (0, l.unreachable)("Should not call PatternCS.isDefaultDecode");
            } }]);
            return PatternCS;
          }(g), v = function(t3) {
            _inherits(IndexedCS, t3);
            var r3 = _createSuper(IndexedCS);
            function IndexedCS(t4, o3, c2) {
              var u2;
              _classCallCheck(this, IndexedCS);
              (u2 = r3.call(this, "Indexed", 1)).base = t4;
              u2.highVal = o3;
              var d2 = t4.numComps * o3;
              u2.lookup = new Uint8Array(d2);
              if (c2 instanceof h.BaseStream) {
                var g2 = c2.getBytes(d2);
                u2.lookup.set(g2);
              } else {
                if (typeof c2 != "string")
                  throw new l.FormatError("IndexedCS - unrecognized lookup table: ".concat(c2));
                for (var m2 = 0; m2 < d2; ++m2)
                  u2.lookup[m2] = 255 & c2.charCodeAt(m2);
              }
              return u2;
            }
            _createClass(IndexedCS, [{ key: "getRgbItem", value: function getRgbItem(t4, r4, o3, c2) {
              var l2 = this.base.numComps, u2 = t4[r4] * l2;
              this.base.getRgbBuffer(this.lookup, u2, 1, o3, c2, 8, 0);
            } }, { key: "getRgbBuffer", value: function getRgbBuffer(t4, r4, o3, c2, l2, u2, h2) {
              for (var d2 = this.base, g2 = d2.numComps, m2 = d2.getOutputLength(g2, h2), y2 = this.lookup, v2 = 0; v2 < o3; ++v2) {
                var k2 = t4[r4++] * g2;
                d2.getRgbBuffer(y2, k2, 1, c2, l2, 8, h2);
                l2 += m2;
              }
            } }, { key: "getOutputLength", value: function getOutputLength(t4, r4) {
              return this.base.getOutputLength(t4 * this.base.numComps, r4);
            } }, { key: "isDefaultDecode", value: function isDefaultDecode(t4, r4) {
              if (!Array.isArray(t4))
                return true;
              if (t4.length !== 2) {
                (0, l.warn)("Decode map length is not correct");
                return true;
              }
              if (!Number.isInteger(r4) || r4 < 1) {
                (0, l.warn)("Bits per component is not correct");
                return true;
              }
              return t4[0] === 0 && t4[1] === (1 << r4) - 1;
            } }]);
            return IndexedCS;
          }(g), k = function(t3) {
            _inherits(DeviceGrayCS, t3);
            var r3 = _createSuper(DeviceGrayCS);
            function DeviceGrayCS() {
              _classCallCheck(this, DeviceGrayCS);
              return r3.call(this, "DeviceGray", 1);
            }
            _createClass(DeviceGrayCS, [{ key: "getRgbItem", value: function getRgbItem(t4, r4, o3, c2) {
              var l2 = 255 * t4[r4];
              o3[c2] = o3[c2 + 1] = o3[c2 + 2] = l2;
            } }, { key: "getRgbBuffer", value: function getRgbBuffer(t4, r4, o3, c2, l2, u2, h2) {
              for (var d2 = 255 / ((1 << u2) - 1), g2 = r4, m2 = l2, y2 = 0; y2 < o3; ++y2) {
                var v2 = d2 * t4[g2++];
                c2[m2++] = v2;
                c2[m2++] = v2;
                c2[m2++] = v2;
                m2 += h2;
              }
            } }, { key: "getOutputLength", value: function getOutputLength(t4, r4) {
              return t4 * (3 + r4);
            } }]);
            return DeviceGrayCS;
          }(g), _ = function(t3) {
            _inherits(DeviceRgbCS, t3);
            var r3 = _createSuper(DeviceRgbCS);
            function DeviceRgbCS() {
              _classCallCheck(this, DeviceRgbCS);
              return r3.call(this, "DeviceRGB", 3);
            }
            _createClass(DeviceRgbCS, [{ key: "getRgbItem", value: function getRgbItem(t4, r4, o3, c2) {
              o3[c2] = 255 * t4[r4];
              o3[c2 + 1] = 255 * t4[r4 + 1];
              o3[c2 + 2] = 255 * t4[r4 + 2];
            } }, { key: "getRgbBuffer", value: function getRgbBuffer(t4, r4, o3, c2, l2, u2, h2) {
              if (u2 !== 8 || h2 !== 0)
                for (var d2 = 255 / ((1 << u2) - 1), g2 = r4, m2 = l2, y2 = 0; y2 < o3; ++y2) {
                  c2[m2++] = d2 * t4[g2++];
                  c2[m2++] = d2 * t4[g2++];
                  c2[m2++] = d2 * t4[g2++];
                  m2 += h2;
                }
              else
                c2.set(t4.subarray(r4, r4 + 3 * o3), l2);
            } }, { key: "getOutputLength", value: function getOutputLength(t4, r4) {
              return t4 * (3 + r4) / 3 | 0;
            } }, { key: "isPassthrough", value: function isPassthrough(t4) {
              return t4 === 8;
            } }]);
            return DeviceRgbCS;
          }(g), w = function DeviceCmykCSClosure() {
            function convertToRgb(t3, r3, o3, c2, l2) {
              var u2 = t3[r3] * o3, h2 = t3[r3 + 1] * o3, d2 = t3[r3 + 2] * o3, g2 = t3[r3 + 3] * o3;
              c2[l2] = 255 + u2 * (-4.387332384609988 * u2 + 54.48615194189176 * h2 + 18.82290502165302 * d2 + 212.25662451639585 * g2 - 285.2331026137004) + h2 * (1.7149763477362134 * h2 - 5.6096736904047315 * d2 + -17.873870861415444 * g2 - 5.497006427196366) + d2 * (-2.5217340131683033 * d2 - 21.248923337353073 * g2 + 17.5119270841813) + g2 * (-21.86122147463605 * g2 - 189.48180835922747);
              c2[l2 + 1] = 255 + u2 * (8.841041422036149 * u2 + 60.118027045597366 * h2 + 6.871425592049007 * d2 + 31.159100130055922 * g2 - 79.2970844816548) + h2 * (-15.310361306967817 * h2 + 17.575251261109482 * d2 + 131.35250912493976 * g2 - 190.9453302588951) + d2 * (4.444339102852739 * d2 + 9.8632861493405 * g2 - 24.86741582555878) + g2 * (-20.737325471181034 * g2 - 187.80453709719578);
              c2[l2 + 2] = 255 + u2 * (0.8842522430003296 * u2 + 8.078677503112928 * h2 + 30.89978309703729 * d2 - 0.23883238689178934 * g2 - 14.183576799673286) + h2 * (10.49593273432072 * h2 + 63.02378494754052 * d2 + 50.606957656360734 * g2 - 112.23884253719248) + d2 * (0.03296041114873217 * d2 + 115.60384449646641 * g2 - 193.58209356861505) + g2 * (-22.33816807309886 * g2 - 180.12613974708367);
            }
            return function(t3) {
              _inherits(DeviceCmykCS, t3);
              var r3 = _createSuper(DeviceCmykCS);
              function DeviceCmykCS() {
                _classCallCheck(this, DeviceCmykCS);
                return r3.call(this, "DeviceCMYK", 4);
              }
              _createClass(DeviceCmykCS, [{ key: "getRgbItem", value: function getRgbItem(t4, r4, o3, c2) {
                convertToRgb(t4, r4, 1, o3, c2);
              } }, { key: "getRgbBuffer", value: function getRgbBuffer(t4, r4, o3, c2, l2, u2, h2) {
                for (var d2 = 1 / ((1 << u2) - 1), g2 = 0; g2 < o3; g2++) {
                  convertToRgb(t4, r4, d2, c2, l2);
                  r4 += 4;
                  l2 += 3 + h2;
                }
              } }, { key: "getOutputLength", value: function getOutputLength(t4, r4) {
                return t4 / 4 * (3 + r4) | 0;
              } }]);
              return DeviceCmykCS;
            }(g);
          }(), S = function CalGrayCSClosure() {
            function convertToRgb(t3, r3, o3, c2, l2, u2) {
              var h2 = r3[o3] * u2, d2 = Math.pow(h2, t3.G), g2 = t3.YW * d2, m2 = Math.max(295.8 * Math.pow(g2, 0.3333333333333333) - 40.8, 0);
              c2[l2] = m2;
              c2[l2 + 1] = m2;
              c2[l2 + 2] = m2;
            }
            return function(t3) {
              _inherits(CalGrayCS, t3);
              var r3 = _createSuper(CalGrayCS);
              function CalGrayCS(t4, o3, c2) {
                var u2;
                _classCallCheck(this, CalGrayCS);
                u2 = r3.call(this, "CalGray", 1);
                if (!t4)
                  throw new l.FormatError("WhitePoint missing - required for color space CalGray");
                o3 = o3 || [0, 0, 0];
                c2 = c2 || 1;
                u2.XW = t4[0];
                u2.YW = t4[1];
                u2.ZW = t4[2];
                u2.XB = o3[0];
                u2.YB = o3[1];
                u2.ZB = o3[2];
                u2.G = c2;
                if (u2.XW < 0 || u2.ZW < 0 || u2.YW !== 1)
                  throw new l.FormatError("Invalid WhitePoint components for ".concat(u2.name) + ", no fallback available");
                if (u2.XB < 0 || u2.YB < 0 || u2.ZB < 0) {
                  (0, l.info)("Invalid BlackPoint for ".concat(u2.name, ", falling back to default."));
                  u2.XB = u2.YB = u2.ZB = 0;
                }
                u2.XB === 0 && u2.YB === 0 && u2.ZB === 0 || (0, l.warn)("".concat(u2.name, ", BlackPoint: XB: ").concat(u2.XB, ", YB: ").concat(u2.YB, ", ") + "ZB: ".concat(u2.ZB, ", only default values are supported."));
                if (u2.G < 1) {
                  (0, l.info)("Invalid Gamma: ".concat(u2.G, " for ").concat(u2.name, ", ") + "falling back to default.");
                  u2.G = 1;
                }
                return u2;
              }
              _createClass(CalGrayCS, [{ key: "getRgbItem", value: function getRgbItem(t4, r4, o3, c2) {
                convertToRgb(this, t4, r4, o3, c2, 1);
              } }, { key: "getRgbBuffer", value: function getRgbBuffer(t4, r4, o3, c2, l2, u2, h2) {
                for (var d2 = 1 / ((1 << u2) - 1), g2 = 0; g2 < o3; ++g2) {
                  convertToRgb(this, t4, r4, c2, l2, d2);
                  r4 += 1;
                  l2 += 3 + h2;
                }
              } }, { key: "getOutputLength", value: function getOutputLength(t4, r4) {
                return t4 * (3 + r4);
              } }]);
              return CalGrayCS;
            }(g);
          }(), C = function CalRGBCSClosure() {
            var t3 = new Float32Array([0.8951, 0.2664, -0.1614, -0.7502, 1.7135, 0.0367, 0.0389, -0.0685, 1.0296]), r3 = new Float32Array([0.9869929, -0.1470543, 0.1599627, 0.4323053, 0.5183603, 0.0492912, -85287e-7, 0.0400428, 0.9684867]), o3 = new Float32Array([3.2404542, -1.5371385, -0.4985314, -0.969266, 1.8760108, 0.041556, 0.0556434, -0.2040259, 1.0572252]), c2 = new Float32Array([1, 1, 1]), u2 = new Float32Array(3), h2 = new Float32Array(3), d2 = new Float32Array(3), m2 = Math.pow(24 / 116, 3) / 8;
            function matrixProduct(t4, r4, o4) {
              o4[0] = t4[0] * r4[0] + t4[1] * r4[1] + t4[2] * r4[2];
              o4[1] = t4[3] * r4[0] + t4[4] * r4[1] + t4[5] * r4[2];
              o4[2] = t4[6] * r4[0] + t4[7] * r4[1] + t4[8] * r4[2];
            }
            function sRGBTransferFunction(t4) {
              return t4 <= 31308e-7 ? adjustToRange(0, 1, 12.92 * t4) : t4 >= 0.99554525 ? 1 : adjustToRange(0, 1, 1.055 * Math.pow(t4, 1 / 2.4) - 0.055);
            }
            function adjustToRange(t4, r4, o4) {
              return Math.max(t4, Math.min(r4, o4));
            }
            function decodeL(t4) {
              return t4 < 0 ? -decodeL(-t4) : t4 > 8 ? Math.pow((t4 + 16) / 116, 3) : t4 * m2;
            }
            function convertToRgb(l2, g2, m3, y2, v2, k2) {
              var _2 = adjustToRange(0, 1, g2[m3] * k2), w2 = adjustToRange(0, 1, g2[m3 + 1] * k2), S2 = adjustToRange(0, 1, g2[m3 + 2] * k2), C2 = _2 === 1 ? 1 : Math.pow(_2, l2.GR), x2 = w2 === 1 ? 1 : Math.pow(w2, l2.GG), O = S2 === 1 ? 1 : Math.pow(S2, l2.GB), T = l2.MXA * C2 + l2.MXB * x2 + l2.MXC * O, E = l2.MYA * C2 + l2.MYB * x2 + l2.MYC * O, M = l2.MZA * C2 + l2.MZB * x2 + l2.MZC * O, R = h2;
              R[0] = T;
              R[1] = E;
              R[2] = M;
              var D = d2;
              !function normalizeWhitePointToFlat(o4, c3, l3) {
                if (o4[0] !== 1 || o4[2] !== 1) {
                  var h3 = l3;
                  matrixProduct(t3, c3, h3);
                  var d3 = u2;
                  !function convertToFlat(t4, r4, o5) {
                    o5[0] = 1 * r4[0] / t4[0];
                    o5[1] = 1 * r4[1] / t4[1];
                    o5[2] = 1 * r4[2] / t4[2];
                  }(o4, h3, d3);
                  matrixProduct(r3, d3, l3);
                } else {
                  l3[0] = c3[0];
                  l3[1] = c3[1];
                  l3[2] = c3[2];
                }
              }(l2.whitePoint, R, D);
              var j = h2;
              !function compensateBlackPoint(t4, r4, o4) {
                if (t4[0] !== 0 || t4[1] !== 0 || t4[2] !== 0) {
                  var c3 = decodeL(0), l3 = (1 - c3) / (1 - decodeL(t4[0])), u3 = 1 - l3, h3 = (1 - c3) / (1 - decodeL(t4[1])), d3 = 1 - h3, g3 = (1 - c3) / (1 - decodeL(t4[2])), m4 = 1 - g3;
                  o4[0] = r4[0] * l3 + u3;
                  o4[1] = r4[1] * h3 + d3;
                  o4[2] = r4[2] * g3 + m4;
                } else {
                  o4[0] = r4[0];
                  o4[1] = r4[1];
                  o4[2] = r4[2];
                }
              }(l2.blackPoint, D, j);
              var L = d2;
              !function normalizeWhitePointToD65(o4, c3, l3) {
                var h3 = l3;
                matrixProduct(t3, c3, h3);
                var d3 = u2;
                !function convertToD65(t4, r4, o5) {
                  o5[0] = 0.95047 * r4[0] / t4[0];
                  o5[1] = 1 * r4[1] / t4[1];
                  o5[2] = 1.08883 * r4[2] / t4[2];
                }(o4, h3, d3);
                matrixProduct(r3, d3, l3);
              }(c2, j, L);
              var N = h2;
              matrixProduct(o3, L, N);
              y2[v2] = 255 * sRGBTransferFunction(N[0]);
              y2[v2 + 1] = 255 * sRGBTransferFunction(N[1]);
              y2[v2 + 2] = 255 * sRGBTransferFunction(N[2]);
            }
            return function(t4) {
              _inherits(CalRGBCS, t4);
              var r4 = _createSuper(CalRGBCS);
              function CalRGBCS(t5, o4, c3, u3) {
                var h3;
                _classCallCheck(this, CalRGBCS);
                h3 = r4.call(this, "CalRGB", 3);
                if (!t5)
                  throw new l.FormatError("WhitePoint missing - required for color space CalRGB");
                o4 = o4 || new Float32Array(3);
                c3 = c3 || new Float32Array([1, 1, 1]);
                u3 = u3 || new Float32Array([1, 0, 0, 0, 1, 0, 0, 0, 1]);
                var d3 = t5[0], g2 = t5[1], m3 = t5[2];
                h3.whitePoint = t5;
                var y2 = o4[0], v2 = o4[1], k2 = o4[2];
                h3.blackPoint = o4;
                h3.GR = c3[0];
                h3.GG = c3[1];
                h3.GB = c3[2];
                h3.MXA = u3[0];
                h3.MYA = u3[1];
                h3.MZA = u3[2];
                h3.MXB = u3[3];
                h3.MYB = u3[4];
                h3.MZB = u3[5];
                h3.MXC = u3[6];
                h3.MYC = u3[7];
                h3.MZC = u3[8];
                if (d3 < 0 || m3 < 0 || g2 !== 1)
                  throw new l.FormatError("Invalid WhitePoint components for ".concat(h3.name) + ", no fallback available");
                if (y2 < 0 || v2 < 0 || k2 < 0) {
                  (0, l.info)("Invalid BlackPoint for ".concat(h3.name, " [").concat(y2, ", ").concat(v2, ", ").concat(k2, "], ") + "falling back to default.");
                  h3.blackPoint = new Float32Array(3);
                }
                if (h3.GR < 0 || h3.GG < 0 || h3.GB < 0) {
                  (0, l.info)("Invalid Gamma [".concat(h3.GR, ", ").concat(h3.GG, ", ").concat(h3.GB, "] for ") + "".concat(h3.name, ", falling back to default."));
                  h3.GR = h3.GG = h3.GB = 1;
                }
                return h3;
              }
              _createClass(CalRGBCS, [{ key: "getRgbItem", value: function getRgbItem(t5, r5, o4, c3) {
                convertToRgb(this, t5, r5, o4, c3, 1);
              } }, { key: "getRgbBuffer", value: function getRgbBuffer(t5, r5, o4, c3, l2, u3, h3) {
                for (var d3 = 1 / ((1 << u3) - 1), g2 = 0; g2 < o4; ++g2) {
                  convertToRgb(this, t5, r5, c3, l2, d3);
                  r5 += 3;
                  l2 += 3 + h3;
                }
              } }, { key: "getOutputLength", value: function getOutputLength(t5, r5) {
                return t5 * (3 + r5) / 3 | 0;
              } }]);
              return CalRGBCS;
            }(g);
          }(), x = function LabCSClosure() {
            function fn_g(t3) {
              return t3 >= 6 / 29 ? Math.pow(t3, 3) : 108 / 841 * (t3 - 4 / 29);
            }
            function decode(t3, r3, o3, c2) {
              return o3 + t3 * (c2 - o3) / r3;
            }
            function convertToRgb(t3, r3, o3, c2, l2, u2) {
              var h2 = r3[o3], d2 = r3[o3 + 1], g2 = r3[o3 + 2];
              if (c2 !== false) {
                h2 = decode(h2, c2, 0, 100);
                d2 = decode(d2, c2, t3.amin, t3.amax);
                g2 = decode(g2, c2, t3.bmin, t3.bmax);
              }
              d2 > t3.amax ? d2 = t3.amax : d2 < t3.amin && (d2 = t3.amin);
              g2 > t3.bmax ? g2 = t3.bmax : g2 < t3.bmin && (g2 = t3.bmin);
              var m2, y2, v2, k2 = (h2 + 16) / 116, _2 = k2 + d2 / 500, w2 = k2 - g2 / 200, S2 = t3.XW * fn_g(_2), C2 = t3.YW * fn_g(k2), x2 = t3.ZW * fn_g(w2);
              if (t3.ZW < 1) {
                m2 = 3.1339 * S2 + -1.617 * C2 + -0.4906 * x2;
                y2 = -0.9785 * S2 + 1.916 * C2 + 0.0333 * x2;
                v2 = 0.072 * S2 + -0.229 * C2 + 1.4057 * x2;
              } else {
                m2 = 3.2406 * S2 + -1.5372 * C2 + -0.4986 * x2;
                y2 = -0.9689 * S2 + 1.8758 * C2 + 0.0415 * x2;
                v2 = 0.0557 * S2 + -0.204 * C2 + 1.057 * x2;
              }
              l2[u2] = 255 * Math.sqrt(m2);
              l2[u2 + 1] = 255 * Math.sqrt(y2);
              l2[u2 + 2] = 255 * Math.sqrt(v2);
            }
            return function(t3) {
              _inherits(LabCS, t3);
              var r3 = _createSuper(LabCS);
              function LabCS(t4, o3, c2) {
                var u2;
                _classCallCheck(this, LabCS);
                u2 = r3.call(this, "Lab", 3);
                if (!t4)
                  throw new l.FormatError("WhitePoint missing - required for color space Lab");
                o3 = o3 || [0, 0, 0];
                c2 = c2 || [-100, 100, -100, 100];
                u2.XW = t4[0];
                u2.YW = t4[1];
                u2.ZW = t4[2];
                u2.amin = c2[0];
                u2.amax = c2[1];
                u2.bmin = c2[2];
                u2.bmax = c2[3];
                u2.XB = o3[0];
                u2.YB = o3[1];
                u2.ZB = o3[2];
                if (u2.XW < 0 || u2.ZW < 0 || u2.YW !== 1)
                  throw new l.FormatError("Invalid WhitePoint components, no fallback available");
                if (u2.XB < 0 || u2.YB < 0 || u2.ZB < 0) {
                  (0, l.info)("Invalid BlackPoint, falling back to default");
                  u2.XB = u2.YB = u2.ZB = 0;
                }
                if (u2.amin > u2.amax || u2.bmin > u2.bmax) {
                  (0, l.info)("Invalid Range, falling back to defaults");
                  u2.amin = -100;
                  u2.amax = 100;
                  u2.bmin = -100;
                  u2.bmax = 100;
                }
                return u2;
              }
              _createClass(LabCS, [{ key: "getRgbItem", value: function getRgbItem(t4, r4, o3, c2) {
                convertToRgb(this, t4, r4, false, o3, c2);
              } }, { key: "getRgbBuffer", value: function getRgbBuffer(t4, r4, o3, c2, l2, u2, h2) {
                for (var d2 = (1 << u2) - 1, g2 = 0; g2 < o3; g2++) {
                  convertToRgb(this, t4, r4, d2, c2, l2);
                  r4 += 3;
                  l2 += 3 + h2;
                }
              } }, { key: "getOutputLength", value: function getOutputLength(t4, r4) {
                return t4 * (3 + r4) / 3 | 0;
              } }, { key: "isDefaultDecode", value: function isDefaultDecode(t4, r4) {
                return true;
              } }, { key: "usesZeroToOneRange", get: function get() {
                return (0, l.shadow)(this, "usesZeroToOneRange", false);
              } }]);
              return LabCS;
            }(g);
          }();
        }, (t2, r2, o2) => {
          "use strict";
          Object.defineProperty(r2, "__esModule", { value: true });
          r2.PartialEvaluator = r2.EvaluatorPreprocessor = void 0;
          var c = function _interopRequireDefault(t3) {
            return t3 && t3.__esModule ? t3 : { default: t3 };
          }(o2(2)), l = o2(4), u = o2(179), h = o2(158), d = o2(197), g = o2(171), m = o2(172), y = o2(200), v = o2(174), k = o2(209), _ = o2(165), w = o2(201), S = o2(210), C = o2(180), x = o2(212), O = o2(163), T = o2(162), E = o2(213), M = o2(177), R = o2(182), D = o2(173), j = o2(161), L = o2(204), N = o2(214), U = o2(215), H = o2(216);
          function _slicedToArray(t3, r3) {
            return function _arrayWithHoles(t4) {
              if (Array.isArray(t4))
                return t4;
            }(t3) || function _iterableToArrayLimit(t4, r4) {
              var o3 = t4 == null ? null : typeof Symbol != "undefined" && t4[Symbol.iterator] || t4["@@iterator"];
              if (o3 == null)
                return;
              var c2, l2, u2 = [], h2 = true, d2 = false;
              try {
                for (o3 = o3.call(t4); !(h2 = (c2 = o3.next()).done); h2 = true) {
                  u2.push(c2.value);
                  if (r4 && u2.length === r4)
                    break;
                }
              } catch (t5) {
                d2 = true;
                l2 = t5;
              } finally {
                try {
                  h2 || o3.return == null || o3.return();
                } finally {
                  if (d2)
                    throw l2;
                }
              }
              return u2;
            }(t3, r3) || _unsupportedIterableToArray(t3, r3) || function _nonIterableRest() {
              throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
            }();
          }
          function asyncGeneratorStep(t3, r3, o3, c2, l2, u2, h2) {
            try {
              var d2 = t3[u2](h2), g2 = d2.value;
            } catch (t4) {
              o3(t4);
              return;
            }
            d2.done ? r3(g2) : Promise.resolve(g2).then(c2, l2);
          }
          function _asyncToGenerator(t3) {
            return function() {
              var r3 = this, o3 = arguments;
              return new Promise(function(c2, l2) {
                var u2 = t3.apply(r3, o3);
                function _next(t4) {
                  asyncGeneratorStep(u2, c2, l2, _next, _throw, "next", t4);
                }
                function _throw(t4) {
                  asyncGeneratorStep(u2, c2, l2, _next, _throw, "throw", t4);
                }
                _next(void 0);
              });
            };
          }
          function _createForOfIteratorHelper(t3, r3) {
            var o3 = typeof Symbol != "undefined" && t3[Symbol.iterator] || t3["@@iterator"];
            if (!o3) {
              if (Array.isArray(t3) || (o3 = _unsupportedIterableToArray(t3)) || r3 && t3 && typeof t3.length == "number") {
                o3 && (t3 = o3);
                var c2 = 0, l2 = function F() {
                };
                return { s: l2, n: function n() {
                  return c2 >= t3.length ? { done: true } : { done: false, value: t3[c2++] };
                }, e: function e(t4) {
                  throw t4;
                }, f: l2 };
              }
              throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
            }
            var u2, h2 = true, d2 = false;
            return { s: function s() {
              o3 = o3.call(t3);
            }, n: function n() {
              var t4 = o3.next();
              h2 = t4.done;
              return t4;
            }, e: function e(t4) {
              d2 = true;
              u2 = t4;
            }, f: function f() {
              try {
                h2 || o3.return == null || o3.return();
              } finally {
                if (d2)
                  throw u2;
              }
            } };
          }
          function _unsupportedIterableToArray(t3, r3) {
            if (t3) {
              if (typeof t3 == "string")
                return _arrayLikeToArray(t3, r3);
              var o3 = Object.prototype.toString.call(t3).slice(8, -1);
              o3 === "Object" && t3.constructor && (o3 = t3.constructor.name);
              return o3 === "Map" || o3 === "Set" ? Array.from(t3) : o3 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(o3) ? _arrayLikeToArray(t3, r3) : void 0;
            }
          }
          function _arrayLikeToArray(t3, r3) {
            (r3 == null || r3 > t3.length) && (r3 = t3.length);
            for (var o3 = 0, c2 = new Array(r3); o3 < r3; o3++)
              c2[o3] = t3[o3];
            return c2;
          }
          function _classCallCheck(t3, r3) {
            if (!(t3 instanceof r3))
              throw new TypeError("Cannot call a class as a function");
          }
          function _defineProperties(t3, r3) {
            for (var o3 = 0; o3 < r3.length; o3++) {
              var c2 = r3[o3];
              c2.enumerable = c2.enumerable || false;
              c2.configurable = true;
              "value" in c2 && (c2.writable = true);
              Object.defineProperty(t3, c2.key, c2);
            }
          }
          function _createClass(t3, r3, o3) {
            r3 && _defineProperties(t3.prototype, r3);
            o3 && _defineProperties(t3, o3);
            Object.defineProperty(t3, "prototype", { writable: false });
            return t3;
          }
          var $ = Object.freeze({ maxImageSize: -1, disableFontFace: false, ignoreErrors: false, isEvalSupported: true, fontExtraProperties: false, useSystemFonts: true, cMapUrl: null, standardFontDataUrl: null }), X = 1, q = 2, G = Promise.resolve();
          function normalizeBlendMode(t3) {
            var r3 = arguments.length > 1 && arguments[1] !== void 0 && arguments[1];
            if (Array.isArray(t3)) {
              for (var o3 = 0, c2 = t3.length; o3 < c2; o3++) {
                var u2 = normalizeBlendMode(t3[o3], true);
                if (u2)
                  return u2;
              }
              (0, l.warn)("Unsupported blend mode Array: ".concat(t3));
              return "source-over";
            }
            if (!(t3 instanceof h.Name))
              return r3 ? null : "source-over";
            switch (t3.name) {
              case "Normal":
              case "Compatible":
                return "source-over";
              case "Multiply":
                return "multiply";
              case "Screen":
                return "screen";
              case "Overlay":
                return "overlay";
              case "Darken":
                return "darken";
              case "Lighten":
                return "lighten";
              case "ColorDodge":
                return "color-dodge";
              case "ColorBurn":
                return "color-burn";
              case "HardLight":
                return "hard-light";
              case "SoftLight":
                return "soft-light";
              case "Difference":
                return "difference";
              case "Exclusion":
                return "exclusion";
              case "Hue":
                return "hue";
              case "Saturation":
                return "saturation";
              case "Color":
                return "color";
              case "Luminosity":
                return "luminosity";
            }
            if (r3)
              return null;
            (0, l.warn)("Unsupported blend mode: ".concat(t3.name));
            return "source-over";
          }
          function incrementCachedImageMaskCount(t3) {
            t3.fn === l.OPS.paintImageMaskXObject && t3.args[0] && t3.args[0].count > 0 && t3.args[0].count++;
          }
          var z = function() {
            function TimeSlotManager() {
              _classCallCheck(this, TimeSlotManager);
              this.reset();
            }
            _createClass(TimeSlotManager, [{ key: "check", value: function check() {
              if (++this.checked < TimeSlotManager.CHECK_TIME_EVERY)
                return false;
              this.checked = 0;
              return this.endTime <= Date.now();
            } }, { key: "reset", value: function reset() {
              this.endTime = Date.now() + TimeSlotManager.TIME_SLOT_DURATION_MS;
              this.checked = 0;
            } }], [{ key: "TIME_SLOT_DURATION_MS", get: function get() {
              return (0, l.shadow)(this, "TIME_SLOT_DURATION_MS", 20);
            } }, { key: "CHECK_TIME_EVERY", get: function get() {
              return (0, l.shadow)(this, "CHECK_TIME_EVERY", 100);
            } }]);
            return TimeSlotManager;
          }(), W = function() {
            function PartialEvaluator(t4) {
              var r4 = t4.xref, o4 = t4.handler, c2 = t4.pageIndex, l2 = t4.idFactory, u2 = t4.fontCache, h2 = t4.builtInCMapCache, d2 = t4.standardFontDataCache, g2 = t4.globalImageCache, m2 = t4.options, y2 = m2 === void 0 ? null : m2;
              _classCallCheck(this, PartialEvaluator);
              this.xref = r4;
              this.handler = o4;
              this.pageIndex = c2;
              this.idFactory = l2;
              this.fontCache = u2;
              this.builtInCMapCache = h2;
              this.standardFontDataCache = d2;
              this.globalImageCache = g2;
              this.options = y2 || $;
              this.parsingType3Font = false;
              this._fetchBuiltInCMapBound = this.fetchBuiltInCMap.bind(this);
            }
            _createClass(PartialEvaluator, [{ key: "_pdfFunctionFactory", get: function get() {
              var t4 = new S.PDFFunctionFactory({ xref: this.xref, isEvalSupported: this.options.isEvalSupported });
              return (0, l.shadow)(this, "_pdfFunctionFactory", t4);
            } }, { key: "clone", value: function clone() {
              var t4 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : null, r4 = Object.create(this);
              r4.options = Object.assign(/* @__PURE__ */ Object.create(null), this.options, t4);
              return r4;
            } }, { key: "hasBlendModes", value: function hasBlendModes(t4, r4) {
              if (!(t4 instanceof h.Dict))
                return false;
              if (t4.objId && r4.has(t4.objId))
                return false;
              var o4 = new h.RefSet(r4);
              t4.objId && o4.put(t4.objId);
              for (var c2 = [t4], u2 = this.xref; c2.length; ) {
                var d2 = c2.shift(), g2 = d2.get("ExtGState");
                if (g2 instanceof h.Dict) {
                  var m2, y2 = _createForOfIteratorHelper(g2.getRawValues());
                  try {
                    for (y2.s(); !(m2 = y2.n()).done; ) {
                      var v2 = m2.value;
                      if (v2 instanceof h.Ref) {
                        if (o4.has(v2))
                          continue;
                        try {
                          v2 = u2.fetch(v2);
                        } catch (t5) {
                          o4.put(v2);
                          (0, l.info)('hasBlendModes - ignoring ExtGState: "'.concat(t5, '".'));
                          continue;
                        }
                      }
                      if (v2 instanceof h.Dict) {
                        v2.objId && o4.put(v2.objId);
                        var k2 = v2.get("BM");
                        if (k2 instanceof h.Name) {
                          if (k2.name !== "Normal")
                            return true;
                        } else if (k2 !== void 0 && Array.isArray(k2)) {
                          var _2, w2 = _createForOfIteratorHelper(k2);
                          try {
                            for (w2.s(); !(_2 = w2.n()).done; ) {
                              var S2 = _2.value;
                              if (S2 instanceof h.Name && S2.name !== "Normal")
                                return true;
                            }
                          } catch (t5) {
                            w2.e(t5);
                          } finally {
                            w2.f();
                          }
                        }
                      }
                    }
                  } catch (t5) {
                    y2.e(t5);
                  } finally {
                    y2.f();
                  }
                }
                var C3 = d2.get("XObject");
                if (C3 instanceof h.Dict) {
                  var x2, O2 = _createForOfIteratorHelper(C3.getRawValues());
                  try {
                    for (O2.s(); !(x2 = O2.n()).done; ) {
                      var E2 = x2.value;
                      if (E2 instanceof h.Ref) {
                        if (o4.has(E2))
                          continue;
                        try {
                          E2 = u2.fetch(E2);
                        } catch (t5) {
                          o4.put(E2);
                          (0, l.info)('hasBlendModes - ignoring XObject: "'.concat(t5, '".'));
                          continue;
                        }
                      }
                      if (E2 instanceof T.BaseStream) {
                        E2.dict.objId && o4.put(E2.dict.objId);
                        var M2 = E2.dict.get("Resources");
                        if (M2 instanceof h.Dict && (!M2.objId || !o4.has(M2.objId))) {
                          c2.push(M2);
                          M2.objId && o4.put(M2.objId);
                        }
                      }
                    }
                  } catch (t5) {
                    O2.e(t5);
                  } finally {
                    O2.f();
                  }
                }
              }
              var R2, D2 = _createForOfIteratorHelper(o4);
              try {
                for (D2.s(); !(R2 = D2.n()).done; ) {
                  var j3 = R2.value;
                  r4.put(j3);
                }
              } catch (t5) {
                D2.e(t5);
              } finally {
                D2.f();
              }
              return false;
            } }, { key: "fetchBuiltInCMap", value: (ee = _asyncToGenerator(c.default.mark(function _callee(t4) {
              var r4, o4, u2, h2;
              return c.default.wrap(function _callee$(c2) {
                for (; ; )
                  switch (c2.prev = c2.next) {
                    case 0:
                      if (!(r4 = this.builtInCMapCache.get(t4))) {
                        c2.next = 3;
                        break;
                      }
                      return c2.abrupt("return", r4);
                    case 3:
                      if (this.options.cMapUrl === null) {
                        c2.next = 19;
                        break;
                      }
                      u2 = "".concat(this.options.cMapUrl).concat(t4, ".bcmap");
                      c2.next = 7;
                      return fetch(u2);
                    case 7:
                      if ((h2 = c2.sent).ok) {
                        c2.next = 10;
                        break;
                      }
                      throw new Error('fetchBuiltInCMap: failed to fetch file "'.concat(u2, '" with "').concat(h2.statusText, '".'));
                    case 10:
                      c2.t0 = Uint8Array;
                      c2.next = 13;
                      return h2.arrayBuffer();
                    case 13:
                      c2.t1 = c2.sent;
                      c2.t2 = new c2.t0(c2.t1);
                      c2.t3 = l.CMapCompressionType.BINARY;
                      o4 = { cMapData: c2.t2, compressionType: c2.t3 };
                      c2.next = 22;
                      break;
                    case 19:
                      c2.next = 21;
                      return this.handler.sendWithPromise("FetchBuiltInCMap", { name: t4 });
                    case 21:
                      o4 = c2.sent;
                    case 22:
                      o4.compressionType !== l.CMapCompressionType.NONE && this.builtInCMapCache.set(t4, o4);
                      return c2.abrupt("return", o4);
                    case 24:
                    case "end":
                      return c2.stop();
                  }
              }, _callee, this);
            })), function fetchBuiltInCMap(t4) {
              return ee.apply(this, arguments);
            }) }, { key: "fetchStandardFontData", value: (Q = _asyncToGenerator(c.default.mark(function _callee2(t4) {
              var r4, o4, u2, h2, d2, g2;
              return c.default.wrap(function _callee2$(c2) {
                for (; ; )
                  switch (c2.prev = c2.next) {
                    case 0:
                      if (!(r4 = this.standardFontDataCache.get(t4))) {
                        c2.next = 3;
                        break;
                      }
                      return c2.abrupt("return", new O.Stream(r4));
                    case 3:
                      if (!this.options.useSystemFonts || t4 === "Symbol" || t4 === "ZapfDingbats") {
                        c2.next = 5;
                        break;
                      }
                      return c2.abrupt("return", null);
                    case 5:
                      o4 = (0, y.getFontNameToFileMap)(), u2 = o4[t4];
                      if (this.options.standardFontDataUrl === null) {
                        c2.next = 20;
                        break;
                      }
                      d2 = "".concat(this.options.standardFontDataUrl).concat(u2);
                      c2.next = 10;
                      return fetch(d2);
                    case 10:
                      if ((g2 = c2.sent).ok) {
                        c2.next = 15;
                        break;
                      }
                      (0, l.warn)('fetchStandardFontData: failed to fetch file "'.concat(d2, '" with "').concat(g2.statusText, '".'));
                      c2.next = 18;
                      break;
                    case 15:
                      c2.next = 17;
                      return g2.arrayBuffer();
                    case 17:
                      h2 = c2.sent;
                    case 18:
                      c2.next = 29;
                      break;
                    case 20:
                      c2.prev = 20;
                      c2.next = 23;
                      return this.handler.sendWithPromise("FetchStandardFontData", { filename: u2 });
                    case 23:
                      h2 = c2.sent;
                      c2.next = 29;
                      break;
                    case 26:
                      c2.prev = 26;
                      c2.t0 = c2.catch(20);
                      (0, l.warn)('fetchStandardFontData: failed to fetch file "'.concat(u2, '" with "').concat(c2.t0, '".'));
                    case 29:
                      if (h2) {
                        c2.next = 31;
                        break;
                      }
                      return c2.abrupt("return", null);
                    case 31:
                      this.standardFontDataCache.set(t4, h2);
                      return c2.abrupt("return", new O.Stream(h2));
                    case 33:
                    case "end":
                      return c2.stop();
                  }
              }, _callee2, this, [[20, 26]]);
            })), function fetchStandardFontData(t4) {
              return Q.apply(this, arguments);
            }) }, { key: "buildFormXObject", value: (W2 = _asyncToGenerator(c.default.mark(function _callee3(t4, r4, o4, u2, d2, g2, m2) {
              var y2, v2, k2, _2, w2, S2, C3, x2, O2, T2, E2;
              return c.default.wrap(function _callee3$(c2) {
                for (; ; )
                  switch (c2.prev = c2.next) {
                    case 0:
                      y2 = r4.dict;
                      v2 = y2.getArray("Matrix");
                      k2 = y2.getArray("BBox");
                      k2 = Array.isArray(k2) && k2.length === 4 ? l.Util.normalizeRect(k2) : null;
                      if (!y2.has("OC")) {
                        c2.next = 8;
                        break;
                      }
                      c2.next = 7;
                      return this.parseMarkedContentProps(y2.get("OC"), t4);
                    case 7:
                      _2 = c2.sent;
                    case 8:
                      _2 !== void 0 && u2.addOp(l.OPS.beginMarkedContentProps, ["OC", _2]);
                      if (!(S2 = y2.get("Group"))) {
                        c2.next = 29;
                        break;
                      }
                      w2 = { matrix: v2, bbox: k2, smask: o4, isolated: false, knockout: false };
                      C3 = S2.get("S");
                      x2 = null;
                      if (!(0, h.isName)(C3, "Transparency")) {
                        c2.next = 27;
                        break;
                      }
                      w2.isolated = S2.get("I") || false;
                      w2.knockout = S2.get("K") || false;
                      if (!S2.has("CS")) {
                        c2.next = 27;
                        break;
                      }
                      O2 = S2.getRaw("CS");
                      if (!(T2 = M.ColorSpace.getCached(O2, this.xref, m2))) {
                        c2.next = 24;
                        break;
                      }
                      x2 = T2;
                      c2.next = 27;
                      break;
                    case 24:
                      c2.next = 26;
                      return this.parseColorSpace({ cs: O2, resources: t4, localColorSpaceCache: m2 });
                    case 26:
                      x2 = c2.sent;
                    case 27:
                      if (o4 && o4.backdrop) {
                        x2 = x2 || M.ColorSpace.singletons.rgb;
                        o4.backdrop = x2.getRgb(o4.backdrop, 0);
                      }
                      u2.addOp(l.OPS.beginGroup, [w2]);
                    case 29:
                      E2 = S2 ? [v2, null] : [v2, k2];
                      u2.addOp(l.OPS.paintFormXObjectBegin, E2);
                      return c2.abrupt("return", this.getOperatorList({ stream: r4, task: d2, resources: y2.get("Resources") || t4, operatorList: u2, initialState: g2 }).then(function() {
                        u2.addOp(l.OPS.paintFormXObjectEnd, []);
                        S2 && u2.addOp(l.OPS.endGroup, [w2]);
                        _2 !== void 0 && u2.addOp(l.OPS.endMarkedContent, []);
                      }));
                    case 32:
                    case "end":
                      return c2.stop();
                  }
              }, _callee3, this);
            })), function buildFormXObject(t4, r4, o4, c2, l2, u2, h2) {
              return W2.apply(this, arguments);
            }) }, { key: "_sendImgData", value: function _sendImgData(t4, r4) {
              var o4 = arguments.length > 2 && arguments[2] !== void 0 && arguments[2], c2 = r4 ? [r4.bitmap || r4.data.buffer] : null;
              return this.parsingType3Font || o4 ? this.handler.send("commonobj", [t4, "Image", r4], c2) : this.handler.send("obj", [t4, this.pageIndex, "Image", r4], c2);
            } }, { key: "buildPaintImageXObject", value: (j2 = _asyncToGenerator(c.default.mark(function _callee4(t4) {
              var r4, o4, u2, h2, d2, g2, m2, y2, v2, k2, _2, w2, S2, C3, x2, O2, T2, E2, M2, D2, j3, L2, N2, U2, $2, X2, q2, G2 = this;
              return c.default.wrap(function _callee4$(c2) {
                for (; ; )
                  switch (c2.prev = c2.next) {
                    case 0:
                      r4 = t4.resources, o4 = t4.image, u2 = t4.isInline, h2 = u2 !== void 0 && u2, d2 = t4.operatorList, g2 = t4.cacheKey, m2 = t4.localImageCache, y2 = t4.localColorSpaceCache;
                      v2 = o4.dict;
                      k2 = v2.objId;
                      _2 = v2.get("W", "Width");
                      w2 = v2.get("H", "Height");
                      if (_2 && typeof _2 == "number" && w2 && typeof w2 == "number") {
                        c2.next = 8;
                        break;
                      }
                      (0, l.warn)("Image dimensions are missing, or not numbers.");
                      return c2.abrupt("return");
                    case 8:
                      if (!((S2 = this.options.maxImageSize) !== -1 && _2 * w2 > S2)) {
                        c2.next = 15;
                        break;
                      }
                      C3 = "Image exceeded maximum allowed size and was removed.";
                      if (!this.options.ignoreErrors) {
                        c2.next = 14;
                        break;
                      }
                      (0, l.warn)(C3);
                      return c2.abrupt("return");
                    case 14:
                      throw new Error(C3);
                    case 15:
                      if (!v2.has("OC")) {
                        c2.next = 19;
                        break;
                      }
                      c2.next = 18;
                      return this.parseMarkedContentProps(v2.get("OC"), r4);
                    case 18:
                      x2 = c2.sent;
                    case 19:
                      if (!v2.get("IM", "ImageMask")) {
                        c2.next = 44;
                        break;
                      }
                      E2 = v2.get("I", "Interpolate");
                      M2 = _2 + 7 >> 3;
                      D2 = o4.getBytes(M2 * w2);
                      j3 = v2.getArray("D", "Decode");
                      if (!this.parsingType3Font) {
                        c2.next = 32;
                        break;
                      }
                      (O2 = H.PDFImage.createRawMask({ imgArray: D2, width: _2, height: w2, imageIsFromDecodeStream: o4 instanceof R.DecodeStream, inverseDecode: !!j3 && j3[0] > 0, interpolate: E2 })).cached = !!g2;
                      T2 = [O2];
                      d2.addImageOps(l.OPS.paintImageMaskXObject, T2, x2);
                      g2 && m2.set(g2, k2, { fn: l.OPS.paintImageMaskXObject, args: T2, optionalContent: x2 });
                      return c2.abrupt("return");
                    case 32:
                      if (!(O2 = H.PDFImage.createMask({ imgArray: D2, width: _2, height: w2, imageIsFromDecodeStream: o4 instanceof R.DecodeStream, inverseDecode: !!j3 && j3[0] > 0, interpolate: E2 })).isSingleOpaquePixel) {
                        c2.next = 37;
                        break;
                      }
                      d2.addImageOps(l.OPS.paintSolidColorImageMask, [], x2);
                      g2 && m2.set(g2, k2, { fn: l.OPS.paintSolidColorImageMask, args: [], optionalContent: x2 });
                      return c2.abrupt("return");
                    case 37:
                      L2 = "mask_".concat(this.idFactory.createObjId());
                      d2.addDependency(L2);
                      this._sendImgData(L2, O2);
                      T2 = [{ data: L2, width: O2.width, height: O2.height, interpolate: O2.interpolate, count: 1 }];
                      d2.addImageOps(l.OPS.paintImageMaskXObject, T2, x2);
                      g2 && m2.set(g2, k2, { fn: l.OPS.paintImageMaskXObject, args: T2, optionalContent: x2 });
                      return c2.abrupt("return");
                    case 44:
                      N2 = v2.get("SM", "SMask") || false;
                      U2 = v2.get("Mask") || false;
                      if (!h2 || N2 || U2 || !(_2 + w2 < 200)) {
                        c2.next = 52;
                        break;
                      }
                      $2 = new H.PDFImage({ xref: this.xref, res: r4, image: o4, isInline: h2, pdfFunctionFactory: this._pdfFunctionFactory, localColorSpaceCache: y2 });
                      O2 = $2.createImageData(true);
                      d2.addImageOps(l.OPS.paintInlineImageXObject, [O2], x2);
                      return c2.abrupt("return");
                    case 52:
                      X2 = "img_".concat(this.idFactory.createObjId()), q2 = false;
                      this.parsingType3Font ? X2 = "".concat(this.idFactory.getDocId(), "_type3_").concat(X2) : k2 && (q2 = this.globalImageCache.shouldCache(k2, this.pageIndex)) && (X2 = "".concat(this.idFactory.getDocId(), "_").concat(X2));
                      d2.addDependency(X2);
                      T2 = [X2, _2, w2];
                      H.PDFImage.buildImage({ xref: this.xref, res: r4, image: o4, isInline: h2, pdfFunctionFactory: this._pdfFunctionFactory, localColorSpaceCache: y2 }).then(function(t5) {
                        O2 = t5.createImageData(false);
                        g2 && k2 && q2 && G2.globalImageCache.addByteSize(k2, O2.data.length);
                        return G2._sendImgData(X2, O2, q2);
                      }).catch(function(t5) {
                        (0, l.warn)('Unable to decode image "'.concat(X2, '": "').concat(t5, '".'));
                        return G2._sendImgData(X2, null, q2);
                      });
                      d2.addImageOps(l.OPS.paintImageXObject, T2, x2);
                      if (g2) {
                        m2.set(g2, k2, { fn: l.OPS.paintImageXObject, args: T2, optionalContent: x2 });
                        if (k2) {
                          (0, l.assert)(!h2, "Cannot cache an inline image globally.");
                          this.globalImageCache.addPageIndex(k2, this.pageIndex);
                          q2 && this.globalImageCache.setData(k2, { objId: X2, fn: l.OPS.paintImageXObject, args: T2, optionalContent: x2, byteSize: 0 });
                        }
                      }
                    case 59:
                    case "end":
                      return c2.stop();
                  }
              }, _callee4, this);
            })), function buildPaintImageXObject(t4) {
              return j2.apply(this, arguments);
            }) }, { key: "handleSMask", value: function handleSMask(t4, r4, o4, c2, l2, u2) {
              var h2 = t4.get("G"), d2 = { subtype: t4.get("S").name, backdrop: t4.get("BC") }, g2 = t4.get("TR");
              if ((0, S.isPDFFunction)(g2)) {
                for (var m2 = this._pdfFunctionFactory.create(g2), y2 = new Uint8Array(256), v2 = new Float32Array(1), k2 = 0; k2 < 256; k2++) {
                  v2[0] = k2 / 255;
                  m2(v2, 0, v2, 0);
                  y2[k2] = 255 * v2[0] | 0;
                }
                d2.transferMap = y2;
              }
              return this.buildFormXObject(r4, h2, d2, o4, c2, l2.state.clone(), u2);
            } }, { key: "handleTransferFunction", value: function handleTransferFunction(t4) {
              var r4;
              if (Array.isArray(t4))
                r4 = t4;
              else {
                if (!(0, S.isPDFFunction)(t4))
                  return null;
                r4 = [t4];
              }
              var o4, c2 = [], l2 = 0, u2 = 0, d2 = _createForOfIteratorHelper(r4);
              try {
                for (d2.s(); !(o4 = d2.n()).done; ) {
                  var g2 = o4.value, m2 = this.xref.fetchIfRef(g2);
                  l2++;
                  if ((0, h.isName)(m2, "Identity"))
                    c2.push(null);
                  else {
                    if (!(0, S.isPDFFunction)(m2))
                      return null;
                    for (var y2 = this._pdfFunctionFactory.create(m2), v2 = new Uint8Array(256), k2 = new Float32Array(1), _2 = 0; _2 < 256; _2++) {
                      k2[0] = _2 / 255;
                      y2(k2, 0, k2, 0);
                      v2[_2] = 255 * k2[0] | 0;
                    }
                    c2.push(v2);
                    u2++;
                  }
                }
              } catch (t5) {
                d2.e(t5);
              } finally {
                d2.f();
              }
              return l2 !== 1 && l2 !== 4 || u2 === 0 ? null : c2;
            } }, { key: "handleTilingType", value: function handleTilingType(t4, r4, o4, c2, u2, d2, g2, m2) {
              var y2 = this, v2 = new U.OperatorList(), _2 = h.Dict.merge({ xref: this.xref, dictArray: [u2.get("Resources"), o4] });
              return this.getOperatorList({ stream: c2, task: g2, resources: _2, operatorList: v2 }).then(function() {
                var o5 = v2.getIR(), c3 = (0, k.getTilingPatternIR)(o5, u2, r4);
                d2.addDependencies(v2.dependencies);
                d2.addOp(t4, c3);
                u2.objId && m2.set(null, u2.objId, { operatorListIR: o5, dict: u2 });
              }).catch(function(t5) {
                if (!(t5 instanceof l.AbortException)) {
                  if (!y2.options.ignoreErrors)
                    throw t5;
                  y2.handler.send("UnsupportedFeature", { featureId: l.UNSUPPORTED_FEATURES.errorTilingPattern });
                  (0, l.warn)('handleTilingType - ignoring pattern: "'.concat(t5, '".'));
                }
              });
            } }, { key: "handleSetFont", value: function handleSetFont(t4, r4, o4, c2, u2, g2) {
              var m2 = this, y2 = arguments.length > 6 && arguments[6] !== void 0 ? arguments[6] : null, v2 = arguments.length > 7 && arguments[7] !== void 0 ? arguments[7] : null, k2 = r4 && r4[0] instanceof h.Name ? r4[0].name : null;
              return this.loadFont(k2, o4, t4, y2, v2).then(function(r5) {
                return r5.font.isType3Font ? r5.loadType3Data(m2, t4, u2).then(function() {
                  c2.addDependencies(r5.type3Dependencies);
                  return r5;
                }).catch(function(t5) {
                  m2.handler.send("UnsupportedFeature", { featureId: l.UNSUPPORTED_FEATURES.errorFontLoadType3 });
                  return new V({ loadedName: "g_font_error", font: new d.ErrorFont("Type3 font load error: ".concat(t5)), dict: r5.font, evaluatorOptions: m2.options });
                }) : r5;
              }).then(function(t5) {
                g2.font = t5.font;
                t5.send(m2.handler);
                return t5.loadedName;
              });
            } }, { key: "handleText", value: function handleText(t4, r4) {
              var o4 = r4.font, c2 = o4.charsToGlyphs(t4);
              if (o4.data) {
                (!!(r4.textRenderingMode & l.TextRenderingMode.ADD_TO_PATH_FLAG) || r4.fillColorSpace.name === "Pattern" || o4.disableFontFace || this.options.disableFontFace) && PartialEvaluator.buildFontPaths(o4, c2, this.handler, this.options);
              }
              return c2;
            } }, { key: "ensureStateFont", value: function ensureStateFont(t4) {
              if (!t4.font) {
                var r4 = new l.FormatError("Missing setFont (Tf) operator before text rendering operator.");
                if (!this.options.ignoreErrors)
                  throw r4;
                this.handler.send("UnsupportedFeature", { featureId: l.UNSUPPORTED_FEATURES.errorFontState });
                (0, l.warn)('ensureStateFont: "'.concat(r4, '".'));
              }
            } }, { key: "setGState", value: (C2 = _asyncToGenerator(c.default.mark(function _callee5(t4) {
              var r4, o4, u2, d2, g2, m2, y2, v2, k2, _2, w2, S2, C3, x2, O2, T2, E2 = this;
              return c.default.wrap(function _callee5$(c2) {
                for (; ; )
                  switch (c2.prev = c2.next) {
                    case 0:
                      r4 = t4.resources, o4 = t4.gState, u2 = t4.operatorList, d2 = t4.cacheKey, g2 = t4.task, m2 = t4.stateManager, y2 = t4.localGStateCache, v2 = t4.localColorSpaceCache;
                      k2 = o4.objId;
                      _2 = true;
                      w2 = [];
                      S2 = o4.getKeys();
                      C3 = Promise.resolve();
                      x2 = function _loop(t5, c3) {
                        var d3 = S2[t5], y3 = o4.get(d3);
                        switch (d3) {
                          case "Type":
                            break;
                          case "LW":
                          case "LC":
                          case "LJ":
                          case "ML":
                          case "D":
                          case "RI":
                          case "FL":
                          case "CA":
                          case "ca":
                            w2.push([d3, y3]);
                            break;
                          case "Font":
                            _2 = false;
                            C3 = C3.then(function() {
                              return E2.handleSetFont(r4, null, y3[0], u2, g2, m2.state).then(function(t6) {
                                u2.addDependency(t6);
                                w2.push([d3, [t6, y3[1]]]);
                              });
                            });
                            break;
                          case "BM":
                            w2.push([d3, normalizeBlendMode(y3)]);
                            break;
                          case "SMask":
                            if ((0, h.isName)(y3, "None")) {
                              w2.push([d3, false]);
                              break;
                            }
                            if (y3 instanceof h.Dict) {
                              _2 = false;
                              C3 = C3.then(function() {
                                return E2.handleSMask(y3, r4, u2, g2, m2, v2);
                              });
                              w2.push([d3, true]);
                            } else
                              (0, l.warn)("Unsupported SMask type");
                            break;
                          case "TR":
                            var k3 = E2.handleTransferFunction(y3);
                            w2.push([d3, k3]);
                            break;
                          case "OP":
                          case "op":
                          case "OPM":
                          case "BG":
                          case "BG2":
                          case "UCR":
                          case "UCR2":
                          case "TR2":
                          case "HT":
                          case "SM":
                          case "SA":
                          case "AIS":
                          case "TK":
                            (0, l.info)("graphic state operator " + d3);
                            break;
                          default:
                            (0, l.info)("Unknown graphic state operator " + d3);
                        }
                      };
                      for (O2 = 0, T2 = S2.length; O2 < T2; O2++)
                        x2(O2);
                      return c2.abrupt("return", C3.then(function() {
                        w2.length > 0 && u2.addOp(l.OPS.setGState, [w2]);
                        _2 && y2.set(d2, k2, w2);
                      }));
                    case 9:
                    case "end":
                      return c2.stop();
                  }
              }, _callee5);
            })), function setGState(t4) {
              return C2.apply(this, arguments);
            }) }, { key: "loadFont", value: function loadFont(t4, r4, o4) {
              var u2, m2 = this, y2 = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : null, v2 = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : null, k2 = function() {
                var o5 = _asyncToGenerator(c.default.mark(function _callee6() {
                  return c.default.wrap(function _callee6$(o6) {
                    for (; ; )
                      switch (o6.prev = o6.next) {
                        case 0:
                          return o6.abrupt("return", new V({ loadedName: "g_font_error", font: new d.ErrorFont('Font "'.concat(t4, '" is not available.')), dict: r4, evaluatorOptions: m2.options }));
                        case 1:
                        case "end":
                          return o6.stop();
                      }
                  }, _callee6);
                }));
                return function errorFont() {
                  return o5.apply(this, arguments);
                };
              }(), _2 = this.xref;
              if (r4) {
                if (!(r4 instanceof h.Ref))
                  throw new l.FormatError('The "font" object should be a reference.');
                u2 = r4;
              } else {
                var w2 = o4.get("Font");
                w2 && (u2 = w2.getRaw(t4));
              }
              if (!u2) {
                var S2 = 'Font "'.concat(t4 || r4 && r4.toString(), '" is not available');
                if (!this.options.ignoreErrors && !this.parsingType3Font) {
                  (0, l.warn)("".concat(S2, "."));
                  return k2();
                }
                this.handler.send("UnsupportedFeature", { featureId: l.UNSUPPORTED_FEATURES.errorFontMissing });
                (0, l.warn)("".concat(S2, " -- attempting to fallback to a default font."));
                u2 = y2 || PartialEvaluator.fallbackFontDict;
              }
              if (this.parsingType3Font && this.type3FontRefs.has(u2))
                return k2();
              if (this.fontCache.has(u2))
                return this.fontCache.get(u2);
              if (!((r4 = _2.fetchIfRef(u2)) instanceof h.Dict))
                return k2();
              if (r4.cacheKey && this.fontCache.has(r4.cacheKey))
                return this.fontCache.get(r4.cacheKey);
              var C3, x2 = (0, l.createPromiseCapability)();
              try {
                (C3 = this.preEvaluateFont(r4)).cssFontInfo = v2;
              } catch (t5) {
                (0, l.warn)('loadFont - preEvaluateFont failed: "'.concat(t5, '".'));
                return k2();
              }
              var O2, T2 = C3, E2 = T2.descriptor, M2 = T2.hash, R2 = u2 instanceof h.Ref;
              R2 && (O2 = "f".concat(u2.toString()));
              if (M2 && E2 instanceof h.Dict) {
                E2.fontAliases || (E2.fontAliases = /* @__PURE__ */ Object.create(null));
                var D2 = E2.fontAliases;
                if (D2[M2]) {
                  var j3 = D2[M2].aliasRef;
                  if (R2 && j3 && this.fontCache.has(j3)) {
                    this.fontCache.putAlias(u2, j3);
                    return this.fontCache.get(u2);
                  }
                } else
                  D2[M2] = { fontID: this.idFactory.createFontId() };
                R2 && (D2[M2].aliasRef = u2);
                O2 = D2[M2].fontID;
              }
              if (R2)
                this.fontCache.put(u2, x2.promise);
              else {
                O2 || (O2 = this.idFactory.createFontId());
                r4.cacheKey = "cacheKey_".concat(O2);
                this.fontCache.put(r4.cacheKey, x2.promise);
              }
              (0, l.assert)(O2 && O2.startsWith("f"), 'The "fontID" must be (correctly) defined.');
              r4.loadedName = "".concat(this.idFactory.getDocId(), "_").concat(O2);
              this.translateFont(C3).then(function(t5) {
                t5.fontType !== void 0 && _2.stats.addFontType(t5.fontType);
                x2.resolve(new V({ loadedName: r4.loadedName, font: t5, dict: r4, evaluatorOptions: m2.options }));
              }).catch(function(t5) {
                m2.handler.send("UnsupportedFeature", { featureId: l.UNSUPPORTED_FEATURES.errorFontTranslate });
                (0, l.warn)('loadFont - translateFont failed: "'.concat(t5, '".'));
                try {
                  var o5 = E2 && E2.get("FontFile3"), c2 = o5 && o5.get("Subtype"), u3 = (0, g.getFontType)(C3.type, c2 && c2.name);
                  u3 !== void 0 && _2.stats.addFontType(u3);
                } catch (t6) {
                }
                x2.resolve(new V({ loadedName: r4.loadedName, font: new d.ErrorFont(t5 instanceof Error ? t5.message : t5), dict: r4, evaluatorOptions: m2.options }));
              });
              return x2.promise;
            } }, { key: "buildPath", value: function buildPath(t4, r4, o4) {
              var c2, u2 = arguments.length > 3 && arguments[3] !== void 0 && arguments[3], h2 = t4.length - 1;
              o4 || (o4 = []);
              if (h2 < 0 || t4.fnArray[h2] !== l.OPS.constructPath) {
                if (u2) {
                  (0, l.warn)('Encountered path operator "'.concat(r4, '" inside of a text object.'));
                  t4.addOp(l.OPS.save, null);
                }
                c2 = [1 / 0, -1 / 0, 1 / 0, -1 / 0];
                t4.addOp(l.OPS.constructPath, [[r4], o4, c2]);
                u2 && t4.addOp(l.OPS.restore, null);
              } else {
                var d2 = t4.argsArray[h2];
                d2[0].push(r4);
                Array.prototype.push.apply(d2[1], o4);
                c2 = d2[2];
              }
              switch (r4) {
                case l.OPS.rectangle:
                  c2[0] = Math.min(c2[0], o4[0], o4[0] + o4[2]);
                  c2[1] = Math.max(c2[1], o4[0], o4[0] + o4[2]);
                  c2[2] = Math.min(c2[2], o4[1], o4[1] + o4[3]);
                  c2[3] = Math.max(c2[3], o4[1], o4[1] + o4[3]);
                  break;
                case l.OPS.moveTo:
                case l.OPS.lineTo:
                  c2[0] = Math.min(c2[0], o4[0]);
                  c2[1] = Math.max(c2[1], o4[0]);
                  c2[2] = Math.min(c2[2], o4[1]);
                  c2[3] = Math.max(c2[3], o4[1]);
              }
            } }, { key: "parseColorSpace", value: function parseColorSpace(t4) {
              var r4 = this, o4 = t4.cs, c2 = t4.resources, u2 = t4.localColorSpaceCache;
              return M.ColorSpace.parseAsync({ cs: o4, xref: this.xref, resources: c2, pdfFunctionFactory: this._pdfFunctionFactory, localColorSpaceCache: u2 }).catch(function(t5) {
                if (t5 instanceof l.AbortException)
                  return null;
                if (r4.options.ignoreErrors) {
                  r4.handler.send("UnsupportedFeature", { featureId: l.UNSUPPORTED_FEATURES.errorColorSpace });
                  (0, l.warn)('parseColorSpace - ignoring ColorSpace: "'.concat(t5, '".'));
                  return null;
                }
                throw t5;
              });
            } }, { key: "parseShading", value: function parseShading(t4) {
              var r4 = t4.shading, o4 = t4.resources, c2 = t4.localColorSpaceCache, l2 = t4.localShadingPatternCache, u2 = l2.get(r4);
              if (!u2) {
                var h2 = k.Pattern.parseShading(r4, this.xref, o4, this.handler, this._pdfFunctionFactory, c2).getIR();
                u2 = "pattern_".concat(this.idFactory.createObjId());
                l2.set(r4, u2);
                this.handler.send("obj", [u2, this.pageIndex, "Pattern", h2]);
              }
              return u2;
            } }, { key: "handleColorN", value: function handleColorN(t4, r4, o4, c2, u2, d2, g2, m2, y2, v2) {
              var _2 = o4.pop();
              if (_2 instanceof h.Name) {
                var w2 = u2.getRaw(_2.name), S2 = w2 instanceof h.Ref && y2.getByRef(w2);
                if (S2)
                  try {
                    var C3 = c2.base ? c2.base.getRgb(o4, 0) : null, x2 = (0, k.getTilingPatternIR)(S2.operatorListIR, S2.dict, C3);
                    t4.addOp(r4, x2);
                    return;
                  } catch (t5) {
                  }
                var O2 = this.xref.fetchIfRef(w2);
                if (O2) {
                  var E2 = O2 instanceof T.BaseStream ? O2.dict : O2, M2 = E2.get("PatternType");
                  if (M2 === X) {
                    var R2 = c2.base ? c2.base.getRgb(o4, 0) : null;
                    return this.handleTilingType(r4, R2, d2, O2, E2, t4, g2, y2);
                  }
                  if (M2 === q) {
                    var D2 = E2.get("Shading"), j3 = E2.getArray("Matrix"), L2 = this.parseShading({ shading: D2, resources: d2, localColorSpaceCache: m2, localShadingPatternCache: v2 });
                    t4.addOp(r4, ["Shading", L2, j3]);
                    return;
                  }
                  throw new l.FormatError("Unknown PatternType: ".concat(M2));
                }
              }
              throw new l.FormatError("Unknown PatternName: ".concat(_2));
            } }, { key: "_parseVisibilityExpression", value: function _parseVisibilityExpression(t4, r4, o4) {
              if (++r4 > 10)
                (0, l.warn)("Visibility expression is too deeply nested");
              else {
                var c2 = t4.length, u2 = this.xref.fetchIfRef(t4[0]);
                if (!(c2 < 2) && u2 instanceof h.Name) {
                  switch (u2.name) {
                    case "And":
                    case "Or":
                    case "Not":
                      o4.push(u2.name);
                      break;
                    default:
                      (0, l.warn)("Invalid operator ".concat(u2.name, " in visibility expression"));
                      return;
                  }
                  for (var d2 = 1; d2 < c2; d2++) {
                    var g2 = t4[d2], m2 = this.xref.fetchIfRef(g2);
                    if (Array.isArray(m2)) {
                      var y2 = [];
                      o4.push(y2);
                      this._parseVisibilityExpression(m2, r4, y2);
                    } else
                      g2 instanceof h.Ref && o4.push(g2.toString());
                  }
                } else
                  (0, l.warn)("Invalid visibility expression");
              }
            } }, { key: "parseMarkedContentProps", value: (o3 = _asyncToGenerator(c.default.mark(function _callee7(t4, r4) {
              var o4, u2, d2, g2, m2, y2, v2, k2, _2, w2;
              return c.default.wrap(function _callee7$(c2) {
                for (; ; )
                  switch (c2.prev = c2.next) {
                    case 0:
                      if (!(t4 instanceof h.Name)) {
                        c2.next = 5;
                        break;
                      }
                      u2 = r4.get("Properties");
                      o4 = u2.get(t4.name);
                      c2.next = 10;
                      break;
                    case 5:
                      if (!(t4 instanceof h.Dict)) {
                        c2.next = 9;
                        break;
                      }
                      o4 = t4;
                      c2.next = 10;
                      break;
                    case 9:
                      throw new l.FormatError("Optional content properties malformed.");
                    case 10:
                      if ((d2 = o4.get("Type").name) !== "OCG") {
                        c2.next = 15;
                        break;
                      }
                      return c2.abrupt("return", { type: d2, id: o4.objId });
                    case 15:
                      if (d2 !== "OCMD") {
                        c2.next = 31;
                        break;
                      }
                      g2 = o4.get("VE");
                      if (!Array.isArray(g2)) {
                        c2.next = 22;
                        break;
                      }
                      m2 = [];
                      this._parseVisibilityExpression(g2, 0, m2);
                      if (!(m2.length > 0)) {
                        c2.next = 22;
                        break;
                      }
                      return c2.abrupt("return", { type: "OCMD", expression: m2 });
                    case 22:
                      y2 = o4.get("OCGs");
                      if (!(Array.isArray(y2) || y2 instanceof h.Dict)) {
                        c2.next = 29;
                        break;
                      }
                      v2 = [];
                      if (Array.isArray(y2)) {
                        k2 = _createForOfIteratorHelper(y2);
                        try {
                          for (k2.s(); !(_2 = k2.n()).done; ) {
                            w2 = _2.value;
                            v2.push(w2.toString());
                          }
                        } catch (t5) {
                          k2.e(t5);
                        } finally {
                          k2.f();
                        }
                      } else
                        v2.push(y2.objId);
                      return c2.abrupt("return", { type: d2, ids: v2, policy: o4.get("P") instanceof h.Name ? o4.get("P").name : null, expression: null });
                    case 29:
                      if (!(y2 instanceof h.Ref)) {
                        c2.next = 31;
                        break;
                      }
                      return c2.abrupt("return", { type: d2, id: y2.toString() });
                    case 31:
                      return c2.abrupt("return", null);
                    case 32:
                    case "end":
                      return c2.stop();
                  }
              }, _callee7, this);
            })), function parseMarkedContentProps(t4, r4) {
              return o3.apply(this, arguments);
            }) }, { key: "getOperatorList", value: function getOperatorList(t4) {
              var r4 = this, o4 = t4.stream, c2 = t4.task, u2 = t4.resources, d2 = t4.operatorList, g2 = t4.initialState, m2 = g2 === void 0 ? null : g2, y2 = t4.fallbackFontDict, v2 = y2 === void 0 ? null : y2;
              u2 = u2 || h.Dict.empty;
              m2 = m2 || new J();
              if (!d2)
                throw new Error('getOperatorList: missing "operatorList" parameter');
              var k2 = this, _2 = this.xref, w2 = false, S2 = new x.LocalImageCache(), C3 = new x.LocalColorSpaceCache(), O2 = new x.LocalGStateCache(), E2 = new x.LocalTilingPatternCache(), R2 = /* @__PURE__ */ new Map(), D2 = u2.get("XObject") || h.Dict.empty, j3 = u2.get("Pattern") || h.Dict.empty, L2 = new K(m2), N2 = new Z(o4, _2, L2), U2 = new z();
              function closePendingRestoreOPS(t5) {
                for (var r5 = 0, o5 = N2.savedStatesDepth; r5 < o5; r5++)
                  d2.addOp(l.OPS.restore, []);
              }
              return new Promise(function promiseBody(t5, r5) {
                var o5 = function next(o6) {
                  Promise.all([o6, d2.ready]).then(function() {
                    try {
                      promiseBody(t5, r5);
                    } catch (t6) {
                      r5(t6);
                    }
                  }, r5);
                };
                c2.ensureNotTerminated();
                U2.reset();
                for (var g3, m3, y3, x2, H2, $2, X2 = {}; !(g3 = U2.check()); ) {
                  X2.args = null;
                  if (!N2.read(X2))
                    break;
                  var q2 = X2.args, z2 = X2.fn;
                  switch (0 | z2) {
                    case l.OPS.paintXObject:
                      $2 = q2[0] instanceof h.Name;
                      H2 = q2[0].name;
                      if ($2) {
                        var W3 = S2.getByName(H2);
                        if (W3) {
                          d2.addImageOps(W3.fn, W3.args, W3.optionalContent);
                          incrementCachedImageMaskCount(W3);
                          q2 = null;
                          continue;
                        }
                      }
                      o5(new Promise(function(t6, r6) {
                        if (!$2)
                          throw new l.FormatError("XObject must be referred to by name.");
                        var o6 = D2.getRaw(H2);
                        if (o6 instanceof h.Ref) {
                          var g4 = S2.getByRef(o6);
                          if (g4) {
                            d2.addImageOps(g4.fn, g4.args, g4.optionalContent);
                            incrementCachedImageMaskCount(g4);
                            t6();
                            return;
                          }
                          var m4 = k2.globalImageCache.getData(o6, k2.pageIndex);
                          if (m4) {
                            d2.addDependency(m4.objId);
                            d2.addImageOps(m4.fn, m4.args, m4.optionalContent);
                            t6();
                            return;
                          }
                          o6 = _2.fetch(o6);
                        }
                        if (!(o6 instanceof T.BaseStream))
                          throw new l.FormatError("XObject should be a stream");
                        var y4 = o6.dict.get("Subtype");
                        if (!(y4 instanceof h.Name))
                          throw new l.FormatError("XObject should have a Name subtype");
                        if (y4.name !== "Form")
                          if (y4.name !== "Image") {
                            if (y4.name !== "PS")
                              throw new l.FormatError("Unhandled XObject subtype ".concat(y4.name));
                            (0, l.info)("Ignored XObject subtype PS");
                            t6();
                          } else
                            k2.buildPaintImageXObject({ resources: u2, image: o6, operatorList: d2, cacheKey: H2, localImageCache: S2, localColorSpaceCache: C3 }).then(t6, r6);
                        else {
                          L2.save();
                          k2.buildFormXObject(u2, o6, null, d2, c2, L2.state.clone(), C3).then(function() {
                            L2.restore();
                            t6();
                          }, r6);
                        }
                      }).catch(function(t6) {
                        if (!(t6 instanceof l.AbortException)) {
                          if (!k2.options.ignoreErrors)
                            throw t6;
                          k2.handler.send("UnsupportedFeature", { featureId: l.UNSUPPORTED_FEATURES.errorXObject });
                          (0, l.warn)('getOperatorList - ignoring XObject: "'.concat(t6, '".'));
                        }
                      }));
                      return;
                    case l.OPS.setFont:
                      var V2 = q2[1];
                      o5(k2.handleSetFont(u2, q2, null, d2, c2, L2.state, v2).then(function(t6) {
                        d2.addDependency(t6);
                        d2.addOp(l.OPS.setFont, [t6, V2]);
                      }));
                      return;
                    case l.OPS.beginText:
                      w2 = true;
                      break;
                    case l.OPS.endText:
                      w2 = false;
                      break;
                    case l.OPS.endInlineImage:
                      var K2 = q2[0].cacheKey;
                      if (K2) {
                        var Y2 = S2.getByName(K2);
                        if (Y2) {
                          d2.addImageOps(Y2.fn, Y2.args, Y2.optionalContent);
                          incrementCachedImageMaskCount(Y2);
                          q2 = null;
                          continue;
                        }
                      }
                      o5(k2.buildPaintImageXObject({ resources: u2, image: q2[0], isInline: true, operatorList: d2, cacheKey: K2, localImageCache: S2, localColorSpaceCache: C3 }));
                      return;
                    case l.OPS.showText:
                      if (!L2.state.font) {
                        k2.ensureStateFont(L2.state);
                        continue;
                      }
                      q2[0] = k2.handleText(q2[0], L2.state);
                      break;
                    case l.OPS.showSpacedText:
                      if (!L2.state.font) {
                        k2.ensureStateFont(L2.state);
                        continue;
                      }
                      var J2 = q2[0], Z2 = [], Q2 = J2.length, ee2 = L2.state;
                      for (m3 = 0; m3 < Q2; ++m3) {
                        var te = J2[m3];
                        typeof te == "string" ? Array.prototype.push.apply(Z2, k2.handleText(te, ee2)) : typeof te == "number" && Z2.push(te);
                      }
                      q2[0] = Z2;
                      z2 = l.OPS.showText;
                      break;
                    case l.OPS.nextLineShowText:
                      if (!L2.state.font) {
                        k2.ensureStateFont(L2.state);
                        continue;
                      }
                      d2.addOp(l.OPS.nextLine);
                      q2[0] = k2.handleText(q2[0], L2.state);
                      z2 = l.OPS.showText;
                      break;
                    case l.OPS.nextLineSetSpacingShowText:
                      if (!L2.state.font) {
                        k2.ensureStateFont(L2.state);
                        continue;
                      }
                      d2.addOp(l.OPS.nextLine);
                      d2.addOp(l.OPS.setWordSpacing, [q2.shift()]);
                      d2.addOp(l.OPS.setCharSpacing, [q2.shift()]);
                      q2[0] = k2.handleText(q2[0], L2.state);
                      z2 = l.OPS.showText;
                      break;
                    case l.OPS.setTextRenderingMode:
                      L2.state.textRenderingMode = q2[0];
                      break;
                    case l.OPS.setFillColorSpace:
                      var re = M.ColorSpace.getCached(q2[0], _2, C3);
                      if (re) {
                        L2.state.fillColorSpace = re;
                        continue;
                      }
                      o5(k2.parseColorSpace({ cs: q2[0], resources: u2, localColorSpaceCache: C3 }).then(function(t6) {
                        t6 && (L2.state.fillColorSpace = t6);
                      }));
                      return;
                    case l.OPS.setStrokeColorSpace:
                      var ae = M.ColorSpace.getCached(q2[0], _2, C3);
                      if (ae) {
                        L2.state.strokeColorSpace = ae;
                        continue;
                      }
                      o5(k2.parseColorSpace({ cs: q2[0], resources: u2, localColorSpaceCache: C3 }).then(function(t6) {
                        t6 && (L2.state.strokeColorSpace = t6);
                      }));
                      return;
                    case l.OPS.setFillColor:
                      q2 = (x2 = L2.state.fillColorSpace).getRgb(q2, 0);
                      z2 = l.OPS.setFillRGBColor;
                      break;
                    case l.OPS.setStrokeColor:
                      q2 = (x2 = L2.state.strokeColorSpace).getRgb(q2, 0);
                      z2 = l.OPS.setStrokeRGBColor;
                      break;
                    case l.OPS.setFillGray:
                      L2.state.fillColorSpace = M.ColorSpace.singletons.gray;
                      q2 = M.ColorSpace.singletons.gray.getRgb(q2, 0);
                      z2 = l.OPS.setFillRGBColor;
                      break;
                    case l.OPS.setStrokeGray:
                      L2.state.strokeColorSpace = M.ColorSpace.singletons.gray;
                      q2 = M.ColorSpace.singletons.gray.getRgb(q2, 0);
                      z2 = l.OPS.setStrokeRGBColor;
                      break;
                    case l.OPS.setFillCMYKColor:
                      L2.state.fillColorSpace = M.ColorSpace.singletons.cmyk;
                      q2 = M.ColorSpace.singletons.cmyk.getRgb(q2, 0);
                      z2 = l.OPS.setFillRGBColor;
                      break;
                    case l.OPS.setStrokeCMYKColor:
                      L2.state.strokeColorSpace = M.ColorSpace.singletons.cmyk;
                      q2 = M.ColorSpace.singletons.cmyk.getRgb(q2, 0);
                      z2 = l.OPS.setStrokeRGBColor;
                      break;
                    case l.OPS.setFillRGBColor:
                      L2.state.fillColorSpace = M.ColorSpace.singletons.rgb;
                      q2 = M.ColorSpace.singletons.rgb.getRgb(q2, 0);
                      break;
                    case l.OPS.setStrokeRGBColor:
                      L2.state.strokeColorSpace = M.ColorSpace.singletons.rgb;
                      q2 = M.ColorSpace.singletons.rgb.getRgb(q2, 0);
                      break;
                    case l.OPS.setFillColorN:
                      if ((x2 = L2.state.fillColorSpace).name === "Pattern") {
                        o5(k2.handleColorN(d2, l.OPS.setFillColorN, q2, x2, j3, u2, c2, C3, E2, R2));
                        return;
                      }
                      q2 = x2.getRgb(q2, 0);
                      z2 = l.OPS.setFillRGBColor;
                      break;
                    case l.OPS.setStrokeColorN:
                      if ((x2 = L2.state.strokeColorSpace).name === "Pattern") {
                        o5(k2.handleColorN(d2, l.OPS.setStrokeColorN, q2, x2, j3, u2, c2, C3, E2, R2));
                        return;
                      }
                      q2 = x2.getRgb(q2, 0);
                      z2 = l.OPS.setStrokeRGBColor;
                      break;
                    case l.OPS.shadingFill:
                      var ne = u2.get("Shading");
                      if (!ne)
                        throw new l.FormatError("No shading resource found");
                      var ie = ne.get(q2[0].name);
                      if (!ie)
                        throw new l.FormatError("No shading object found");
                      q2 = [k2.parseShading({ shading: ie, resources: u2, localColorSpaceCache: C3, localShadingPatternCache: R2 })];
                      z2 = l.OPS.shadingFill;
                      break;
                    case l.OPS.setGState:
                      $2 = q2[0] instanceof h.Name;
                      H2 = q2[0].name;
                      if ($2) {
                        var oe = O2.getByName(H2);
                        if (oe) {
                          oe.length > 0 && d2.addOp(l.OPS.setGState, [oe]);
                          q2 = null;
                          continue;
                        }
                      }
                      o5(new Promise(function(t6, r6) {
                        if (!$2)
                          throw new l.FormatError("GState must be referred to by name.");
                        var o6 = u2.get("ExtGState");
                        if (!(o6 instanceof h.Dict))
                          throw new l.FormatError("ExtGState should be a dictionary.");
                        var g4 = o6.get(H2);
                        if (!(g4 instanceof h.Dict))
                          throw new l.FormatError("GState should be a dictionary.");
                        k2.setGState({ resources: u2, gState: g4, operatorList: d2, cacheKey: H2, task: c2, stateManager: L2, localGStateCache: O2, localColorSpaceCache: C3 }).then(t6, r6);
                      }).catch(function(t6) {
                        if (!(t6 instanceof l.AbortException)) {
                          if (!k2.options.ignoreErrors)
                            throw t6;
                          k2.handler.send("UnsupportedFeature", { featureId: l.UNSUPPORTED_FEATURES.errorExtGState });
                          (0, l.warn)('getOperatorList - ignoring ExtGState: "'.concat(t6, '".'));
                        }
                      }));
                      return;
                    case l.OPS.moveTo:
                    case l.OPS.lineTo:
                    case l.OPS.curveTo:
                    case l.OPS.curveTo2:
                    case l.OPS.curveTo3:
                    case l.OPS.closePath:
                    case l.OPS.rectangle:
                      k2.buildPath(d2, z2, q2, w2);
                      continue;
                    case l.OPS.markPoint:
                    case l.OPS.markPointProps:
                    case l.OPS.beginCompat:
                    case l.OPS.endCompat:
                      continue;
                    case l.OPS.beginMarkedContentProps:
                      if (!(q2[0] instanceof h.Name)) {
                        (0, l.warn)("Expected name for beginMarkedContentProps arg0=".concat(q2[0]));
                        continue;
                      }
                      if (q2[0].name === "OC") {
                        o5(k2.parseMarkedContentProps(q2[1], u2).then(function(t6) {
                          d2.addOp(l.OPS.beginMarkedContentProps, ["OC", t6]);
                        }).catch(function(t6) {
                          if (!(t6 instanceof l.AbortException)) {
                            if (!k2.options.ignoreErrors)
                              throw t6;
                            k2.handler.send("UnsupportedFeature", { featureId: l.UNSUPPORTED_FEATURES.errorMarkedContent });
                            (0, l.warn)('getOperatorList - ignoring beginMarkedContentProps: "'.concat(t6, '".'));
                          }
                        }));
                        return;
                      }
                      q2 = [q2[0].name, q2[1] instanceof h.Dict ? q2[1].get("MCID") : null];
                      break;
                    case l.OPS.beginMarkedContent:
                    case l.OPS.endMarkedContent:
                    default:
                      if (q2 !== null) {
                        for (m3 = 0, y3 = q2.length; m3 < y3 && !(q2[m3] instanceof h.Dict); m3++)
                          ;
                        if (m3 < y3) {
                          (0, l.warn)("getOperatorList - ignoring operator: " + z2);
                          continue;
                        }
                      }
                  }
                  d2.addOp(z2, q2);
                }
                if (g3)
                  o5(G);
                else {
                  closePendingRestoreOPS();
                  t5();
                }
              }).catch(function(t5) {
                if (!(t5 instanceof l.AbortException)) {
                  if (!r4.options.ignoreErrors)
                    throw t5;
                  r4.handler.send("UnsupportedFeature", { featureId: l.UNSUPPORTED_FEATURES.errorOperatorList });
                  (0, l.warn)('getOperatorList - ignoring errors during "'.concat(c2.name, '" ') + 'task: "'.concat(t5, '".'));
                  closePendingRestoreOPS();
                }
              });
            } }, { key: "getTextContent", value: function getTextContent(t4) {
              var r4 = this, o4 = t4.stream, c2 = t4.task, u2 = t4.resources, d2 = t4.stateManager, g2 = d2 === void 0 ? null : d2, m2 = t4.combineTextItems, y2 = m2 !== void 0 && m2, k2 = t4.includeMarkedContent, _2 = k2 !== void 0 && k2, w2 = t4.sink, S2 = t4.seenStyles, C3 = S2 === void 0 ? /* @__PURE__ */ new Set() : S2, O2 = t4.viewBox;
              u2 = u2 || h.Dict.empty;
              g2 = g2 || new K(new Y());
              var M2 = (0, v.getNormalizedUnicodes)(), R2 = { items: [], styles: /* @__PURE__ */ Object.create(null) }, D2 = { initialized: false, str: [], totalWidth: 0, totalHeight: 0, width: 0, height: 0, vertical: false, prevTransform: null, textAdvanceScale: 0, spaceInFlowMin: 0, spaceInFlowMax: 0, trackingSpaceMin: 1 / 0, negativeSpaceMax: -1 / 0, notASpace: -1 / 0, transform: null, fontName: null, hasEOL: false }, j3 = [" ", " "], L2 = 0;
              function saveLastChar(t5) {
                var r5 = (L2 + 1) % 2, o5 = j3[L2] !== " " && j3[r5] === " ";
                j3[L2] = t5;
                L2 = r5;
                return o5;
              }
              function resetLastChars() {
                j3[0] = j3[1] = " ";
                L2 = 0;
              }
              var N2, U2 = this, H2 = this.xref, $2 = [], X2 = null, q2 = new x.LocalImageCache(), W3 = new x.LocalGStateCache(), V2 = new Z(o4, H2, g2);
              function getCurrentTextTransform() {
                var t5 = N2.font, r5 = [N2.fontSize * N2.textHScale, 0, 0, N2.fontSize, 0, N2.textRise];
                if (t5.isType3Font && (N2.fontSize <= 1 || t5.isCharBBox) && !(0, l.isArrayEqual)(N2.fontMatrix, l.FONT_IDENTITY_MATRIX)) {
                  var o5 = t5.bbox[3] - t5.bbox[1];
                  o5 > 0 && (r5[3] *= o5 * N2.fontMatrix[3]);
                }
                return l.Util.transform(N2.ctm, l.Util.transform(N2.textMatrix, r5));
              }
              function ensureTextContentItem() {
                if (D2.initialized)
                  return D2;
                var t5 = N2.font, r5 = t5.loadedName;
                if (!C3.has(r5)) {
                  C3.add(r5);
                  R2.styles[r5] = { fontFamily: t5.fallbackName, ascent: t5.ascent, descent: t5.descent, vertical: t5.vertical };
                }
                D2.fontName = r5;
                var o5 = D2.transform = getCurrentTextTransform();
                if (t5.vertical) {
                  D2.width = D2.totalWidth = Math.hypot(o5[0], o5[1]);
                  D2.height = D2.totalHeight = 0;
                  D2.vertical = true;
                } else {
                  D2.width = D2.totalWidth = 0;
                  D2.height = D2.totalHeight = Math.hypot(o5[2], o5[3]);
                  D2.vertical = false;
                }
                var c3 = Math.hypot(N2.textLineMatrix[0], N2.textLineMatrix[1]), l2 = Math.hypot(N2.ctm[0], N2.ctm[1]);
                D2.textAdvanceScale = l2 * c3;
                D2.trackingSpaceMin = 0.1 * N2.fontSize;
                D2.notASpace = 0.03 * N2.fontSize;
                D2.negativeSpaceMax = -0.2 * N2.fontSize;
                D2.spaceInFlowMin = 0.1 * N2.fontSize;
                D2.spaceInFlowMax = 0.6 * N2.fontSize;
                D2.hasEOL = false;
                D2.initialized = true;
                return D2;
              }
              function updateAdvanceScale() {
                if (D2.initialized) {
                  var t5 = Math.hypot(N2.textLineMatrix[0], N2.textLineMatrix[1]), r5 = Math.hypot(N2.ctm[0], N2.ctm[1]) * t5;
                  if (r5 !== D2.textAdvanceScale) {
                    if (D2.vertical) {
                      D2.totalHeight += D2.height * D2.textAdvanceScale;
                      D2.height = 0;
                    } else {
                      D2.totalWidth += D2.width * D2.textAdvanceScale;
                      D2.width = 0;
                    }
                    D2.textAdvanceScale = r5;
                  }
                }
              }
              function handleSetFont(t5, r5) {
                return U2.loadFont(t5, r5, u2).then(function(t6) {
                  return t6.font.isType3Font ? t6.loadType3Data(U2, u2, c2).catch(function() {
                  }).then(function() {
                    return t6;
                  }) : t6;
                }).then(function(t6) {
                  N2.font = t6.font;
                  N2.fontMatrix = t6.font.fontMatrix || l.FONT_IDENTITY_MATRIX;
                });
              }
              function applyInverseRotation(t5, r5, o5) {
                var c3 = Math.hypot(o5[0], o5[1]);
                return [(o5[0] * t5 + o5[1] * r5) / c3, (o5[2] * t5 + o5[3] * r5) / c3];
              }
              function compareWithLastPosition() {
                var t5 = getCurrentTextTransform(), r5 = t5[4], o5 = t5[5], c3 = r5 - O2[0], l2 = o5 - O2[1];
                if (c3 < 0 || c3 > O2[2] || l2 < 0 || l2 > O2[3])
                  return false;
                if (!y2 || !N2.font || !D2.prevTransform)
                  return true;
                var u3 = D2.prevTransform[4], h2 = D2.prevTransform[5];
                if (u3 === r5 && h2 === o5)
                  return true;
                var d3 = -1;
                t5[0] && t5[1] === 0 && t5[2] === 0 ? d3 = t5[0] > 0 ? 0 : 180 : t5[1] && t5[0] === 0 && t5[3] === 0 && (d3 = t5[1] > 0 ? 90 : 270);
                switch (d3) {
                  case 0:
                    break;
                  case 90:
                    var g3 = [o5, r5];
                    r5 = g3[0];
                    o5 = g3[1];
                    var m3 = [h2, u3];
                    u3 = m3[0];
                    h2 = m3[1];
                    break;
                  case 180:
                    var v2 = [-r5, -o5, -u3, -h2];
                    r5 = v2[0];
                    o5 = v2[1];
                    u3 = v2[2];
                    h2 = v2[3];
                    break;
                  case 270:
                    var k3 = [-o5, -r5];
                    r5 = k3[0];
                    o5 = k3[1];
                    var _3 = [-h2, -u3];
                    u3 = _3[0];
                    h2 = _3[1];
                    break;
                  default:
                    var w3 = _slicedToArray(applyInverseRotation(r5, o5, t5), 2);
                    r5 = w3[0];
                    o5 = w3[1];
                    var S3 = _slicedToArray(applyInverseRotation(u3, h2, D2.prevTransform), 2);
                    u3 = S3[0];
                    h2 = S3[1];
                }
                if (N2.font.vertical) {
                  var C4 = (h2 - o5) / D2.textAdvanceScale, x2 = r5 - u3, T2 = Math.sign(D2.height);
                  if (C4 < T2 * D2.negativeSpaceMax) {
                    if (Math.abs(x2) > 0.5 * D2.width) {
                      appendEOL();
                      return true;
                    }
                    resetLastChars();
                    flushTextContentItem();
                    return true;
                  }
                  if (Math.abs(x2) > D2.width) {
                    appendEOL();
                    return true;
                  }
                  C4 <= T2 * D2.notASpace && resetLastChars();
                  if (C4 <= T2 * D2.trackingSpaceMin)
                    D2.height += C4;
                  else if (!addFakeSpaces(C4, D2.prevTransform, T2))
                    if (D2.str.length === 0) {
                      resetLastChars();
                      R2.items.push({ str: " ", dir: "ltr", width: 0, height: Math.abs(C4), transform: D2.prevTransform, fontName: D2.fontName, hasEOL: false });
                    } else
                      D2.height += C4;
                  return true;
                }
                var E2 = (r5 - u3) / D2.textAdvanceScale, M3 = o5 - h2, j4 = Math.sign(D2.width);
                if (E2 < j4 * D2.negativeSpaceMax) {
                  if (Math.abs(M3) > 0.5 * D2.height) {
                    appendEOL();
                    return true;
                  }
                  resetLastChars();
                  flushTextContentItem();
                  return true;
                }
                if (Math.abs(M3) > D2.height) {
                  appendEOL();
                  return true;
                }
                E2 <= j4 * D2.notASpace && resetLastChars();
                if (E2 <= j4 * D2.trackingSpaceMin)
                  D2.width += E2;
                else if (!addFakeSpaces(E2, D2.prevTransform, j4))
                  if (D2.str.length === 0) {
                    resetLastChars();
                    R2.items.push({ str: " ", dir: "ltr", width: Math.abs(E2), height: 0, transform: D2.prevTransform, fontName: D2.fontName, hasEOL: false });
                  } else
                    D2.width += E2;
                return true;
              }
              function buildTextContentItem(t5) {
                var r5 = t5.chars, o5 = t5.extraSpacing, c3 = N2.font;
                if (r5)
                  for (var l2 = c3.charsToGlyphs(r5), u3 = N2.fontMatrix[0] * N2.fontSize, h2 = 0, d3 = l2.length; h2 < d3; h2++) {
                    var g3 = l2[h2];
                    if (!g3.isInvisibleFormatMark) {
                      var m3 = N2.charSpacing + (h2 + 1 === d3 ? o5 : 0), y3 = g3.width;
                      c3.vertical && (y3 = g3.vmetric ? g3.vmetric[0] : -y3);
                      var k3 = y3 * u3;
                      if (g3.isWhitespace) {
                        if (c3.vertical) {
                          m3 += -k3 + N2.wordSpacing;
                          N2.translateTextMatrix(0, -m3);
                        } else {
                          m3 += k3 + N2.wordSpacing;
                          N2.translateTextMatrix(m3 * N2.textHScale, 0);
                        }
                        saveLastChar(" ");
                      } else if (compareWithLastPosition()) {
                        var _3 = ensureTextContentItem();
                        g3.isZeroWidthDiacritic && (k3 = 0);
                        if (c3.vertical) {
                          N2.translateTextMatrix(0, k3);
                          k3 = Math.abs(k3);
                          _3.height += k3;
                        } else {
                          k3 *= N2.textHScale;
                          N2.translateTextMatrix(k3, 0);
                          _3.width += k3;
                        }
                        k3 && (_3.prevTransform = getCurrentTextTransform());
                        var w3 = g3.unicode;
                        w3 = M2[w3] || w3;
                        saveLastChar(w3 = (0, v.reverseIfRtl)(w3)) && _3.str.push(" ");
                        _3.str.push(w3);
                        m3 && (c3.vertical ? N2.translateTextMatrix(0, -m3) : N2.translateTextMatrix(m3 * N2.textHScale, 0));
                      }
                    }
                  }
                else {
                  var S3 = N2.charSpacing + o5;
                  S3 && (c3.vertical ? N2.translateTextMatrix(0, -S3) : N2.translateTextMatrix(S3 * N2.textHScale, 0));
                }
              }
              function appendEOL() {
                resetLastChars();
                if (D2.initialized) {
                  D2.hasEOL = true;
                  flushTextContentItem();
                } else
                  R2.items.push({ str: "", dir: "ltr", width: 0, height: 0, transform: getCurrentTextTransform(), fontName: N2.font.loadedName, hasEOL: true });
              }
              function addFakeSpaces(t5, r5, o5) {
                if (o5 * D2.spaceInFlowMin <= t5 && t5 <= o5 * D2.spaceInFlowMax) {
                  if (D2.initialized) {
                    resetLastChars();
                    D2.str.push(" ");
                  }
                  return false;
                }
                var c3 = D2.fontName, l2 = 0;
                if (D2.vertical) {
                  l2 = t5;
                  t5 = 0;
                }
                flushTextContentItem();
                resetLastChars();
                R2.items.push({ str: " ", dir: "ltr", width: Math.abs(t5), height: Math.abs(l2), transform: r5 || getCurrentTextTransform(), fontName: c3, hasEOL: false });
                return true;
              }
              function flushTextContentItem() {
                if (D2.initialized && D2.str) {
                  D2.vertical ? D2.totalHeight += D2.height * D2.textAdvanceScale : D2.totalWidth += D2.width * D2.textAdvanceScale;
                  R2.items.push(function runBidiTransform(t5) {
                    var r5 = t5.str.join(""), o5 = (0, E.bidi)(r5, -1, t5.vertical);
                    return { str: o5.str, dir: o5.dir, width: Math.abs(t5.totalWidth), height: Math.abs(t5.totalHeight), transform: t5.transform, fontName: t5.fontName, hasEOL: t5.hasEOL };
                  }(D2));
                  D2.initialized = false;
                  D2.str.length = 0;
                }
              }
              function enqueueChunk() {
                var t5 = arguments.length > 0 && arguments[0] !== void 0 && arguments[0], r5 = R2.items.length;
                if (r5 !== 0 && !(t5 && r5 < 10)) {
                  w2.enqueue(R2, r5);
                  R2.items = [];
                  R2.styles = /* @__PURE__ */ Object.create(null);
                }
              }
              var J2 = new z();
              return new Promise(function promiseBody(t5, r5) {
                var o5 = function next(o6) {
                  enqueueChunk(true);
                  Promise.all([o6, w2.ready]).then(function() {
                    try {
                      promiseBody(t5, r5);
                    } catch (t6) {
                      r5(t6);
                    }
                  }, r5);
                };
                c2.ensureNotTerminated();
                J2.reset();
                for (var d3, m3 = {}, v2 = []; !(d3 = J2.check()); ) {
                  v2.length = 0;
                  m3.args = v2;
                  if (!V2.read(m3))
                    break;
                  N2 = g2.state;
                  var k3 = m3.fn;
                  v2 = m3.args;
                  switch (0 | k3) {
                    case l.OPS.setFont:
                      var S3 = v2[0].name, x2 = v2[1];
                      if (N2.font && S3 === N2.fontName && x2 === N2.fontSize)
                        break;
                      flushTextContentItem();
                      N2.fontName = S3;
                      N2.fontSize = x2;
                      o5(handleSetFont(S3, null));
                      return;
                    case l.OPS.setTextRise:
                      N2.textRise = v2[0];
                      break;
                    case l.OPS.setHScale:
                      N2.textHScale = v2[0] / 100;
                      break;
                    case l.OPS.setLeading:
                      N2.leading = v2[0];
                      break;
                    case l.OPS.moveText:
                      N2.translateTextLineMatrix(v2[0], v2[1]);
                      N2.textMatrix = N2.textLineMatrix.slice();
                      break;
                    case l.OPS.setLeadingMoveText:
                      N2.leading = -v2[1];
                      N2.translateTextLineMatrix(v2[0], v2[1]);
                      N2.textMatrix = N2.textLineMatrix.slice();
                      break;
                    case l.OPS.nextLine:
                      N2.carriageReturn();
                      break;
                    case l.OPS.setTextMatrix:
                      N2.setTextMatrix(v2[0], v2[1], v2[2], v2[3], v2[4], v2[5]);
                      N2.setTextLineMatrix(v2[0], v2[1], v2[2], v2[3], v2[4], v2[5]);
                      updateAdvanceScale();
                      break;
                    case l.OPS.setCharSpacing:
                      N2.charSpacing = v2[0];
                      break;
                    case l.OPS.setWordSpacing:
                      N2.wordSpacing = v2[0];
                      break;
                    case l.OPS.beginText:
                      N2.textMatrix = l.IDENTITY_MATRIX.slice();
                      N2.textLineMatrix = l.IDENTITY_MATRIX.slice();
                      break;
                    case l.OPS.showSpacedText:
                      if (!g2.state.font) {
                        U2.ensureStateFont(g2.state);
                        continue;
                      }
                      for (var E2 = (N2.font.vertical ? 1 : -1) * N2.fontSize / 1e3, M3 = v2[0], D3 = 0, j4 = M3.length; D3 < j4 - 1; D3++) {
                        var L3 = M3[D3];
                        if (typeof L3 == "string")
                          $2.push(L3);
                        else if (typeof L3 == "number" && L3 !== 0) {
                          var z2 = $2.join("");
                          $2.length = 0;
                          buildTextContentItem({ chars: z2, extraSpacing: L3 * E2 });
                        }
                      }
                      var Y2 = M3[M3.length - 1];
                      typeof Y2 == "string" && $2.push(Y2);
                      if ($2.length > 0) {
                        var Z2 = $2.join("");
                        $2.length = 0;
                        buildTextContentItem({ chars: Z2, extraSpacing: 0 });
                      }
                      break;
                    case l.OPS.showText:
                      if (!g2.state.font) {
                        U2.ensureStateFont(g2.state);
                        continue;
                      }
                      buildTextContentItem({ chars: v2[0], extraSpacing: 0 });
                      break;
                    case l.OPS.nextLineShowText:
                      if (!g2.state.font) {
                        U2.ensureStateFont(g2.state);
                        continue;
                      }
                      N2.carriageReturn();
                      buildTextContentItem({ chars: v2[0], extraSpacing: 0 });
                      break;
                    case l.OPS.nextLineSetSpacingShowText:
                      if (!g2.state.font) {
                        U2.ensureStateFont(g2.state);
                        continue;
                      }
                      N2.wordSpacing = v2[0];
                      N2.charSpacing = v2[1];
                      N2.carriageReturn();
                      buildTextContentItem({ chars: v2[2], extraSpacing: 0 });
                      break;
                    case l.OPS.paintXObject:
                      flushTextContentItem();
                      X2 || (X2 = u2.get("XObject") || h.Dict.empty);
                      var Q2 = v2[0] instanceof h.Name, ee2 = v2[0].name;
                      if (Q2 && q2.getByName(ee2))
                        break;
                      o5(new Promise(function(t6, r6) {
                        if (!Q2)
                          throw new l.FormatError("XObject must be referred to by name.");
                        var o6 = X2.getRaw(ee2);
                        if (o6 instanceof h.Ref) {
                          if (q2.getByRef(o6)) {
                            t6();
                            return;
                          }
                          if (U2.globalImageCache.getData(o6, U2.pageIndex)) {
                            t6();
                            return;
                          }
                          o6 = H2.fetch(o6);
                        }
                        if (!(o6 instanceof T.BaseStream))
                          throw new l.FormatError("XObject should be a stream");
                        var d4 = o6.dict.get("Subtype");
                        if (!(d4 instanceof h.Name))
                          throw new l.FormatError("XObject should have a Name subtype");
                        if (d4.name === "Form") {
                          var m4 = g2.state.clone(), v3 = new K(m4), k4 = o6.dict.getArray("Matrix");
                          Array.isArray(k4) && k4.length === 6 && v3.transform(k4);
                          enqueueChunk();
                          var S4 = { enqueueInvoked: false, enqueue: function enqueue(t7, r7) {
                            this.enqueueInvoked = true;
                            w2.enqueue(t7, r7);
                          }, get desiredSize() {
                            return w2.desiredSize;
                          }, get ready() {
                            return w2.ready;
                          } };
                          U2.getTextContent({ stream: o6, task: c2, resources: o6.dict.get("Resources") || u2, stateManager: v3, combineTextItems: y2, includeMarkedContent: _2, sink: S4, seenStyles: C3, viewBox: O2 }).then(function() {
                            S4.enqueueInvoked || q2.set(ee2, o6.dict.objId, true);
                            t6();
                          }, r6);
                        } else {
                          q2.set(ee2, o6.dict.objId, true);
                          t6();
                        }
                      }).catch(function(t6) {
                        if (!(t6 instanceof l.AbortException)) {
                          if (!U2.options.ignoreErrors)
                            throw t6;
                          (0, l.warn)('getTextContent - ignoring XObject: "'.concat(t6, '".'));
                        }
                      }));
                      return;
                    case l.OPS.setGState:
                      Q2 = v2[0] instanceof h.Name;
                      ee2 = v2[0].name;
                      if (Q2 && W3.getByName(ee2))
                        break;
                      o5(new Promise(function(t6, r6) {
                        if (!Q2)
                          throw new l.FormatError("GState must be referred to by name.");
                        var o6 = u2.get("ExtGState");
                        if (!(o6 instanceof h.Dict))
                          throw new l.FormatError("ExtGState should be a dictionary.");
                        var c3 = o6.get(ee2);
                        if (!(c3 instanceof h.Dict))
                          throw new l.FormatError("GState should be a dictionary.");
                        var d4 = c3.get("Font");
                        if (d4) {
                          flushTextContentItem();
                          N2.fontName = null;
                          N2.fontSize = d4[1];
                          handleSetFont(null, d4[0]).then(t6, r6);
                        } else {
                          W3.set(ee2, c3.objId, true);
                          t6();
                        }
                      }).catch(function(t6) {
                        if (!(t6 instanceof l.AbortException)) {
                          if (!U2.options.ignoreErrors)
                            throw t6;
                          (0, l.warn)('getTextContent - ignoring ExtGState: "'.concat(t6, '".'));
                        }
                      }));
                      return;
                    case l.OPS.beginMarkedContent:
                      _2 && R2.items.push({ type: "beginMarkedContent", tag: v2[0] instanceof h.Name ? v2[0].name : null });
                      break;
                    case l.OPS.beginMarkedContentProps:
                      if (_2) {
                        flushTextContentItem();
                        var te = null;
                        v2[1] instanceof h.Dict && (te = v2[1].get("MCID"));
                        R2.items.push({ type: "beginMarkedContentProps", id: Number.isInteger(te) ? "".concat(U2.idFactory.getPageObjId(), "_mcid").concat(te) : null, tag: v2[0] instanceof h.Name ? v2[0].name : null });
                      }
                      break;
                    case l.OPS.endMarkedContent:
                      if (_2) {
                        flushTextContentItem();
                        R2.items.push({ type: "endMarkedContent" });
                      }
                  }
                  if (R2.items.length >= w2.desiredSize) {
                    d3 = true;
                    break;
                  }
                }
                if (d3)
                  o5(G);
                else {
                  flushTextContentItem();
                  enqueueChunk();
                  t5();
                }
              }).catch(function(t5) {
                if (!(t5 instanceof l.AbortException)) {
                  if (!r4.options.ignoreErrors)
                    throw t5;
                  (0, l.warn)('getTextContent - ignoring errors during "'.concat(c2.name, '" ') + 'task: "'.concat(t5, '".'));
                  flushTextContentItem();
                  enqueueChunk();
                }
              });
            } }, { key: "extractDataStructures", value: function extractDataStructures(t4, r4, o4) {
              var c2, u2 = this, d2 = this.xref, y2 = this.readToUnicode(o4.toUnicode || t4.get("ToUnicode") || r4.get("ToUnicode"));
              if (o4.composite) {
                var v2 = t4.get("CIDSystemInfo");
                v2 instanceof h.Dict && (o4.cidSystemInfo = { registry: (0, l.stringToPDFString)(v2.get("Registry")), ordering: (0, l.stringToPDFString)(v2.get("Ordering")), supplement: v2.get("Supplement") });
                var k2 = t4.get("CIDToGIDMap");
                k2 instanceof T.BaseStream && (c2 = k2.getBytes());
              }
              var _2, w2 = [], S2 = null;
              if (t4.has("Encoding")) {
                if ((_2 = t4.get("Encoding")) instanceof h.Dict) {
                  S2 = (S2 = _2.get("BaseEncoding")) instanceof h.Name ? S2.name : null;
                  if (_2.has("Differences"))
                    for (var C3 = _2.get("Differences"), x2 = 0, O2 = 0, E2 = C3.length; O2 < E2; O2++) {
                      var M2 = d2.fetchIfRef(C3[O2]);
                      if (typeof M2 == "number")
                        x2 = M2;
                      else {
                        if (!(M2 instanceof h.Name))
                          throw new l.FormatError("Invalid entry in 'Differences' array: ".concat(M2));
                        w2[x2++] = M2.name;
                      }
                    }
                } else if (_2 instanceof h.Name)
                  S2 = _2.name;
                else {
                  var R2 = "Encoding is not a Name nor a Dict";
                  if (!this.options.ignoreErrors)
                    throw new l.FormatError(R2);
                  (0, l.warn)(R2);
                }
                S2 !== "MacRomanEncoding" && S2 !== "MacExpertEncoding" && S2 !== "WinAnsiEncoding" && (S2 = null);
              }
              if (S2)
                o4.defaultEncoding = (0, m.getEncoding)(S2);
              else {
                var D2 = !!(o4.flags & g.FontFlags.Symbolic), j3 = !!(o4.flags & g.FontFlags.Nonsymbolic);
                _2 = m.StandardEncoding;
                o4.type !== "TrueType" || j3 || (_2 = m.WinAnsiEncoding);
                if (D2) {
                  _2 = m.MacRomanEncoding;
                  o4.file && !o4.isInternalFont || (/Symbol/i.test(o4.name) ? _2 = m.SymbolSetEncoding : /Dingbats|Wingdings/i.test(o4.name) && (_2 = m.ZapfDingbatsEncoding));
                }
                o4.defaultEncoding = _2;
              }
              o4.differences = w2;
              o4.baseEncodingName = S2;
              o4.hasEncoding = !!S2 || w2.length > 0;
              o4.dict = t4;
              return y2.then(function(t5) {
                o4.toUnicode = t5;
                return u2.buildToUnicode(o4);
              }).then(function(t5) {
                o4.toUnicode = t5;
                c2 && (o4.cidToGidMap = u2.readCidToGidMap(c2, t5));
                return o4;
              });
            } }, { key: "_simpleFontToUnicode", value: function _simpleFontToUnicode(t4) {
              var r4 = arguments.length > 1 && arguments[1] !== void 0 && arguments[1];
              (0, l.assert)(!t4.composite, "Must be a simple font.");
              var o4 = [], c2 = t4.defaultEncoding.slice(), u2 = t4.baseEncodingName, h2 = t4.differences;
              for (var d2 in h2) {
                var g2 = h2[d2];
                g2 !== ".notdef" && (c2[d2] = g2);
              }
              var y2 = (0, D.getGlyphsUnicode)();
              for (var k2 in c2) {
                var _2 = c2[k2];
                if (_2 !== "")
                  if (y2[_2] !== void 0)
                    o4[k2] = String.fromCharCode(y2[_2]);
                  else {
                    var w2 = 0;
                    switch (_2[0]) {
                      case "G":
                        _2.length === 3 && (w2 = parseInt(_2.substring(1), 16));
                        break;
                      case "g":
                        _2.length === 5 && (w2 = parseInt(_2.substring(1), 16));
                        break;
                      case "C":
                      case "c":
                        if (_2.length >= 3 && _2.length <= 4) {
                          var S2 = _2.substring(1);
                          if (r4) {
                            w2 = parseInt(S2, 16);
                            break;
                          }
                          w2 = +S2;
                          if (Number.isNaN(w2) && Number.isInteger(parseInt(S2, 16)))
                            return this._simpleFontToUnicode(t4, true);
                        }
                        break;
                      default:
                        var C3 = (0, v.getUnicodeForGlyph)(_2, y2);
                        C3 !== -1 && (w2 = C3);
                    }
                    if (w2 > 0 && w2 <= 1114111 && Number.isInteger(w2)) {
                      if (u2 && w2 === +k2) {
                        var x2 = (0, m.getEncoding)(u2);
                        if (x2 && (_2 = x2[k2])) {
                          o4[k2] = String.fromCharCode(y2[_2]);
                          continue;
                        }
                      }
                      o4[k2] = String.fromCodePoint(w2);
                    }
                  }
              }
              return o4;
            } }, { key: "buildToUnicode", value: (r3 = _asyncToGenerator(c.default.mark(function _callee8(t4) {
              var r4, o4, d2, g2, m2, y2;
              return c.default.wrap(function _callee8$(c2) {
                for (; ; )
                  switch (c2.prev = c2.next) {
                    case 0:
                      t4.hasIncludedToUnicodeMap = !!t4.toUnicode && t4.toUnicode.length > 0;
                      if (!t4.hasIncludedToUnicodeMap) {
                        c2.next = 4;
                        break;
                      }
                      !t4.composite && t4.hasEncoding && (t4.fallbackToUnicode = this._simpleFontToUnicode(t4));
                      return c2.abrupt("return", t4.toUnicode);
                    case 4:
                      if (t4.composite) {
                        c2.next = 6;
                        break;
                      }
                      return c2.abrupt("return", new w.ToUnicodeMap(this._simpleFontToUnicode(t4)));
                    case 6:
                      if (!t4.composite || (!t4.cMap.builtInCMap || t4.cMap instanceof u.IdentityCMap) && (t4.cidSystemInfo.registry !== "Adobe" || t4.cidSystemInfo.ordering !== "GB1" && t4.cidSystemInfo.ordering !== "CNS1" && t4.cidSystemInfo.ordering !== "Japan1" && t4.cidSystemInfo.ordering !== "Korea1")) {
                        c2.next = 15;
                        break;
                      }
                      r4 = t4.cidSystemInfo, o4 = r4.registry, d2 = r4.ordering;
                      g2 = h.Name.get("".concat(o4, "-").concat(d2, "-UCS2"));
                      c2.next = 11;
                      return u.CMapFactory.create({ encoding: g2, fetchBuiltInCMap: this._fetchBuiltInCMapBound, useCMap: null });
                    case 11:
                      m2 = c2.sent;
                      y2 = [];
                      t4.cMap.forEach(function(t5, r5) {
                        if (r5 > 65535)
                          throw new l.FormatError("Max size of CID is 65,535");
                        var o5 = m2.lookup(r5);
                        o5 && (y2[t5] = String.fromCharCode((o5.charCodeAt(0) << 8) + o5.charCodeAt(1)));
                      });
                      return c2.abrupt("return", new w.ToUnicodeMap(y2));
                    case 15:
                      return c2.abrupt("return", new w.IdentityToUnicodeMap(t4.firstChar, t4.lastChar));
                    case 16:
                    case "end":
                      return c2.stop();
                  }
              }, _callee8, this);
            })), function buildToUnicode(t4) {
              return r3.apply(this, arguments);
            }) }, { key: "readToUnicode", value: function readToUnicode(t4) {
              var r4 = this;
              return t4 ? t4 instanceof h.Name ? u.CMapFactory.create({ encoding: t4, fetchBuiltInCMap: this._fetchBuiltInCMapBound, useCMap: null }).then(function(t5) {
                return t5 instanceof u.IdentityCMap ? new w.IdentityToUnicodeMap(0, 65535) : new w.ToUnicodeMap(t5.getMap());
              }) : t4 instanceof T.BaseStream ? u.CMapFactory.create({ encoding: t4, fetchBuiltInCMap: this._fetchBuiltInCMapBound, useCMap: null }).then(function(t5) {
                if (t5 instanceof u.IdentityCMap)
                  return new w.IdentityToUnicodeMap(0, 65535);
                var r5 = new Array(t5.length);
                t5.forEach(function(t6, o4) {
                  if (typeof o4 != "number") {
                    for (var c2 = [], l2 = 0; l2 < o4.length; l2 += 2) {
                      var u2 = o4.charCodeAt(l2) << 8 | o4.charCodeAt(l2 + 1);
                      if ((63488 & u2) == 55296) {
                        l2 += 2;
                        var h2 = o4.charCodeAt(l2) << 8 | o4.charCodeAt(l2 + 1);
                        c2.push(((1023 & u2) << 10) + (1023 & h2) + 65536);
                      } else
                        c2.push(u2);
                    }
                    r5[t6] = String.fromCodePoint.apply(String, c2);
                  } else
                    r5[t6] = String.fromCodePoint(o4);
                });
                return new w.ToUnicodeMap(r5);
              }, function(t5) {
                if (t5 instanceof l.AbortException)
                  return null;
                if (r4.options.ignoreErrors) {
                  r4.handler.send("UnsupportedFeature", { featureId: l.UNSUPPORTED_FEATURES.errorFontToUnicode });
                  (0, l.warn)('readToUnicode - ignoring ToUnicode data: "'.concat(t5, '".'));
                  return null;
                }
                throw t5;
              }) : Promise.resolve(null) : Promise.resolve(null);
            } }, { key: "readCidToGidMap", value: function readCidToGidMap(t4, r4) {
              for (var o4 = [], c2 = 0, l2 = t4.length; c2 < l2; c2++) {
                var u2 = t4[c2++] << 8 | t4[c2], h2 = c2 >> 1;
                (u2 !== 0 || r4.has(h2)) && (o4[h2] = u2);
              }
              return o4;
            } }, { key: "extractWidths", value: function extractWidths(t4, r4, o4) {
              var c2, l2, u2, d2, m2, y2, v2, k2, _2 = this.xref, w2 = [], S2 = 0, C3 = [];
              if (o4.composite) {
                S2 = t4.has("DW") ? t4.get("DW") : 1e3;
                if (k2 = t4.get("W"))
                  for (l2 = 0, u2 = k2.length; l2 < u2; l2++) {
                    y2 = _2.fetchIfRef(k2[l2++]);
                    v2 = _2.fetchIfRef(k2[l2]);
                    if (Array.isArray(v2))
                      for (d2 = 0, m2 = v2.length; d2 < m2; d2++)
                        w2[y2++] = _2.fetchIfRef(v2[d2]);
                    else {
                      var x2 = _2.fetchIfRef(k2[++l2]);
                      for (d2 = y2; d2 <= v2; d2++)
                        w2[d2] = x2;
                    }
                  }
                if (o4.vertical) {
                  var O2 = t4.getArray("DW2") || [880, -1e3];
                  c2 = [O2[1], 0.5 * S2, O2[0]];
                  if (O2 = t4.get("W2"))
                    for (l2 = 0, u2 = O2.length; l2 < u2; l2++) {
                      y2 = _2.fetchIfRef(O2[l2++]);
                      v2 = _2.fetchIfRef(O2[l2]);
                      if (Array.isArray(v2))
                        for (d2 = 0, m2 = v2.length; d2 < m2; d2++)
                          C3[y2++] = [_2.fetchIfRef(v2[d2++]), _2.fetchIfRef(v2[d2++]), _2.fetchIfRef(v2[d2])];
                      else {
                        var T2 = [_2.fetchIfRef(O2[++l2]), _2.fetchIfRef(O2[++l2]), _2.fetchIfRef(O2[++l2])];
                        for (d2 = y2; d2 <= v2; d2++)
                          C3[d2] = T2;
                      }
                    }
                }
              } else {
                var E2 = o4.firstChar;
                if (k2 = t4.get("Widths")) {
                  d2 = E2;
                  for (l2 = 0, u2 = k2.length; l2 < u2; l2++)
                    w2[d2++] = _2.fetchIfRef(k2[l2]);
                  S2 = parseFloat(r4.get("MissingWidth")) || 0;
                } else {
                  var M2 = t4.get("BaseFont");
                  if (M2 instanceof h.Name) {
                    var R2 = this.getBaseFontMetrics(M2.name);
                    w2 = this.buildCharCodeToWidth(R2.widths, o4);
                    S2 = R2.defaultWidth;
                  }
                }
              }
              var D2 = true, j3 = S2;
              for (var L2 in w2) {
                var N2 = w2[L2];
                if (N2)
                  if (j3) {
                    if (j3 !== N2) {
                      D2 = false;
                      break;
                    }
                  } else
                    j3 = N2;
              }
              D2 && (o4.flags |= g.FontFlags.FixedPitch);
              o4.defaultWidth = S2;
              o4.widths = w2;
              o4.defaultVMetrics = c2;
              o4.vmetrics = C3;
            } }, { key: "isSerifFont", value: function isSerifFont(t4) {
              var r4 = t4.split("-")[0];
              return r4 in (0, y.getSerifFonts)() || r4.search(/serif/gi) !== -1;
            } }, { key: "getBaseFontMetrics", value: function getBaseFontMetrics(t4) {
              var r4 = 0, o4 = /* @__PURE__ */ Object.create(null), c2 = false, l2 = (0, y.getStdFontMap)()[t4] || t4, u2 = (0, L.getMetrics)();
              l2 in u2 || (l2 = this.isSerifFont(t4) ? "Times-Roman" : "Helvetica");
              var h2 = u2[l2];
              if (typeof h2 == "number") {
                r4 = h2;
                c2 = true;
              } else
                o4 = h2();
              return { defaultWidth: r4, monospace: c2, widths: o4 };
            } }, { key: "buildCharCodeToWidth", value: function buildCharCodeToWidth(t4, r4) {
              for (var o4 = /* @__PURE__ */ Object.create(null), c2 = r4.differences, l2 = r4.defaultEncoding, u2 = 0; u2 < 256; u2++)
                u2 in c2 && t4[c2[u2]] ? o4[u2] = t4[c2[u2]] : u2 in l2 && t4[l2[u2]] && (o4[u2] = t4[l2[u2]]);
              return o4;
            } }, { key: "preEvaluateFont", value: function preEvaluateFont(t4) {
              var r4 = t4, o4 = t4.get("Subtype");
              if (!(o4 instanceof h.Name))
                throw new l.FormatError("invalid font Subtype");
              var c2, u2, d2 = false;
              if (o4.name === "Type0") {
                var g2 = t4.get("DescendantFonts");
                if (!g2)
                  throw new l.FormatError("Descendant fonts are not specified");
                if (!((t4 = Array.isArray(g2) ? this.xref.fetchIfRef(g2[0]) : g2) instanceof h.Dict))
                  throw new l.FormatError("Descendant font is not a dictionary.");
                if (!((o4 = t4.get("Subtype")) instanceof h.Name))
                  throw new l.FormatError("invalid font Subtype");
                d2 = true;
              }
              var m2 = t4.get("FirstChar") || 0, y2 = t4.get("LastChar") || (d2 ? 65535 : 255), v2 = t4.get("FontDescriptor");
              if (v2) {
                c2 = new N.MurmurHash3_64();
                var k2 = r4.getRaw("Encoding");
                if (k2 instanceof h.Name)
                  c2.update(k2.name);
                else if (k2 instanceof h.Ref)
                  c2.update(k2.toString());
                else if (k2 instanceof h.Dict) {
                  var _2, w2 = _createForOfIteratorHelper(k2.getRawValues());
                  try {
                    for (w2.s(); !(_2 = w2.n()).done; ) {
                      var S2 = _2.value;
                      if (S2 instanceof h.Name)
                        c2.update(S2.name);
                      else if (S2 instanceof h.Ref)
                        c2.update(S2.toString());
                      else if (Array.isArray(S2)) {
                        for (var C3 = S2.length, x2 = new Array(C3), O2 = 0; O2 < C3; O2++) {
                          var E2 = S2[O2];
                          E2 instanceof h.Name ? x2[O2] = E2.name : (typeof E2 == "number" || E2 instanceof h.Ref) && (x2[O2] = E2.toString());
                        }
                        c2.update(x2.join());
                      }
                    }
                  } catch (t5) {
                    w2.e(t5);
                  } finally {
                    w2.f();
                  }
                }
                c2.update("".concat(m2, "-").concat(y2));
                if ((u2 = t4.get("ToUnicode") || r4.get("ToUnicode")) instanceof T.BaseStream) {
                  var M2 = u2.str || u2, R2 = M2.buffer ? new Uint8Array(M2.buffer.buffer, 0, M2.bufferLength) : new Uint8Array(M2.bytes.buffer, M2.start, M2.end - M2.start);
                  c2.update(R2);
                } else
                  u2 instanceof h.Name && c2.update(u2.name);
                var D2 = t4.get("Widths") || r4.get("Widths");
                if (Array.isArray(D2)) {
                  var j3, L2 = [], U2 = _createForOfIteratorHelper(D2);
                  try {
                    for (U2.s(); !(j3 = U2.n()).done; ) {
                      var H2 = j3.value;
                      (typeof H2 == "number" || H2 instanceof h.Ref) && L2.push(H2.toString());
                    }
                  } catch (t5) {
                    U2.e(t5);
                  } finally {
                    U2.f();
                  }
                  c2.update(L2.join());
                }
                if (d2) {
                  c2.update("compositeFont");
                  var $2 = t4.get("W") || r4.get("W");
                  if (Array.isArray($2)) {
                    var X2, q2 = [], G2 = _createForOfIteratorHelper($2);
                    try {
                      for (G2.s(); !(X2 = G2.n()).done; ) {
                        var z2 = X2.value;
                        if (typeof z2 == "number" || z2 instanceof h.Ref)
                          q2.push(z2.toString());
                        else if (Array.isArray(z2)) {
                          var W3, V2 = [], K2 = _createForOfIteratorHelper(z2);
                          try {
                            for (K2.s(); !(W3 = K2.n()).done; ) {
                              var Y2 = W3.value;
                              (typeof Y2 == "number" || Y2 instanceof h.Ref) && V2.push(Y2.toString());
                            }
                          } catch (t5) {
                            K2.e(t5);
                          } finally {
                            K2.f();
                          }
                          q2.push("[".concat(V2.join(), "]"));
                        }
                      }
                    } catch (t5) {
                      G2.e(t5);
                    } finally {
                      G2.f();
                    }
                    c2.update(q2.join());
                  }
                  var J2 = t4.getRaw("CIDToGIDMap") || r4.getRaw("CIDToGIDMap");
                  J2 instanceof h.Name ? c2.update(J2.name) : J2 instanceof h.Ref ? c2.update(J2.toString()) : J2 instanceof T.BaseStream && c2.update(J2.peekBytes());
                }
              }
              return { descriptor: v2, dict: t4, baseDict: r4, composite: d2, type: o4.name, firstChar: m2, lastChar: y2, toUnicode: u2, hash: c2 ? c2.hexdigest() : "" };
            } }, { key: "translateFont", value: (t3 = _asyncToGenerator(c.default.mark(function _callee9(t4) {
              var r4, o4, m2, v2, k2, w2, S2, C3, x2, T2, E2, M2, R2, D2, j3, L2, N2, U2, H2, $2, X2, q2, G2, z2, W3, V2, K2, Y2, J2, Z2, Q2, ee2, te, re, ae, ne = this;
              return c.default.wrap(function _callee9$(c2) {
                for (; ; )
                  switch (c2.prev = c2.next) {
                    case 0:
                      r4 = t4.descriptor, o4 = t4.dict, m2 = t4.baseDict, v2 = t4.composite, k2 = t4.type, w2 = t4.firstChar, S2 = t4.lastChar, C3 = t4.toUnicode, x2 = t4.cssFontInfo;
                      T2 = k2 === "Type3";
                      if (r4) {
                        c2.next = 27;
                        break;
                      }
                      if (!T2) {
                        c2.next = 9;
                        break;
                      }
                      (r4 = new h.Dict(null)).set("FontName", h.Name.get(k2));
                      r4.set("FontBBox", o4.getArray("FontBBox") || [0, 0, 0, 0]);
                      c2.next = 27;
                      break;
                    case 9:
                      if ((M2 = o4.get("BaseFont")) instanceof h.Name) {
                        c2.next = 12;
                        break;
                      }
                      throw new l.FormatError("Base font is not specified");
                    case 12:
                      M2 = M2.name.replace(/[,_]/g, "-");
                      R2 = this.getBaseFontMetrics(M2);
                      D2 = M2.split("-")[0];
                      j3 = (this.isSerifFont(D2) ? g.FontFlags.Serif : 0) | (R2.monospace ? g.FontFlags.FixedPitch : 0) | ((0, y.getSymbolsFonts)()[D2] ? g.FontFlags.Symbolic : g.FontFlags.Nonsymbolic);
                      E2 = { type: k2, name: M2, loadedName: m2.loadedName, widths: R2.widths, defaultWidth: R2.defaultWidth, isSimulatedFlags: true, flags: j3, firstChar: w2, lastChar: S2, toUnicode: C3, xHeight: 0, capHeight: 0, italicAngle: 0, isType3Font: T2 };
                      L2 = o4.get("Widths");
                      N2 = (0, y.getStandardFontName)(M2);
                      U2 = null;
                      if (!N2) {
                        c2.next = 26;
                        break;
                      }
                      E2.isStandardFont = true;
                      c2.next = 24;
                      return this.fetchStandardFontData(N2);
                    case 24:
                      U2 = c2.sent;
                      E2.isInternalFont = !!U2;
                    case 26:
                      return c2.abrupt("return", this.extractDataStructures(o4, o4, E2).then(function(t5) {
                        if (L2) {
                          for (var r5 = [], o5 = w2, c3 = 0, l2 = L2.length; c3 < l2; c3++)
                            r5[o5++] = ne.xref.fetchIfRef(L2[c3]);
                          t5.widths = r5;
                        } else
                          t5.widths = ne.buildCharCodeToWidth(R2.widths, t5);
                        return new d.Font(M2, U2, t5);
                      }));
                    case 27:
                      H2 = r4.get("FontName");
                      $2 = o4.get("BaseFont");
                      typeof H2 == "string" && (H2 = h.Name.get(H2));
                      typeof $2 == "string" && ($2 = h.Name.get($2));
                      if (!T2) {
                        X2 = H2 && H2.name;
                        q2 = $2 && $2.name;
                        if (X2 !== q2) {
                          (0, l.info)(`The FontDescriptor's FontName is "`.concat(X2, '" but ') + `should be the same as the Font's BaseFont "`.concat(q2, '".'));
                          X2 && q2 && q2.startsWith(X2) && (H2 = $2);
                        }
                      }
                      if ((H2 = H2 || $2) instanceof h.Name) {
                        c2.next = 35;
                        break;
                      }
                      throw new l.FormatError("invalid font name");
                    case 35:
                      c2.prev = 35;
                      G2 = r4.get("FontFile", "FontFile2", "FontFile3");
                      c2.next = 45;
                      break;
                    case 39:
                      c2.prev = 39;
                      c2.t0 = c2.catch(35);
                      if (this.options.ignoreErrors) {
                        c2.next = 43;
                        break;
                      }
                      throw c2.t0;
                    case 43:
                      (0, l.warn)('translateFont - fetching "'.concat(H2.name, '" font file: "').concat(c2.t0, '".'));
                      G2 = new O.NullStream();
                    case 45:
                      Y2 = false;
                      J2 = false;
                      Z2 = null;
                      if (!G2) {
                        c2.next = 52;
                        break;
                      }
                      if (G2.dict) {
                        (Q2 = G2.dict.get("Subtype")) instanceof h.Name && (z2 = Q2.name);
                        W3 = G2.dict.get("Length1");
                        V2 = G2.dict.get("Length2");
                        K2 = G2.dict.get("Length3");
                      }
                      c2.next = 74;
                      break;
                    case 52:
                      if (!x2) {
                        c2.next = 66;
                        break;
                      }
                      if (!(ee2 = (0, _.getXfaFontName)(H2.name))) {
                        c2.next = 64;
                        break;
                      }
                      x2.fontFamily = "".concat(x2.fontFamily, "-PdfJS-XFA");
                      x2.metrics = ee2.metrics || null;
                      Z2 = ee2.factors || null;
                      c2.next = 60;
                      return this.fetchStandardFontData(ee2.name);
                    case 60:
                      G2 = c2.sent;
                      J2 = !!G2;
                      m2 = o4 = (0, _.getXfaFontDict)(H2.name);
                      v2 = true;
                    case 64:
                      c2.next = 74;
                      break;
                    case 66:
                      if (T2) {
                        c2.next = 74;
                        break;
                      }
                      if (!(te = (0, y.getStandardFontName)(H2.name))) {
                        c2.next = 74;
                        break;
                      }
                      Y2 = true;
                      c2.next = 72;
                      return this.fetchStandardFontData(te);
                    case 72:
                      G2 = c2.sent;
                      J2 = !!G2;
                    case 74:
                      E2 = { type: k2, name: H2.name, subtype: z2, file: G2, length1: W3, length2: V2, length3: K2, isStandardFont: Y2, isInternalFont: J2, loadedName: m2.loadedName, composite: v2, fixedPitch: false, fontMatrix: o4.getArray("FontMatrix") || l.FONT_IDENTITY_MATRIX, firstChar: w2, lastChar: S2, toUnicode: C3, bbox: r4.getArray("FontBBox") || o4.getArray("FontBBox"), ascent: r4.get("Ascent"), descent: r4.get("Descent"), xHeight: r4.get("XHeight") || 0, capHeight: r4.get("CapHeight") || 0, flags: r4.get("Flags"), italicAngle: r4.get("ItalicAngle") || 0, isType3Font: T2, cssFontInfo: x2, scaleFactors: Z2 };
                      if (!v2) {
                        c2.next = 83;
                        break;
                      }
                      (re = m2.get("Encoding")) instanceof h.Name && (E2.cidEncoding = re.name);
                      c2.next = 80;
                      return u.CMapFactory.create({ encoding: re, fetchBuiltInCMap: this._fetchBuiltInCMapBound, useCMap: null });
                    case 80:
                      ae = c2.sent;
                      E2.cMap = ae;
                      E2.vertical = E2.cMap.vertical;
                    case 83:
                      return c2.abrupt("return", this.extractDataStructures(o4, m2, E2).then(function(t5) {
                        ne.extractWidths(o4, r4, t5);
                        return new d.Font(H2.name, G2, t5);
                      }));
                    case 84:
                    case "end":
                      return c2.stop();
                  }
              }, _callee9, this, [[35, 39]]);
            })), function translateFont(r4) {
              return t3.apply(this, arguments);
            }) }], [{ key: "buildFontPaths", value: function buildFontPaths(t4, r4, o4, c2) {
              function buildPath(r5) {
                var u3 = "".concat(t4.loadedName, "_path_").concat(r5);
                try {
                  if (t4.renderer.hasBuiltPath(r5))
                    return;
                  o4.send("commonobj", [u3, "FontPath", t4.renderer.getPathJs(r5)]);
                } catch (t5) {
                  if (c2.ignoreErrors) {
                    o4.send("UnsupportedFeature", { featureId: l.UNSUPPORTED_FEATURES.errorFontBuildPath });
                    (0, l.warn)("buildFontPaths - ignoring ".concat(u3, ' glyph: "').concat(t5, '".'));
                    return;
                  }
                  throw t5;
                }
              }
              var u2, h2 = _createForOfIteratorHelper(r4);
              try {
                for (h2.s(); !(u2 = h2.n()).done; ) {
                  var d2 = u2.value;
                  buildPath(d2.fontChar);
                  var g2 = d2.accent;
                  g2 && g2.fontChar && buildPath(g2.fontChar);
                }
              } catch (t5) {
                h2.e(t5);
              } finally {
                h2.f();
              }
            } }, { key: "fallbackFontDict", get: function get() {
              var t4 = new h.Dict();
              t4.set("BaseFont", h.Name.get("PDFJS-FallbackFont"));
              t4.set("Type", h.Name.get("FallbackType"));
              t4.set("Subtype", h.Name.get("FallbackType"));
              t4.set("Encoding", h.Name.get("WinAnsiEncoding"));
              return (0, l.shadow)(this, "fallbackFontDict", t4);
            } }]);
            var t3, r3, o3, C2, j2, W2, Q, ee;
            return PartialEvaluator;
          }();
          r2.PartialEvaluator = W;
          var V = function() {
            function TranslatedFont(t3) {
              var r3 = t3.loadedName, o3 = t3.font, c2 = t3.dict, l2 = t3.evaluatorOptions;
              _classCallCheck(this, TranslatedFont);
              this.loadedName = r3;
              this.font = o3;
              this.dict = c2;
              this._evaluatorOptions = l2 || $;
              this.type3Loaded = null;
              this.type3Dependencies = o3.isType3Font ? /* @__PURE__ */ new Set() : null;
              this.sent = false;
            }
            _createClass(TranslatedFont, [{ key: "send", value: function send(t3) {
              if (!this.sent) {
                this.sent = true;
                t3.send("commonobj", [this.loadedName, "Font", this.font.exportData(this._evaluatorOptions.fontExtraProperties)]);
              }
            } }, { key: "fallback", value: function fallback(t3) {
              if (this.font.data) {
                this.font.disableFontFace = true;
                W.buildFontPaths(this.font, this.font.glyphCacheValues, t3, this._evaluatorOptions);
              }
            } }, { key: "loadType3Data", value: function loadType3Data(t3, r3, o3) {
              var c2 = this;
              if (this.type3Loaded)
                return this.type3Loaded;
              if (!this.font.isType3Font)
                throw new Error("Must be a Type3 font.");
              var u2 = t3.clone({ ignoreErrors: false });
              u2.parsingType3Font = true;
              var d2 = new h.RefSet(t3.type3FontRefs);
              this.dict.objId && !d2.has(this.dict.objId) && d2.put(this.dict.objId);
              u2.type3FontRefs = d2;
              var g2, m2 = this.font, y2 = this.type3Dependencies, v2 = Promise.resolve(), k2 = this.dict.get("CharProcs"), _2 = this.dict.get("Resources") || r3, w2 = /* @__PURE__ */ Object.create(null), S2 = !m2.bbox || (0, l.isArrayEqual)(m2.bbox, [0, 0, 0, 0]), C2 = _createForOfIteratorHelper(k2.getKeys());
              try {
                var x2 = function _loop2() {
                  var t4 = g2.value;
                  v2 = v2.then(function() {
                    var r4 = k2.get(t4), h2 = new U.OperatorList();
                    return u2.getOperatorList({ stream: r4, task: o3, resources: _2, operatorList: h2 }).then(function() {
                      h2.fnArray[0] === l.OPS.setCharWidthAndBounds && c2._removeType3ColorOperators(h2, S2);
                      w2[t4] = h2.getIR();
                      var r5, o4 = _createForOfIteratorHelper(h2.dependencies);
                      try {
                        for (o4.s(); !(r5 = o4.n()).done; ) {
                          var u3 = r5.value;
                          y2.add(u3);
                        }
                      } catch (t5) {
                        o4.e(t5);
                      } finally {
                        o4.f();
                      }
                    }).catch(function(r5) {
                      (0, l.warn)('Type3 font resource "'.concat(t4, '" is not available.'));
                      var o4 = new U.OperatorList();
                      w2[t4] = o4.getIR();
                    });
                  });
                };
                for (C2.s(); !(g2 = C2.n()).done; )
                  x2();
              } catch (t4) {
                C2.e(t4);
              } finally {
                C2.f();
              }
              this.type3Loaded = v2.then(function() {
                m2.charProcOperatorList = w2;
                if (c2._bbox) {
                  m2.isCharBBox = true;
                  m2.bbox = c2._bbox;
                }
              });
              return this.type3Loaded;
            } }, { key: "_removeType3ColorOperators", value: function _removeType3ColorOperators(t3) {
              var r3 = arguments.length > 1 && arguments[1] !== void 0 && arguments[1];
              if (r3) {
                this._bbox || (this._bbox = [1 / 0, 1 / 0, -1 / 0, -1 / 0]);
                var o3 = l.Util.normalizeRect(t3.argsArray[0].slice(2));
                this._bbox[0] = Math.min(this._bbox[0], o3[0]);
                this._bbox[1] = Math.min(this._bbox[1], o3[1]);
                this._bbox[2] = Math.max(this._bbox[2], o3[2]);
                this._bbox[3] = Math.max(this._bbox[3], o3[3]);
              }
              for (var c2 = 1, u2 = t3.length; c2 < u2; ) {
                switch (t3.fnArray[c2]) {
                  case l.OPS.setStrokeColorSpace:
                  case l.OPS.setFillColorSpace:
                  case l.OPS.setStrokeColor:
                  case l.OPS.setStrokeColorN:
                  case l.OPS.setFillColor:
                  case l.OPS.setFillColorN:
                  case l.OPS.setStrokeGray:
                  case l.OPS.setFillGray:
                  case l.OPS.setStrokeRGBColor:
                  case l.OPS.setFillRGBColor:
                  case l.OPS.setStrokeCMYKColor:
                  case l.OPS.setFillCMYKColor:
                  case l.OPS.shadingFill:
                  case l.OPS.setRenderingIntent:
                    t3.fnArray.splice(c2, 1);
                    t3.argsArray.splice(c2, 1);
                    u2--;
                    continue;
                  case l.OPS.setGState:
                    for (var h2 = _slicedToArray(t3.argsArray[c2], 1), d2 = h2[0], g2 = 0, m2 = d2.length; g2 < m2; ) {
                      var y2 = _slicedToArray(d2[g2], 1), v2 = y2[0];
                      switch (v2) {
                        case "TR":
                        case "TR2":
                        case "HT":
                        case "BG":
                        case "BG2":
                        case "UCR":
                        case "UCR2":
                          d2.splice(g2, 1);
                          m2--;
                          continue;
                      }
                      g2++;
                    }
                }
                c2++;
              }
            } }]);
            return TranslatedFont;
          }(), K = function() {
            function StateManager() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : new J();
              _classCallCheck(this, StateManager);
              this.state = t3;
              this.stateStack = [];
            }
            _createClass(StateManager, [{ key: "save", value: function save() {
              var t3 = this.state;
              this.stateStack.push(this.state);
              this.state = t3.clone();
            } }, { key: "restore", value: function restore() {
              var t3 = this.stateStack.pop();
              t3 && (this.state = t3);
            } }, { key: "transform", value: function transform(t3) {
              this.state.ctm = l.Util.transform(this.state.ctm, t3);
            } }]);
            return StateManager;
          }(), Y = function() {
            function TextState() {
              _classCallCheck(this, TextState);
              this.ctm = new Float32Array(l.IDENTITY_MATRIX);
              this.fontName = null;
              this.fontSize = 0;
              this.font = null;
              this.fontMatrix = l.FONT_IDENTITY_MATRIX;
              this.textMatrix = l.IDENTITY_MATRIX.slice();
              this.textLineMatrix = l.IDENTITY_MATRIX.slice();
              this.charSpacing = 0;
              this.wordSpacing = 0;
              this.leading = 0;
              this.textHScale = 1;
              this.textRise = 0;
            }
            _createClass(TextState, [{ key: "setTextMatrix", value: function setTextMatrix(t3, r3, o3, c2, l2, u2) {
              var h2 = this.textMatrix;
              h2[0] = t3;
              h2[1] = r3;
              h2[2] = o3;
              h2[3] = c2;
              h2[4] = l2;
              h2[5] = u2;
            } }, { key: "setTextLineMatrix", value: function setTextLineMatrix(t3, r3, o3, c2, l2, u2) {
              var h2 = this.textLineMatrix;
              h2[0] = t3;
              h2[1] = r3;
              h2[2] = o3;
              h2[3] = c2;
              h2[4] = l2;
              h2[5] = u2;
            } }, { key: "translateTextMatrix", value: function translateTextMatrix(t3, r3) {
              var o3 = this.textMatrix;
              o3[4] = o3[0] * t3 + o3[2] * r3 + o3[4];
              o3[5] = o3[1] * t3 + o3[3] * r3 + o3[5];
            } }, { key: "translateTextLineMatrix", value: function translateTextLineMatrix(t3, r3) {
              var o3 = this.textLineMatrix;
              o3[4] = o3[0] * t3 + o3[2] * r3 + o3[4];
              o3[5] = o3[1] * t3 + o3[3] * r3 + o3[5];
            } }, { key: "carriageReturn", value: function carriageReturn() {
              this.translateTextLineMatrix(0, -this.leading);
              this.textMatrix = this.textLineMatrix.slice();
            } }, { key: "clone", value: function clone() {
              var clone2 = Object.create(this);
              clone2.textMatrix = this.textMatrix.slice();
              clone2.textLineMatrix = this.textLineMatrix.slice();
              clone2.fontMatrix = this.fontMatrix.slice();
              return clone2;
            } }]);
            return TextState;
          }(), J = function() {
            function EvalState() {
              _classCallCheck(this, EvalState);
              this.ctm = new Float32Array(l.IDENTITY_MATRIX);
              this.font = null;
              this.textRenderingMode = l.TextRenderingMode.FILL;
              this.fillColorSpace = M.ColorSpace.singletons.gray;
              this.strokeColorSpace = M.ColorSpace.singletons.gray;
            }
            _createClass(EvalState, [{ key: "clone", value: function clone() {
              return Object.create(this);
            } }]);
            return EvalState;
          }(), Z = function() {
            function EvaluatorPreprocessor(t3, r3) {
              var o3 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : new K();
              _classCallCheck(this, EvaluatorPreprocessor);
              this.parser = new C.Parser({ lexer: new C.Lexer(t3, EvaluatorPreprocessor.opMap), xref: r3 });
              this.stateManager = o3;
              this.nonProcessedArgs = [];
              this._numInvalidPathOPS = 0;
            }
            _createClass(EvaluatorPreprocessor, [{ key: "savedStatesDepth", get: function get() {
              return this.stateManager.stateStack.length;
            } }, { key: "read", value: function read(t3) {
              for (var r3 = t3.args; ; ) {
                var o3 = this.parser.getObj();
                if (o3 instanceof h.Cmd) {
                  var c2 = o3.cmd, u2 = EvaluatorPreprocessor.opMap[c2];
                  if (!u2) {
                    (0, l.warn)('Unknown command "'.concat(c2, '".'));
                    continue;
                  }
                  var d2 = u2.id, g2 = u2.numArgs, m2 = r3 !== null ? r3.length : 0;
                  if (u2.variableArgs)
                    m2 > g2 && (0, l.info)("Command ".concat(c2, ": expected [0, ").concat(g2, "] args, ") + "but received ".concat(m2, " args."));
                  else {
                    if (m2 !== g2) {
                      for (var y2 = this.nonProcessedArgs; m2 > g2; ) {
                        y2.push(r3.shift());
                        m2--;
                      }
                      for (; m2 < g2 && y2.length !== 0; ) {
                        r3 === null && (r3 = []);
                        r3.unshift(y2.pop());
                        m2++;
                      }
                    }
                    if (m2 < g2) {
                      var v2 = "command ".concat(c2, ": expected ").concat(g2, " args, ") + "but received ".concat(m2, " args.");
                      if (d2 >= l.OPS.moveTo && d2 <= l.OPS.endPath && ++this._numInvalidPathOPS > EvaluatorPreprocessor.MAX_INVALID_PATH_OPS)
                        throw new l.FormatError("Invalid ".concat(v2));
                      (0, l.warn)("Skipping ".concat(v2));
                      r3 !== null && (r3.length = 0);
                      continue;
                    }
                  }
                  this.preprocessCommand(d2, r3);
                  t3.fn = d2;
                  t3.args = r3;
                  return true;
                }
                if (o3 === h.EOF)
                  return false;
                if (o3 !== null) {
                  r3 === null && (r3 = []);
                  r3.push(o3);
                  if (r3.length > 33)
                    throw new l.FormatError("Too many arguments");
                }
              }
            } }, { key: "preprocessCommand", value: function preprocessCommand(t3, r3) {
              switch (0 | t3) {
                case l.OPS.save:
                  this.stateManager.save();
                  break;
                case l.OPS.restore:
                  this.stateManager.restore();
                  break;
                case l.OPS.transform:
                  this.stateManager.transform(r3);
              }
            } }], [{ key: "opMap", get: function get() {
              var t3 = (0, j.getLookupTableFactory)(function(t4) {
                t4.w = { id: l.OPS.setLineWidth, numArgs: 1, variableArgs: false };
                t4.J = { id: l.OPS.setLineCap, numArgs: 1, variableArgs: false };
                t4.j = { id: l.OPS.setLineJoin, numArgs: 1, variableArgs: false };
                t4.M = { id: l.OPS.setMiterLimit, numArgs: 1, variableArgs: false };
                t4.d = { id: l.OPS.setDash, numArgs: 2, variableArgs: false };
                t4.ri = { id: l.OPS.setRenderingIntent, numArgs: 1, variableArgs: false };
                t4.i = { id: l.OPS.setFlatness, numArgs: 1, variableArgs: false };
                t4.gs = { id: l.OPS.setGState, numArgs: 1, variableArgs: false };
                t4.q = { id: l.OPS.save, numArgs: 0, variableArgs: false };
                t4.Q = { id: l.OPS.restore, numArgs: 0, variableArgs: false };
                t4.cm = { id: l.OPS.transform, numArgs: 6, variableArgs: false };
                t4.m = { id: l.OPS.moveTo, numArgs: 2, variableArgs: false };
                t4.l = { id: l.OPS.lineTo, numArgs: 2, variableArgs: false };
                t4.c = { id: l.OPS.curveTo, numArgs: 6, variableArgs: false };
                t4.v = { id: l.OPS.curveTo2, numArgs: 4, variableArgs: false };
                t4.y = { id: l.OPS.curveTo3, numArgs: 4, variableArgs: false };
                t4.h = { id: l.OPS.closePath, numArgs: 0, variableArgs: false };
                t4.re = { id: l.OPS.rectangle, numArgs: 4, variableArgs: false };
                t4.S = { id: l.OPS.stroke, numArgs: 0, variableArgs: false };
                t4.s = { id: l.OPS.closeStroke, numArgs: 0, variableArgs: false };
                t4.f = { id: l.OPS.fill, numArgs: 0, variableArgs: false };
                t4.F = { id: l.OPS.fill, numArgs: 0, variableArgs: false };
                t4["f*"] = { id: l.OPS.eoFill, numArgs: 0, variableArgs: false };
                t4.B = { id: l.OPS.fillStroke, numArgs: 0, variableArgs: false };
                t4["B*"] = { id: l.OPS.eoFillStroke, numArgs: 0, variableArgs: false };
                t4.b = { id: l.OPS.closeFillStroke, numArgs: 0, variableArgs: false };
                t4["b*"] = { id: l.OPS.closeEOFillStroke, numArgs: 0, variableArgs: false };
                t4.n = { id: l.OPS.endPath, numArgs: 0, variableArgs: false };
                t4.W = { id: l.OPS.clip, numArgs: 0, variableArgs: false };
                t4["W*"] = { id: l.OPS.eoClip, numArgs: 0, variableArgs: false };
                t4.BT = { id: l.OPS.beginText, numArgs: 0, variableArgs: false };
                t4.ET = { id: l.OPS.endText, numArgs: 0, variableArgs: false };
                t4.Tc = { id: l.OPS.setCharSpacing, numArgs: 1, variableArgs: false };
                t4.Tw = { id: l.OPS.setWordSpacing, numArgs: 1, variableArgs: false };
                t4.Tz = { id: l.OPS.setHScale, numArgs: 1, variableArgs: false };
                t4.TL = { id: l.OPS.setLeading, numArgs: 1, variableArgs: false };
                t4.Tf = { id: l.OPS.setFont, numArgs: 2, variableArgs: false };
                t4.Tr = { id: l.OPS.setTextRenderingMode, numArgs: 1, variableArgs: false };
                t4.Ts = { id: l.OPS.setTextRise, numArgs: 1, variableArgs: false };
                t4.Td = { id: l.OPS.moveText, numArgs: 2, variableArgs: false };
                t4.TD = { id: l.OPS.setLeadingMoveText, numArgs: 2, variableArgs: false };
                t4.Tm = { id: l.OPS.setTextMatrix, numArgs: 6, variableArgs: false };
                t4["T*"] = { id: l.OPS.nextLine, numArgs: 0, variableArgs: false };
                t4.Tj = { id: l.OPS.showText, numArgs: 1, variableArgs: false };
                t4.TJ = { id: l.OPS.showSpacedText, numArgs: 1, variableArgs: false };
                t4["'"] = { id: l.OPS.nextLineShowText, numArgs: 1, variableArgs: false };
                t4['"'] = { id: l.OPS.nextLineSetSpacingShowText, numArgs: 3, variableArgs: false };
                t4.d0 = { id: l.OPS.setCharWidth, numArgs: 2, variableArgs: false };
                t4.d1 = { id: l.OPS.setCharWidthAndBounds, numArgs: 6, variableArgs: false };
                t4.CS = { id: l.OPS.setStrokeColorSpace, numArgs: 1, variableArgs: false };
                t4.cs = { id: l.OPS.setFillColorSpace, numArgs: 1, variableArgs: false };
                t4.SC = { id: l.OPS.setStrokeColor, numArgs: 4, variableArgs: true };
                t4.SCN = { id: l.OPS.setStrokeColorN, numArgs: 33, variableArgs: true };
                t4.sc = { id: l.OPS.setFillColor, numArgs: 4, variableArgs: true };
                t4.scn = { id: l.OPS.setFillColorN, numArgs: 33, variableArgs: true };
                t4.G = { id: l.OPS.setStrokeGray, numArgs: 1, variableArgs: false };
                t4.g = { id: l.OPS.setFillGray, numArgs: 1, variableArgs: false };
                t4.RG = { id: l.OPS.setStrokeRGBColor, numArgs: 3, variableArgs: false };
                t4.rg = { id: l.OPS.setFillRGBColor, numArgs: 3, variableArgs: false };
                t4.K = { id: l.OPS.setStrokeCMYKColor, numArgs: 4, variableArgs: false };
                t4.k = { id: l.OPS.setFillCMYKColor, numArgs: 4, variableArgs: false };
                t4.sh = { id: l.OPS.shadingFill, numArgs: 1, variableArgs: false };
                t4.BI = { id: l.OPS.beginInlineImage, numArgs: 0, variableArgs: false };
                t4.ID = { id: l.OPS.beginImageData, numArgs: 0, variableArgs: false };
                t4.EI = { id: l.OPS.endInlineImage, numArgs: 1, variableArgs: false };
                t4.Do = { id: l.OPS.paintXObject, numArgs: 1, variableArgs: false };
                t4.MP = { id: l.OPS.markPoint, numArgs: 1, variableArgs: false };
                t4.DP = { id: l.OPS.markPointProps, numArgs: 2, variableArgs: false };
                t4.BMC = { id: l.OPS.beginMarkedContent, numArgs: 1, variableArgs: false };
                t4.BDC = { id: l.OPS.beginMarkedContentProps, numArgs: 2, variableArgs: false };
                t4.EMC = { id: l.OPS.endMarkedContent, numArgs: 0, variableArgs: false };
                t4.BX = { id: l.OPS.beginCompat, numArgs: 0, variableArgs: false };
                t4.EX = { id: l.OPS.endCompat, numArgs: 0, variableArgs: false };
                t4.BM = null;
                t4.BD = null;
                t4.true = null;
                t4.fa = null;
                t4.fal = null;
                t4.fals = null;
                t4.false = null;
                t4.nu = null;
                t4.nul = null;
                t4.null = null;
              });
              return (0, l.shadow)(this, "opMap", t3());
            } }, { key: "MAX_INVALID_PATH_OPS", get: function get() {
              return (0, l.shadow)(this, "MAX_INVALID_PATH_OPS", 10);
            } }]);
            return EvaluatorPreprocessor;
          }();
          r2.EvaluatorPreprocessor = Z;
        }, (t2, r2, o2) => {
          "use strict";
          function _typeof(t3) {
            return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t4) {
              return typeof t4;
            } : function(t4) {
              return t4 && typeof Symbol == "function" && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
            }, _typeof(t3);
          }
          Object.defineProperty(r2, "__esModule", { value: true });
          r2.IdentityCMap = r2.CMapFactory = r2.CMap = void 0;
          var c = function _interopRequireDefault(t3) {
            return t3 && t3.__esModule ? t3 : { default: t3 };
          }(o2(2)), l = o2(4), u = o2(158), h = o2(162), d = o2(180), g = o2(161), m = o2(163);
          function asyncGeneratorStep(t3, r3, o3, c2, l2, u2, h2) {
            try {
              var d2 = t3[u2](h2), g2 = d2.value;
            } catch (t4) {
              o3(t4);
              return;
            }
            d2.done ? r3(g2) : Promise.resolve(g2).then(c2, l2);
          }
          function _asyncToGenerator(t3) {
            return function() {
              var r3 = this, o3 = arguments;
              return new Promise(function(c2, l2) {
                var u2 = t3.apply(r3, o3);
                function _next(t4) {
                  asyncGeneratorStep(u2, c2, l2, _next, _throw, "next", t4);
                }
                function _throw(t4) {
                  asyncGeneratorStep(u2, c2, l2, _next, _throw, "throw", t4);
                }
                _next(void 0);
              });
            };
          }
          function _setPrototypeOf(t3, r3) {
            _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(t4, r4) {
              t4.__proto__ = r4;
              return t4;
            };
            return _setPrototypeOf(t3, r3);
          }
          function _createSuper(t3) {
            var r3 = function _isNativeReflectConstruct() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                }));
                return true;
              } catch (t4) {
                return false;
              }
            }();
            return function _createSuperInternal() {
              var o3, c2 = _getPrototypeOf(t3);
              if (r3) {
                var l2 = _getPrototypeOf(this).constructor;
                o3 = Reflect.construct(c2, arguments, l2);
              } else
                o3 = c2.apply(this, arguments);
              return _possibleConstructorReturn(this, o3);
            };
          }
          function _possibleConstructorReturn(t3, r3) {
            if (r3 && (_typeof(r3) === "object" || typeof r3 == "function"))
              return r3;
            if (r3 !== void 0)
              throw new TypeError("Derived constructors may only return object or undefined");
            return function _assertThisInitialized(t4) {
              if (t4 === void 0)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return t4;
            }(t3);
          }
          function _getPrototypeOf(t3) {
            _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(t4) {
              return t4.__proto__ || Object.getPrototypeOf(t4);
            };
            return _getPrototypeOf(t3);
          }
          function _classCallCheck(t3, r3) {
            if (!(t3 instanceof r3))
              throw new TypeError("Cannot call a class as a function");
          }
          function _defineProperties(t3, r3) {
            for (var o3 = 0; o3 < r3.length; o3++) {
              var c2 = r3[o3];
              c2.enumerable = c2.enumerable || false;
              c2.configurable = true;
              "value" in c2 && (c2.writable = true);
              Object.defineProperty(t3, c2.key, c2);
            }
          }
          function _createClass(t3, r3, o3) {
            r3 && _defineProperties(t3.prototype, r3);
            o3 && _defineProperties(t3, o3);
            Object.defineProperty(t3, "prototype", { writable: false });
            return t3;
          }
          var y = ["Adobe-GB1-UCS2", "Adobe-CNS1-UCS2", "Adobe-Japan1-UCS2", "Adobe-Korea1-UCS2", "78-EUC-H", "78-EUC-V", "78-H", "78-RKSJ-H", "78-RKSJ-V", "78-V", "78ms-RKSJ-H", "78ms-RKSJ-V", "83pv-RKSJ-H", "90ms-RKSJ-H", "90ms-RKSJ-V", "90msp-RKSJ-H", "90msp-RKSJ-V", "90pv-RKSJ-H", "90pv-RKSJ-V", "Add-H", "Add-RKSJ-H", "Add-RKSJ-V", "Add-V", "Adobe-CNS1-0", "Adobe-CNS1-1", "Adobe-CNS1-2", "Adobe-CNS1-3", "Adobe-CNS1-4", "Adobe-CNS1-5", "Adobe-CNS1-6", "Adobe-GB1-0", "Adobe-GB1-1", "Adobe-GB1-2", "Adobe-GB1-3", "Adobe-GB1-4", "Adobe-GB1-5", "Adobe-Japan1-0", "Adobe-Japan1-1", "Adobe-Japan1-2", "Adobe-Japan1-3", "Adobe-Japan1-4", "Adobe-Japan1-5", "Adobe-Japan1-6", "Adobe-Korea1-0", "Adobe-Korea1-1", "Adobe-Korea1-2", "B5-H", "B5-V", "B5pc-H", "B5pc-V", "CNS-EUC-H", "CNS-EUC-V", "CNS1-H", "CNS1-V", "CNS2-H", "CNS2-V", "ETHK-B5-H", "ETHK-B5-V", "ETen-B5-H", "ETen-B5-V", "ETenms-B5-H", "ETenms-B5-V", "EUC-H", "EUC-V", "Ext-H", "Ext-RKSJ-H", "Ext-RKSJ-V", "Ext-V", "GB-EUC-H", "GB-EUC-V", "GB-H", "GB-V", "GBK-EUC-H", "GBK-EUC-V", "GBK2K-H", "GBK2K-V", "GBKp-EUC-H", "GBKp-EUC-V", "GBT-EUC-H", "GBT-EUC-V", "GBT-H", "GBT-V", "GBTpc-EUC-H", "GBTpc-EUC-V", "GBpc-EUC-H", "GBpc-EUC-V", "H", "HKdla-B5-H", "HKdla-B5-V", "HKdlb-B5-H", "HKdlb-B5-V", "HKgccs-B5-H", "HKgccs-B5-V", "HKm314-B5-H", "HKm314-B5-V", "HKm471-B5-H", "HKm471-B5-V", "HKscs-B5-H", "HKscs-B5-V", "Hankaku", "Hiragana", "KSC-EUC-H", "KSC-EUC-V", "KSC-H", "KSC-Johab-H", "KSC-Johab-V", "KSC-V", "KSCms-UHC-H", "KSCms-UHC-HW-H", "KSCms-UHC-HW-V", "KSCms-UHC-V", "KSCpc-EUC-H", "KSCpc-EUC-V", "Katakana", "NWP-H", "NWP-V", "RKSJ-H", "RKSJ-V", "Roman", "UniCNS-UCS2-H", "UniCNS-UCS2-V", "UniCNS-UTF16-H", "UniCNS-UTF16-V", "UniCNS-UTF32-H", "UniCNS-UTF32-V", "UniCNS-UTF8-H", "UniCNS-UTF8-V", "UniGB-UCS2-H", "UniGB-UCS2-V", "UniGB-UTF16-H", "UniGB-UTF16-V", "UniGB-UTF32-H", "UniGB-UTF32-V", "UniGB-UTF8-H", "UniGB-UTF8-V", "UniJIS-UCS2-H", "UniJIS-UCS2-HW-H", "UniJIS-UCS2-HW-V", "UniJIS-UCS2-V", "UniJIS-UTF16-H", "UniJIS-UTF16-V", "UniJIS-UTF32-H", "UniJIS-UTF32-V", "UniJIS-UTF8-H", "UniJIS-UTF8-V", "UniJIS2004-UTF16-H", "UniJIS2004-UTF16-V", "UniJIS2004-UTF32-H", "UniJIS2004-UTF32-V", "UniJIS2004-UTF8-H", "UniJIS2004-UTF8-V", "UniJISPro-UCS2-HW-V", "UniJISPro-UCS2-V", "UniJISPro-UTF8-V", "UniJISX0213-UTF32-H", "UniJISX0213-UTF32-V", "UniJISX02132004-UTF32-H", "UniJISX02132004-UTF32-V", "UniKS-UCS2-H", "UniKS-UCS2-V", "UniKS-UTF16-H", "UniKS-UTF16-V", "UniKS-UTF32-H", "UniKS-UTF32-V", "UniKS-UTF8-H", "UniKS-UTF8-V", "V", "WP-Symbol"], v = Math.pow(2, 24) - 1, k = function() {
            function CMap() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 && arguments[0];
              _classCallCheck(this, CMap);
              this.codespaceRanges = [[], [], [], []];
              this.numCodespaceRanges = 0;
              this._map = [];
              this.name = "";
              this.vertical = false;
              this.useCMap = null;
              this.builtInCMap = t3;
            }
            _createClass(CMap, [{ key: "addCodespaceRange", value: function addCodespaceRange(t3, r3, o3) {
              this.codespaceRanges[t3 - 1].push(r3, o3);
              this.numCodespaceRanges++;
            } }, { key: "mapCidRange", value: function mapCidRange(t3, r3, o3) {
              if (r3 - t3 > v)
                throw new Error("mapCidRange - ignoring data above MAX_MAP_RANGE.");
              for (; t3 <= r3; )
                this._map[t3++] = o3++;
            } }, { key: "mapBfRange", value: function mapBfRange(t3, r3, o3) {
              if (r3 - t3 > v)
                throw new Error("mapBfRange - ignoring data above MAX_MAP_RANGE.");
              for (var c2 = o3.length - 1; t3 <= r3; ) {
                this._map[t3++] = o3;
                var l2 = o3.charCodeAt(c2) + 1;
                l2 > 255 ? o3 = o3.substring(0, c2 - 1) + String.fromCharCode(o3.charCodeAt(c2 - 1) + 1) + "\0" : o3 = o3.substring(0, c2) + String.fromCharCode(l2);
              }
            } }, { key: "mapBfRangeToArray", value: function mapBfRangeToArray(t3, r3, o3) {
              if (r3 - t3 > v)
                throw new Error("mapBfRangeToArray - ignoring data above MAX_MAP_RANGE.");
              for (var c2 = o3.length, l2 = 0; t3 <= r3 && l2 < c2; ) {
                this._map[t3] = o3[l2++];
                ++t3;
              }
            } }, { key: "mapOne", value: function mapOne(t3, r3) {
              this._map[t3] = r3;
            } }, { key: "lookup", value: function lookup(t3) {
              return this._map[t3];
            } }, { key: "contains", value: function contains(t3) {
              return this._map[t3] !== void 0;
            } }, { key: "forEach", value: function forEach(t3) {
              var r3 = this._map, o3 = r3.length;
              if (o3 <= 65536)
                for (var c2 = 0; c2 < o3; c2++)
                  r3[c2] !== void 0 && t3(c2, r3[c2]);
              else
                for (var l2 in r3)
                  t3(l2, r3[l2]);
            } }, { key: "charCodeOf", value: function charCodeOf(t3) {
              var r3 = this._map;
              if (r3.length <= 65536)
                return r3.indexOf(t3);
              for (var o3 in r3)
                if (r3[o3] === t3)
                  return 0 | o3;
              return -1;
            } }, { key: "getMap", value: function getMap() {
              return this._map;
            } }, { key: "readCharCode", value: function readCharCode(t3, r3, o3) {
              for (var c2 = 0, l2 = this.codespaceRanges, u2 = 0, h2 = l2.length; u2 < h2; u2++) {
                c2 = (c2 << 8 | t3.charCodeAt(r3 + u2)) >>> 0;
                for (var d2 = l2[u2], g2 = 0, m2 = d2.length; g2 < m2; ) {
                  var y2 = d2[g2++], v2 = d2[g2++];
                  if (c2 >= y2 && c2 <= v2) {
                    o3.charcode = c2;
                    o3.length = u2 + 1;
                    return;
                  }
                }
              }
              o3.charcode = 0;
              o3.length = 1;
            } }, { key: "getCharCodeLength", value: function getCharCodeLength(t3) {
              for (var r3 = this.codespaceRanges, o3 = 0, c2 = r3.length; o3 < c2; o3++)
                for (var l2 = r3[o3], u2 = 0, h2 = l2.length; u2 < h2; ) {
                  var d2 = l2[u2++], g2 = l2[u2++];
                  if (t3 >= d2 && t3 <= g2)
                    return o3 + 1;
                }
              return 1;
            } }, { key: "length", get: function get() {
              return this._map.length;
            } }, { key: "isIdentityCMap", get: function get() {
              if (this.name !== "Identity-H" && this.name !== "Identity-V")
                return false;
              if (this._map.length !== 65536)
                return false;
              for (var t3 = 0; t3 < 65536; t3++)
                if (this._map[t3] !== t3)
                  return false;
              return true;
            } }]);
            return CMap;
          }();
          r2.CMap = k;
          var _ = function(t3) {
            !function _inherits(t4, r4) {
              if (typeof r4 != "function" && r4 !== null)
                throw new TypeError("Super expression must either be null or a function");
              t4.prototype = Object.create(r4 && r4.prototype, { constructor: { value: t4, writable: true, configurable: true } });
              Object.defineProperty(t4, "prototype", { writable: false });
              r4 && _setPrototypeOf(t4, r4);
            }(IdentityCMap, t3);
            var r3 = _createSuper(IdentityCMap);
            function IdentityCMap(t4, o3) {
              var c2;
              _classCallCheck(this, IdentityCMap);
              (c2 = r3.call(this)).vertical = t4;
              c2.addCodespaceRange(o3, 0, 65535);
              return c2;
            }
            _createClass(IdentityCMap, [{ key: "mapCidRange", value: function mapCidRange(t4, r4, o3) {
              (0, l.unreachable)("should not call mapCidRange");
            } }, { key: "mapBfRange", value: function mapBfRange(t4, r4, o3) {
              (0, l.unreachable)("should not call mapBfRange");
            } }, { key: "mapBfRangeToArray", value: function mapBfRangeToArray(t4, r4, o3) {
              (0, l.unreachable)("should not call mapBfRangeToArray");
            } }, { key: "mapOne", value: function mapOne(t4, r4) {
              (0, l.unreachable)("should not call mapCidOne");
            } }, { key: "lookup", value: function lookup(t4) {
              return Number.isInteger(t4) && t4 <= 65535 ? t4 : void 0;
            } }, { key: "contains", value: function contains(t4) {
              return Number.isInteger(t4) && t4 <= 65535;
            } }, { key: "forEach", value: function forEach(t4) {
              for (var r4 = 0; r4 <= 65535; r4++)
                t4(r4, r4);
            } }, { key: "charCodeOf", value: function charCodeOf(t4) {
              return Number.isInteger(t4) && t4 <= 65535 ? t4 : -1;
            } }, { key: "getMap", value: function getMap() {
              for (var t4 = new Array(65536), r4 = 0; r4 <= 65535; r4++)
                t4[r4] = r4;
              return t4;
            } }, { key: "length", get: function get() {
              return 65536;
            } }, { key: "isIdentityCMap", get: function get() {
              (0, l.unreachable)("should not access .isIdentityCMap");
            } }]);
            return IdentityCMap;
          }(k);
          r2.IdentityCMap = _;
          var w = function BinaryCMapReaderClosure() {
            function hexToInt(t4, r4) {
              for (var o4 = 0, c2 = 0; c2 <= r4; c2++)
                o4 = o4 << 8 | t4[c2];
              return o4 >>> 0;
            }
            function hexToStr(t4, r4) {
              return r4 === 1 ? String.fromCharCode(t4[0], t4[1]) : r4 === 3 ? String.fromCharCode(t4[0], t4[1], t4[2], t4[3]) : String.fromCharCode.apply(null, t4.subarray(0, r4 + 1));
            }
            function addHex(t4, r4, o4) {
              for (var c2 = 0, l2 = o4; l2 >= 0; l2--) {
                c2 += t4[l2] + r4[l2];
                t4[l2] = 255 & c2;
                c2 >>= 8;
              }
            }
            function incHex(t4, r4) {
              for (var o4 = 1, c2 = r4; c2 >= 0 && o4 > 0; c2--) {
                o4 += t4[c2];
                t4[c2] = 255 & o4;
                o4 >>= 8;
              }
            }
            var t3 = 16, r3 = function() {
              function BinaryCMapStream(t4) {
                _classCallCheck(this, BinaryCMapStream);
                this.buffer = t4;
                this.pos = 0;
                this.end = t4.length;
                this.tmpBuf = new Uint8Array(19);
              }
              _createClass(BinaryCMapStream, [{ key: "readByte", value: function readByte() {
                return this.pos >= this.end ? -1 : this.buffer[this.pos++];
              } }, { key: "readNumber", value: function readNumber() {
                var t4, r4 = 0;
                do {
                  var o4 = this.readByte();
                  if (o4 < 0)
                    throw new l.FormatError("unexpected EOF in bcmap");
                  t4 = !(128 & o4);
                  r4 = r4 << 7 | 127 & o4;
                } while (!t4);
                return r4;
              } }, { key: "readSigned", value: function readSigned() {
                var t4 = this.readNumber();
                return 1 & t4 ? ~(t4 >>> 1) : t4 >>> 1;
              } }, { key: "readHex", value: function readHex(t4, r4) {
                t4.set(this.buffer.subarray(this.pos, this.pos + r4 + 1));
                this.pos += r4 + 1;
              } }, { key: "readHexNumber", value: function readHexNumber(t4, r4) {
                var o4, c2 = this.tmpBuf, u2 = 0;
                do {
                  var h2 = this.readByte();
                  if (h2 < 0)
                    throw new l.FormatError("unexpected EOF in bcmap");
                  o4 = !(128 & h2);
                  c2[u2++] = 127 & h2;
                } while (!o4);
                for (var d2 = r4, g2 = 0, m2 = 0; d2 >= 0; ) {
                  for (; m2 < 8 && c2.length > 0; ) {
                    g2 |= c2[--u2] << m2;
                    m2 += 7;
                  }
                  t4[d2] = 255 & g2;
                  d2--;
                  g2 >>= 8;
                  m2 -= 8;
                }
              } }, { key: "readHexSigned", value: function readHexSigned(t4, r4) {
                this.readHexNumber(t4, r4);
                for (var o4 = 1 & t4[r4] ? 255 : 0, c2 = 0, l2 = 0; l2 <= r4; l2++) {
                  c2 = (1 & c2) << 8 | t4[l2];
                  t4[l2] = c2 >> 1 ^ o4;
                }
              } }, { key: "readString", value: function readString() {
                for (var t4 = this.readNumber(), r4 = "", o4 = 0; o4 < t4; o4++)
                  r4 += String.fromCharCode(this.readNumber());
                return r4;
              } }]);
              return BinaryCMapStream;
            }(), o3 = function() {
              function BinaryCMapReader() {
                _classCallCheck(this, BinaryCMapReader);
              }
              _createClass(BinaryCMapReader, [{ key: "process", value: (o4 = _asyncToGenerator(c.default.mark(function _callee(o5, l2, u2) {
                var h2, d2, g2, m2, y2, v2, k2, _2, w2, S2, C, x, O, T, E, M, R, D, j, L, N;
                return c.default.wrap(function _callee$(c2) {
                  for (; ; )
                    switch (c2.prev = c2.next) {
                      case 0:
                        h2 = new r3(o5);
                        d2 = h2.readByte();
                        l2.vertical = !!(1 & d2);
                        g2 = null;
                        m2 = new Uint8Array(t3);
                        y2 = new Uint8Array(t3);
                        v2 = new Uint8Array(t3);
                        k2 = new Uint8Array(t3);
                        _2 = new Uint8Array(t3);
                      case 9:
                        if (!((S2 = h2.readByte()) >= 0)) {
                          c2.next = 68;
                          break;
                        }
                        if ((C = S2 >> 5) != 7) {
                          c2.next = 20;
                          break;
                        }
                        c2.t0 = 31 & S2;
                        c2.next = c2.t0 === 0 ? 15 : c2.t0 === 1 ? 17 : 19;
                        break;
                      case 15:
                        h2.readString();
                        return c2.abrupt("break", 19);
                      case 17:
                        g2 = h2.readString();
                        return c2.abrupt("break", 19);
                      case 19:
                        return c2.abrupt("continue", 9);
                      case 20:
                        x = !!(16 & S2);
                        if (!(1 + (O = 15 & S2) > t3)) {
                          c2.next = 24;
                          break;
                        }
                        throw new Error("BinaryCMapReader.process: Invalid dataSize.");
                      case 24:
                        T = 1;
                        E = h2.readNumber();
                        c2.t1 = C;
                        c2.next = c2.t1 === 0 ? 29 : c2.t1 === 1 ? 35 : c2.t1 === 2 ? 41 : c2.t1 === 3 ? 46 : c2.t1 === 4 ? 53 : c2.t1 === 5 ? 58 : 65;
                        break;
                      case 29:
                        h2.readHex(m2, O);
                        h2.readHexNumber(y2, O);
                        addHex(y2, m2, O);
                        l2.addCodespaceRange(O + 1, hexToInt(m2, O), hexToInt(y2, O));
                        for (M = 1; M < E; M++) {
                          incHex(y2, O);
                          h2.readHexNumber(m2, O);
                          addHex(m2, y2, O);
                          h2.readHexNumber(y2, O);
                          addHex(y2, m2, O);
                          l2.addCodespaceRange(O + 1, hexToInt(m2, O), hexToInt(y2, O));
                        }
                        return c2.abrupt("break", 66);
                      case 35:
                        h2.readHex(m2, O);
                        h2.readHexNumber(y2, O);
                        addHex(y2, m2, O);
                        h2.readNumber();
                        for (R = 1; R < E; R++) {
                          incHex(y2, O);
                          h2.readHexNumber(m2, O);
                          addHex(m2, y2, O);
                          h2.readHexNumber(y2, O);
                          addHex(y2, m2, O);
                          h2.readNumber();
                        }
                        return c2.abrupt("break", 66);
                      case 41:
                        h2.readHex(v2, O);
                        w2 = h2.readNumber();
                        l2.mapOne(hexToInt(v2, O), w2);
                        for (D = 1; D < E; D++) {
                          incHex(v2, O);
                          if (!x) {
                            h2.readHexNumber(_2, O);
                            addHex(v2, _2, O);
                          }
                          w2 = h2.readSigned() + (w2 + 1);
                          l2.mapOne(hexToInt(v2, O), w2);
                        }
                        return c2.abrupt("break", 66);
                      case 46:
                        h2.readHex(m2, O);
                        h2.readHexNumber(y2, O);
                        addHex(y2, m2, O);
                        w2 = h2.readNumber();
                        l2.mapCidRange(hexToInt(m2, O), hexToInt(y2, O), w2);
                        for (j = 1; j < E; j++) {
                          incHex(y2, O);
                          if (x)
                            m2.set(y2);
                          else {
                            h2.readHexNumber(m2, O);
                            addHex(m2, y2, O);
                          }
                          h2.readHexNumber(y2, O);
                          addHex(y2, m2, O);
                          w2 = h2.readNumber();
                          l2.mapCidRange(hexToInt(m2, O), hexToInt(y2, O), w2);
                        }
                        return c2.abrupt("break", 66);
                      case 53:
                        h2.readHex(v2, T);
                        h2.readHex(k2, O);
                        l2.mapOne(hexToInt(v2, T), hexToStr(k2, O));
                        for (L = 1; L < E; L++) {
                          incHex(v2, T);
                          if (!x) {
                            h2.readHexNumber(_2, T);
                            addHex(v2, _2, T);
                          }
                          incHex(k2, O);
                          h2.readHexSigned(_2, O);
                          addHex(k2, _2, O);
                          l2.mapOne(hexToInt(v2, T), hexToStr(k2, O));
                        }
                        return c2.abrupt("break", 66);
                      case 58:
                        h2.readHex(m2, T);
                        h2.readHexNumber(y2, T);
                        addHex(y2, m2, T);
                        h2.readHex(k2, O);
                        l2.mapBfRange(hexToInt(m2, T), hexToInt(y2, T), hexToStr(k2, O));
                        for (N = 1; N < E; N++) {
                          incHex(y2, T);
                          if (x)
                            m2.set(y2);
                          else {
                            h2.readHexNumber(m2, T);
                            addHex(m2, y2, T);
                          }
                          h2.readHexNumber(y2, T);
                          addHex(y2, m2, T);
                          h2.readHex(k2, O);
                          l2.mapBfRange(hexToInt(m2, T), hexToInt(y2, T), hexToStr(k2, O));
                        }
                        return c2.abrupt("break", 66);
                      case 65:
                        throw new Error("BinaryCMapReader.process - unknown type: ".concat(C));
                      case 66:
                        c2.next = 9;
                        break;
                      case 68:
                        if (!g2) {
                          c2.next = 70;
                          break;
                        }
                        return c2.abrupt("return", u2(g2));
                      case 70:
                        return c2.abrupt("return", l2);
                      case 71:
                      case "end":
                        return c2.stop();
                    }
                }, _callee);
              })), function process2(t4, r4, c2) {
                return o4.apply(this, arguments);
              }) }]);
              var o4;
              return BinaryCMapReader;
            }();
            return o3;
          }(), S = function CMapFactoryClosure() {
            function strToInt(t3) {
              for (var r3 = 0, o3 = 0; o3 < t3.length; o3++)
                r3 = r3 << 8 | t3.charCodeAt(o3);
              return r3 >>> 0;
            }
            function expectString(t3) {
              if (typeof t3 != "string")
                throw new l.FormatError("Malformed CMap: expected string.");
            }
            function expectInt(t3) {
              if (!Number.isInteger(t3))
                throw new l.FormatError("Malformed CMap: expected int.");
            }
            function parseBfChar(t3, r3) {
              for (; ; ) {
                var o3 = r3.getObj();
                if (o3 === u.EOF)
                  break;
                if ((0, u.isCmd)(o3, "endbfchar"))
                  return;
                expectString(o3);
                var c2 = strToInt(o3);
                expectString(o3 = r3.getObj());
                var l2 = o3;
                t3.mapOne(c2, l2);
              }
            }
            function parseBfRange(t3, r3) {
              for (; ; ) {
                var o3 = r3.getObj();
                if (o3 === u.EOF)
                  break;
                if ((0, u.isCmd)(o3, "endbfrange"))
                  return;
                expectString(o3);
                var c2 = strToInt(o3);
                expectString(o3 = r3.getObj());
                var h2 = strToInt(o3);
                o3 = r3.getObj();
                if (Number.isInteger(o3) || typeof o3 == "string") {
                  var d2 = Number.isInteger(o3) ? String.fromCharCode(o3) : o3;
                  t3.mapBfRange(c2, h2, d2);
                } else {
                  if (!(0, u.isCmd)(o3, "["))
                    break;
                  o3 = r3.getObj();
                  for (var g2 = []; !(0, u.isCmd)(o3, "]") && o3 !== u.EOF; ) {
                    g2.push(o3);
                    o3 = r3.getObj();
                  }
                  t3.mapBfRangeToArray(c2, h2, g2);
                }
              }
              throw new l.FormatError("Invalid bf range.");
            }
            function parseCidChar(t3, r3) {
              for (; ; ) {
                var o3 = r3.getObj();
                if (o3 === u.EOF)
                  break;
                if ((0, u.isCmd)(o3, "endcidchar"))
                  return;
                expectString(o3);
                var c2 = strToInt(o3);
                expectInt(o3 = r3.getObj());
                var l2 = o3;
                t3.mapOne(c2, l2);
              }
            }
            function parseCidRange(t3, r3) {
              for (; ; ) {
                var o3 = r3.getObj();
                if (o3 === u.EOF)
                  break;
                if ((0, u.isCmd)(o3, "endcidrange"))
                  return;
                expectString(o3);
                var c2 = strToInt(o3);
                expectString(o3 = r3.getObj());
                var l2 = strToInt(o3);
                expectInt(o3 = r3.getObj());
                var h2 = o3;
                t3.mapCidRange(c2, l2, h2);
              }
            }
            function parseCodespaceRange(t3, r3) {
              for (; ; ) {
                var o3 = r3.getObj();
                if (o3 === u.EOF)
                  break;
                if ((0, u.isCmd)(o3, "endcodespacerange"))
                  return;
                if (typeof o3 != "string")
                  break;
                var c2 = strToInt(o3);
                if (typeof (o3 = r3.getObj()) != "string")
                  break;
                var h2 = strToInt(o3);
                t3.addCodespaceRange(o3.length, c2, h2);
              }
              throw new l.FormatError("Invalid codespace range.");
            }
            function parseWMode(t3, r3) {
              var o3 = r3.getObj();
              Number.isInteger(o3) && (t3.vertical = !!o3);
            }
            function parseCMapName(t3, r3) {
              var o3 = r3.getObj();
              o3 instanceof u.Name && (t3.name = o3.name);
            }
            function parseCMap(t3, r3, o3, c2) {
              return _parseCMap.apply(this, arguments);
            }
            function _parseCMap() {
              return (_parseCMap = _asyncToGenerator(c.default.mark(function _callee3(t3, r3, o3, h2) {
                var d2, m2, y2;
                return c.default.wrap(function _callee3$(c2) {
                  for (; ; )
                    switch (c2.prev = c2.next) {
                      case 0:
                        0;
                        c2.prev = 1;
                        if ((y2 = r3.getObj()) !== u.EOF) {
                          c2.next = 7;
                          break;
                        }
                        return c2.abrupt("break", 39);
                      case 7:
                        if (!(y2 instanceof u.Name)) {
                          c2.next = 12;
                          break;
                        }
                        y2.name === "WMode" ? parseWMode(t3, r3) : y2.name === "CMapName" && parseCMapName(t3, r3);
                        d2 = y2;
                        c2.next = 29;
                        break;
                      case 12:
                        if (!(y2 instanceof u.Cmd)) {
                          c2.next = 29;
                          break;
                        }
                        c2.t0 = y2.cmd;
                        c2.next = c2.t0 === "endcmap" ? 16 : c2.t0 === "usecmap" ? 17 : c2.t0 === "begincodespacerange" ? 19 : c2.t0 === "beginbfchar" ? 21 : c2.t0 === "begincidchar" ? 23 : c2.t0 === "beginbfrange" ? 25 : c2.t0 === "begincidrange" ? 27 : 29;
                        break;
                      case 16:
                        return c2.abrupt("break", 39);
                      case 17:
                        d2 instanceof u.Name && (m2 = d2.name);
                        return c2.abrupt("break", 29);
                      case 19:
                        parseCodespaceRange(t3, r3);
                        return c2.abrupt("break", 29);
                      case 21:
                        parseBfChar(t3, r3);
                        return c2.abrupt("break", 29);
                      case 23:
                        parseCidChar(t3, r3);
                        return c2.abrupt("break", 29);
                      case 25:
                        parseBfRange(t3, r3);
                        return c2.abrupt("break", 29);
                      case 27:
                        parseCidRange(t3, r3);
                        return c2.abrupt("break", 29);
                      case 29:
                        c2.next = 37;
                        break;
                      case 31:
                        c2.prev = 31;
                        c2.t1 = c2.catch(1);
                        if (!(c2.t1 instanceof g.MissingDataException)) {
                          c2.next = 35;
                          break;
                        }
                        throw c2.t1;
                      case 35:
                        (0, l.warn)("Invalid cMap data: " + c2.t1);
                        return c2.abrupt("continue", 0);
                      case 37:
                        c2.next = 0;
                        break;
                      case 39:
                        !h2 && m2 && (h2 = m2);
                        if (!h2) {
                          c2.next = 42;
                          break;
                        }
                        return c2.abrupt("return", extendCMap(t3, o3, h2));
                      case 42:
                        return c2.abrupt("return", t3);
                      case 43:
                      case "end":
                        return c2.stop();
                    }
                }, _callee3, null, [[1, 31]]);
              }))).apply(this, arguments);
            }
            function extendCMap(t3, r3, o3) {
              return _extendCMap.apply(this, arguments);
            }
            function _extendCMap() {
              return (_extendCMap = _asyncToGenerator(c.default.mark(function _callee4(t3, r3, o3) {
                var l2, u2;
                return c.default.wrap(function _callee4$(c2) {
                  for (; ; )
                    switch (c2.prev = c2.next) {
                      case 0:
                        c2.next = 2;
                        return createBuiltInCMap(o3, r3);
                      case 2:
                        t3.useCMap = c2.sent;
                        if (t3.numCodespaceRanges === 0) {
                          l2 = t3.useCMap.codespaceRanges;
                          for (u2 = 0; u2 < l2.length; u2++)
                            t3.codespaceRanges[u2] = l2[u2].slice();
                          t3.numCodespaceRanges = t3.useCMap.numCodespaceRanges;
                        }
                        t3.useCMap.forEach(function(r4, o4) {
                          t3.contains(r4) || t3.mapOne(r4, t3.useCMap.lookup(r4));
                        });
                        return c2.abrupt("return", t3);
                      case 6:
                      case "end":
                        return c2.stop();
                    }
                }, _callee4);
              }))).apply(this, arguments);
            }
            function createBuiltInCMap(t3, r3) {
              return _createBuiltInCMap.apply(this, arguments);
            }
            function _createBuiltInCMap() {
              return (_createBuiltInCMap = _asyncToGenerator(c.default.mark(function _callee5(t3, r3) {
                var o3, u2, h2, g2, v2;
                return c.default.wrap(function _callee5$(c2) {
                  for (; ; )
                    switch (c2.prev = c2.next) {
                      case 0:
                        if (t3 !== "Identity-H") {
                          c2.next = 4;
                          break;
                        }
                        return c2.abrupt("return", new _(false, 2));
                      case 4:
                        if (t3 !== "Identity-V") {
                          c2.next = 6;
                          break;
                        }
                        return c2.abrupt("return", new _(true, 2));
                      case 6:
                        if (y.includes(t3)) {
                          c2.next = 8;
                          break;
                        }
                        throw new Error("Unknown CMap name: " + t3);
                      case 8:
                        if (r3) {
                          c2.next = 10;
                          break;
                        }
                        throw new Error("Built-in CMap parameters are not provided.");
                      case 10:
                        c2.next = 12;
                        return r3(t3);
                      case 12:
                        o3 = c2.sent;
                        u2 = o3.cMapData;
                        h2 = o3.compressionType;
                        g2 = new k(true);
                        if (h2 !== l.CMapCompressionType.BINARY) {
                          c2.next = 18;
                          break;
                        }
                        return c2.abrupt("return", new w().process(u2, g2, function(t4) {
                          return extendCMap(g2, r3, t4);
                        }));
                      case 18:
                        if (h2 !== l.CMapCompressionType.NONE) {
                          c2.next = 21;
                          break;
                        }
                        v2 = new d.Lexer(new m.Stream(u2));
                        return c2.abrupt("return", parseCMap(g2, v2, r3, null));
                      case 21:
                        throw new Error("TODO: Only BINARY/NONE CMap compression is currently supported.");
                      case 22:
                      case "end":
                        return c2.stop();
                    }
                }, _callee5);
              }))).apply(this, arguments);
            }
            return { create: function create(t3) {
              return _asyncToGenerator(c.default.mark(function _callee2() {
                var r3, o3, l2, g2;
                return c.default.wrap(function _callee2$(c2) {
                  for (; ; )
                    switch (c2.prev = c2.next) {
                      case 0:
                        r3 = t3.encoding;
                        o3 = t3.fetchBuiltInCMap;
                        l2 = t3.useCMap;
                        if (!(r3 instanceof u.Name)) {
                          c2.next = 7;
                          break;
                        }
                        return c2.abrupt("return", createBuiltInCMap(r3.name, o3));
                      case 7:
                        if (!(r3 instanceof h.BaseStream)) {
                          c2.next = 14;
                          break;
                        }
                        c2.next = 10;
                        return parseCMap(new k(), new d.Lexer(r3), o3, l2);
                      case 10:
                        if (!(g2 = c2.sent).isIdentityCMap) {
                          c2.next = 13;
                          break;
                        }
                        return c2.abrupt("return", createBuiltInCMap(g2.name, o3));
                      case 13:
                        return c2.abrupt("return", g2);
                      case 14:
                        throw new Error("Encoding required.");
                      case 15:
                      case "end":
                        return c2.stop();
                    }
                }, _callee2);
              }))();
            } };
          }();
          r2.CMapFactory = S;
        }, (t2, r2, o2) => {
          "use strict";
          Object.defineProperty(r2, "__esModule", { value: true });
          r2.Parser = r2.Linearization = r2.Lexer = void 0;
          var c = o2(4), l = o2(158), u = o2(161), h = o2(181), d = o2(183), g = o2(184), m = o2(186), y = o2(187), v = o2(190), k = o2(192), _ = o2(194), w = o2(163), S = o2(195), C = o2(196);
          function _classCallCheck(t3, r3) {
            if (!(t3 instanceof r3))
              throw new TypeError("Cannot call a class as a function");
          }
          function _defineProperties(t3, r3) {
            for (var o3 = 0; o3 < r3.length; o3++) {
              var c2 = r3[o3];
              c2.enumerable = c2.enumerable || false;
              c2.configurable = true;
              "value" in c2 && (c2.writable = true);
              Object.defineProperty(t3, c2.key, c2);
            }
          }
          function _createClass(t3, r3, o3) {
            r3 && _defineProperties(t3.prototype, r3);
            o3 && _defineProperties(t3, o3);
            Object.defineProperty(t3, "prototype", { writable: false });
            return t3;
          }
          function computeAdler32(t3) {
            for (var r3 = t3.length, o3 = 1, c2 = 0, l2 = 0; l2 < r3; ++l2)
              c2 += o3 += 255 & t3[l2];
            return c2 % 65521 << 16 | o3 % 65521;
          }
          var x = function() {
            function Parser(t3) {
              var r3 = t3.lexer, o3 = t3.xref, c2 = t3.allowStreams, l2 = c2 !== void 0 && c2, u2 = t3.recoveryMode, h2 = u2 !== void 0 && u2;
              _classCallCheck(this, Parser);
              this.lexer = r3;
              this.xref = o3;
              this.allowStreams = l2;
              this.recoveryMode = h2;
              this.imageCache = /* @__PURE__ */ Object.create(null);
              this.refill();
            }
            _createClass(Parser, [{ key: "refill", value: function refill() {
              this.buf1 = this.lexer.getObj();
              this.buf2 = this.lexer.getObj();
            } }, { key: "shift", value: function shift() {
              if (this.buf2 instanceof l.Cmd && this.buf2.cmd === "ID") {
                this.buf1 = this.buf2;
                this.buf2 = null;
              } else {
                this.buf1 = this.buf2;
                this.buf2 = this.lexer.getObj();
              }
            } }, { key: "tryShift", value: function tryShift() {
              try {
                this.shift();
                return true;
              } catch (t3) {
                if (t3 instanceof u.MissingDataException)
                  throw t3;
                return false;
              }
            } }, { key: "getObj", value: function getObj() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : null, r3 = this.buf1;
              this.shift();
              if (r3 instanceof l.Cmd)
                switch (r3.cmd) {
                  case "BI":
                    return this.makeInlineImage(t3);
                  case "[":
                    for (var o3 = []; !(0, l.isCmd)(this.buf1, "]") && this.buf1 !== l.EOF; )
                      o3.push(this.getObj(t3));
                    if (this.buf1 === l.EOF) {
                      if (this.recoveryMode)
                        return o3;
                      throw new u.ParserEOFException("End of file inside array.");
                    }
                    this.shift();
                    return o3;
                  case "<<":
                    for (var h2 = new l.Dict(this.xref); !(0, l.isCmd)(this.buf1, ">>") && this.buf1 !== l.EOF; )
                      if (this.buf1 instanceof l.Name) {
                        var d2 = this.buf1.name;
                        this.shift();
                        if (this.buf1 === l.EOF)
                          break;
                        h2.set(d2, this.getObj(t3));
                      } else {
                        (0, c.info)("Malformed dictionary: key must be a name object");
                        this.shift();
                      }
                    if (this.buf1 === l.EOF) {
                      if (this.recoveryMode)
                        return h2;
                      throw new u.ParserEOFException("End of file inside dictionary.");
                    }
                    if ((0, l.isCmd)(this.buf2, "stream"))
                      return this.allowStreams ? this.makeStream(h2, t3) : h2;
                    this.shift();
                    return h2;
                  default:
                    return r3;
                }
              if (Number.isInteger(r3)) {
                if (Number.isInteger(this.buf1) && (0, l.isCmd)(this.buf2, "R")) {
                  var g2 = l.Ref.get(r3, this.buf1);
                  this.shift();
                  this.shift();
                  return g2;
                }
                return r3;
              }
              return typeof r3 == "string" && t3 ? t3.decryptString(r3) : r3;
            } }, { key: "findDefaultInlineStreamEnd", value: function findDefaultInlineStreamEnd(t3) {
              for (var r3, o3, h2 = this.lexer, d2 = t3.pos, g2 = 0; (r3 = t3.getByte()) !== -1; )
                if (g2 === 0)
                  g2 = r3 === 69 ? 1 : 0;
                else if (g2 === 1)
                  g2 = r3 === 73 ? 2 : 0;
                else {
                  (0, c.assert)(g2 === 2, "findDefaultInlineStreamEnd - invalid state.");
                  if (r3 === 32 || r3 === 10 || r3 === 13) {
                    o3 = t3.pos;
                    for (var m2 = t3.peekBytes(10), y2 = 0, v2 = m2.length; y2 < v2; y2++)
                      if (((r3 = m2[y2]) !== 0 || m2[y2 + 1] === 0) && r3 !== 10 && r3 !== 13 && (r3 < 32 || r3 > 127)) {
                        g2 = 0;
                        break;
                      }
                    if (g2 !== 2)
                      continue;
                    if (h2.knownCommands) {
                      var k2 = h2.peekObj();
                      k2 instanceof l.Cmd && !h2.knownCommands[k2.cmd] && (g2 = 0);
                    } else
                      (0, c.warn)("findDefaultInlineStreamEnd - `lexer.knownCommands` is undefined.");
                    if (g2 === 2)
                      break;
                  } else
                    g2 = 0;
                }
              if (r3 === -1) {
                (0, c.warn)("findDefaultInlineStreamEnd: Reached the end of the stream without finding a valid EI marker");
                if (o3) {
                  (0, c.warn)('... trying to recover by using the last "EI" occurrence.');
                  t3.skip(-(t3.pos - o3));
                }
              }
              var _2 = 4;
              t3.skip(-_2);
              r3 = t3.peekByte();
              t3.skip(_2);
              (0, u.isWhiteSpace)(r3) || _2--;
              return t3.pos - _2 - d2;
            } }, { key: "findDCTDecodeInlineStreamEnd", value: function findDCTDecodeInlineStreamEnd(t3) {
              for (var r3, o3, l2 = t3.pos, u2 = false; (r3 = t3.getByte()) !== -1; )
                if (r3 === 255) {
                  switch (t3.getByte()) {
                    case 0:
                      break;
                    case 255:
                      t3.skip(-1);
                      break;
                    case 217:
                      u2 = true;
                      break;
                    case 192:
                    case 193:
                    case 194:
                    case 195:
                    case 197:
                    case 198:
                    case 199:
                    case 201:
                    case 202:
                    case 203:
                    case 205:
                    case 206:
                    case 207:
                    case 196:
                    case 204:
                    case 218:
                    case 219:
                    case 220:
                    case 221:
                    case 222:
                    case 223:
                    case 224:
                    case 225:
                    case 226:
                    case 227:
                    case 228:
                    case 229:
                    case 230:
                    case 231:
                    case 232:
                    case 233:
                    case 234:
                    case 235:
                    case 236:
                    case 237:
                    case 238:
                    case 239:
                    case 254:
                      (o3 = t3.getUint16()) > 2 ? t3.skip(o3 - 2) : t3.skip(-2);
                  }
                  if (u2)
                    break;
                }
              var h2 = t3.pos - l2;
              if (r3 === -1) {
                (0, c.warn)("Inline DCTDecode image stream: EOI marker not found, searching for /EI/ instead.");
                t3.skip(-h2);
                return this.findDefaultInlineStreamEnd(t3);
              }
              this.inlineStreamSkipEI(t3);
              return h2;
            } }, { key: "findASCII85DecodeInlineStreamEnd", value: function findASCII85DecodeInlineStreamEnd(t3) {
              for (var r3, o3 = t3.pos; (r3 = t3.getByte()) !== -1; )
                if (r3 === 126) {
                  var l2 = t3.pos;
                  r3 = t3.peekByte();
                  for (; (0, u.isWhiteSpace)(r3); ) {
                    t3.skip();
                    r3 = t3.peekByte();
                  }
                  if (r3 === 62) {
                    t3.skip();
                    break;
                  }
                  if (t3.pos > l2) {
                    var h2 = t3.peekBytes(2);
                    if (h2[0] === 69 && h2[1] === 73)
                      break;
                  }
                }
              var d2 = t3.pos - o3;
              if (r3 === -1) {
                (0, c.warn)("Inline ASCII85Decode image stream: EOD marker not found, searching for /EI/ instead.");
                t3.skip(-d2);
                return this.findDefaultInlineStreamEnd(t3);
              }
              this.inlineStreamSkipEI(t3);
              return d2;
            } }, { key: "findASCIIHexDecodeInlineStreamEnd", value: function findASCIIHexDecodeInlineStreamEnd(t3) {
              for (var r3, o3 = t3.pos; (r3 = t3.getByte()) !== -1 && r3 !== 62; )
                ;
              var l2 = t3.pos - o3;
              if (r3 === -1) {
                (0, c.warn)("Inline ASCIIHexDecode image stream: EOD marker not found, searching for /EI/ instead.");
                t3.skip(-l2);
                return this.findDefaultInlineStreamEnd(t3);
              }
              this.inlineStreamSkipEI(t3);
              return l2;
            } }, { key: "inlineStreamSkipEI", value: function inlineStreamSkipEI(t3) {
              for (var r3, o3 = 0; (r3 = t3.getByte()) !== -1; )
                if (o3 === 0)
                  o3 = r3 === 69 ? 1 : 0;
                else if (o3 === 1)
                  o3 = r3 === 73 ? 2 : 0;
                else if (o3 === 2)
                  break;
            } }, { key: "makeInlineImage", value: function makeInlineImage(t3) {
              for (var r3, o3 = this.lexer, u2 = o3.stream, h2 = new l.Dict(this.xref); !(0, l.isCmd)(this.buf1, "ID") && this.buf1 !== l.EOF; ) {
                if (!(this.buf1 instanceof l.Name))
                  throw new c.FormatError("Dictionary key must be a name object");
                var d2 = this.buf1.name;
                this.shift();
                if (this.buf1 === l.EOF)
                  break;
                h2.set(d2, this.getObj(t3));
              }
              o3.beginInlineImagePos !== -1 && (r3 = u2.pos - o3.beginInlineImagePos);
              var g2, m2 = h2.get("F", "Filter");
              if (m2 instanceof l.Name)
                g2 = m2.name;
              else if (Array.isArray(m2)) {
                var y2 = this.xref.fetchIfRef(m2[0]);
                y2 instanceof l.Name && (g2 = y2.name);
              }
              var v2, k2 = u2.pos;
              switch (g2) {
                case "DCT":
                case "DCTDecode":
                  v2 = this.findDCTDecodeInlineStreamEnd(u2);
                  break;
                case "A85":
                case "ASCII85Decode":
                  v2 = this.findASCII85DecodeInlineStreamEnd(u2);
                  break;
                case "AHx":
                case "ASCIIHexDecode":
                  v2 = this.findASCIIHexDecodeInlineStreamEnd(u2);
                  break;
                default:
                  v2 = this.findDefaultInlineStreamEnd(u2);
              }
              var _2, w2 = u2.makeSubStream(k2, v2, h2);
              if (v2 < 1e3 && r3 < 5552) {
                var S2 = w2.getBytes();
                w2.reset();
                var C2 = u2.pos;
                u2.pos = o3.beginInlineImagePos;
                var x2 = u2.getBytes(r3);
                u2.pos = C2;
                _2 = computeAdler32(S2) + "_" + computeAdler32(x2);
                var O2 = this.imageCache[_2];
                if (O2 !== void 0) {
                  this.buf2 = l.Cmd.get("EI");
                  this.shift();
                  O2.reset();
                  return O2;
                }
              }
              t3 && (w2 = t3.createStream(w2, v2));
              (w2 = this.filter(w2, h2, v2)).dict = h2;
              if (_2 !== void 0) {
                w2.cacheKey = "inline_".concat(v2, "_").concat(_2);
                this.imageCache[_2] = w2;
              }
              this.buf2 = l.Cmd.get("EI");
              this.shift();
              return w2;
            } }, { key: "_findStreamLength", value: function _findStreamLength(t3, r3) {
              var o3 = this.lexer.stream;
              o3.pos = t3;
              for (var c2 = r3.length; o3.pos < o3.end; ) {
                var l2 = o3.peekBytes(2048), u2 = l2.length - c2;
                if (u2 <= 0)
                  break;
                for (var h2 = 0; h2 < u2; ) {
                  for (var d2 = 0; d2 < c2 && l2[h2 + d2] === r3[d2]; )
                    d2++;
                  if (d2 >= c2) {
                    o3.pos += h2;
                    return o3.pos - t3;
                  }
                  h2++;
                }
                o3.pos += u2;
              }
              return -1;
            } }, { key: "makeStream", value: function makeStream(t3, r3) {
              var o3 = this.lexer, h2 = o3.stream;
              o3.skipToNextLine();
              var d2 = h2.pos - 1, g2 = t3.get("Length");
              if (!Number.isInteger(g2)) {
                (0, c.info)('Bad length "'.concat(g2 && g2.toString(), '" in stream.'));
                g2 = 0;
              }
              h2.pos = d2 + g2;
              o3.nextChar();
              if (this.tryShift() && (0, l.isCmd)(this.buf2, "endstream"))
                this.shift();
              else {
                var m2 = new Uint8Array([101, 110, 100, 115, 116, 114, 101, 97, 109]), y2 = this._findStreamLength(d2, m2);
                if (y2 < 0) {
                  for (var v2 = 1; v2 <= 1; v2++) {
                    var k2 = m2.length - v2, _2 = m2.slice(0, k2), w2 = this._findStreamLength(d2, _2);
                    if (w2 >= 0) {
                      var S2 = h2.peekBytes(k2 + 1)[k2];
                      if (!(0, u.isWhiteSpace)(S2))
                        break;
                      (0, c.info)('Found "'.concat((0, c.bytesToString)(_2), '" when ') + "searching for endstream command.");
                      y2 = w2;
                      break;
                    }
                  }
                  if (y2 < 0)
                    throw new c.FormatError("Missing endstream command.");
                }
                g2 = y2;
                o3.nextChar();
                this.shift();
                this.shift();
              }
              this.shift();
              h2 = h2.makeSubStream(d2, g2, t3);
              r3 && (h2 = r3.createStream(h2, g2));
              (h2 = this.filter(h2, t3, g2)).dict = t3;
              return h2;
            } }, { key: "filter", value: function filter(t3, r3, o3) {
              var filter2 = r3.get("F", "Filter"), u2 = r3.get("DP", "DecodeParms");
              if (filter2 instanceof l.Name) {
                Array.isArray(u2) && (0, c.warn)("/DecodeParms should not be an Array, when /Filter is a Name.");
                return this.makeFilter(t3, filter2.name, o3, u2);
              }
              var h2 = o3;
              if (Array.isArray(filter2))
                for (var d2 = filter2, g2 = u2, m2 = 0, y2 = d2.length; m2 < y2; ++m2) {
                  filter2 = this.xref.fetchIfRef(d2[m2]);
                  if (!(filter2 instanceof l.Name))
                    throw new c.FormatError('Bad filter name "'.concat(filter2, '"'));
                  u2 = null;
                  Array.isArray(g2) && m2 in g2 && (u2 = this.xref.fetchIfRef(g2[m2]));
                  t3 = this.makeFilter(t3, filter2.name, h2, u2);
                  h2 = null;
                }
              return t3;
            } }, { key: "makeFilter", value: function makeFilter(t3, r3, o3, l2) {
              if (o3 === 0) {
                (0, c.warn)('Empty "'.concat(r3, '" stream.'));
                return new w.NullStream();
              }
              var x2 = this.xref.stats;
              try {
                switch (r3) {
                  case "Fl":
                  case "FlateDecode":
                    x2.addStreamType(c.StreamType.FLATE);
                    return l2 ? new S.PredictorStream(new m.FlateStream(t3, o3), o3, l2) : new m.FlateStream(t3, o3);
                  case "LZW":
                  case "LZWDecode":
                    x2.addStreamType(c.StreamType.LZW);
                    var O2 = 1;
                    if (l2) {
                      l2.has("EarlyChange") && (O2 = l2.get("EarlyChange"));
                      return new S.PredictorStream(new _.LZWStream(t3, o3, O2), o3, l2);
                    }
                    return new _.LZWStream(t3, o3, O2);
                  case "DCT":
                  case "DCTDecode":
                    x2.addStreamType(c.StreamType.DCT);
                    return new v.JpegStream(t3, o3, l2);
                  case "JPX":
                  case "JPXDecode":
                    x2.addStreamType(c.StreamType.JPX);
                    return new k.JpxStream(t3, o3, l2);
                  case "A85":
                  case "ASCII85Decode":
                    x2.addStreamType(c.StreamType.A85);
                    return new h.Ascii85Stream(t3, o3);
                  case "AHx":
                  case "ASCIIHexDecode":
                    x2.addStreamType(c.StreamType.AHX);
                    return new d.AsciiHexStream(t3, o3);
                  case "CCF":
                  case "CCITTFaxDecode":
                    x2.addStreamType(c.StreamType.CCF);
                    return new g.CCITTFaxStream(t3, o3, l2);
                  case "RL":
                  case "RunLengthDecode":
                    x2.addStreamType(c.StreamType.RLX);
                    return new C.RunLengthStream(t3, o3);
                  case "JBIG2Decode":
                    x2.addStreamType(c.StreamType.JBIG);
                    return new y.Jbig2Stream(t3, o3, l2);
                }
                (0, c.warn)('Filter "'.concat(r3, '" is not supported.'));
                return t3;
              } catch (t4) {
                if (t4 instanceof u.MissingDataException)
                  throw t4;
                (0, c.warn)('Invalid stream: "'.concat(t4, '"'));
                return new w.NullStream();
              }
            } }]);
            return Parser;
          }();
          r2.Parser = x;
          var O = [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 2, 0, 0, 2, 2, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
          function toHexDigit(t3) {
            return t3 >= 48 && t3 <= 57 ? 15 & t3 : t3 >= 65 && t3 <= 70 || t3 >= 97 && t3 <= 102 ? 9 + (15 & t3) : -1;
          }
          var T = function() {
            function Lexer(t3) {
              var r3 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null;
              _classCallCheck(this, Lexer);
              this.stream = t3;
              this.nextChar();
              this.strBuf = [];
              this.knownCommands = r3;
              this._hexStringNumWarn = 0;
              this.beginInlineImagePos = -1;
            }
            _createClass(Lexer, [{ key: "nextChar", value: function nextChar() {
              return this.currentChar = this.stream.getByte();
            } }, { key: "peekChar", value: function peekChar() {
              return this.stream.peekByte();
            } }, { key: "getNumber", value: function getNumber() {
              var t3 = this.currentChar, r3 = false, o3 = 0, l2 = 0;
              if (t3 === 45) {
                l2 = -1;
                (t3 = this.nextChar()) === 45 && (t3 = this.nextChar());
              } else if (t3 === 43) {
                l2 = 1;
                t3 = this.nextChar();
              }
              if (t3 === 10 || t3 === 13)
                do {
                  t3 = this.nextChar();
                } while (t3 === 10 || t3 === 13);
              if (t3 === 46) {
                o3 = 10;
                t3 = this.nextChar();
              }
              if (t3 < 48 || t3 > 57) {
                if ((0, u.isWhiteSpace)(t3) || t3 === -1) {
                  if (o3 === 10 && l2 === 0) {
                    (0, c.warn)("Lexer.getNumber - treating a single decimal point as zero.");
                    return 0;
                  }
                  if (o3 === 0 && l2 === -1) {
                    (0, c.warn)("Lexer.getNumber - treating a single minus sign as zero.");
                    return 0;
                  }
                }
                throw new c.FormatError("Invalid number: ".concat(String.fromCharCode(t3), " (charCode ").concat(t3, ")"));
              }
              l2 = l2 || 1;
              for (var h2 = t3 - 48, d2 = 0, g2 = 1; (t3 = this.nextChar()) >= 0; )
                if (t3 >= 48 && t3 <= 57) {
                  var m2 = t3 - 48;
                  if (r3)
                    d2 = 10 * d2 + m2;
                  else {
                    o3 !== 0 && (o3 *= 10);
                    h2 = 10 * h2 + m2;
                  }
                } else if (t3 === 46) {
                  if (o3 !== 0)
                    break;
                  o3 = 1;
                } else if (t3 === 45)
                  (0, c.warn)("Badly formatted number: minus sign in the middle");
                else {
                  if (t3 !== 69 && t3 !== 101)
                    break;
                  if ((t3 = this.peekChar()) === 43 || t3 === 45) {
                    g2 = t3 === 45 ? -1 : 1;
                    this.nextChar();
                  } else if (t3 < 48 || t3 > 57)
                    break;
                  r3 = true;
                }
              o3 !== 0 && (h2 /= o3);
              r3 && (h2 *= Math.pow(10, g2 * d2));
              return l2 * h2;
            } }, { key: "getString", value: function getString() {
              var t3 = 1, r3 = false, o3 = this.strBuf;
              o3.length = 0;
              for (var l2 = this.nextChar(); ; ) {
                var u2 = false;
                switch (0 | l2) {
                  case -1:
                    (0, c.warn)("Unterminated string");
                    r3 = true;
                    break;
                  case 40:
                    ++t3;
                    o3.push("(");
                    break;
                  case 41:
                    if (--t3 == 0) {
                      this.nextChar();
                      r3 = true;
                    } else
                      o3.push(")");
                    break;
                  case 92:
                    switch (l2 = this.nextChar()) {
                      case -1:
                        (0, c.warn)("Unterminated string");
                        r3 = true;
                        break;
                      case 110:
                        o3.push("\n");
                        break;
                      case 114:
                        o3.push("\r");
                        break;
                      case 116:
                        o3.push("	");
                        break;
                      case 98:
                        o3.push("\b");
                        break;
                      case 102:
                        o3.push("\f");
                        break;
                      case 92:
                      case 40:
                      case 41:
                        o3.push(String.fromCharCode(l2));
                        break;
                      case 48:
                      case 49:
                      case 50:
                      case 51:
                      case 52:
                      case 53:
                      case 54:
                      case 55:
                        var h2 = 15 & l2;
                        u2 = true;
                        if ((l2 = this.nextChar()) >= 48 && l2 <= 55) {
                          h2 = (h2 << 3) + (15 & l2);
                          if ((l2 = this.nextChar()) >= 48 && l2 <= 55) {
                            u2 = false;
                            h2 = (h2 << 3) + (15 & l2);
                          }
                        }
                        o3.push(String.fromCharCode(h2));
                        break;
                      case 13:
                        this.peekChar() === 10 && this.nextChar();
                        break;
                      case 10:
                        break;
                      default:
                        o3.push(String.fromCharCode(l2));
                    }
                    break;
                  default:
                    o3.push(String.fromCharCode(l2));
                }
                if (r3)
                  break;
                u2 || (l2 = this.nextChar());
              }
              return o3.join("");
            } }, { key: "getName", value: function getName() {
              var t3, r3, o3 = this.strBuf;
              o3.length = 0;
              for (; (t3 = this.nextChar()) >= 0 && !O[t3]; )
                if (t3 === 35) {
                  t3 = this.nextChar();
                  if (O[t3]) {
                    (0, c.warn)("Lexer_getName: NUMBER SIGN (#) should be followed by a hexadecimal number.");
                    o3.push("#");
                    break;
                  }
                  var u2 = toHexDigit(t3);
                  if (u2 !== -1) {
                    r3 = t3;
                    var h2 = toHexDigit(t3 = this.nextChar());
                    if (h2 === -1) {
                      (0, c.warn)("Lexer_getName: Illegal digit (".concat(String.fromCharCode(t3), ") ") + "in hexadecimal number.");
                      o3.push("#", String.fromCharCode(r3));
                      if (O[t3])
                        break;
                      o3.push(String.fromCharCode(t3));
                      continue;
                    }
                    o3.push(String.fromCharCode(u2 << 4 | h2));
                  } else
                    o3.push("#", String.fromCharCode(t3));
                } else
                  o3.push(String.fromCharCode(t3));
              o3.length > 127 && (0, c.warn)("Name token is longer than allowed by the spec: ".concat(o3.length));
              return l.Name.get(o3.join(""));
            } }, { key: "_hexStringWarn", value: function _hexStringWarn(t3) {
              this._hexStringNumWarn++ != 5 ? this._hexStringNumWarn > 5 || (0, c.warn)("getHexString - ignoring invalid character: ".concat(t3)) : (0, c.warn)("getHexString - ignoring additional invalid characters.");
            } }, { key: "getHexString", value: function getHexString() {
              var t3 = this.strBuf;
              t3.length = 0;
              var r3, o3, l2 = this.currentChar, u2 = true;
              this._hexStringNumWarn = 0;
              for (; ; ) {
                if (l2 < 0) {
                  (0, c.warn)("Unterminated hex string");
                  break;
                }
                if (l2 === 62) {
                  this.nextChar();
                  break;
                }
                if (O[l2] !== 1) {
                  if (u2) {
                    if ((r3 = toHexDigit(l2)) === -1) {
                      this._hexStringWarn(l2);
                      l2 = this.nextChar();
                      continue;
                    }
                  } else {
                    if ((o3 = toHexDigit(l2)) === -1) {
                      this._hexStringWarn(l2);
                      l2 = this.nextChar();
                      continue;
                    }
                    t3.push(String.fromCharCode(r3 << 4 | o3));
                  }
                  u2 = !u2;
                  l2 = this.nextChar();
                } else
                  l2 = this.nextChar();
              }
              return t3.join("");
            } }, { key: "getObj", value: function getObj() {
              for (var t3 = false, r3 = this.currentChar; ; ) {
                if (r3 < 0)
                  return l.EOF;
                if (t3)
                  r3 !== 10 && r3 !== 13 || (t3 = false);
                else if (r3 === 37)
                  t3 = true;
                else if (O[r3] !== 1)
                  break;
                r3 = this.nextChar();
              }
              switch (0 | r3) {
                case 48:
                case 49:
                case 50:
                case 51:
                case 52:
                case 53:
                case 54:
                case 55:
                case 56:
                case 57:
                case 43:
                case 45:
                case 46:
                  return this.getNumber();
                case 40:
                  return this.getString();
                case 47:
                  return this.getName();
                case 91:
                  this.nextChar();
                  return l.Cmd.get("[");
                case 93:
                  this.nextChar();
                  return l.Cmd.get("]");
                case 60:
                  if ((r3 = this.nextChar()) === 60) {
                    this.nextChar();
                    return l.Cmd.get("<<");
                  }
                  return this.getHexString();
                case 62:
                  if ((r3 = this.nextChar()) === 62) {
                    this.nextChar();
                    return l.Cmd.get(">>");
                  }
                  return l.Cmd.get(">");
                case 123:
                  this.nextChar();
                  return l.Cmd.get("{");
                case 125:
                  this.nextChar();
                  return l.Cmd.get("}");
                case 41:
                  this.nextChar();
                  throw new c.FormatError("Illegal character: ".concat(r3));
              }
              var o3 = String.fromCharCode(r3);
              if (r3 < 32 || r3 > 127) {
                var u2 = this.peekChar();
                if (u2 >= 32 && u2 <= 127) {
                  this.nextChar();
                  return l.Cmd.get(o3);
                }
              }
              for (var h2 = this.knownCommands, d2 = h2 && h2[o3] !== void 0; (r3 = this.nextChar()) >= 0 && !O[r3]; ) {
                var g2 = o3 + String.fromCharCode(r3);
                if (d2 && h2[g2] === void 0)
                  break;
                if (o3.length === 128)
                  throw new c.FormatError("Command token too long: ".concat(o3.length));
                o3 = g2;
                d2 = h2 && h2[o3] !== void 0;
              }
              if (o3 === "true")
                return true;
              if (o3 === "false")
                return false;
              if (o3 === "null")
                return null;
              o3 === "BI" && (this.beginInlineImagePos = this.stream.pos);
              return l.Cmd.get(o3);
            } }, { key: "peekObj", value: function peekObj() {
              var t3, r3 = this.stream.pos, o3 = this.currentChar, l2 = this.beginInlineImagePos;
              try {
                t3 = this.getObj();
              } catch (t4) {
                if (t4 instanceof u.MissingDataException)
                  throw t4;
                (0, c.warn)("peekObj: ".concat(t4));
              }
              this.stream.pos = r3;
              this.currentChar = o3;
              this.beginInlineImagePos = l2;
              return t3;
            } }, { key: "skipToNextLine", value: function skipToNextLine() {
              for (var t3 = this.currentChar; t3 >= 0; ) {
                if (t3 === 13) {
                  (t3 = this.nextChar()) === 10 && this.nextChar();
                  break;
                }
                if (t3 === 10) {
                  this.nextChar();
                  break;
                }
                t3 = this.nextChar();
              }
            } }]);
            return Lexer;
          }();
          r2.Lexer = T;
          var E = function() {
            function Linearization() {
              _classCallCheck(this, Linearization);
            }
            _createClass(Linearization, null, [{ key: "create", value: function create(t3) {
              function getInt(t4, r4) {
                var o4 = arguments.length > 2 && arguments[2] !== void 0 && arguments[2], c3 = t4.get(r4);
                if (Number.isInteger(c3) && (o4 ? c3 >= 0 : c3 > 0))
                  return c3;
                throw new Error('The "'.concat(r4, '" parameter in the linearization ') + "dictionary is invalid.");
              }
              var r3, o3, c2 = new x({ lexer: new T(t3), xref: null }), u2 = c2.getObj(), h2 = c2.getObj(), d2 = c2.getObj(), g2 = c2.getObj();
              if (!(Number.isInteger(u2) && Number.isInteger(h2) && (0, l.isCmd)(d2, "obj") && g2 instanceof l.Dict && typeof (r3 = g2.get("Linearized")) == "number" && r3 > 0))
                return null;
              if ((o3 = getInt(g2, "L")) !== t3.length)
                throw new Error('The "L" parameter in the linearization dictionary does not equal the stream length.');
              return { length: o3, hints: function getHints(t4) {
                var r4, o4 = t4.get("H");
                if (Array.isArray(o4) && ((r4 = o4.length) === 2 || r4 === 4)) {
                  for (var c3 = 0; c3 < r4; c3++) {
                    var l2 = o4[c3];
                    if (!(Number.isInteger(l2) && l2 > 0))
                      throw new Error("Hint (".concat(c3, ") in the linearization dictionary is invalid."));
                  }
                  return o4;
                }
                throw new Error("Hint array in the linearization dictionary is invalid.");
              }(g2), objectNumberFirst: getInt(g2, "O"), endFirst: getInt(g2, "E"), numPages: getInt(g2, "N"), mainXRefEntriesOffset: getInt(g2, "T"), pageFirst: g2.has("P") ? getInt(g2, "P", true) : 0 };
            } }]);
            return Linearization;
          }();
          r2.Linearization = E;
        }, (t2, r2, o2) => {
          "use strict";
          function _typeof(t3) {
            return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t4) {
              return typeof t4;
            } : function(t4) {
              return t4 && typeof Symbol == "function" && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
            }, _typeof(t3);
          }
          Object.defineProperty(r2, "__esModule", { value: true });
          r2.Ascii85Stream = void 0;
          var c = o2(182), l = o2(161);
          function _defineProperties(t3, r3) {
            for (var o3 = 0; o3 < r3.length; o3++) {
              var c2 = r3[o3];
              c2.enumerable = c2.enumerable || false;
              c2.configurable = true;
              "value" in c2 && (c2.writable = true);
              Object.defineProperty(t3, c2.key, c2);
            }
          }
          function _setPrototypeOf(t3, r3) {
            _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(t4, r4) {
              t4.__proto__ = r4;
              return t4;
            };
            return _setPrototypeOf(t3, r3);
          }
          function _createSuper(t3) {
            var r3 = function _isNativeReflectConstruct() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                }));
                return true;
              } catch (t4) {
                return false;
              }
            }();
            return function _createSuperInternal() {
              var o3, c2 = _getPrototypeOf(t3);
              if (r3) {
                var l2 = _getPrototypeOf(this).constructor;
                o3 = Reflect.construct(c2, arguments, l2);
              } else
                o3 = c2.apply(this, arguments);
              return _possibleConstructorReturn(this, o3);
            };
          }
          function _possibleConstructorReturn(t3, r3) {
            if (r3 && (_typeof(r3) === "object" || typeof r3 == "function"))
              return r3;
            if (r3 !== void 0)
              throw new TypeError("Derived constructors may only return object or undefined");
            return function _assertThisInitialized(t4) {
              if (t4 === void 0)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return t4;
            }(t3);
          }
          function _getPrototypeOf(t3) {
            _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(t4) {
              return t4.__proto__ || Object.getPrototypeOf(t4);
            };
            return _getPrototypeOf(t3);
          }
          var u = function(t3) {
            !function _inherits(t4, r4) {
              if (typeof r4 != "function" && r4 !== null)
                throw new TypeError("Super expression must either be null or a function");
              t4.prototype = Object.create(r4 && r4.prototype, { constructor: { value: t4, writable: true, configurable: true } });
              Object.defineProperty(t4, "prototype", { writable: false });
              r4 && _setPrototypeOf(t4, r4);
            }(Ascii85Stream, t3);
            var r3 = _createSuper(Ascii85Stream);
            function Ascii85Stream(t4, o3) {
              var c2;
              !function _classCallCheck(t5, r4) {
                if (!(t5 instanceof r4))
                  throw new TypeError("Cannot call a class as a function");
              }(this, Ascii85Stream);
              o3 && (o3 *= 0.8);
              (c2 = r3.call(this, o3)).str = t4;
              c2.dict = t4.dict;
              c2.input = new Uint8Array(5);
              return c2;
            }
            !function _createClass(t4, r4, o3) {
              r4 && _defineProperties(t4.prototype, r4);
              o3 && _defineProperties(t4, o3);
              Object.defineProperty(t4, "prototype", { writable: false });
              return t4;
            }(Ascii85Stream, [{ key: "readBlock", value: function readBlock() {
              for (var t4 = this.str, r4 = t4.getByte(); (0, l.isWhiteSpace)(r4); )
                r4 = t4.getByte();
              if (r4 !== -1 && r4 !== 126) {
                var o3, c2, u2 = this.bufferLength;
                if (r4 === 122) {
                  o3 = this.ensureBuffer(u2 + 4);
                  for (c2 = 0; c2 < 4; ++c2)
                    o3[u2 + c2] = 0;
                  this.bufferLength += 4;
                } else {
                  var h = this.input;
                  h[0] = r4;
                  for (c2 = 1; c2 < 5; ++c2) {
                    r4 = t4.getByte();
                    for (; (0, l.isWhiteSpace)(r4); )
                      r4 = t4.getByte();
                    h[c2] = r4;
                    if (r4 === -1 || r4 === 126)
                      break;
                  }
                  o3 = this.ensureBuffer(u2 + c2 - 1);
                  this.bufferLength += c2 - 1;
                  if (c2 < 5) {
                    for (; c2 < 5; ++c2)
                      h[c2] = 117;
                    this.eof = true;
                  }
                  var d = 0;
                  for (c2 = 0; c2 < 5; ++c2)
                    d = 85 * d + (h[c2] - 33);
                  for (c2 = 3; c2 >= 0; --c2) {
                    o3[u2 + c2] = 255 & d;
                    d >>= 8;
                  }
                }
              } else
                this.eof = true;
            } }]);
            return Ascii85Stream;
          }(c.DecodeStream);
          r2.Ascii85Stream = u;
        }, (t2, r2, o2) => {
          "use strict";
          function _typeof(t3) {
            return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t4) {
              return typeof t4;
            } : function(t4) {
              return t4 && typeof Symbol == "function" && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
            }, _typeof(t3);
          }
          Object.defineProperty(r2, "__esModule", { value: true });
          r2.StreamsSequenceStream = r2.DecodeStream = void 0;
          var c = o2(162), l = o2(163);
          function _toConsumableArray(t3) {
            return function _arrayWithoutHoles(t4) {
              if (Array.isArray(t4))
                return _arrayLikeToArray(t4);
            }(t3) || function _iterableToArray(t4) {
              if (typeof Symbol != "undefined" && t4[Symbol.iterator] != null || t4["@@iterator"] != null)
                return Array.from(t4);
            }(t3) || _unsupportedIterableToArray(t3) || function _nonIterableSpread() {
              throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
            }();
          }
          function _createForOfIteratorHelper(t3, r3) {
            var o3 = typeof Symbol != "undefined" && t3[Symbol.iterator] || t3["@@iterator"];
            if (!o3) {
              if (Array.isArray(t3) || (o3 = _unsupportedIterableToArray(t3)) || r3 && t3 && typeof t3.length == "number") {
                o3 && (t3 = o3);
                var c2 = 0, l2 = function F() {
                };
                return { s: l2, n: function n() {
                  return c2 >= t3.length ? { done: true } : { done: false, value: t3[c2++] };
                }, e: function e(t4) {
                  throw t4;
                }, f: l2 };
              }
              throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
            }
            var u2, h2 = true, d2 = false;
            return { s: function s() {
              o3 = o3.call(t3);
            }, n: function n() {
              var t4 = o3.next();
              h2 = t4.done;
              return t4;
            }, e: function e(t4) {
              d2 = true;
              u2 = t4;
            }, f: function f() {
              try {
                h2 || o3.return == null || o3.return();
              } finally {
                if (d2)
                  throw u2;
              }
            } };
          }
          function _unsupportedIterableToArray(t3, r3) {
            if (t3) {
              if (typeof t3 == "string")
                return _arrayLikeToArray(t3, r3);
              var o3 = Object.prototype.toString.call(t3).slice(8, -1);
              o3 === "Object" && t3.constructor && (o3 = t3.constructor.name);
              return o3 === "Map" || o3 === "Set" ? Array.from(t3) : o3 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(o3) ? _arrayLikeToArray(t3, r3) : void 0;
            }
          }
          function _arrayLikeToArray(t3, r3) {
            (r3 == null || r3 > t3.length) && (r3 = t3.length);
            for (var o3 = 0, c2 = new Array(r3); o3 < r3; o3++)
              c2[o3] = t3[o3];
            return c2;
          }
          function _classCallCheck(t3, r3) {
            if (!(t3 instanceof r3))
              throw new TypeError("Cannot call a class as a function");
          }
          function _defineProperties(t3, r3) {
            for (var o3 = 0; o3 < r3.length; o3++) {
              var c2 = r3[o3];
              c2.enumerable = c2.enumerable || false;
              c2.configurable = true;
              "value" in c2 && (c2.writable = true);
              Object.defineProperty(t3, c2.key, c2);
            }
          }
          function _createClass(t3, r3, o3) {
            r3 && _defineProperties(t3.prototype, r3);
            o3 && _defineProperties(t3, o3);
            Object.defineProperty(t3, "prototype", { writable: false });
            return t3;
          }
          function _inherits(t3, r3) {
            if (typeof r3 != "function" && r3 !== null)
              throw new TypeError("Super expression must either be null or a function");
            t3.prototype = Object.create(r3 && r3.prototype, { constructor: { value: t3, writable: true, configurable: true } });
            Object.defineProperty(t3, "prototype", { writable: false });
            r3 && _setPrototypeOf(t3, r3);
          }
          function _setPrototypeOf(t3, r3) {
            _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(t4, r4) {
              t4.__proto__ = r4;
              return t4;
            };
            return _setPrototypeOf(t3, r3);
          }
          function _createSuper(t3) {
            var r3 = function _isNativeReflectConstruct() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                }));
                return true;
              } catch (t4) {
                return false;
              }
            }();
            return function _createSuperInternal() {
              var o3, c2 = _getPrototypeOf(t3);
              if (r3) {
                var l2 = _getPrototypeOf(this).constructor;
                o3 = Reflect.construct(c2, arguments, l2);
              } else
                o3 = c2.apply(this, arguments);
              return _possibleConstructorReturn(this, o3);
            };
          }
          function _possibleConstructorReturn(t3, r3) {
            if (r3 && (_typeof(r3) === "object" || typeof r3 == "function"))
              return r3;
            if (r3 !== void 0)
              throw new TypeError("Derived constructors may only return object or undefined");
            return function _assertThisInitialized(t4) {
              if (t4 === void 0)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return t4;
            }(t3);
          }
          function _getPrototypeOf(t3) {
            _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(t4) {
              return t4.__proto__ || Object.getPrototypeOf(t4);
            };
            return _getPrototypeOf(t3);
          }
          var u = new Uint8Array(0), h = function(t3) {
            _inherits(DecodeStream, t3);
            var r3 = _createSuper(DecodeStream);
            function DecodeStream(t4) {
              var o3;
              _classCallCheck(this, DecodeStream);
              (o3 = r3.call(this))._rawMinBufferLength = t4 || 0;
              o3.pos = 0;
              o3.bufferLength = 0;
              o3.eof = false;
              o3.buffer = u;
              o3.minBufferLength = 512;
              if (t4)
                for (; o3.minBufferLength < t4; )
                  o3.minBufferLength *= 2;
              return o3;
            }
            _createClass(DecodeStream, [{ key: "isEmpty", get: function get() {
              for (; !this.eof && this.bufferLength === 0; )
                this.readBlock();
              return this.bufferLength === 0;
            } }, { key: "ensureBuffer", value: function ensureBuffer(t4) {
              var r4 = this.buffer;
              if (t4 <= r4.byteLength)
                return r4;
              for (var o3 = this.minBufferLength; o3 < t4; )
                o3 *= 2;
              var c2 = new Uint8Array(o3);
              c2.set(r4);
              return this.buffer = c2;
            } }, { key: "getByte", value: function getByte() {
              for (var t4 = this.pos; this.bufferLength <= t4; ) {
                if (this.eof)
                  return -1;
                this.readBlock();
              }
              return this.buffer[this.pos++];
            } }, { key: "getBytes", value: function getBytes(t4) {
              var r4, o3 = this.pos;
              if (t4) {
                this.ensureBuffer(o3 + t4);
                r4 = o3 + t4;
                for (; !this.eof && this.bufferLength < r4; )
                  this.readBlock();
                var c2 = this.bufferLength;
                r4 > c2 && (r4 = c2);
              } else {
                for (; !this.eof; )
                  this.readBlock();
                r4 = this.bufferLength;
              }
              this.pos = r4;
              return this.buffer.subarray(o3, r4);
            } }, { key: "reset", value: function reset() {
              this.pos = 0;
            } }, { key: "makeSubStream", value: function makeSubStream(t4, r4) {
              var o3 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null;
              if (r4 === void 0)
                for (; !this.eof; )
                  this.readBlock();
              else
                for (var c2 = t4 + r4; this.bufferLength <= c2 && !this.eof; )
                  this.readBlock();
              return new l.Stream(this.buffer, t4, r4, o3);
            } }, { key: "getBaseStreams", value: function getBaseStreams() {
              return this.str ? this.str.getBaseStreams() : null;
            } }]);
            return DecodeStream;
          }(c.BaseStream);
          r2.DecodeStream = h;
          var d = function(t3) {
            _inherits(StreamsSequenceStream, t3);
            var r3 = _createSuper(StreamsSequenceStream);
            function StreamsSequenceStream(t4) {
              var o3, c2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null;
              _classCallCheck(this, StreamsSequenceStream);
              var l2, u2 = 0, d2 = _createForOfIteratorHelper(t4);
              try {
                for (d2.s(); !(l2 = d2.n()).done; ) {
                  var g = l2.value;
                  u2 += g instanceof h ? g._rawMinBufferLength : g.length;
                }
              } catch (t5) {
                d2.e(t5);
              } finally {
                d2.f();
              }
              (o3 = r3.call(this, u2)).streams = t4;
              o3._onError = c2;
              return o3;
            }
            _createClass(StreamsSequenceStream, [{ key: "readBlock", value: function readBlock() {
              var t4 = this.streams;
              if (t4.length !== 0) {
                var r4, o3 = t4.shift();
                try {
                  r4 = o3.getBytes();
                } catch (t5) {
                  if (this._onError) {
                    this._onError(t5, o3.dict && o3.dict.objId);
                    return;
                  }
                  throw t5;
                }
                var c2 = this.bufferLength, l2 = c2 + r4.length;
                this.ensureBuffer(l2).set(r4, c2);
                this.bufferLength = l2;
              } else
                this.eof = true;
            } }, { key: "getBaseStreams", value: function getBaseStreams() {
              var t4, r4 = [], o3 = _createForOfIteratorHelper(this.streams);
              try {
                for (o3.s(); !(t4 = o3.n()).done; ) {
                  var c2 = t4.value.getBaseStreams();
                  c2 && r4.push.apply(r4, _toConsumableArray(c2));
                }
              } catch (t5) {
                o3.e(t5);
              } finally {
                o3.f();
              }
              return r4.length > 0 ? r4 : null;
            } }]);
            return StreamsSequenceStream;
          }(h);
          r2.StreamsSequenceStream = d;
        }, (t2, r2, o2) => {
          "use strict";
          function _typeof(t3) {
            return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t4) {
              return typeof t4;
            } : function(t4) {
              return t4 && typeof Symbol == "function" && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
            }, _typeof(t3);
          }
          Object.defineProperty(r2, "__esModule", { value: true });
          r2.AsciiHexStream = void 0;
          function _createForOfIteratorHelper(t3, r3) {
            var o3 = typeof Symbol != "undefined" && t3[Symbol.iterator] || t3["@@iterator"];
            if (!o3) {
              if (Array.isArray(t3) || (o3 = function _unsupportedIterableToArray(t4, r4) {
                if (!t4)
                  return;
                if (typeof t4 == "string")
                  return _arrayLikeToArray(t4, r4);
                var o4 = Object.prototype.toString.call(t4).slice(8, -1);
                o4 === "Object" && t4.constructor && (o4 = t4.constructor.name);
                if (o4 === "Map" || o4 === "Set")
                  return Array.from(t4);
                if (o4 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(o4))
                  return _arrayLikeToArray(t4, r4);
              }(t3)) || r3 && t3 && typeof t3.length == "number") {
                o3 && (t3 = o3);
                var c2 = 0, l = function F() {
                };
                return { s: l, n: function n() {
                  return c2 >= t3.length ? { done: true } : { done: false, value: t3[c2++] };
                }, e: function e(t4) {
                  throw t4;
                }, f: l };
              }
              throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
            }
            var u, h = true, d = false;
            return { s: function s() {
              o3 = o3.call(t3);
            }, n: function n() {
              var t4 = o3.next();
              h = t4.done;
              return t4;
            }, e: function e(t4) {
              d = true;
              u = t4;
            }, f: function f() {
              try {
                h || o3.return == null || o3.return();
              } finally {
                if (d)
                  throw u;
              }
            } };
          }
          function _arrayLikeToArray(t3, r3) {
            (r3 == null || r3 > t3.length) && (r3 = t3.length);
            for (var o3 = 0, c2 = new Array(r3); o3 < r3; o3++)
              c2[o3] = t3[o3];
            return c2;
          }
          function _defineProperties(t3, r3) {
            for (var o3 = 0; o3 < r3.length; o3++) {
              var c2 = r3[o3];
              c2.enumerable = c2.enumerable || false;
              c2.configurable = true;
              "value" in c2 && (c2.writable = true);
              Object.defineProperty(t3, c2.key, c2);
            }
          }
          function _setPrototypeOf(t3, r3) {
            _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(t4, r4) {
              t4.__proto__ = r4;
              return t4;
            };
            return _setPrototypeOf(t3, r3);
          }
          function _createSuper(t3) {
            var r3 = function _isNativeReflectConstruct() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                }));
                return true;
              } catch (t4) {
                return false;
              }
            }();
            return function _createSuperInternal() {
              var o3, c2 = _getPrototypeOf(t3);
              if (r3) {
                var l = _getPrototypeOf(this).constructor;
                o3 = Reflect.construct(c2, arguments, l);
              } else
                o3 = c2.apply(this, arguments);
              return _possibleConstructorReturn(this, o3);
            };
          }
          function _possibleConstructorReturn(t3, r3) {
            if (r3 && (_typeof(r3) === "object" || typeof r3 == "function"))
              return r3;
            if (r3 !== void 0)
              throw new TypeError("Derived constructors may only return object or undefined");
            return function _assertThisInitialized(t4) {
              if (t4 === void 0)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return t4;
            }(t3);
          }
          function _getPrototypeOf(t3) {
            _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(t4) {
              return t4.__proto__ || Object.getPrototypeOf(t4);
            };
            return _getPrototypeOf(t3);
          }
          var c = function(t3) {
            !function _inherits(t4, r4) {
              if (typeof r4 != "function" && r4 !== null)
                throw new TypeError("Super expression must either be null or a function");
              t4.prototype = Object.create(r4 && r4.prototype, { constructor: { value: t4, writable: true, configurable: true } });
              Object.defineProperty(t4, "prototype", { writable: false });
              r4 && _setPrototypeOf(t4, r4);
            }(AsciiHexStream, t3);
            var r3 = _createSuper(AsciiHexStream);
            function AsciiHexStream(t4, o3) {
              var c2;
              !function _classCallCheck(t5, r4) {
                if (!(t5 instanceof r4))
                  throw new TypeError("Cannot call a class as a function");
              }(this, AsciiHexStream);
              o3 && (o3 *= 0.5);
              (c2 = r3.call(this, o3)).str = t4;
              c2.dict = t4.dict;
              c2.firstDigit = -1;
              return c2;
            }
            !function _createClass(t4, r4, o3) {
              r4 && _defineProperties(t4.prototype, r4);
              o3 && _defineProperties(t4, o3);
              Object.defineProperty(t4, "prototype", { writable: false });
              return t4;
            }(AsciiHexStream, [{ key: "readBlock", value: function readBlock() {
              var t4 = this.str.getBytes(8e3);
              if (t4.length) {
                var r4, o3 = t4.length + 1 >> 1, c2 = this.ensureBuffer(this.bufferLength + o3), l = this.bufferLength, u = this.firstDigit, h = _createForOfIteratorHelper(t4);
                try {
                  for (h.s(); !(r4 = h.n()).done; ) {
                    var d = r4.value, g = void 0;
                    if (d >= 48 && d <= 57)
                      g = 15 & d;
                    else {
                      if (!(d >= 65 && d <= 70 || d >= 97 && d <= 102)) {
                        if (d === 62) {
                          this.eof = true;
                          break;
                        }
                        continue;
                      }
                      g = 9 + (15 & d);
                    }
                    if (u < 0)
                      u = g;
                    else {
                      c2[l++] = u << 4 | g;
                      u = -1;
                    }
                  }
                } catch (t5) {
                  h.e(t5);
                } finally {
                  h.f();
                }
                if (u >= 0 && this.eof) {
                  c2[l++] = u << 4;
                  u = -1;
                }
                this.firstDigit = u;
                this.bufferLength = l;
              } else
                this.eof = true;
            } }]);
            return AsciiHexStream;
          }(o2(182).DecodeStream);
          r2.AsciiHexStream = c;
        }, (t2, r2, o2) => {
          "use strict";
          function _typeof(t3) {
            return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t4) {
              return typeof t4;
            } : function(t4) {
              return t4 && typeof Symbol == "function" && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
            }, _typeof(t3);
          }
          Object.defineProperty(r2, "__esModule", { value: true });
          r2.CCITTFaxStream = void 0;
          var c = o2(185), l = o2(182), u = o2(158);
          function _defineProperties(t3, r3) {
            for (var o3 = 0; o3 < r3.length; o3++) {
              var c2 = r3[o3];
              c2.enumerable = c2.enumerable || false;
              c2.configurable = true;
              "value" in c2 && (c2.writable = true);
              Object.defineProperty(t3, c2.key, c2);
            }
          }
          function _setPrototypeOf(t3, r3) {
            _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(t4, r4) {
              t4.__proto__ = r4;
              return t4;
            };
            return _setPrototypeOf(t3, r3);
          }
          function _createSuper(t3) {
            var r3 = function _isNativeReflectConstruct() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                }));
                return true;
              } catch (t4) {
                return false;
              }
            }();
            return function _createSuperInternal() {
              var o3, c2 = _getPrototypeOf(t3);
              if (r3) {
                var l2 = _getPrototypeOf(this).constructor;
                o3 = Reflect.construct(c2, arguments, l2);
              } else
                o3 = c2.apply(this, arguments);
              return _possibleConstructorReturn(this, o3);
            };
          }
          function _possibleConstructorReturn(t3, r3) {
            if (r3 && (_typeof(r3) === "object" || typeof r3 == "function"))
              return r3;
            if (r3 !== void 0)
              throw new TypeError("Derived constructors may only return object or undefined");
            return function _assertThisInitialized(t4) {
              if (t4 === void 0)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return t4;
            }(t3);
          }
          function _getPrototypeOf(t3) {
            _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(t4) {
              return t4.__proto__ || Object.getPrototypeOf(t4);
            };
            return _getPrototypeOf(t3);
          }
          var h = function(t3) {
            !function _inherits(t4, r4) {
              if (typeof r4 != "function" && r4 !== null)
                throw new TypeError("Super expression must either be null or a function");
              t4.prototype = Object.create(r4 && r4.prototype, { constructor: { value: t4, writable: true, configurable: true } });
              Object.defineProperty(t4, "prototype", { writable: false });
              r4 && _setPrototypeOf(t4, r4);
            }(CCITTFaxStream, t3);
            var r3 = _createSuper(CCITTFaxStream);
            function CCITTFaxStream(t4, o3, l2) {
              var h2;
              !function _classCallCheck(t5, r4) {
                if (!(t5 instanceof r4))
                  throw new TypeError("Cannot call a class as a function");
              }(this, CCITTFaxStream);
              (h2 = r3.call(this, o3)).str = t4;
              h2.dict = t4.dict;
              l2 instanceof u.Dict || (l2 = u.Dict.empty);
              var d = { next: function next() {
                return t4.getByte();
              } };
              h2.ccittFaxDecoder = new c.CCITTFaxDecoder(d, { K: l2.get("K"), EndOfLine: l2.get("EndOfLine"), EncodedByteAlign: l2.get("EncodedByteAlign"), Columns: l2.get("Columns"), Rows: l2.get("Rows"), EndOfBlock: l2.get("EndOfBlock"), BlackIs1: l2.get("BlackIs1") });
              return h2;
            }
            !function _createClass(t4, r4, o3) {
              r4 && _defineProperties(t4.prototype, r4);
              o3 && _defineProperties(t4, o3);
              Object.defineProperty(t4, "prototype", { writable: false });
              return t4;
            }(CCITTFaxStream, [{ key: "readBlock", value: function readBlock() {
              for (; !this.eof; ) {
                var t4 = this.ccittFaxDecoder.readNextChar();
                if (t4 === -1) {
                  this.eof = true;
                  return;
                }
                this.ensureBuffer(this.bufferLength + 1);
                this.buffer[this.bufferLength++] = t4;
              }
            } }]);
            return CCITTFaxStream;
          }(l.DecodeStream);
          r2.CCITTFaxStream = h;
        }, (t2, r2, o2) => {
          "use strict";
          Object.defineProperty(r2, "__esModule", { value: true });
          r2.CCITTFaxDecoder = void 0;
          var c = o2(4);
          function _classCallCheck(t3, r3) {
            if (!(t3 instanceof r3))
              throw new TypeError("Cannot call a class as a function");
          }
          function _defineProperties(t3, r3) {
            for (var o3 = 0; o3 < r3.length; o3++) {
              var c2 = r3[o3];
              c2.enumerable = c2.enumerable || false;
              c2.configurable = true;
              "value" in c2 && (c2.writable = true);
              Object.defineProperty(t3, c2.key, c2);
            }
          }
          var l = -1, u = [[-1, -1], [-1, -1], [7, 8], [7, 7], [6, 6], [6, 6], [6, 5], [6, 5], [4, 0], [4, 0], [4, 0], [4, 0], [4, 0], [4, 0], [4, 0], [4, 0], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 3], [3, 3], [3, 3], [3, 3], [3, 3], [3, 3], [3, 3], [3, 3], [3, 3], [3, 3], [3, 3], [3, 3], [3, 3], [3, 3], [3, 3], [3, 3], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2]], h = [[-1, -1], [12, -2], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [11, 1792], [11, 1792], [12, 1984], [12, 2048], [12, 2112], [12, 2176], [12, 2240], [12, 2304], [11, 1856], [11, 1856], [11, 1920], [11, 1920], [12, 2368], [12, 2432], [12, 2496], [12, 2560]], d = [[-1, -1], [-1, -1], [-1, -1], [-1, -1], [8, 29], [8, 29], [8, 30], [8, 30], [8, 45], [8, 45], [8, 46], [8, 46], [7, 22], [7, 22], [7, 22], [7, 22], [7, 23], [7, 23], [7, 23], [7, 23], [8, 47], [8, 47], [8, 48], [8, 48], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [7, 20], [7, 20], [7, 20], [7, 20], [8, 33], [8, 33], [8, 34], [8, 34], [8, 35], [8, 35], [8, 36], [8, 36], [8, 37], [8, 37], [8, 38], [8, 38], [7, 19], [7, 19], [7, 19], [7, 19], [8, 31], [8, 31], [8, 32], [8, 32], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [8, 53], [8, 53], [8, 54], [8, 54], [7, 26], [7, 26], [7, 26], [7, 26], [8, 39], [8, 39], [8, 40], [8, 40], [8, 41], [8, 41], [8, 42], [8, 42], [8, 43], [8, 43], [8, 44], [8, 44], [7, 21], [7, 21], [7, 21], [7, 21], [7, 28], [7, 28], [7, 28], [7, 28], [8, 61], [8, 61], [8, 62], [8, 62], [8, 63], [8, 63], [8, 0], [8, 0], [8, 320], [8, 320], [8, 384], [8, 384], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [7, 27], [7, 27], [7, 27], [7, 27], [8, 59], [8, 59], [8, 60], [8, 60], [9, 1472], [9, 1536], [9, 1600], [9, 1728], [7, 18], [7, 18], [7, 18], [7, 18], [7, 24], [7, 24], [7, 24], [7, 24], [8, 49], [8, 49], [8, 50], [8, 50], [8, 51], [8, 51], [8, 52], [8, 52], [7, 25], [7, 25], [7, 25], [7, 25], [8, 55], [8, 55], [8, 56], [8, 56], [8, 57], [8, 57], [8, 58], [8, 58], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [8, 448], [8, 448], [8, 512], [8, 512], [9, 704], [9, 768], [8, 640], [8, 640], [8, 576], [8, 576], [9, 832], [9, 896], [9, 960], [9, 1024], [9, 1088], [9, 1152], [9, 1216], [9, 1280], [9, 1344], [9, 1408], [7, 256], [7, 256], [7, 256], [7, 256], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7]], g = [[-1, -1], [-1, -1], [12, -2], [12, -2], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [11, 1792], [11, 1792], [11, 1792], [11, 1792], [12, 1984], [12, 1984], [12, 2048], [12, 2048], [12, 2112], [12, 2112], [12, 2176], [12, 2176], [12, 2240], [12, 2240], [12, 2304], [12, 2304], [11, 1856], [11, 1856], [11, 1856], [11, 1856], [11, 1920], [11, 1920], [11, 1920], [11, 1920], [12, 2368], [12, 2368], [12, 2432], [12, 2432], [12, 2496], [12, 2496], [12, 2560], [12, 2560], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [12, 52], [12, 52], [13, 640], [13, 704], [13, 768], [13, 832], [12, 55], [12, 55], [12, 56], [12, 56], [13, 1280], [13, 1344], [13, 1408], [13, 1472], [12, 59], [12, 59], [12, 60], [12, 60], [13, 1536], [13, 1600], [11, 24], [11, 24], [11, 24], [11, 24], [11, 25], [11, 25], [11, 25], [11, 25], [13, 1664], [13, 1728], [12, 320], [12, 320], [12, 384], [12, 384], [12, 448], [12, 448], [13, 512], [13, 576], [12, 53], [12, 53], [12, 54], [12, 54], [13, 896], [13, 960], [13, 1024], [13, 1088], [13, 1152], [13, 1216], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64]], m = [[8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [11, 23], [11, 23], [12, 50], [12, 51], [12, 44], [12, 45], [12, 46], [12, 47], [12, 57], [12, 58], [12, 61], [12, 256], [10, 16], [10, 16], [10, 16], [10, 16], [10, 17], [10, 17], [10, 17], [10, 17], [12, 48], [12, 49], [12, 62], [12, 63], [12, 30], [12, 31], [12, 32], [12, 33], [12, 40], [12, 41], [11, 22], [11, 22], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [12, 128], [12, 192], [12, 26], [12, 27], [12, 28], [12, 29], [11, 19], [11, 19], [11, 20], [11, 20], [12, 34], [12, 35], [12, 36], [12, 37], [12, 38], [12, 39], [11, 21], [11, 21], [12, 42], [12, 43], [10, 0], [10, 0], [10, 0], [10, 0], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12]], y = [[-1, -1], [-1, -1], [-1, -1], [-1, -1], [6, 9], [6, 8], [5, 7], [5, 7], [4, 6], [4, 6], [4, 6], [4, 6], [4, 5], [4, 5], [4, 5], [4, 5], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2]], v = function() {
            function CCITTFaxDecoder(t3) {
              var r3 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
              _classCallCheck(this, CCITTFaxDecoder);
              if (!t3 || typeof t3.next != "function")
                throw new Error('CCITTFaxDecoder - invalid "source" parameter.');
              this.source = t3;
              this.eof = false;
              this.encoding = r3.K || 0;
              this.eoline = r3.EndOfLine || false;
              this.byteAlign = r3.EncodedByteAlign || false;
              this.columns = r3.Columns || 1728;
              this.rows = r3.Rows || 0;
              var o3, c2 = r3.EndOfBlock;
              c2 == null && (c2 = true);
              this.eoblock = c2;
              this.black = r3.BlackIs1 || false;
              this.codingLine = new Uint32Array(this.columns + 1);
              this.refLine = new Uint32Array(this.columns + 2);
              this.codingLine[0] = this.columns;
              this.codingPos = 0;
              this.row = 0;
              this.nextLine2D = this.encoding < 0;
              this.inputBits = 0;
              this.inputBuf = 0;
              this.outputBits = 0;
              this.rowsDone = false;
              for (; (o3 = this._lookBits(12)) === 0; )
                this._eatBits(1);
              o3 === 1 && this._eatBits(12);
              if (this.encoding > 0) {
                this.nextLine2D = !this._lookBits(1);
                this._eatBits(1);
              }
            }
            !function _createClass(t3, r3, o3) {
              r3 && _defineProperties(t3.prototype, r3);
              o3 && _defineProperties(t3, o3);
              Object.defineProperty(t3, "prototype", { writable: false });
              return t3;
            }(CCITTFaxDecoder, [{ key: "readNextChar", value: function readNextChar() {
              if (this.eof)
                return -1;
              var t3, r3, o3, u2, h2, d2 = this.refLine, g2 = this.codingLine, m2 = this.columns;
              if (this.outputBits === 0) {
                this.rowsDone && (this.eof = true);
                if (this.eof)
                  return -1;
                this.err = false;
                var y2, v2, k;
                if (this.nextLine2D) {
                  for (u2 = 0; g2[u2] < m2; ++u2)
                    d2[u2] = g2[u2];
                  d2[u2++] = m2;
                  d2[u2] = m2;
                  g2[0] = 0;
                  this.codingPos = 0;
                  t3 = 0;
                  r3 = 0;
                  for (; g2[this.codingPos] < m2; )
                    switch (y2 = this._getTwoDimCode()) {
                      case 0:
                        this._addPixels(d2[t3 + 1], r3);
                        d2[t3 + 1] < m2 && (t3 += 2);
                        break;
                      case 1:
                        y2 = v2 = 0;
                        if (r3) {
                          do {
                            y2 += k = this._getBlackCode();
                          } while (k >= 64);
                          do {
                            v2 += k = this._getWhiteCode();
                          } while (k >= 64);
                        } else {
                          do {
                            y2 += k = this._getWhiteCode();
                          } while (k >= 64);
                          do {
                            v2 += k = this._getBlackCode();
                          } while (k >= 64);
                        }
                        this._addPixels(g2[this.codingPos] + y2, r3);
                        g2[this.codingPos] < m2 && this._addPixels(g2[this.codingPos] + v2, 1 ^ r3);
                        for (; d2[t3] <= g2[this.codingPos] && d2[t3] < m2; )
                          t3 += 2;
                        break;
                      case 7:
                        this._addPixels(d2[t3] + 3, r3);
                        r3 ^= 1;
                        if (g2[this.codingPos] < m2) {
                          ++t3;
                          for (; d2[t3] <= g2[this.codingPos] && d2[t3] < m2; )
                            t3 += 2;
                        }
                        break;
                      case 5:
                        this._addPixels(d2[t3] + 2, r3);
                        r3 ^= 1;
                        if (g2[this.codingPos] < m2) {
                          ++t3;
                          for (; d2[t3] <= g2[this.codingPos] && d2[t3] < m2; )
                            t3 += 2;
                        }
                        break;
                      case 3:
                        this._addPixels(d2[t3] + 1, r3);
                        r3 ^= 1;
                        if (g2[this.codingPos] < m2) {
                          ++t3;
                          for (; d2[t3] <= g2[this.codingPos] && d2[t3] < m2; )
                            t3 += 2;
                        }
                        break;
                      case 2:
                        this._addPixels(d2[t3], r3);
                        r3 ^= 1;
                        if (g2[this.codingPos] < m2) {
                          ++t3;
                          for (; d2[t3] <= g2[this.codingPos] && d2[t3] < m2; )
                            t3 += 2;
                        }
                        break;
                      case 8:
                        this._addPixelsNeg(d2[t3] - 3, r3);
                        r3 ^= 1;
                        if (g2[this.codingPos] < m2) {
                          t3 > 0 ? --t3 : ++t3;
                          for (; d2[t3] <= g2[this.codingPos] && d2[t3] < m2; )
                            t3 += 2;
                        }
                        break;
                      case 6:
                        this._addPixelsNeg(d2[t3] - 2, r3);
                        r3 ^= 1;
                        if (g2[this.codingPos] < m2) {
                          t3 > 0 ? --t3 : ++t3;
                          for (; d2[t3] <= g2[this.codingPos] && d2[t3] < m2; )
                            t3 += 2;
                        }
                        break;
                      case 4:
                        this._addPixelsNeg(d2[t3] - 1, r3);
                        r3 ^= 1;
                        if (g2[this.codingPos] < m2) {
                          t3 > 0 ? --t3 : ++t3;
                          for (; d2[t3] <= g2[this.codingPos] && d2[t3] < m2; )
                            t3 += 2;
                        }
                        break;
                      case l:
                        this._addPixels(m2, 0);
                        this.eof = true;
                        break;
                      default:
                        (0, c.info)("bad 2d code");
                        this._addPixels(m2, 0);
                        this.err = true;
                    }
                } else {
                  g2[0] = 0;
                  this.codingPos = 0;
                  r3 = 0;
                  for (; g2[this.codingPos] < m2; ) {
                    y2 = 0;
                    if (r3)
                      do {
                        y2 += k = this._getBlackCode();
                      } while (k >= 64);
                    else
                      do {
                        y2 += k = this._getWhiteCode();
                      } while (k >= 64);
                    this._addPixels(g2[this.codingPos] + y2, r3);
                    r3 ^= 1;
                  }
                }
                var _ = false;
                this.byteAlign && (this.inputBits &= -8);
                if (this.eoblock || this.row !== this.rows - 1) {
                  y2 = this._lookBits(12);
                  if (this.eoline)
                    for (; y2 !== l && y2 !== 1; ) {
                      this._eatBits(1);
                      y2 = this._lookBits(12);
                    }
                  else
                    for (; y2 === 0; ) {
                      this._eatBits(1);
                      y2 = this._lookBits(12);
                    }
                  if (y2 === 1) {
                    this._eatBits(12);
                    _ = true;
                  } else
                    y2 === l && (this.eof = true);
                } else
                  this.rowsDone = true;
                if (!this.eof && this.encoding > 0 && !this.rowsDone) {
                  this.nextLine2D = !this._lookBits(1);
                  this._eatBits(1);
                }
                if (this.eoblock && _ && this.byteAlign) {
                  if ((y2 = this._lookBits(12)) === 1) {
                    this._eatBits(12);
                    if (this.encoding > 0) {
                      this._lookBits(1);
                      this._eatBits(1);
                    }
                    if (this.encoding >= 0)
                      for (u2 = 0; u2 < 4; ++u2) {
                        (y2 = this._lookBits(12)) !== 1 && (0, c.info)("bad rtc code: " + y2);
                        this._eatBits(12);
                        if (this.encoding > 0) {
                          this._lookBits(1);
                          this._eatBits(1);
                        }
                      }
                    this.eof = true;
                  }
                } else if (this.err && this.eoline) {
                  for (; ; ) {
                    if ((y2 = this._lookBits(13)) === l) {
                      this.eof = true;
                      return -1;
                    }
                    if (y2 >> 1 == 1)
                      break;
                    this._eatBits(1);
                  }
                  this._eatBits(12);
                  if (this.encoding > 0) {
                    this._eatBits(1);
                    this.nextLine2D = !(1 & y2);
                  }
                }
                g2[0] > 0 ? this.outputBits = g2[this.codingPos = 0] : this.outputBits = g2[this.codingPos = 1];
                this.row++;
              }
              if (this.outputBits >= 8) {
                h2 = 1 & this.codingPos ? 0 : 255;
                this.outputBits -= 8;
                if (this.outputBits === 0 && g2[this.codingPos] < m2) {
                  this.codingPos++;
                  this.outputBits = g2[this.codingPos] - g2[this.codingPos - 1];
                }
              } else {
                o3 = 8;
                h2 = 0;
                do {
                  if (typeof this.outputBits != "number")
                    throw new c.FormatError('Invalid /CCITTFaxDecode data, "outputBits" must be a number.');
                  if (this.outputBits > o3) {
                    h2 <<= o3;
                    1 & this.codingPos || (h2 |= 255 >> 8 - o3);
                    this.outputBits -= o3;
                    o3 = 0;
                  } else {
                    h2 <<= this.outputBits;
                    1 & this.codingPos || (h2 |= 255 >> 8 - this.outputBits);
                    o3 -= this.outputBits;
                    this.outputBits = 0;
                    if (g2[this.codingPos] < m2) {
                      this.codingPos++;
                      this.outputBits = g2[this.codingPos] - g2[this.codingPos - 1];
                    } else if (o3 > 0) {
                      h2 <<= o3;
                      o3 = 0;
                    }
                  }
                } while (o3);
              }
              this.black && (h2 ^= 255);
              return h2;
            } }, { key: "_addPixels", value: function _addPixels(t3, r3) {
              var o3 = this.codingLine, l2 = this.codingPos;
              if (t3 > o3[l2]) {
                if (t3 > this.columns) {
                  (0, c.info)("row is wrong length");
                  this.err = true;
                  t3 = this.columns;
                }
                1 & l2 ^ r3 && ++l2;
                o3[l2] = t3;
              }
              this.codingPos = l2;
            } }, { key: "_addPixelsNeg", value: function _addPixelsNeg(t3, r3) {
              var o3 = this.codingLine, l2 = this.codingPos;
              if (t3 > o3[l2]) {
                if (t3 > this.columns) {
                  (0, c.info)("row is wrong length");
                  this.err = true;
                  t3 = this.columns;
                }
                1 & l2 ^ r3 && ++l2;
                o3[l2] = t3;
              } else if (t3 < o3[l2]) {
                if (t3 < 0) {
                  (0, c.info)("invalid code");
                  this.err = true;
                  t3 = 0;
                }
                for (; l2 > 0 && t3 < o3[l2 - 1]; )
                  --l2;
                o3[l2] = t3;
              }
              this.codingPos = l2;
            } }, { key: "_findTableCode", value: function _findTableCode(t3, r3, o3, c2) {
              for (var u2 = c2 || 0, h2 = t3; h2 <= r3; ++h2) {
                var d2 = this._lookBits(h2);
                if (d2 === l)
                  return [true, 1, false];
                h2 < r3 && (d2 <<= r3 - h2);
                if (!u2 || d2 >= u2) {
                  var g2 = o3[d2 - u2];
                  if (g2[0] === h2) {
                    this._eatBits(h2);
                    return [true, g2[1], true];
                  }
                }
              }
              return [false, 0, false];
            } }, { key: "_getTwoDimCode", value: function _getTwoDimCode() {
              var t3, r3 = 0;
              if (this.eoblock) {
                r3 = this._lookBits(7);
                if ((t3 = u[r3]) && t3[0] > 0) {
                  this._eatBits(t3[0]);
                  return t3[1];
                }
              } else {
                var o3 = this._findTableCode(1, 7, u);
                if (o3[0] && o3[2])
                  return o3[1];
              }
              (0, c.info)("Bad two dim code");
              return l;
            } }, { key: "_getWhiteCode", value: function _getWhiteCode() {
              var t3, r3 = 0;
              if (this.eoblock) {
                if ((r3 = this._lookBits(12)) === l)
                  return 1;
                if ((t3 = r3 >> 5 == 0 ? h[r3] : d[r3 >> 3])[0] > 0) {
                  this._eatBits(t3[0]);
                  return t3[1];
                }
              } else {
                var o3 = this._findTableCode(1, 9, d);
                if (o3[0])
                  return o3[1];
                if ((o3 = this._findTableCode(11, 12, h))[0])
                  return o3[1];
              }
              (0, c.info)("bad white code");
              this._eatBits(1);
              return 1;
            } }, { key: "_getBlackCode", value: function _getBlackCode() {
              var t3, r3;
              if (this.eoblock) {
                if ((t3 = this._lookBits(13)) === l)
                  return 1;
                if ((r3 = t3 >> 7 == 0 ? g[t3] : t3 >> 9 == 0 && t3 >> 7 != 0 ? m[(t3 >> 1) - 64] : y[t3 >> 7])[0] > 0) {
                  this._eatBits(r3[0]);
                  return r3[1];
                }
              } else {
                var o3 = this._findTableCode(2, 6, y);
                if (o3[0])
                  return o3[1];
                if ((o3 = this._findTableCode(7, 12, m, 64))[0])
                  return o3[1];
                if ((o3 = this._findTableCode(10, 13, g))[0])
                  return o3[1];
              }
              (0, c.info)("bad black code");
              this._eatBits(1);
              return 1;
            } }, { key: "_lookBits", value: function _lookBits(t3) {
              for (var r3; this.inputBits < t3; ) {
                if ((r3 = this.source.next()) === -1)
                  return this.inputBits === 0 ? l : this.inputBuf << t3 - this.inputBits & 65535 >> 16 - t3;
                this.inputBuf = this.inputBuf << 8 | r3;
                this.inputBits += 8;
              }
              return this.inputBuf >> this.inputBits - t3 & 65535 >> 16 - t3;
            } }, { key: "_eatBits", value: function _eatBits(t3) {
              (this.inputBits -= t3) < 0 && (this.inputBits = 0);
            } }]);
            return CCITTFaxDecoder;
          }();
          r2.CCITTFaxDecoder = v;
        }, (t2, r2, o2) => {
          "use strict";
          function _typeof(t3) {
            return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t4) {
              return typeof t4;
            } : function(t4) {
              return t4 && typeof Symbol == "function" && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
            }, _typeof(t3);
          }
          Object.defineProperty(r2, "__esModule", { value: true });
          r2.FlateStream = void 0;
          var c = o2(182), l = o2(4);
          function _defineProperties(t3, r3) {
            for (var o3 = 0; o3 < r3.length; o3++) {
              var c2 = r3[o3];
              c2.enumerable = c2.enumerable || false;
              c2.configurable = true;
              "value" in c2 && (c2.writable = true);
              Object.defineProperty(t3, c2.key, c2);
            }
          }
          function _setPrototypeOf(t3, r3) {
            _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(t4, r4) {
              t4.__proto__ = r4;
              return t4;
            };
            return _setPrototypeOf(t3, r3);
          }
          function _createSuper(t3) {
            var r3 = function _isNativeReflectConstruct() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                }));
                return true;
              } catch (t4) {
                return false;
              }
            }();
            return function _createSuperInternal() {
              var o3, c2 = _getPrototypeOf(t3);
              if (r3) {
                var l2 = _getPrototypeOf(this).constructor;
                o3 = Reflect.construct(c2, arguments, l2);
              } else
                o3 = c2.apply(this, arguments);
              return _possibleConstructorReturn(this, o3);
            };
          }
          function _possibleConstructorReturn(t3, r3) {
            if (r3 && (_typeof(r3) === "object" || typeof r3 == "function"))
              return r3;
            if (r3 !== void 0)
              throw new TypeError("Derived constructors may only return object or undefined");
            return function _assertThisInitialized(t4) {
              if (t4 === void 0)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return t4;
            }(t3);
          }
          function _getPrototypeOf(t3) {
            _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(t4) {
              return t4.__proto__ || Object.getPrototypeOf(t4);
            };
            return _getPrototypeOf(t3);
          }
          var u = new Int32Array([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]), h = new Int32Array([3, 4, 5, 6, 7, 8, 9, 10, 65547, 65549, 65551, 65553, 131091, 131095, 131099, 131103, 196643, 196651, 196659, 196667, 262211, 262227, 262243, 262259, 327811, 327843, 327875, 327907, 258, 258, 258]), d = new Int32Array([1, 2, 3, 4, 65541, 65543, 131081, 131085, 196625, 196633, 262177, 262193, 327745, 327777, 393345, 393409, 459009, 459137, 524801, 525057, 590849, 591361, 657409, 658433, 724993, 727041, 794625, 798721, 868353, 876545]), g = [new Int32Array([459008, 524368, 524304, 524568, 459024, 524400, 524336, 590016, 459016, 524384, 524320, 589984, 524288, 524416, 524352, 590048, 459012, 524376, 524312, 589968, 459028, 524408, 524344, 590032, 459020, 524392, 524328, 59e4, 524296, 524424, 524360, 590064, 459010, 524372, 524308, 524572, 459026, 524404, 524340, 590024, 459018, 524388, 524324, 589992, 524292, 524420, 524356, 590056, 459014, 524380, 524316, 589976, 459030, 524412, 524348, 590040, 459022, 524396, 524332, 590008, 524300, 524428, 524364, 590072, 459009, 524370, 524306, 524570, 459025, 524402, 524338, 590020, 459017, 524386, 524322, 589988, 524290, 524418, 524354, 590052, 459013, 524378, 524314, 589972, 459029, 524410, 524346, 590036, 459021, 524394, 524330, 590004, 524298, 524426, 524362, 590068, 459011, 524374, 524310, 524574, 459027, 524406, 524342, 590028, 459019, 524390, 524326, 589996, 524294, 524422, 524358, 590060, 459015, 524382, 524318, 589980, 459031, 524414, 524350, 590044, 459023, 524398, 524334, 590012, 524302, 524430, 524366, 590076, 459008, 524369, 524305, 524569, 459024, 524401, 524337, 590018, 459016, 524385, 524321, 589986, 524289, 524417, 524353, 590050, 459012, 524377, 524313, 589970, 459028, 524409, 524345, 590034, 459020, 524393, 524329, 590002, 524297, 524425, 524361, 590066, 459010, 524373, 524309, 524573, 459026, 524405, 524341, 590026, 459018, 524389, 524325, 589994, 524293, 524421, 524357, 590058, 459014, 524381, 524317, 589978, 459030, 524413, 524349, 590042, 459022, 524397, 524333, 590010, 524301, 524429, 524365, 590074, 459009, 524371, 524307, 524571, 459025, 524403, 524339, 590022, 459017, 524387, 524323, 589990, 524291, 524419, 524355, 590054, 459013, 524379, 524315, 589974, 459029, 524411, 524347, 590038, 459021, 524395, 524331, 590006, 524299, 524427, 524363, 590070, 459011, 524375, 524311, 524575, 459027, 524407, 524343, 590030, 459019, 524391, 524327, 589998, 524295, 524423, 524359, 590062, 459015, 524383, 524319, 589982, 459031, 524415, 524351, 590046, 459023, 524399, 524335, 590014, 524303, 524431, 524367, 590078, 459008, 524368, 524304, 524568, 459024, 524400, 524336, 590017, 459016, 524384, 524320, 589985, 524288, 524416, 524352, 590049, 459012, 524376, 524312, 589969, 459028, 524408, 524344, 590033, 459020, 524392, 524328, 590001, 524296, 524424, 524360, 590065, 459010, 524372, 524308, 524572, 459026, 524404, 524340, 590025, 459018, 524388, 524324, 589993, 524292, 524420, 524356, 590057, 459014, 524380, 524316, 589977, 459030, 524412, 524348, 590041, 459022, 524396, 524332, 590009, 524300, 524428, 524364, 590073, 459009, 524370, 524306, 524570, 459025, 524402, 524338, 590021, 459017, 524386, 524322, 589989, 524290, 524418, 524354, 590053, 459013, 524378, 524314, 589973, 459029, 524410, 524346, 590037, 459021, 524394, 524330, 590005, 524298, 524426, 524362, 590069, 459011, 524374, 524310, 524574, 459027, 524406, 524342, 590029, 459019, 524390, 524326, 589997, 524294, 524422, 524358, 590061, 459015, 524382, 524318, 589981, 459031, 524414, 524350, 590045, 459023, 524398, 524334, 590013, 524302, 524430, 524366, 590077, 459008, 524369, 524305, 524569, 459024, 524401, 524337, 590019, 459016, 524385, 524321, 589987, 524289, 524417, 524353, 590051, 459012, 524377, 524313, 589971, 459028, 524409, 524345, 590035, 459020, 524393, 524329, 590003, 524297, 524425, 524361, 590067, 459010, 524373, 524309, 524573, 459026, 524405, 524341, 590027, 459018, 524389, 524325, 589995, 524293, 524421, 524357, 590059, 459014, 524381, 524317, 589979, 459030, 524413, 524349, 590043, 459022, 524397, 524333, 590011, 524301, 524429, 524365, 590075, 459009, 524371, 524307, 524571, 459025, 524403, 524339, 590023, 459017, 524387, 524323, 589991, 524291, 524419, 524355, 590055, 459013, 524379, 524315, 589975, 459029, 524411, 524347, 590039, 459021, 524395, 524331, 590007, 524299, 524427, 524363, 590071, 459011, 524375, 524311, 524575, 459027, 524407, 524343, 590031, 459019, 524391, 524327, 589999, 524295, 524423, 524359, 590063, 459015, 524383, 524319, 589983, 459031, 524415, 524351, 590047, 459023, 524399, 524335, 590015, 524303, 524431, 524367, 590079]), 9], m = [new Int32Array([327680, 327696, 327688, 327704, 327684, 327700, 327692, 327708, 327682, 327698, 327690, 327706, 327686, 327702, 327694, 0, 327681, 327697, 327689, 327705, 327685, 327701, 327693, 327709, 327683, 327699, 327691, 327707, 327687, 327703, 327695, 0]), 5], y = function(t3) {
            !function _inherits(t4, r4) {
              if (typeof r4 != "function" && r4 !== null)
                throw new TypeError("Super expression must either be null or a function");
              t4.prototype = Object.create(r4 && r4.prototype, { constructor: { value: t4, writable: true, configurable: true } });
              Object.defineProperty(t4, "prototype", { writable: false });
              r4 && _setPrototypeOf(t4, r4);
            }(FlateStream, t3);
            var r3 = _createSuper(FlateStream);
            function FlateStream(t4, o3) {
              var c2;
              !function _classCallCheck(t5, r4) {
                if (!(t5 instanceof r4))
                  throw new TypeError("Cannot call a class as a function");
              }(this, FlateStream);
              (c2 = r3.call(this, o3)).str = t4;
              c2.dict = t4.dict;
              var u2 = t4.getByte(), h2 = t4.getByte();
              if (u2 === -1 || h2 === -1)
                throw new l.FormatError("Invalid header in flate stream: ".concat(u2, ", ").concat(h2));
              if ((15 & u2) != 8)
                throw new l.FormatError("Unknown compression method in flate stream: ".concat(u2, ", ").concat(h2));
              if (((u2 << 8) + h2) % 31 != 0)
                throw new l.FormatError("Bad FCHECK in flate stream: ".concat(u2, ", ").concat(h2));
              if (32 & h2)
                throw new l.FormatError("FDICT bit set in flate stream: ".concat(u2, ", ").concat(h2));
              c2.codeSize = 0;
              c2.codeBuf = 0;
              return c2;
            }
            !function _createClass(t4, r4, o3) {
              r4 && _defineProperties(t4.prototype, r4);
              o3 && _defineProperties(t4, o3);
              Object.defineProperty(t4, "prototype", { writable: false });
              return t4;
            }(FlateStream, [{ key: "getBits", value: function getBits(t4) {
              for (var r4, o3 = this.str, c2 = this.codeSize, u2 = this.codeBuf; c2 < t4; ) {
                if ((r4 = o3.getByte()) === -1)
                  throw new l.FormatError("Bad encoding in flate stream");
                u2 |= r4 << c2;
                c2 += 8;
              }
              r4 = u2 & (1 << t4) - 1;
              this.codeBuf = u2 >> t4;
              this.codeSize = c2 -= t4;
              return r4;
            } }, { key: "getCode", value: function getCode(t4) {
              for (var r4, o3 = this.str, c2 = t4[0], u2 = t4[1], h2 = this.codeSize, d2 = this.codeBuf; h2 < u2 && (r4 = o3.getByte()) !== -1; ) {
                d2 |= r4 << h2;
                h2 += 8;
              }
              var g2 = c2[d2 & (1 << u2) - 1], m2 = g2 >> 16, y2 = 65535 & g2;
              if (m2 < 1 || h2 < m2)
                throw new l.FormatError("Bad encoding in flate stream");
              this.codeBuf = d2 >> m2;
              this.codeSize = h2 - m2;
              return y2;
            } }, { key: "generateHuffmanTable", value: function generateHuffmanTable(t4) {
              var r4, o3 = t4.length, c2 = 0;
              for (r4 = 0; r4 < o3; ++r4)
                t4[r4] > c2 && (c2 = t4[r4]);
              for (var l2 = 1 << c2, u2 = new Int32Array(l2), h2 = 1, d2 = 0, g2 = 2; h2 <= c2; ++h2, d2 <<= 1, g2 <<= 1)
                for (var m2 = 0; m2 < o3; ++m2)
                  if (t4[m2] === h2) {
                    var y2 = 0, v = d2;
                    for (r4 = 0; r4 < h2; ++r4) {
                      y2 = y2 << 1 | 1 & v;
                      v >>= 1;
                    }
                    for (r4 = y2; r4 < l2; r4 += g2)
                      u2[r4] = h2 << 16 | m2;
                    ++d2;
                  }
              return [u2, c2];
            } }, { key: "readBlock", value: function readBlock() {
              var t4, r4, o3 = this.str, c2 = this.getBits(3);
              1 & c2 && (this.eof = true);
              if ((c2 >>= 1) !== 0) {
                var y2, v;
                if (c2 === 1) {
                  y2 = g;
                  v = m;
                } else {
                  if (c2 !== 2)
                    throw new l.FormatError("Unknown block type in flate stream");
                  var k, _ = this.getBits(5) + 257, w = this.getBits(5) + 1, S = this.getBits(4) + 4, C = new Uint8Array(u.length);
                  for (k = 0; k < S; ++k)
                    C[u[k]] = this.getBits(3);
                  var x = this.generateHuffmanTable(C);
                  r4 = 0;
                  k = 0;
                  for (var O, T, E, M = _ + w, R = new Uint8Array(M); k < M; ) {
                    var D = this.getCode(x);
                    if (D === 16) {
                      O = 2;
                      T = 3;
                      E = r4;
                    } else if (D === 17) {
                      O = 3;
                      T = 3;
                      E = r4 = 0;
                    } else {
                      if (D !== 18) {
                        R[k++] = r4 = D;
                        continue;
                      }
                      O = 7;
                      T = 11;
                      E = r4 = 0;
                    }
                    for (var j = this.getBits(O) + T; j-- > 0; )
                      R[k++] = E;
                  }
                  y2 = this.generateHuffmanTable(R.subarray(0, _));
                  v = this.generateHuffmanTable(R.subarray(_, M));
                }
                for (var L = (t4 = this.buffer) ? t4.length : 0, N = this.bufferLength; ; ) {
                  var U = this.getCode(y2);
                  if (U < 256) {
                    N + 1 >= L && (L = (t4 = this.ensureBuffer(N + 1)).length);
                    t4[N++] = U;
                  } else {
                    if (U === 256) {
                      this.bufferLength = N;
                      return;
                    }
                    var H = (U = h[U -= 257]) >> 16;
                    H > 0 && (H = this.getBits(H));
                    r4 = (65535 & U) + H;
                    U = this.getCode(v);
                    (H = (U = d[U]) >> 16) > 0 && (H = this.getBits(H));
                    var $ = (65535 & U) + H;
                    N + r4 >= L && (L = (t4 = this.ensureBuffer(N + r4)).length);
                    for (var X = 0; X < r4; ++X, ++N)
                      t4[N] = t4[N - $];
                  }
                }
              } else {
                var q;
                if ((q = o3.getByte()) === -1)
                  throw new l.FormatError("Bad block header in flate stream");
                var G = q;
                if ((q = o3.getByte()) === -1)
                  throw new l.FormatError("Bad block header in flate stream");
                G |= q << 8;
                if ((q = o3.getByte()) === -1)
                  throw new l.FormatError("Bad block header in flate stream");
                var z = q;
                if ((q = o3.getByte()) === -1)
                  throw new l.FormatError("Bad block header in flate stream");
                if ((z |= q << 8) !== (65535 & ~G) && (G !== 0 || z !== 0))
                  throw new l.FormatError("Bad uncompressed block length in flate stream");
                this.codeBuf = 0;
                this.codeSize = 0;
                var W = this.bufferLength, V = W + G;
                t4 = this.ensureBuffer(V);
                this.bufferLength = V;
                if (G === 0)
                  o3.peekByte() === -1 && (this.eof = true);
                else {
                  var K = o3.getBytes(G);
                  t4.set(K, W);
                  K.length < G && (this.eof = true);
                }
              }
            } }]);
            return FlateStream;
          }(c.DecodeStream);
          r2.FlateStream = y;
        }, (t2, r2, o2) => {
          "use strict";
          function _typeof(t3) {
            return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t4) {
              return typeof t4;
            } : function(t4) {
              return t4 && typeof Symbol == "function" && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
            }, _typeof(t3);
          }
          Object.defineProperty(r2, "__esModule", { value: true });
          r2.Jbig2Stream = void 0;
          var c = o2(162), l = o2(182), u = o2(158), h = o2(188), d = o2(4);
          function _defineProperties(t3, r3) {
            for (var o3 = 0; o3 < r3.length; o3++) {
              var c2 = r3[o3];
              c2.enumerable = c2.enumerable || false;
              c2.configurable = true;
              "value" in c2 && (c2.writable = true);
              Object.defineProperty(t3, c2.key, c2);
            }
          }
          function _setPrototypeOf(t3, r3) {
            _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(t4, r4) {
              t4.__proto__ = r4;
              return t4;
            };
            return _setPrototypeOf(t3, r3);
          }
          function _createSuper(t3) {
            var r3 = function _isNativeReflectConstruct() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                }));
                return true;
              } catch (t4) {
                return false;
              }
            }();
            return function _createSuperInternal() {
              var o3, c2 = _getPrototypeOf(t3);
              if (r3) {
                var l2 = _getPrototypeOf(this).constructor;
                o3 = Reflect.construct(c2, arguments, l2);
              } else
                o3 = c2.apply(this, arguments);
              return _possibleConstructorReturn(this, o3);
            };
          }
          function _possibleConstructorReturn(t3, r3) {
            if (r3 && (_typeof(r3) === "object" || typeof r3 == "function"))
              return r3;
            if (r3 !== void 0)
              throw new TypeError("Derived constructors may only return object or undefined");
            return function _assertThisInitialized(t4) {
              if (t4 === void 0)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return t4;
            }(t3);
          }
          function _getPrototypeOf(t3) {
            _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(t4) {
              return t4.__proto__ || Object.getPrototypeOf(t4);
            };
            return _getPrototypeOf(t3);
          }
          var g = function(t3) {
            !function _inherits(t4, r4) {
              if (typeof r4 != "function" && r4 !== null)
                throw new TypeError("Super expression must either be null or a function");
              t4.prototype = Object.create(r4 && r4.prototype, { constructor: { value: t4, writable: true, configurable: true } });
              Object.defineProperty(t4, "prototype", { writable: false });
              r4 && _setPrototypeOf(t4, r4);
            }(Jbig2Stream, t3);
            var r3 = _createSuper(Jbig2Stream);
            function Jbig2Stream(t4, o3, c2) {
              var l2;
              !function _classCallCheck(t5, r4) {
                if (!(t5 instanceof r4))
                  throw new TypeError("Cannot call a class as a function");
              }(this, Jbig2Stream);
              (l2 = r3.call(this, o3)).stream = t4;
              l2.dict = t4.dict;
              l2.maybeLength = o3;
              l2.params = c2;
              return l2;
            }
            !function _createClass(t4, r4, o3) {
              r4 && _defineProperties(t4.prototype, r4);
              o3 && _defineProperties(t4, o3);
              Object.defineProperty(t4, "prototype", { writable: false });
              return t4;
            }(Jbig2Stream, [{ key: "bytes", get: function get() {
              return (0, d.shadow)(this, "bytes", this.stream.getBytes(this.maybeLength));
            } }, { key: "ensureBuffer", value: function ensureBuffer(t4) {
            } }, { key: "readBlock", value: function readBlock() {
              if (!this.eof) {
                var t4 = new h.Jbig2Image(), r4 = [];
                if (this.params instanceof u.Dict) {
                  var o3 = this.params.get("JBIG2Globals");
                  if (o3 instanceof c.BaseStream) {
                    var l2 = o3.getBytes();
                    r4.push({ data: l2, start: 0, end: l2.length });
                  }
                }
                r4.push({ data: this.bytes, start: 0, end: this.bytes.length });
                for (var d2 = t4.parseChunks(r4), g2 = d2.length, m = 0; m < g2; m++)
                  d2[m] ^= 255;
                this.buffer = d2;
                this.bufferLength = g2;
                this.eof = true;
              }
            } }]);
            return Jbig2Stream;
          }(l.DecodeStream);
          r2.Jbig2Stream = g;
        }, (t2, r2, o2) => {
          "use strict";
          function _typeof(t3) {
            return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t4) {
              return typeof t4;
            } : function(t4) {
              return t4 && typeof Symbol == "function" && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
            }, _typeof(t3);
          }
          Object.defineProperty(r2, "__esModule", { value: true });
          r2.Jbig2Image = void 0;
          var c = o2(4), l = o2(161), u = o2(189), h = o2(185);
          function _defineProperties(t3, r3) {
            for (var o3 = 0; o3 < r3.length; o3++) {
              var c2 = r3[o3];
              c2.enumerable = c2.enumerable || false;
              c2.configurable = true;
              "value" in c2 && (c2.writable = true);
              Object.defineProperty(t3, c2.key, c2);
            }
          }
          function _createClass(t3, r3, o3) {
            r3 && _defineProperties(t3.prototype, r3);
            o3 && _defineProperties(t3, o3);
            Object.defineProperty(t3, "prototype", { writable: false });
            return t3;
          }
          function _classCallCheck(t3, r3) {
            if (!(t3 instanceof r3))
              throw new TypeError("Cannot call a class as a function");
          }
          function _setPrototypeOf(t3, r3) {
            _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(t4, r4) {
              t4.__proto__ = r4;
              return t4;
            };
            return _setPrototypeOf(t3, r3);
          }
          function _createSuper(t3) {
            var r3 = function _isNativeReflectConstruct() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                }));
                return true;
              } catch (t4) {
                return false;
              }
            }();
            return function _createSuperInternal() {
              var o3, c2 = _getPrototypeOf(t3);
              if (r3) {
                var l2 = _getPrototypeOf(this).constructor;
                o3 = Reflect.construct(c2, arguments, l2);
              } else
                o3 = c2.apply(this, arguments);
              return _possibleConstructorReturn(this, o3);
            };
          }
          function _possibleConstructorReturn(t3, r3) {
            if (r3 && (_typeof(r3) === "object" || typeof r3 == "function"))
              return r3;
            if (r3 !== void 0)
              throw new TypeError("Derived constructors may only return object or undefined");
            return function _assertThisInitialized(t4) {
              if (t4 === void 0)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return t4;
            }(t3);
          }
          function _getPrototypeOf(t3) {
            _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(t4) {
              return t4.__proto__ || Object.getPrototypeOf(t4);
            };
            return _getPrototypeOf(t3);
          }
          var d = function(t3) {
            !function _inherits(t4, r4) {
              if (typeof r4 != "function" && r4 !== null)
                throw new TypeError("Super expression must either be null or a function");
              t4.prototype = Object.create(r4 && r4.prototype, { constructor: { value: t4, writable: true, configurable: true } });
              Object.defineProperty(t4, "prototype", { writable: false });
              r4 && _setPrototypeOf(t4, r4);
            }(Jbig2Error, t3);
            var r3 = _createSuper(Jbig2Error);
            function Jbig2Error(t4) {
              _classCallCheck(this, Jbig2Error);
              return r3.call(this, "JBIG2 error: ".concat(t4), "Jbig2Error");
            }
            return _createClass(Jbig2Error);
          }(c.BaseException), g = function() {
            function ContextCache() {
              _classCallCheck(this, ContextCache);
            }
            _createClass(ContextCache, [{ key: "getContexts", value: function getContexts(t3) {
              return t3 in this ? this[t3] : this[t3] = new Int8Array(65536);
            } }]);
            return ContextCache;
          }(), m = function() {
            function DecodingContext(t3, r3, o3) {
              _classCallCheck(this, DecodingContext);
              this.data = t3;
              this.start = r3;
              this.end = o3;
            }
            _createClass(DecodingContext, [{ key: "decoder", get: function get() {
              var t3 = new u.ArithmeticDecoder(this.data, this.start, this.end);
              return (0, c.shadow)(this, "decoder", t3);
            } }, { key: "contextCache", get: function get() {
              var t3 = new g();
              return (0, c.shadow)(this, "contextCache", t3);
            } }]);
            return DecodingContext;
          }();
          function decodeInteger(t3, r3, o3) {
            var c2 = t3.getContexts(r3), l2 = 1;
            function readBits(t4) {
              for (var r4 = 0, u3 = 0; u3 < t4; u3++) {
                var h3 = o3.readBit(c2, l2);
                l2 = l2 < 256 ? l2 << 1 | h3 : 511 & (l2 << 1 | h3) | 256;
                r4 = r4 << 1 | h3;
              }
              return r4 >>> 0;
            }
            var u2 = readBits(1), h2 = readBits(1) ? readBits(1) ? readBits(1) ? readBits(1) ? readBits(1) ? readBits(32) + 4436 : readBits(12) + 340 : readBits(8) + 84 : readBits(6) + 20 : readBits(4) + 4 : readBits(2);
            return u2 === 0 ? h2 : h2 > 0 ? -h2 : null;
          }
          function decodeIAID(t3, r3, o3) {
            for (var c2 = t3.getContexts("IAID"), l2 = 1, u2 = 0; u2 < o3; u2++) {
              l2 = l2 << 1 | r3.readBit(c2, l2);
            }
            return o3 < 31 ? l2 & (1 << o3) - 1 : 2147483647 & l2;
          }
          var y = ["SymbolDictionary", null, null, null, "IntermediateTextRegion", null, "ImmediateTextRegion", "ImmediateLosslessTextRegion", null, null, null, null, null, null, null, null, "PatternDictionary", null, null, null, "IntermediateHalftoneRegion", null, "ImmediateHalftoneRegion", "ImmediateLosslessHalftoneRegion", null, null, null, null, null, null, null, null, null, null, null, null, "IntermediateGenericRegion", null, "ImmediateGenericRegion", "ImmediateLosslessGenericRegion", "IntermediateGenericRefinementRegion", null, "ImmediateGenericRefinementRegion", "ImmediateLosslessGenericRefinementRegion", null, null, null, null, "PageInformation", "EndOfPage", "EndOfStripe", "EndOfFile", "Profiles", "Tables", null, null, null, null, null, null, null, null, "Extension"], v = [[{ x: -1, y: -2 }, { x: 0, y: -2 }, { x: 1, y: -2 }, { x: -2, y: -1 }, { x: -1, y: -1 }, { x: 0, y: -1 }, { x: 1, y: -1 }, { x: 2, y: -1 }, { x: -4, y: 0 }, { x: -3, y: 0 }, { x: -2, y: 0 }, { x: -1, y: 0 }], [{ x: -1, y: -2 }, { x: 0, y: -2 }, { x: 1, y: -2 }, { x: 2, y: -2 }, { x: -2, y: -1 }, { x: -1, y: -1 }, { x: 0, y: -1 }, { x: 1, y: -1 }, { x: 2, y: -1 }, { x: -3, y: 0 }, { x: -2, y: 0 }, { x: -1, y: 0 }], [{ x: -1, y: -2 }, { x: 0, y: -2 }, { x: 1, y: -2 }, { x: -2, y: -1 }, { x: -1, y: -1 }, { x: 0, y: -1 }, { x: 1, y: -1 }, { x: -2, y: 0 }, { x: -1, y: 0 }], [{ x: -3, y: -1 }, { x: -2, y: -1 }, { x: -1, y: -1 }, { x: 0, y: -1 }, { x: 1, y: -1 }, { x: -4, y: 0 }, { x: -3, y: 0 }, { x: -2, y: 0 }, { x: -1, y: 0 }]], k = [{ coding: [{ x: 0, y: -1 }, { x: 1, y: -1 }, { x: -1, y: 0 }], reference: [{ x: 0, y: -1 }, { x: 1, y: -1 }, { x: -1, y: 0 }, { x: 0, y: 0 }, { x: 1, y: 0 }, { x: -1, y: 1 }, { x: 0, y: 1 }, { x: 1, y: 1 }] }, { coding: [{ x: -1, y: -1 }, { x: 0, y: -1 }, { x: 1, y: -1 }, { x: -1, y: 0 }], reference: [{ x: 0, y: -1 }, { x: -1, y: 0 }, { x: 0, y: 0 }, { x: 1, y: 0 }, { x: 0, y: 1 }, { x: 1, y: 1 }] }], _ = [39717, 1941, 229, 405], w = [32, 8];
          function decodeBitmap(t3, r3, o3, c2, l2, u2, h2, d2) {
            if (t3) {
              return decodeMMRBitmap(new M(d2.data, d2.start, d2.end), r3, o3, false);
            }
            if (c2 === 0 && !u2 && !l2 && h2.length === 4 && h2[0].x === 3 && h2[0].y === -1 && h2[1].x === -3 && h2[1].y === -1 && h2[2].x === 2 && h2[2].y === -2 && h2[3].x === -2 && h2[3].y === -2)
              return function decodeBitmapTemplate0(t4, r4, o4) {
                var c3, l3, u3, h3, d3, g3, m3, y3 = o4.decoder, v2 = o4.contextCache.getContexts("GB"), k3 = [];
                for (l3 = 0; l3 < r4; l3++) {
                  d3 = k3[l3] = new Uint8Array(t4);
                  g3 = l3 < 1 ? d3 : k3[l3 - 1];
                  c3 = (m3 = l3 < 2 ? d3 : k3[l3 - 2])[0] << 13 | m3[1] << 12 | m3[2] << 11 | g3[0] << 7 | g3[1] << 6 | g3[2] << 5 | g3[3] << 4;
                  for (u3 = 0; u3 < t4; u3++) {
                    d3[u3] = h3 = y3.readBit(v2, c3);
                    c3 = (31735 & c3) << 1 | (u3 + 3 < t4 ? m3[u3 + 3] << 11 : 0) | (u3 + 4 < t4 ? g3[u3 + 4] << 4 : 0) | h3;
                  }
                }
                return k3;
              }(r3, o3, d2);
            var g2 = !!u2, m2 = v[c2].concat(h2);
            m2.sort(function(t4, r4) {
              return t4.y - r4.y || t4.x - r4.x;
            });
            var y2, k2, w2 = m2.length, S2 = new Int8Array(w2), C2 = new Int8Array(w2), x2 = [], O2 = 0, T2 = 0, E2 = 0, R2 = 0;
            for (k2 = 0; k2 < w2; k2++) {
              S2[k2] = m2[k2].x;
              C2[k2] = m2[k2].y;
              T2 = Math.min(T2, m2[k2].x);
              E2 = Math.max(E2, m2[k2].x);
              R2 = Math.min(R2, m2[k2].y);
              k2 < w2 - 1 && m2[k2].y === m2[k2 + 1].y && m2[k2].x === m2[k2 + 1].x - 1 ? O2 |= 1 << w2 - 1 - k2 : x2.push(k2);
            }
            var D = x2.length, j = new Int8Array(D), L = new Int8Array(D), N = new Uint16Array(D);
            for (y2 = 0; y2 < D; y2++) {
              k2 = x2[y2];
              j[y2] = m2[k2].x;
              L[y2] = m2[k2].y;
              N[y2] = 1 << w2 - 1 - k2;
            }
            for (var U, H, $, X, q, G = -T2, z = -R2, W = r3 - E2, V = _[c2], K = new Uint8Array(r3), Y = [], J = d2.decoder, Z = d2.contextCache.getContexts("GB"), Q = 0, ee = 0, te = 0; te < o3; te++) {
              if (l2) {
                if (Q ^= J.readBit(Z, V)) {
                  Y.push(K);
                  continue;
                }
              }
              K = new Uint8Array(K);
              Y.push(K);
              for (U = 0; U < r3; U++)
                if (g2 && u2[te][U])
                  K[U] = 0;
                else {
                  if (U >= G && U < W && te >= z) {
                    ee = ee << 1 & O2;
                    for (k2 = 0; k2 < D; k2++) {
                      H = te + L[k2];
                      $ = U + j[k2];
                      (X = Y[H][$]) && (ee |= X = N[k2]);
                    }
                  } else {
                    ee = 0;
                    q = w2 - 1;
                    for (k2 = 0; k2 < w2; k2++, q--)
                      ($ = U + S2[k2]) >= 0 && $ < r3 && (H = te + C2[k2]) >= 0 && (X = Y[H][$]) && (ee |= X << q);
                  }
                  var re = J.readBit(Z, ee);
                  K[U] = re;
                }
            }
            return Y;
          }
          function decodeRefinement(t3, r3, o3, c2, l2, u2, h2, g2, m2) {
            var y2 = k[o3].coding;
            o3 === 0 && (y2 = y2.concat([g2[0]]));
            var v2, _2 = y2.length, S2 = new Int32Array(_2), C2 = new Int32Array(_2);
            for (v2 = 0; v2 < _2; v2++) {
              S2[v2] = y2[v2].x;
              C2[v2] = y2[v2].y;
            }
            var x2 = k[o3].reference;
            o3 === 0 && (x2 = x2.concat([g2[1]]));
            var O2 = x2.length, T2 = new Int32Array(O2), E2 = new Int32Array(O2);
            for (v2 = 0; v2 < O2; v2++) {
              T2[v2] = x2[v2].x;
              E2[v2] = x2[v2].y;
            }
            for (var M2 = c2[0].length, R2 = c2.length, D = w[o3], j = [], L = m2.decoder, N = m2.contextCache.getContexts("GR"), U = 0, H = 0; H < r3; H++) {
              if (h2) {
                if (U ^= L.readBit(N, D))
                  throw new d("prediction is not supported");
              }
              var $ = new Uint8Array(t3);
              j.push($);
              for (var X = 0; X < t3; X++) {
                var q = void 0, G = void 0, z = 0;
                for (v2 = 0; v2 < _2; v2++) {
                  q = H + C2[v2];
                  G = X + S2[v2];
                  q < 0 || G < 0 || G >= t3 ? z <<= 1 : z = z << 1 | j[q][G];
                }
                for (v2 = 0; v2 < O2; v2++) {
                  q = H + E2[v2] - u2;
                  G = X + T2[v2] - l2;
                  q < 0 || q >= R2 || G < 0 || G >= M2 ? z <<= 1 : z = z << 1 | c2[q][G];
                }
                var W = L.readBit(N, z);
                $[X] = W;
              }
            }
            return j;
          }
          function decodeTextRegion(t3, r3, o3, c2, l2, u2, h2, g2, m2, y2, v2, k2, _2, w2, S2, C2, x2, O2, T2) {
            if (t3 && r3)
              throw new d("refinement with Huffman is not supported");
            var E2, M2, R2 = [];
            for (E2 = 0; E2 < c2; E2++) {
              M2 = new Uint8Array(o3);
              if (l2)
                for (var D = 0; D < o3; D++)
                  M2[D] = l2;
              R2.push(M2);
            }
            var j = x2.decoder, L = x2.contextCache, N = t3 ? -w2.tableDeltaT.decode(T2) : -decodeInteger(L, "IADT", j), U = 0;
            E2 = 0;
            for (; E2 < u2; ) {
              N += t3 ? w2.tableDeltaT.decode(T2) : decodeInteger(L, "IADT", j);
              for (var H = U += t3 ? w2.tableFirstS.decode(T2) : decodeInteger(L, "IAFS", j); ; ) {
                var $ = 0;
                h2 > 1 && ($ = t3 ? T2.readBits(O2) : decodeInteger(L, "IAIT", j));
                var X = h2 * N + $, q = t3 ? w2.symbolIDTable.decode(T2) : decodeIAID(L, j, m2), G = r3 && (t3 ? T2.readBit() : decodeInteger(L, "IARI", j)), z = g2[q], W = z[0].length, V = z.length;
                if (G) {
                  var K = decodeInteger(L, "IARDW", j), Y = decodeInteger(L, "IARDH", j);
                  z = decodeRefinement(W += K, V += Y, S2, z, (K >> 1) + decodeInteger(L, "IARDX", j), (Y >> 1) + decodeInteger(L, "IARDY", j), false, C2, x2);
                }
                var J = X - (1 & k2 ? 0 : V - 1), Z = H - (2 & k2 ? W - 1 : 0), Q = void 0, ee = void 0, te = void 0;
                if (y2) {
                  for (Q = 0; Q < V; Q++)
                    if (M2 = R2[Z + Q]) {
                      te = z[Q];
                      var re = Math.min(o3 - J, W);
                      switch (_2) {
                        case 0:
                          for (ee = 0; ee < re; ee++)
                            M2[J + ee] |= te[ee];
                          break;
                        case 2:
                          for (ee = 0; ee < re; ee++)
                            M2[J + ee] ^= te[ee];
                          break;
                        default:
                          throw new d("operator ".concat(_2, " is not supported"));
                      }
                    }
                  H += V - 1;
                } else {
                  for (ee = 0; ee < V; ee++)
                    if (M2 = R2[J + ee]) {
                      te = z[ee];
                      switch (_2) {
                        case 0:
                          for (Q = 0; Q < W; Q++)
                            M2[Z + Q] |= te[Q];
                          break;
                        case 2:
                          for (Q = 0; Q < W; Q++)
                            M2[Z + Q] ^= te[Q];
                          break;
                        default:
                          throw new d("operator ".concat(_2, " is not supported"));
                      }
                    }
                  H += W - 1;
                }
                E2++;
                var ae = t3 ? w2.tableDeltaS.decode(T2) : decodeInteger(L, "IADS", j);
                if (ae === null)
                  break;
                H += ae + v2;
              }
            }
            return R2;
          }
          function readSegmentHeader(t3, r3) {
            var o3 = {};
            o3.number = (0, l.readUint32)(t3, r3);
            var c2 = t3[r3 + 4], u2 = 63 & c2;
            if (!y[u2])
              throw new d("invalid segment type: " + u2);
            o3.type = u2;
            o3.typeName = y[u2];
            o3.deferredNonRetain = !!(128 & c2);
            var h2 = !!(64 & c2), g2 = t3[r3 + 5], m2 = g2 >> 5 & 7, v2 = [31 & g2], k2 = r3 + 6;
            if (g2 === 7) {
              m2 = 536870911 & (0, l.readUint32)(t3, k2 - 1);
              k2 += 3;
              var _2 = m2 + 7 >> 3;
              v2[0] = t3[k2++];
              for (; --_2 > 0; )
                v2.push(t3[k2++]);
            } else if (g2 === 5 || g2 === 6)
              throw new d("invalid referred-to flags");
            o3.retainBits = v2;
            var w2 = 4;
            o3.number <= 256 ? w2 = 1 : o3.number <= 65536 && (w2 = 2);
            var C2, x2, O2 = [];
            for (C2 = 0; C2 < m2; C2++) {
              var T2 = void 0;
              T2 = w2 === 1 ? t3[k2] : w2 === 2 ? (0, l.readUint16)(t3, k2) : (0, l.readUint32)(t3, k2);
              O2.push(T2);
              k2 += w2;
            }
            o3.referredTo = O2;
            if (h2) {
              o3.pageAssociation = (0, l.readUint32)(t3, k2);
              k2 += 4;
            } else
              o3.pageAssociation = t3[k2++];
            o3.length = (0, l.readUint32)(t3, k2);
            k2 += 4;
            if (o3.length === 4294967295) {
              if (u2 !== 38)
                throw new d("invalid unknown segment length");
              var E2 = readRegionSegmentInformation(t3, k2), M2 = !!(1 & t3[k2 + S]), R2 = new Uint8Array(6);
              if (!M2) {
                R2[0] = 255;
                R2[1] = 172;
              }
              R2[2] = E2.height >>> 24 & 255;
              R2[3] = E2.height >> 16 & 255;
              R2[4] = E2.height >> 8 & 255;
              R2[5] = 255 & E2.height;
              for (C2 = k2, x2 = t3.length; C2 < x2; C2++) {
                for (var D = 0; D < 6 && R2[D] === t3[C2 + D]; )
                  D++;
                if (D === 6) {
                  o3.length = C2 + 6;
                  break;
                }
              }
              if (o3.length === 4294967295)
                throw new d("segment end was not found");
            }
            o3.headerEnd = k2;
            return o3;
          }
          function readSegments(t3, r3, o3, c2) {
            for (var l2 = [], u2 = o3; u2 < c2; ) {
              var h2 = readSegmentHeader(r3, u2);
              u2 = h2.headerEnd;
              var d2 = { header: h2, data: r3 };
              if (!t3.randomAccess) {
                d2.start = u2;
                u2 += h2.length;
                d2.end = u2;
              }
              l2.push(d2);
              if (h2.type === 51)
                break;
            }
            if (t3.randomAccess)
              for (var g2 = 0, m2 = l2.length; g2 < m2; g2++) {
                l2[g2].start = u2;
                u2 += l2[g2].header.length;
                l2[g2].end = u2;
              }
            return l2;
          }
          function readRegionSegmentInformation(t3, r3) {
            return { width: (0, l.readUint32)(t3, r3), height: (0, l.readUint32)(t3, r3 + 4), x: (0, l.readUint32)(t3, r3 + 8), y: (0, l.readUint32)(t3, r3 + 12), combinationOperator: 7 & t3[r3 + 16] };
          }
          var S = 17;
          function processSegment(t3, r3) {
            var o3, c2, u2, h2, g2 = t3.header, m2 = t3.data, y2 = t3.end, v2 = t3.start;
            switch (g2.type) {
              case 0:
                var k2 = {}, _2 = (0, l.readUint16)(m2, v2);
                k2.huffman = !!(1 & _2);
                k2.refinement = !!(2 & _2);
                k2.huffmanDHSelector = _2 >> 2 & 3;
                k2.huffmanDWSelector = _2 >> 4 & 3;
                k2.bitmapSizeSelector = _2 >> 6 & 1;
                k2.aggregationInstancesSelector = _2 >> 7 & 1;
                k2.bitmapCodingContextUsed = !!(256 & _2);
                k2.bitmapCodingContextRetained = !!(512 & _2);
                k2.template = _2 >> 10 & 3;
                k2.refinementTemplate = _2 >> 12 & 1;
                v2 += 2;
                if (!k2.huffman) {
                  h2 = k2.template === 0 ? 4 : 1;
                  c2 = [];
                  for (u2 = 0; u2 < h2; u2++) {
                    c2.push({ x: (0, l.readInt8)(m2, v2), y: (0, l.readInt8)(m2, v2 + 1) });
                    v2 += 2;
                  }
                  k2.at = c2;
                }
                if (k2.refinement && !k2.refinementTemplate) {
                  c2 = [];
                  for (u2 = 0; u2 < 2; u2++) {
                    c2.push({ x: (0, l.readInt8)(m2, v2), y: (0, l.readInt8)(m2, v2 + 1) });
                    v2 += 2;
                  }
                  k2.refinementAt = c2;
                }
                k2.numberOfExportedSymbols = (0, l.readUint32)(m2, v2);
                v2 += 4;
                k2.numberOfNewSymbols = (0, l.readUint32)(m2, v2);
                v2 += 4;
                o3 = [k2, g2.number, g2.referredTo, m2, v2, y2];
                break;
              case 6:
              case 7:
                var w2 = {};
                w2.info = readRegionSegmentInformation(m2, v2);
                v2 += S;
                var C2 = (0, l.readUint16)(m2, v2);
                v2 += 2;
                w2.huffman = !!(1 & C2);
                w2.refinement = !!(2 & C2);
                w2.logStripSize = C2 >> 2 & 3;
                w2.stripSize = 1 << w2.logStripSize;
                w2.referenceCorner = C2 >> 4 & 3;
                w2.transposed = !!(64 & C2);
                w2.combinationOperator = C2 >> 7 & 3;
                w2.defaultPixelValue = C2 >> 9 & 1;
                w2.dsOffset = C2 << 17 >> 27;
                w2.refinementTemplate = C2 >> 15 & 1;
                if (w2.huffman) {
                  var x2 = (0, l.readUint16)(m2, v2);
                  v2 += 2;
                  w2.huffmanFS = 3 & x2;
                  w2.huffmanDS = x2 >> 2 & 3;
                  w2.huffmanDT = x2 >> 4 & 3;
                  w2.huffmanRefinementDW = x2 >> 6 & 3;
                  w2.huffmanRefinementDH = x2 >> 8 & 3;
                  w2.huffmanRefinementDX = x2 >> 10 & 3;
                  w2.huffmanRefinementDY = x2 >> 12 & 3;
                  w2.huffmanRefinementSizeSelector = !!(16384 & x2);
                }
                if (w2.refinement && !w2.refinementTemplate) {
                  c2 = [];
                  for (u2 = 0; u2 < 2; u2++) {
                    c2.push({ x: (0, l.readInt8)(m2, v2), y: (0, l.readInt8)(m2, v2 + 1) });
                    v2 += 2;
                  }
                  w2.refinementAt = c2;
                }
                w2.numberOfSymbolInstances = (0, l.readUint32)(m2, v2);
                v2 += 4;
                o3 = [w2, g2.referredTo, m2, v2, y2];
                break;
              case 16:
                var O2 = {}, T2 = m2[v2++];
                O2.mmr = !!(1 & T2);
                O2.template = T2 >> 1 & 3;
                O2.patternWidth = m2[v2++];
                O2.patternHeight = m2[v2++];
                O2.maxPatternIndex = (0, l.readUint32)(m2, v2);
                v2 += 4;
                o3 = [O2, g2.number, m2, v2, y2];
                break;
              case 22:
              case 23:
                var E2 = {};
                E2.info = readRegionSegmentInformation(m2, v2);
                v2 += S;
                var M2 = m2[v2++];
                E2.mmr = !!(1 & M2);
                E2.template = M2 >> 1 & 3;
                E2.enableSkip = !!(8 & M2);
                E2.combinationOperator = M2 >> 4 & 7;
                E2.defaultPixelValue = M2 >> 7 & 1;
                E2.gridWidth = (0, l.readUint32)(m2, v2);
                v2 += 4;
                E2.gridHeight = (0, l.readUint32)(m2, v2);
                v2 += 4;
                E2.gridOffsetX = 4294967295 & (0, l.readUint32)(m2, v2);
                v2 += 4;
                E2.gridOffsetY = 4294967295 & (0, l.readUint32)(m2, v2);
                v2 += 4;
                E2.gridVectorX = (0, l.readUint16)(m2, v2);
                v2 += 2;
                E2.gridVectorY = (0, l.readUint16)(m2, v2);
                v2 += 2;
                o3 = [E2, g2.referredTo, m2, v2, y2];
                break;
              case 38:
              case 39:
                var R2 = {};
                R2.info = readRegionSegmentInformation(m2, v2);
                v2 += S;
                var D = m2[v2++];
                R2.mmr = !!(1 & D);
                R2.template = D >> 1 & 3;
                R2.prediction = !!(8 & D);
                if (!R2.mmr) {
                  h2 = R2.template === 0 ? 4 : 1;
                  c2 = [];
                  for (u2 = 0; u2 < h2; u2++) {
                    c2.push({ x: (0, l.readInt8)(m2, v2), y: (0, l.readInt8)(m2, v2 + 1) });
                    v2 += 2;
                  }
                  R2.at = c2;
                }
                o3 = [R2, m2, v2, y2];
                break;
              case 48:
                var j = { width: (0, l.readUint32)(m2, v2), height: (0, l.readUint32)(m2, v2 + 4), resolutionX: (0, l.readUint32)(m2, v2 + 8), resolutionY: (0, l.readUint32)(m2, v2 + 12) };
                j.height === 4294967295 && delete j.height;
                var L = m2[v2 + 16];
                (0, l.readUint16)(m2, v2 + 17);
                j.lossless = !!(1 & L);
                j.refinement = !!(2 & L);
                j.defaultPixelValue = L >> 2 & 1;
                j.combinationOperator = L >> 3 & 3;
                j.requiresBuffer = !!(32 & L);
                j.combinationOperatorOverride = !!(64 & L);
                o3 = [j];
                break;
              case 49:
              case 50:
              case 51:
              case 62:
                break;
              case 53:
                o3 = [g2.number, m2, v2, y2];
                break;
              default:
                throw new d("segment type ".concat(g2.typeName, "(").concat(g2.type, ")") + " is not implemented");
            }
            var N = "on" + g2.typeName;
            N in r3 && r3[N].apply(r3, o3);
          }
          function processSegments(t3, r3) {
            for (var o3 = 0, c2 = t3.length; o3 < c2; o3++)
              processSegment(t3[o3], r3);
          }
          var C = function() {
            function SimpleSegmentVisitor() {
              _classCallCheck(this, SimpleSegmentVisitor);
            }
            _createClass(SimpleSegmentVisitor, [{ key: "onPageInformation", value: function onPageInformation(t3) {
              this.currentPageInfo = t3;
              var r3 = t3.width + 7 >> 3, o3 = new Uint8ClampedArray(r3 * t3.height);
              t3.defaultPixelValue && o3.fill(255);
              this.buffer = o3;
            } }, { key: "drawBitmap", value: function drawBitmap(t3, r3) {
              var o3, c2, l2, u2, h2 = this.currentPageInfo, g2 = t3.width, m2 = t3.height, y2 = h2.width + 7 >> 3, v2 = h2.combinationOperatorOverride ? t3.combinationOperator : h2.combinationOperator, k2 = this.buffer, _2 = 128 >> (7 & t3.x), w2 = t3.y * y2 + (t3.x >> 3);
              switch (v2) {
                case 0:
                  for (o3 = 0; o3 < m2; o3++) {
                    l2 = _2;
                    u2 = w2;
                    for (c2 = 0; c2 < g2; c2++) {
                      r3[o3][c2] && (k2[u2] |= l2);
                      if (!(l2 >>= 1)) {
                        l2 = 128;
                        u2++;
                      }
                    }
                    w2 += y2;
                  }
                  break;
                case 2:
                  for (o3 = 0; o3 < m2; o3++) {
                    l2 = _2;
                    u2 = w2;
                    for (c2 = 0; c2 < g2; c2++) {
                      r3[o3][c2] && (k2[u2] ^= l2);
                      if (!(l2 >>= 1)) {
                        l2 = 128;
                        u2++;
                      }
                    }
                    w2 += y2;
                  }
                  break;
                default:
                  throw new d("operator ".concat(v2, " is not supported"));
              }
            } }, { key: "onImmediateGenericRegion", value: function onImmediateGenericRegion(t3, r3, o3, c2) {
              var l2 = t3.info, u2 = new m(r3, o3, c2), h2 = decodeBitmap(t3.mmr, l2.width, l2.height, t3.template, t3.prediction, null, t3.at, u2);
              this.drawBitmap(l2, h2);
            } }, { key: "onImmediateLosslessGenericRegion", value: function onImmediateLosslessGenericRegion() {
              this.onImmediateGenericRegion.apply(this, arguments);
            } }, { key: "onSymbolDictionary", value: function onSymbolDictionary(t3, r3, o3, c2, u2, h2) {
              var g2, y2;
              if (t3.huffman) {
                g2 = function getSymbolDictionaryHuffmanTables(t4, r4, o4) {
                  var c3, l2, u3, h3, g3 = 0;
                  switch (t4.huffmanDHSelector) {
                    case 0:
                    case 1:
                      c3 = getStandardTable(t4.huffmanDHSelector + 4);
                      break;
                    case 3:
                      c3 = getCustomHuffmanTable(g3, r4, o4);
                      g3++;
                      break;
                    default:
                      throw new d("invalid Huffman DH selector");
                  }
                  switch (t4.huffmanDWSelector) {
                    case 0:
                    case 1:
                      l2 = getStandardTable(t4.huffmanDWSelector + 2);
                      break;
                    case 3:
                      l2 = getCustomHuffmanTable(g3, r4, o4);
                      g3++;
                      break;
                    default:
                      throw new d("invalid Huffman DW selector");
                  }
                  if (t4.bitmapSizeSelector) {
                    u3 = getCustomHuffmanTable(g3, r4, o4);
                    g3++;
                  } else
                    u3 = getStandardTable(1);
                  h3 = t4.aggregationInstancesSelector ? getCustomHuffmanTable(g3, r4, o4) : getStandardTable(1);
                  return { tableDeltaHeight: c3, tableDeltaWidth: l2, tableBitmapSize: u3, tableAggregateInstances: h3 };
                }(t3, o3, this.customTables);
                y2 = new M(c2, u2, h2);
              }
              var v2 = this.symbols;
              v2 || (this.symbols = v2 = {});
              for (var k2 = [], _2 = 0, w2 = o3.length; _2 < w2; _2++) {
                var S2 = v2[o3[_2]];
                S2 && (k2 = k2.concat(S2));
              }
              var C2 = new m(c2, u2, h2);
              v2[r3] = function decodeSymbolDictionary(t4, r4, o4, c3, u3, h3, g3, m2, y3, v3, k3, _3) {
                if (t4 && r4)
                  throw new d("symbol refinement with Huffman is not supported");
                var w3, S3, C3 = [], x2 = 0, O2 = (0, l.log2)(o4.length + c3), T2 = k3.decoder, E2 = k3.contextCache;
                if (t4) {
                  w3 = getStandardTable(1);
                  S3 = [];
                  O2 = Math.max(O2, 1);
                }
                for (; C3.length < c3; ) {
                  x2 += t4 ? h3.tableDeltaHeight.decode(_3) : decodeInteger(E2, "IADH", T2);
                  for (var M2 = 0, R2 = 0, D = t4 ? S3.length : 0; ; ) {
                    var j = t4 ? h3.tableDeltaWidth.decode(_3) : decodeInteger(E2, "IADW", T2);
                    if (j === null)
                      break;
                    R2 += M2 += j;
                    var L = void 0;
                    if (r4) {
                      var N = decodeInteger(E2, "IAAI", T2);
                      if (N > 1)
                        L = decodeTextRegion(t4, r4, M2, x2, 0, N, 1, o4.concat(C3), O2, 0, 0, 1, 0, h3, y3, v3, k3, 0, _3);
                      else {
                        var U = decodeIAID(E2, T2, O2), H = decodeInteger(E2, "IARDX", T2), $ = decodeInteger(E2, "IARDY", T2);
                        L = decodeRefinement(M2, x2, y3, U < o4.length ? o4[U] : C3[U - o4.length], H, $, false, v3, k3);
                      }
                      C3.push(L);
                    } else if (t4)
                      S3.push(M2);
                    else {
                      L = decodeBitmap(false, M2, x2, g3, false, null, m2, k3);
                      C3.push(L);
                    }
                  }
                  if (t4 && !r4) {
                    var X = h3.tableBitmapSize.decode(_3);
                    _3.byteAlign();
                    var q = void 0;
                    if (X === 0)
                      q = readUncompressedBitmap(_3, R2, x2);
                    else {
                      var G = _3.end, z = _3.position + X;
                      _3.end = z;
                      q = decodeMMRBitmap(_3, R2, x2, false);
                      _3.end = G;
                      _3.position = z;
                    }
                    var W = S3.length;
                    if (D === W - 1)
                      C3.push(q);
                    else {
                      var V = void 0, K = void 0, Y = 0, J = void 0, Z = void 0;
                      for (V = D; V < W; V++) {
                        J = Y + S3[V];
                        Z = [];
                        for (K = 0; K < x2; K++)
                          Z.push(q[K].subarray(Y, J));
                        C3.push(Z);
                        Y = J;
                      }
                    }
                  }
                }
                for (var Q, ee, te = [], re = [], ae = false, ne = o4.length + c3; re.length < ne; ) {
                  for (var ie = t4 ? w3.decode(_3) : decodeInteger(E2, "IAEX", T2); ie--; )
                    re.push(ae);
                  ae = !ae;
                }
                for (Q = 0, ee = o4.length; Q < ee; Q++)
                  re[Q] && te.push(o4[Q]);
                for (var oe = 0; oe < c3; Q++, oe++)
                  re[Q] && te.push(C3[oe]);
                return te;
              }(t3.huffman, t3.refinement, k2, t3.numberOfNewSymbols, t3.numberOfExportedSymbols, g2, t3.template, t3.at, t3.refinementTemplate, t3.refinementAt, C2, y2);
            } }, { key: "onImmediateTextRegion", value: function onImmediateTextRegion(t3, r3, o3, c2, u2) {
              for (var h2, g2, y2 = t3.info, v2 = this.symbols, k2 = [], _2 = 0, w2 = r3.length; _2 < w2; _2++) {
                var S2 = v2[r3[_2]];
                S2 && (k2 = k2.concat(S2));
              }
              var C2 = (0, l.log2)(k2.length);
              if (t3.huffman) {
                g2 = new M(o3, c2, u2);
                h2 = function getTextRegionHuffmanTables(t4, r4, o4, c3, l2) {
                  for (var u3 = [], h3 = 0; h3 <= 34; h3++) {
                    var g3 = l2.readBits(4);
                    u3.push(new x([h3, g3, 0, 0]));
                  }
                  var m2 = new T(u3, false);
                  u3.length = 0;
                  for (var y3 = 0; y3 < c3; ) {
                    var v3 = m2.decode(l2);
                    if (v3 >= 32) {
                      var k3 = void 0, _3 = void 0, w3 = void 0;
                      switch (v3) {
                        case 32:
                          if (y3 === 0)
                            throw new d("no previous value in symbol ID table");
                          _3 = l2.readBits(2) + 3;
                          k3 = u3[y3 - 1].prefixLength;
                          break;
                        case 33:
                          _3 = l2.readBits(3) + 3;
                          k3 = 0;
                          break;
                        case 34:
                          _3 = l2.readBits(7) + 11;
                          k3 = 0;
                          break;
                        default:
                          throw new d("invalid code length in symbol ID table");
                      }
                      for (w3 = 0; w3 < _3; w3++) {
                        u3.push(new x([y3, k3, 0, 0]));
                        y3++;
                      }
                    } else {
                      u3.push(new x([y3, v3, 0, 0]));
                      y3++;
                    }
                  }
                  l2.byteAlign();
                  var S3, C3, O3, E3 = new T(u3, false), M2 = 0;
                  switch (t4.huffmanFS) {
                    case 0:
                    case 1:
                      S3 = getStandardTable(t4.huffmanFS + 6);
                      break;
                    case 3:
                      S3 = getCustomHuffmanTable(M2, r4, o4);
                      M2++;
                      break;
                    default:
                      throw new d("invalid Huffman FS selector");
                  }
                  switch (t4.huffmanDS) {
                    case 0:
                    case 1:
                    case 2:
                      C3 = getStandardTable(t4.huffmanDS + 8);
                      break;
                    case 3:
                      C3 = getCustomHuffmanTable(M2, r4, o4);
                      M2++;
                      break;
                    default:
                      throw new d("invalid Huffman DS selector");
                  }
                  switch (t4.huffmanDT) {
                    case 0:
                    case 1:
                    case 2:
                      O3 = getStandardTable(t4.huffmanDT + 11);
                      break;
                    case 3:
                      O3 = getCustomHuffmanTable(M2, r4, o4);
                      M2++;
                      break;
                    default:
                      throw new d("invalid Huffman DT selector");
                  }
                  if (t4.refinement)
                    throw new d("refinement with Huffman is not supported");
                  return { symbolIDTable: E3, tableFirstS: S3, tableDeltaS: C3, tableDeltaT: O3 };
                }(t3, r3, this.customTables, k2.length, g2);
              }
              var O2 = new m(o3, c2, u2), E2 = decodeTextRegion(t3.huffman, t3.refinement, y2.width, y2.height, t3.defaultPixelValue, t3.numberOfSymbolInstances, t3.stripSize, k2, C2, t3.transposed, t3.dsOffset, t3.referenceCorner, t3.combinationOperator, h2, t3.refinementTemplate, t3.refinementAt, O2, t3.logStripSize, g2);
              this.drawBitmap(y2, E2);
            } }, { key: "onImmediateLosslessTextRegion", value: function onImmediateLosslessTextRegion() {
              this.onImmediateTextRegion.apply(this, arguments);
            } }, { key: "onPatternDictionary", value: function onPatternDictionary(t3, r3, o3, c2, l2) {
              var u2 = this.patterns;
              u2 || (this.patterns = u2 = {});
              var h2 = new m(o3, c2, l2);
              u2[r3] = function decodePatternDictionary(t4, r4, o4, c3, l3, u3) {
                var h3 = [];
                if (!t4) {
                  h3.push({ x: -r4, y: 0 });
                  l3 === 0 && h3.push({ x: -3, y: -1 }, { x: 2, y: -2 }, { x: -2, y: -2 });
                }
                for (var d2 = decodeBitmap(t4, (c3 + 1) * r4, o4, l3, false, null, h3, u3), g2 = [], m2 = 0; m2 <= c3; m2++) {
                  for (var y2 = [], v2 = r4 * m2, k2 = v2 + r4, _2 = 0; _2 < o4; _2++)
                    y2.push(d2[_2].subarray(v2, k2));
                  g2.push(y2);
                }
                return g2;
              }(t3.mmr, t3.patternWidth, t3.patternHeight, t3.maxPatternIndex, t3.template, h2);
            } }, { key: "onImmediateHalftoneRegion", value: function onImmediateHalftoneRegion(t3, r3, o3, c2, u2) {
              var h2 = this.patterns[r3[0]], g2 = t3.info, y2 = new m(o3, c2, u2), v2 = function decodeHalftoneRegion(t4, r4, o4, c3, u3, h3, g3, m2, y3, v3, k2, _2, w2, S2, C2) {
                if (g3)
                  throw new d("skip is not supported");
                if (m2 !== 0)
                  throw new d('operator "'.concat(m2, '" is not supported in halftone region'));
                var x2, O2, T2, E2 = [];
                for (x2 = 0; x2 < u3; x2++) {
                  T2 = new Uint8Array(c3);
                  if (h3)
                    for (O2 = 0; O2 < c3; O2++)
                      T2[O2] = h3;
                  E2.push(T2);
                }
                var R2 = r4.length, D = r4[0], j = D[0].length, L = D.length, N = (0, l.log2)(R2), U = [];
                if (!t4) {
                  U.push({ x: o4 <= 1 ? 3 : 2, y: -1 });
                  o4 === 0 && U.push({ x: -3, y: -1 }, { x: 2, y: -2 }, { x: -2, y: -2 });
                }
                var H, $, X, q, G, z, W, V, K, Y, J, Z = [];
                t4 && (H = new M(C2.data, C2.start, C2.end));
                for (x2 = N - 1; x2 >= 0; x2--) {
                  $ = t4 ? decodeMMRBitmap(H, y3, v3, true) : decodeBitmap(false, y3, v3, o4, false, null, U, C2);
                  Z[x2] = $;
                }
                for (X = 0; X < v3; X++)
                  for (q = 0; q < y3; q++) {
                    G = 0;
                    z = 0;
                    for (O2 = N - 1; O2 >= 0; O2--)
                      z |= (G ^= Z[O2][X][q]) << O2;
                    W = r4[z];
                    K = _2 + X * w2 - q * S2 >> 8;
                    if ((V = k2 + X * S2 + q * w2 >> 8) >= 0 && V + j <= c3 && K >= 0 && K + L <= u3)
                      for (x2 = 0; x2 < L; x2++) {
                        J = E2[K + x2];
                        Y = W[x2];
                        for (O2 = 0; O2 < j; O2++)
                          J[V + O2] |= Y[O2];
                      }
                    else {
                      var Q = void 0, ee = void 0;
                      for (x2 = 0; x2 < L; x2++)
                        if (!((ee = K + x2) < 0 || ee >= u3)) {
                          J = E2[ee];
                          Y = W[x2];
                          for (O2 = 0; O2 < j; O2++)
                            (Q = V + O2) >= 0 && Q < c3 && (J[Q] |= Y[O2]);
                        }
                    }
                  }
                return E2;
              }(t3.mmr, h2, t3.template, g2.width, g2.height, t3.defaultPixelValue, t3.enableSkip, t3.combinationOperator, t3.gridWidth, t3.gridHeight, t3.gridOffsetX, t3.gridOffsetY, t3.gridVectorX, t3.gridVectorY, y2);
              this.drawBitmap(g2, v2);
            } }, { key: "onImmediateLosslessHalftoneRegion", value: function onImmediateLosslessHalftoneRegion() {
              this.onImmediateHalftoneRegion.apply(this, arguments);
            } }, { key: "onTables", value: function onTables(t3, r3, o3, c2) {
              var u2 = this.customTables;
              u2 || (this.customTables = u2 = {});
              u2[t3] = function decodeTablesSegment(t4, r4, o4) {
                var c3, u3, h2 = t4[r4], d2 = 4294967295 & (0, l.readUint32)(t4, r4 + 1), g2 = 4294967295 & (0, l.readUint32)(t4, r4 + 5), m2 = new M(t4, r4 + 9, o4), y2 = 1 + (h2 >> 1 & 7), v2 = 1 + (h2 >> 4 & 7), k2 = [], _2 = d2;
                do {
                  c3 = m2.readBits(y2);
                  u3 = m2.readBits(v2);
                  k2.push(new x([_2, c3, u3, 0]));
                  _2 += 1 << u3;
                } while (_2 < g2);
                c3 = m2.readBits(y2);
                k2.push(new x([d2 - 1, c3, 32, 0, "lower"]));
                c3 = m2.readBits(y2);
                k2.push(new x([g2, c3, 32, 0]));
                if (1 & h2) {
                  c3 = m2.readBits(y2);
                  k2.push(new x([c3, 0]));
                }
                return new T(k2, false);
              }(r3, o3, c2);
            } }]);
            return SimpleSegmentVisitor;
          }(), x = _createClass(function HuffmanLine(t3) {
            _classCallCheck(this, HuffmanLine);
            if (t3.length === 2) {
              this.isOOB = true;
              this.rangeLow = 0;
              this.prefixLength = t3[0];
              this.rangeLength = 0;
              this.prefixCode = t3[1];
              this.isLowerRange = false;
            } else {
              this.isOOB = false;
              this.rangeLow = t3[0];
              this.prefixLength = t3[1];
              this.rangeLength = t3[2];
              this.prefixCode = t3[3];
              this.isLowerRange = t3[4] === "lower";
            }
          }), O = function() {
            function HuffmanTreeNode(t3) {
              _classCallCheck(this, HuffmanTreeNode);
              this.children = [];
              if (t3) {
                this.isLeaf = true;
                this.rangeLength = t3.rangeLength;
                this.rangeLow = t3.rangeLow;
                this.isLowerRange = t3.isLowerRange;
                this.isOOB = t3.isOOB;
              } else
                this.isLeaf = false;
            }
            _createClass(HuffmanTreeNode, [{ key: "buildTree", value: function buildTree(t3, r3) {
              var o3 = t3.prefixCode >> r3 & 1;
              if (r3 <= 0)
                this.children[o3] = new HuffmanTreeNode(t3);
              else {
                var c2 = this.children[o3];
                c2 || (this.children[o3] = c2 = new HuffmanTreeNode(null));
                c2.buildTree(t3, r3 - 1);
              }
            } }, { key: "decodeNode", value: function decodeNode(t3) {
              if (this.isLeaf) {
                if (this.isOOB)
                  return null;
                var r3 = t3.readBits(this.rangeLength);
                return this.rangeLow + (this.isLowerRange ? -r3 : r3);
              }
              var o3 = this.children[t3.readBit()];
              if (!o3)
                throw new d("invalid Huffman data");
              return o3.decodeNode(t3);
            } }]);
            return HuffmanTreeNode;
          }(), T = function() {
            function HuffmanTable(t3, r3) {
              _classCallCheck(this, HuffmanTable);
              r3 || this.assignPrefixCodes(t3);
              this.rootNode = new O(null);
              for (var o3 = 0, c2 = t3.length; o3 < c2; o3++) {
                var l2 = t3[o3];
                l2.prefixLength > 0 && this.rootNode.buildTree(l2, l2.prefixLength - 1);
              }
            }
            _createClass(HuffmanTable, [{ key: "decode", value: function decode(t3) {
              return this.rootNode.decodeNode(t3);
            } }, { key: "assignPrefixCodes", value: function assignPrefixCodes(t3) {
              for (var r3 = t3.length, o3 = 0, c2 = 0; c2 < r3; c2++)
                o3 = Math.max(o3, t3[c2].prefixLength);
              for (var l2 = new Uint32Array(o3 + 1), u2 = 0; u2 < r3; u2++)
                l2[t3[u2].prefixLength]++;
              var h2, d2, g2, m2 = 1, y2 = 0;
              l2[0] = 0;
              for (; m2 <= o3; ) {
                h2 = y2 = y2 + l2[m2 - 1] << 1;
                d2 = 0;
                for (; d2 < r3; ) {
                  if ((g2 = t3[d2]).prefixLength === m2) {
                    g2.prefixCode = h2;
                    h2++;
                  }
                  d2++;
                }
                m2++;
              }
            } }]);
            return HuffmanTable;
          }();
          var E = {};
          function getStandardTable(t3) {
            var r3, o3 = E[t3];
            if (o3)
              return o3;
            switch (t3) {
              case 1:
                r3 = [[0, 1, 4, 0], [16, 2, 8, 2], [272, 3, 16, 6], [65808, 3, 32, 7]];
                break;
              case 2:
                r3 = [[0, 1, 0, 0], [1, 2, 0, 2], [2, 3, 0, 6], [3, 4, 3, 14], [11, 5, 6, 30], [75, 6, 32, 62], [6, 63]];
                break;
              case 3:
                r3 = [[-256, 8, 8, 254], [0, 1, 0, 0], [1, 2, 0, 2], [2, 3, 0, 6], [3, 4, 3, 14], [11, 5, 6, 30], [-257, 8, 32, 255, "lower"], [75, 7, 32, 126], [6, 62]];
                break;
              case 4:
                r3 = [[1, 1, 0, 0], [2, 2, 0, 2], [3, 3, 0, 6], [4, 4, 3, 14], [12, 5, 6, 30], [76, 5, 32, 31]];
                break;
              case 5:
                r3 = [[-255, 7, 8, 126], [1, 1, 0, 0], [2, 2, 0, 2], [3, 3, 0, 6], [4, 4, 3, 14], [12, 5, 6, 30], [-256, 7, 32, 127, "lower"], [76, 6, 32, 62]];
                break;
              case 6:
                r3 = [[-2048, 5, 10, 28], [-1024, 4, 9, 8], [-512, 4, 8, 9], [-256, 4, 7, 10], [-128, 5, 6, 29], [-64, 5, 5, 30], [-32, 4, 5, 11], [0, 2, 7, 0], [128, 3, 7, 2], [256, 3, 8, 3], [512, 4, 9, 12], [1024, 4, 10, 13], [-2049, 6, 32, 62, "lower"], [2048, 6, 32, 63]];
                break;
              case 7:
                r3 = [[-1024, 4, 9, 8], [-512, 3, 8, 0], [-256, 4, 7, 9], [-128, 5, 6, 26], [-64, 5, 5, 27], [-32, 4, 5, 10], [0, 4, 5, 11], [32, 5, 5, 28], [64, 5, 6, 29], [128, 4, 7, 12], [256, 3, 8, 1], [512, 3, 9, 2], [1024, 3, 10, 3], [-1025, 5, 32, 30, "lower"], [2048, 5, 32, 31]];
                break;
              case 8:
                r3 = [[-15, 8, 3, 252], [-7, 9, 1, 508], [-5, 8, 1, 253], [-3, 9, 0, 509], [-2, 7, 0, 124], [-1, 4, 0, 10], [0, 2, 1, 0], [2, 5, 0, 26], [3, 6, 0, 58], [4, 3, 4, 4], [20, 6, 1, 59], [22, 4, 4, 11], [38, 4, 5, 12], [70, 5, 6, 27], [134, 5, 7, 28], [262, 6, 7, 60], [390, 7, 8, 125], [646, 6, 10, 61], [-16, 9, 32, 510, "lower"], [1670, 9, 32, 511], [2, 1]];
                break;
              case 9:
                r3 = [[-31, 8, 4, 252], [-15, 9, 2, 508], [-11, 8, 2, 253], [-7, 9, 1, 509], [-5, 7, 1, 124], [-3, 4, 1, 10], [-1, 3, 1, 2], [1, 3, 1, 3], [3, 5, 1, 26], [5, 6, 1, 58], [7, 3, 5, 4], [39, 6, 2, 59], [43, 4, 5, 11], [75, 4, 6, 12], [139, 5, 7, 27], [267, 5, 8, 28], [523, 6, 8, 60], [779, 7, 9, 125], [1291, 6, 11, 61], [-32, 9, 32, 510, "lower"], [3339, 9, 32, 511], [2, 0]];
                break;
              case 10:
                r3 = [[-21, 7, 4, 122], [-5, 8, 0, 252], [-4, 7, 0, 123], [-3, 5, 0, 24], [-2, 2, 2, 0], [2, 5, 0, 25], [3, 6, 0, 54], [4, 7, 0, 124], [5, 8, 0, 253], [6, 2, 6, 1], [70, 5, 5, 26], [102, 6, 5, 55], [134, 6, 6, 56], [198, 6, 7, 57], [326, 6, 8, 58], [582, 6, 9, 59], [1094, 6, 10, 60], [2118, 7, 11, 125], [-22, 8, 32, 254, "lower"], [4166, 8, 32, 255], [2, 2]];
                break;
              case 11:
                r3 = [[1, 1, 0, 0], [2, 2, 1, 2], [4, 4, 0, 12], [5, 4, 1, 13], [7, 5, 1, 28], [9, 5, 2, 29], [13, 6, 2, 60], [17, 7, 2, 122], [21, 7, 3, 123], [29, 7, 4, 124], [45, 7, 5, 125], [77, 7, 6, 126], [141, 7, 32, 127]];
                break;
              case 12:
                r3 = [[1, 1, 0, 0], [2, 2, 0, 2], [3, 3, 1, 6], [5, 5, 0, 28], [6, 5, 1, 29], [8, 6, 1, 60], [10, 7, 0, 122], [11, 7, 1, 123], [13, 7, 2, 124], [17, 7, 3, 125], [25, 7, 4, 126], [41, 8, 5, 254], [73, 8, 32, 255]];
                break;
              case 13:
                r3 = [[1, 1, 0, 0], [2, 3, 0, 4], [3, 4, 0, 12], [4, 5, 0, 28], [5, 4, 1, 13], [7, 3, 3, 5], [15, 6, 1, 58], [17, 6, 2, 59], [21, 6, 3, 60], [29, 6, 4, 61], [45, 6, 5, 62], [77, 7, 6, 126], [141, 7, 32, 127]];
                break;
              case 14:
                r3 = [[-2, 3, 0, 4], [-1, 3, 0, 5], [0, 1, 0, 0], [1, 3, 0, 6], [2, 3, 0, 7]];
                break;
              case 15:
                r3 = [[-24, 7, 4, 124], [-8, 6, 2, 60], [-4, 5, 1, 28], [-2, 4, 0, 12], [-1, 3, 0, 4], [0, 1, 0, 0], [1, 3, 0, 5], [2, 4, 0, 13], [3, 5, 1, 29], [5, 6, 2, 61], [9, 7, 4, 125], [-25, 7, 32, 126, "lower"], [25, 7, 32, 127]];
                break;
              default:
                throw new d("standard table B.".concat(t3, " does not exist"));
            }
            for (var c2 = 0, l2 = r3.length; c2 < l2; c2++)
              r3[c2] = new x(r3[c2]);
            o3 = new T(r3, true);
            E[t3] = o3;
            return o3;
          }
          var M = function() {
            function Reader(t3, r3, o3) {
              _classCallCheck(this, Reader);
              this.data = t3;
              this.start = r3;
              this.end = o3;
              this.position = r3;
              this.shift = -1;
              this.currentByte = 0;
            }
            _createClass(Reader, [{ key: "readBit", value: function readBit() {
              if (this.shift < 0) {
                if (this.position >= this.end)
                  throw new d("end of data while reading bit");
                this.currentByte = this.data[this.position++];
                this.shift = 7;
              }
              var t3 = this.currentByte >> this.shift & 1;
              this.shift--;
              return t3;
            } }, { key: "readBits", value: function readBits(t3) {
              var r3, o3 = 0;
              for (r3 = t3 - 1; r3 >= 0; r3--)
                o3 |= this.readBit() << r3;
              return o3;
            } }, { key: "byteAlign", value: function byteAlign() {
              this.shift = -1;
            } }, { key: "next", value: function next() {
              return this.position >= this.end ? -1 : this.data[this.position++];
            } }]);
            return Reader;
          }();
          function getCustomHuffmanTable(t3, r3, o3) {
            for (var c2 = 0, l2 = 0, u2 = r3.length; l2 < u2; l2++) {
              var h2 = o3[r3[l2]];
              if (h2) {
                if (t3 === c2)
                  return h2;
                c2++;
              }
            }
            throw new d("can't find custom Huffman table");
          }
          function readUncompressedBitmap(t3, r3, o3) {
            for (var c2 = [], l2 = 0; l2 < o3; l2++) {
              var u2 = new Uint8Array(r3);
              c2.push(u2);
              for (var h2 = 0; h2 < r3; h2++)
                u2[h2] = t3.readBit();
              t3.byteAlign();
            }
            return c2;
          }
          function decodeMMRBitmap(t3, r3, o3, c2) {
            for (var l2, u2 = { K: -1, Columns: r3, Rows: o3, BlackIs1: true, EndOfBlock: c2 }, d2 = new h.CCITTFaxDecoder(t3, u2), g2 = [], m2 = false, y2 = 0; y2 < o3; y2++) {
              var v2 = new Uint8Array(r3);
              g2.push(v2);
              for (var k2 = -1, _2 = 0; _2 < r3; _2++) {
                if (k2 < 0) {
                  if ((l2 = d2.readNextChar()) === -1) {
                    l2 = 0;
                    m2 = true;
                  }
                  k2 = 7;
                }
                v2[_2] = l2 >> k2 & 1;
                k2--;
              }
            }
            if (c2 && !m2)
              for (var w2 = 0; w2 < 5 && d2.readNextChar() !== -1; w2++)
                ;
            return g2;
          }
          var R = function() {
            function Jbig2Image() {
              _classCallCheck(this, Jbig2Image);
            }
            _createClass(Jbig2Image, [{ key: "parseChunks", value: function parseChunks(t3) {
              return function parseJbig2Chunks(t4) {
                for (var r3 = new C(), o3 = 0, c2 = t4.length; o3 < c2; o3++) {
                  var l2 = t4[o3];
                  processSegments(readSegments({}, l2.data, l2.start, l2.end), r3);
                }
                return r3.buffer;
              }(t3);
            } }, { key: "parse", value: function parse(t3) {
              var r3 = function parseJbig2(t4) {
                var r4 = t4.length, o4 = 0;
                if (t4[o4] !== 151 || t4[o4 + 1] !== 74 || t4[o4 + 2] !== 66 || t4[o4 + 3] !== 50 || t4[o4 + 4] !== 13 || t4[o4 + 5] !== 10 || t4[o4 + 6] !== 26 || t4[o4 + 7] !== 10)
                  throw new d("parseJbig2 - invalid header.");
                var c3 = /* @__PURE__ */ Object.create(null);
                o4 += 8;
                var u3 = t4[o4++];
                c3.randomAccess = !(1 & u3);
                if (!(2 & u3)) {
                  c3.numberOfPages = (0, l.readUint32)(t4, o4);
                  o4 += 4;
                }
                var h2 = readSegments(c3, t4, o4, r4), g2 = new C();
                processSegments(h2, g2);
                for (var m2 = g2.currentPageInfo, y2 = m2.width, v2 = m2.height, k2 = g2.buffer, _2 = new Uint8ClampedArray(y2 * v2), w2 = 0, S2 = 0, x2 = 0; x2 < v2; x2++)
                  for (var O2 = 0, T2 = void 0, E2 = 0; E2 < y2; E2++) {
                    if (!O2) {
                      O2 = 128;
                      T2 = k2[S2++];
                    }
                    _2[w2++] = T2 & O2 ? 0 : 255;
                    O2 >>= 1;
                  }
                return { imgData: _2, width: y2, height: v2 };
              }(t3), o3 = r3.imgData, c2 = r3.width, u2 = r3.height;
              this.width = c2;
              this.height = u2;
              return o3;
            } }]);
            return Jbig2Image;
          }();
          r2.Jbig2Image = R;
        }, (t2, r2) => {
          "use strict";
          Object.defineProperty(r2, "__esModule", { value: true });
          r2.ArithmeticDecoder = void 0;
          function _defineProperties(t3, r3) {
            for (var o3 = 0; o3 < r3.length; o3++) {
              var c2 = r3[o3];
              c2.enumerable = c2.enumerable || false;
              c2.configurable = true;
              "value" in c2 && (c2.writable = true);
              Object.defineProperty(t3, c2.key, c2);
            }
          }
          var o2 = [{ qe: 22017, nmps: 1, nlps: 1, switchFlag: 1 }, { qe: 13313, nmps: 2, nlps: 6, switchFlag: 0 }, { qe: 6145, nmps: 3, nlps: 9, switchFlag: 0 }, { qe: 2753, nmps: 4, nlps: 12, switchFlag: 0 }, { qe: 1313, nmps: 5, nlps: 29, switchFlag: 0 }, { qe: 545, nmps: 38, nlps: 33, switchFlag: 0 }, { qe: 22017, nmps: 7, nlps: 6, switchFlag: 1 }, { qe: 21505, nmps: 8, nlps: 14, switchFlag: 0 }, { qe: 18433, nmps: 9, nlps: 14, switchFlag: 0 }, { qe: 14337, nmps: 10, nlps: 14, switchFlag: 0 }, { qe: 12289, nmps: 11, nlps: 17, switchFlag: 0 }, { qe: 9217, nmps: 12, nlps: 18, switchFlag: 0 }, { qe: 7169, nmps: 13, nlps: 20, switchFlag: 0 }, { qe: 5633, nmps: 29, nlps: 21, switchFlag: 0 }, { qe: 22017, nmps: 15, nlps: 14, switchFlag: 1 }, { qe: 21505, nmps: 16, nlps: 14, switchFlag: 0 }, { qe: 20737, nmps: 17, nlps: 15, switchFlag: 0 }, { qe: 18433, nmps: 18, nlps: 16, switchFlag: 0 }, { qe: 14337, nmps: 19, nlps: 17, switchFlag: 0 }, { qe: 13313, nmps: 20, nlps: 18, switchFlag: 0 }, { qe: 12289, nmps: 21, nlps: 19, switchFlag: 0 }, { qe: 10241, nmps: 22, nlps: 19, switchFlag: 0 }, { qe: 9217, nmps: 23, nlps: 20, switchFlag: 0 }, { qe: 8705, nmps: 24, nlps: 21, switchFlag: 0 }, { qe: 7169, nmps: 25, nlps: 22, switchFlag: 0 }, { qe: 6145, nmps: 26, nlps: 23, switchFlag: 0 }, { qe: 5633, nmps: 27, nlps: 24, switchFlag: 0 }, { qe: 5121, nmps: 28, nlps: 25, switchFlag: 0 }, { qe: 4609, nmps: 29, nlps: 26, switchFlag: 0 }, { qe: 4353, nmps: 30, nlps: 27, switchFlag: 0 }, { qe: 2753, nmps: 31, nlps: 28, switchFlag: 0 }, { qe: 2497, nmps: 32, nlps: 29, switchFlag: 0 }, { qe: 2209, nmps: 33, nlps: 30, switchFlag: 0 }, { qe: 1313, nmps: 34, nlps: 31, switchFlag: 0 }, { qe: 1089, nmps: 35, nlps: 32, switchFlag: 0 }, { qe: 673, nmps: 36, nlps: 33, switchFlag: 0 }, { qe: 545, nmps: 37, nlps: 34, switchFlag: 0 }, { qe: 321, nmps: 38, nlps: 35, switchFlag: 0 }, { qe: 273, nmps: 39, nlps: 36, switchFlag: 0 }, { qe: 133, nmps: 40, nlps: 37, switchFlag: 0 }, { qe: 73, nmps: 41, nlps: 38, switchFlag: 0 }, { qe: 37, nmps: 42, nlps: 39, switchFlag: 0 }, { qe: 21, nmps: 43, nlps: 40, switchFlag: 0 }, { qe: 9, nmps: 44, nlps: 41, switchFlag: 0 }, { qe: 5, nmps: 45, nlps: 42, switchFlag: 0 }, { qe: 1, nmps: 45, nlps: 43, switchFlag: 0 }, { qe: 22017, nmps: 46, nlps: 46, switchFlag: 0 }], c = function() {
            function ArithmeticDecoder(t3, r3, o3) {
              !function _classCallCheck(t4, r4) {
                if (!(t4 instanceof r4))
                  throw new TypeError("Cannot call a class as a function");
              }(this, ArithmeticDecoder);
              this.data = t3;
              this.bp = r3;
              this.dataEnd = o3;
              this.chigh = t3[r3];
              this.clow = 0;
              this.byteIn();
              this.chigh = this.chigh << 7 & 65535 | this.clow >> 9 & 127;
              this.clow = this.clow << 7 & 65535;
              this.ct -= 7;
              this.a = 32768;
            }
            !function _createClass(t3, r3, o3) {
              r3 && _defineProperties(t3.prototype, r3);
              o3 && _defineProperties(t3, o3);
              Object.defineProperty(t3, "prototype", { writable: false });
              return t3;
            }(ArithmeticDecoder, [{ key: "byteIn", value: function byteIn() {
              var t3 = this.data, r3 = this.bp;
              if (t3[r3] === 255)
                if (t3[r3 + 1] > 143) {
                  this.clow += 65280;
                  this.ct = 8;
                } else {
                  r3++;
                  this.clow += t3[r3] << 9;
                  this.ct = 7;
                  this.bp = r3;
                }
              else {
                r3++;
                this.clow += r3 < this.dataEnd ? t3[r3] << 8 : 65280;
                this.ct = 8;
                this.bp = r3;
              }
              if (this.clow > 65535) {
                this.chigh += this.clow >> 16;
                this.clow &= 65535;
              }
            } }, { key: "readBit", value: function readBit(t3, r3) {
              var c2, l = t3[r3] >> 1, u = 1 & t3[r3], h = o2[l], d = h.qe, g = this.a - d;
              if (this.chigh < d)
                if (g < d) {
                  g = d;
                  c2 = u;
                  l = h.nmps;
                } else {
                  g = d;
                  c2 = 1 ^ u;
                  h.switchFlag === 1 && (u = c2);
                  l = h.nlps;
                }
              else {
                this.chigh -= d;
                if ((32768 & g) != 0) {
                  this.a = g;
                  return u;
                }
                if (g < d) {
                  c2 = 1 ^ u;
                  h.switchFlag === 1 && (u = c2);
                  l = h.nlps;
                } else {
                  c2 = u;
                  l = h.nmps;
                }
              }
              do {
                this.ct === 0 && this.byteIn();
                g <<= 1;
                this.chigh = this.chigh << 1 & 65535 | this.clow >> 15 & 1;
                this.clow = this.clow << 1 & 65535;
                this.ct--;
              } while ((32768 & g) == 0);
              this.a = g;
              t3[r3] = l << 1 | u;
              return c2;
            } }]);
            return ArithmeticDecoder;
          }();
          r2.ArithmeticDecoder = c;
        }, (t2, r2, o2) => {
          "use strict";
          function _typeof(t3) {
            return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t4) {
              return typeof t4;
            } : function(t4) {
              return t4 && typeof Symbol == "function" && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
            }, _typeof(t3);
          }
          Object.defineProperty(r2, "__esModule", { value: true });
          r2.JpegStream = void 0;
          var c = o2(182), l = o2(158), u = o2(191), h = o2(4);
          function _defineProperties(t3, r3) {
            for (var o3 = 0; o3 < r3.length; o3++) {
              var c2 = r3[o3];
              c2.enumerable = c2.enumerable || false;
              c2.configurable = true;
              "value" in c2 && (c2.writable = true);
              Object.defineProperty(t3, c2.key, c2);
            }
          }
          function _setPrototypeOf(t3, r3) {
            _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(t4, r4) {
              t4.__proto__ = r4;
              return t4;
            };
            return _setPrototypeOf(t3, r3);
          }
          function _createSuper(t3) {
            var r3 = function _isNativeReflectConstruct() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                }));
                return true;
              } catch (t4) {
                return false;
              }
            }();
            return function _createSuperInternal() {
              var o3, c2 = _getPrototypeOf(t3);
              if (r3) {
                var l2 = _getPrototypeOf(this).constructor;
                o3 = Reflect.construct(c2, arguments, l2);
              } else
                o3 = c2.apply(this, arguments);
              return _possibleConstructorReturn(this, o3);
            };
          }
          function _possibleConstructorReturn(t3, r3) {
            if (r3 && (_typeof(r3) === "object" || typeof r3 == "function"))
              return r3;
            if (r3 !== void 0)
              throw new TypeError("Derived constructors may only return object or undefined");
            return function _assertThisInitialized(t4) {
              if (t4 === void 0)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return t4;
            }(t3);
          }
          function _getPrototypeOf(t3) {
            _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(t4) {
              return t4.__proto__ || Object.getPrototypeOf(t4);
            };
            return _getPrototypeOf(t3);
          }
          var d = function(t3) {
            !function _inherits(t4, r4) {
              if (typeof r4 != "function" && r4 !== null)
                throw new TypeError("Super expression must either be null or a function");
              t4.prototype = Object.create(r4 && r4.prototype, { constructor: { value: t4, writable: true, configurable: true } });
              Object.defineProperty(t4, "prototype", { writable: false });
              r4 && _setPrototypeOf(t4, r4);
            }(JpegStream, t3);
            var r3 = _createSuper(JpegStream);
            function JpegStream(t4, o3, c2) {
              var l2, u2;
              !function _classCallCheck(t5, r4) {
                if (!(t5 instanceof r4))
                  throw new TypeError("Cannot call a class as a function");
              }(this, JpegStream);
              for (; (u2 = t4.getByte()) !== -1; )
                if (u2 === 255) {
                  t4.skip(-1);
                  break;
                }
              (l2 = r3.call(this, o3)).stream = t4;
              l2.dict = t4.dict;
              l2.maybeLength = o3;
              l2.params = c2;
              return l2;
            }
            !function _createClass(t4, r4, o3) {
              r4 && _defineProperties(t4.prototype, r4);
              o3 && _defineProperties(t4, o3);
              Object.defineProperty(t4, "prototype", { writable: false });
              return t4;
            }(JpegStream, [{ key: "bytes", get: function get() {
              return (0, h.shadow)(this, "bytes", this.stream.getBytes(this.maybeLength));
            } }, { key: "ensureBuffer", value: function ensureBuffer(t4) {
            } }, { key: "readBlock", value: function readBlock() {
              if (!this.eof) {
                var t4 = { decodeTransform: void 0, colorTransform: void 0 }, r4 = this.dict.getArray("D", "Decode");
                if (this.forceRGB && Array.isArray(r4)) {
                  for (var o3 = this.dict.get("BPC", "BitsPerComponent") || 8, c2 = r4.length, h2 = new Int32Array(c2), d2 = false, g = (1 << o3) - 1, m = 0; m < c2; m += 2) {
                    h2[m] = 256 * (r4[m + 1] - r4[m]) | 0;
                    h2[m + 1] = r4[m] * g | 0;
                    h2[m] === 256 && h2[m + 1] === 0 || (d2 = true);
                  }
                  d2 && (t4.decodeTransform = h2);
                }
                if (this.params instanceof l.Dict) {
                  var y = this.params.get("ColorTransform");
                  Number.isInteger(y) && (t4.colorTransform = y);
                }
                var v = new u.JpegImage(t4);
                v.parse(this.bytes);
                var k = v.getData({ width: this.drawWidth, height: this.drawHeight, forceRGB: this.forceRGB, isSourcePDF: true });
                this.buffer = k;
                this.bufferLength = k.length;
                this.eof = true;
              }
            } }]);
            return JpegStream;
          }(c.DecodeStream);
          r2.JpegStream = d;
        }, (t2, r2, o2) => {
          "use strict";
          Object.defineProperty(r2, "__esModule", { value: true });
          r2.JpegImage = void 0;
          var c = o2(4), l = o2(161);
          function _typeof(t3) {
            return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t4) {
              return typeof t4;
            } : function(t4) {
              return t4 && typeof Symbol == "function" && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
            }, _typeof(t3);
          }
          function _defineProperties(t3, r3) {
            for (var o3 = 0; o3 < r3.length; o3++) {
              var c2 = r3[o3];
              c2.enumerable = c2.enumerable || false;
              c2.configurable = true;
              "value" in c2 && (c2.writable = true);
              Object.defineProperty(t3, c2.key, c2);
            }
          }
          function _createClass(t3, r3, o3) {
            r3 && _defineProperties(t3.prototype, r3);
            o3 && _defineProperties(t3, o3);
            Object.defineProperty(t3, "prototype", { writable: false });
            return t3;
          }
          function _classCallCheck(t3, r3) {
            if (!(t3 instanceof r3))
              throw new TypeError("Cannot call a class as a function");
          }
          function _inherits(t3, r3) {
            if (typeof r3 != "function" && r3 !== null)
              throw new TypeError("Super expression must either be null or a function");
            t3.prototype = Object.create(r3 && r3.prototype, { constructor: { value: t3, writable: true, configurable: true } });
            Object.defineProperty(t3, "prototype", { writable: false });
            r3 && _setPrototypeOf(t3, r3);
          }
          function _setPrototypeOf(t3, r3) {
            _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(t4, r4) {
              t4.__proto__ = r4;
              return t4;
            };
            return _setPrototypeOf(t3, r3);
          }
          function _createSuper(t3) {
            var r3 = function _isNativeReflectConstruct() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                }));
                return true;
              } catch (t4) {
                return false;
              }
            }();
            return function _createSuperInternal() {
              var o3, c2 = _getPrototypeOf(t3);
              if (r3) {
                var l2 = _getPrototypeOf(this).constructor;
                o3 = Reflect.construct(c2, arguments, l2);
              } else
                o3 = c2.apply(this, arguments);
              return _possibleConstructorReturn(this, o3);
            };
          }
          function _possibleConstructorReturn(t3, r3) {
            if (r3 && (_typeof(r3) === "object" || typeof r3 == "function"))
              return r3;
            if (r3 !== void 0)
              throw new TypeError("Derived constructors may only return object or undefined");
            return function _assertThisInitialized(t4) {
              if (t4 === void 0)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return t4;
            }(t3);
          }
          function _getPrototypeOf(t3) {
            _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(t4) {
              return t4.__proto__ || Object.getPrototypeOf(t4);
            };
            return _getPrototypeOf(t3);
          }
          var u = function(t3) {
            _inherits(JpegError, t3);
            var r3 = _createSuper(JpegError);
            function JpegError(t4) {
              _classCallCheck(this, JpegError);
              return r3.call(this, "JPEG error: ".concat(t4), "JpegError");
            }
            return _createClass(JpegError);
          }(c.BaseException), h = function(t3) {
            _inherits(DNLMarkerError, t3);
            var r3 = _createSuper(DNLMarkerError);
            function DNLMarkerError(t4, o3) {
              var c2;
              _classCallCheck(this, DNLMarkerError);
              (c2 = r3.call(this, t4, "DNLMarkerError")).scanLines = o3;
              return c2;
            }
            return _createClass(DNLMarkerError);
          }(c.BaseException), d = function(t3) {
            _inherits(EOIMarkerError, t3);
            var r3 = _createSuper(EOIMarkerError);
            function EOIMarkerError(t4) {
              _classCallCheck(this, EOIMarkerError);
              return r3.call(this, t4, "EOIMarkerError");
            }
            return _createClass(EOIMarkerError);
          }(c.BaseException), g = new Uint8Array([0, 1, 8, 16, 9, 2, 3, 10, 17, 24, 32, 25, 18, 11, 4, 5, 12, 19, 26, 33, 40, 48, 41, 34, 27, 20, 13, 6, 7, 14, 21, 28, 35, 42, 49, 56, 57, 50, 43, 36, 29, 22, 15, 23, 30, 37, 44, 51, 58, 59, 52, 45, 38, 31, 39, 46, 53, 60, 61, 54, 47, 55, 62, 63]), m = 4017, y = 799, v = 3406, k = 2276, _ = 1567, w = 3784, S = 5793, C = 2896;
          function buildHuffmanTable(t3, r3) {
            for (var o3, c2, l2 = 0, u2 = 16; u2 > 0 && !t3[u2 - 1]; )
              u2--;
            var h2, d2 = [{ children: [], index: 0 }], g2 = d2[0];
            for (o3 = 0; o3 < u2; o3++) {
              for (c2 = 0; c2 < t3[o3]; c2++) {
                (g2 = d2.pop()).children[g2.index] = r3[l2];
                for (; g2.index > 0; )
                  g2 = d2.pop();
                g2.index++;
                d2.push(g2);
                for (; d2.length <= o3; ) {
                  d2.push(h2 = { children: [], index: 0 });
                  g2.children[g2.index] = h2.children;
                  g2 = h2;
                }
                l2++;
              }
              if (o3 + 1 < u2) {
                d2.push(h2 = { children: [], index: 0 });
                g2.children[g2.index] = h2.children;
                g2 = h2;
              }
            }
            return d2[0].children;
          }
          function getBlockBufferOffset(t3, r3, o3) {
            return 64 * ((t3.blocksPerLine + 1) * r3 + o3);
          }
          function decodeScan(t3, r3, o3, m2, y2, v2, k2, _2, w2) {
            var S2 = arguments.length > 9 && arguments[9] !== void 0 && arguments[9], C2 = o3.mcusPerLine, x2 = o3.progressive, O = r3, T = 0, E = 0;
            function readBit() {
              if (E > 0) {
                E--;
                return T >> E & 1;
              }
              if ((T = t3[r3++]) === 255) {
                var c2 = t3[r3++];
                if (c2) {
                  if (c2 === 220 && S2) {
                    r3 += 2;
                    var g2 = (0, l.readUint16)(t3, r3);
                    r3 += 2;
                    if (g2 > 0 && g2 !== o3.scanLines)
                      throw new h("Found DNL marker (0xFFDC) while parsing scan data", g2);
                  } else if (c2 === 217) {
                    if (S2) {
                      var m3 = j * (o3.precision === 8 ? 8 : 0);
                      if (m3 > 0 && Math.round(o3.scanLines / m3) >= 10)
                        throw new h("Found EOI marker (0xFFD9) while parsing scan data, possibly caused by incorrect `scanLines` parameter", m3);
                    }
                    throw new d("Found EOI marker (0xFFD9) while parsing scan data");
                  }
                  throw new u("unexpected marker ".concat((T << 8 | c2).toString(16)));
                }
              }
              E = 7;
              return T >>> 7;
            }
            function decodeHuffman(t4) {
              for (var r4 = t4; ; ) {
                switch (_typeof(r4 = r4[readBit()])) {
                  case "number":
                    return r4;
                  case "object":
                    continue;
                }
                throw new u("invalid huffman sequence");
              }
            }
            function receive(t4) {
              for (var r4 = 0; t4 > 0; ) {
                r4 = r4 << 1 | readBit();
                t4--;
              }
              return r4;
            }
            function receiveAndExtend(t4) {
              if (t4 === 1)
                return readBit() === 1 ? 1 : -1;
              var r4 = receive(t4);
              return r4 >= 1 << t4 - 1 ? r4 : r4 + (-1 << t4) + 1;
            }
            function decodeBaseline(t4, r4) {
              var o4 = decodeHuffman(t4.huffmanTableDC), c2 = o4 === 0 ? 0 : receiveAndExtend(o4);
              t4.blockData[r4] = t4.pred += c2;
              for (var l2 = 1; l2 < 64; ) {
                var u2 = decodeHuffman(t4.huffmanTableAC), h2 = 15 & u2, d2 = u2 >> 4;
                if (h2 !== 0) {
                  var m3 = g[l2 += d2];
                  t4.blockData[r4 + m3] = receiveAndExtend(h2);
                  l2++;
                } else {
                  if (d2 < 15)
                    break;
                  l2 += 16;
                }
              }
            }
            function decodeDCFirst(t4, r4) {
              var o4 = decodeHuffman(t4.huffmanTableDC), c2 = o4 === 0 ? 0 : receiveAndExtend(o4) << w2;
              t4.blockData[r4] = t4.pred += c2;
            }
            function decodeDCSuccessive(t4, r4) {
              t4.blockData[r4] |= readBit() << w2;
            }
            var M = 0;
            function decodeACFirst(t4, r4) {
              if (M > 0)
                M--;
              else
                for (var o4 = v2, c2 = k2; o4 <= c2; ) {
                  var l2 = decodeHuffman(t4.huffmanTableAC), u2 = 15 & l2, h2 = l2 >> 4;
                  if (u2 !== 0) {
                    var d2 = g[o4 += h2];
                    t4.blockData[r4 + d2] = receiveAndExtend(u2) * (1 << w2);
                    o4++;
                  } else {
                    if (h2 < 15) {
                      M = receive(h2) + (1 << h2) - 1;
                      break;
                    }
                    o4 += 16;
                  }
                }
            }
            var R, D = 0;
            function decodeACSuccessive(t4, r4) {
              for (var o4, c2, l2 = v2, h2 = k2, d2 = 0; l2 <= h2; ) {
                var m3 = r4 + g[l2], y3 = t4.blockData[m3] < 0 ? -1 : 1;
                switch (D) {
                  case 0:
                    d2 = (c2 = decodeHuffman(t4.huffmanTableAC)) >> 4;
                    if ((o4 = 15 & c2) === 0)
                      if (d2 < 15) {
                        M = receive(d2) + (1 << d2);
                        D = 4;
                      } else {
                        d2 = 16;
                        D = 1;
                      }
                    else {
                      if (o4 !== 1)
                        throw new u("invalid ACn encoding");
                      R = receiveAndExtend(o4);
                      D = d2 ? 2 : 3;
                    }
                    continue;
                  case 1:
                  case 2:
                    t4.blockData[m3] ? t4.blockData[m3] += y3 * (readBit() << w2) : --d2 === 0 && (D = D === 2 ? 3 : 0);
                    break;
                  case 3:
                    if (t4.blockData[m3])
                      t4.blockData[m3] += y3 * (readBit() << w2);
                    else {
                      t4.blockData[m3] = R << w2;
                      D = 0;
                    }
                    break;
                  case 4:
                    t4.blockData[m3] && (t4.blockData[m3] += y3 * (readBit() << w2));
                }
                l2++;
              }
              D === 4 && --M === 0 && (D = 0);
            }
            var j = 0;
            function decodeMcu(t4, r4, o4, c2, l2) {
              var u2 = o4 % C2;
              j = (o4 / C2 | 0) * t4.v + c2;
              var h2 = u2 * t4.h + l2;
              r4(t4, getBlockBufferOffset(t4, j, h2));
            }
            function decodeBlock(t4, r4, o4) {
              j = o4 / t4.blocksPerLine | 0;
              var c2 = o4 % t4.blocksPerLine;
              r4(t4, getBlockBufferOffset(t4, j, c2));
            }
            var L, N, U, H, $, X, q = m2.length;
            X = x2 ? v2 === 0 ? _2 === 0 ? decodeDCFirst : decodeDCSuccessive : _2 === 0 ? decodeACFirst : decodeACSuccessive : decodeBaseline;
            var G, z, W, V, K = 0;
            z = q === 1 ? m2[0].blocksPerLine * m2[0].blocksPerColumn : C2 * o3.mcusPerColumn;
            for (; K <= z; ) {
              var Y = y2 ? Math.min(z - K, y2) : z;
              if (Y > 0) {
                for (N = 0; N < q; N++)
                  m2[N].pred = 0;
                M = 0;
                if (q === 1) {
                  L = m2[0];
                  for ($ = 0; $ < Y; $++) {
                    decodeBlock(L, X, K);
                    K++;
                  }
                } else
                  for ($ = 0; $ < Y; $++) {
                    for (N = 0; N < q; N++) {
                      W = (L = m2[N]).h;
                      V = L.v;
                      for (U = 0; U < V; U++)
                        for (H = 0; H < W; H++)
                          decodeMcu(L, X, K, U, H);
                    }
                    K++;
                  }
              }
              E = 0;
              if (!(G = findNextFileMarker(t3, r3)))
                break;
              if (G.invalid) {
                var J = Y > 0 ? "unexpected" : "excessive";
                (0, c.warn)("decodeScan - ".concat(J, " MCU data, current marker is: ").concat(G.invalid));
                r3 = G.offset;
              }
              if (!(G.marker >= 65488 && G.marker <= 65495))
                break;
              r3 += 2;
            }
            return r3 - O;
          }
          function quantizeAndInverse(t3, r3, o3) {
            var c2, l2, h2, d2, g2, x2, O, T, E, M, R, D, j, L, N, U, H, $ = t3.quantizationTable, X = t3.blockData;
            if (!$)
              throw new u("missing required Quantization Table.");
            for (var q = 0; q < 64; q += 8) {
              E = X[r3 + q];
              M = X[r3 + q + 1];
              R = X[r3 + q + 2];
              D = X[r3 + q + 3];
              j = X[r3 + q + 4];
              L = X[r3 + q + 5];
              N = X[r3 + q + 6];
              U = X[r3 + q + 7];
              E *= $[q];
              if ((M | R | D | j | L | N | U) != 0) {
                M *= $[q + 1];
                R *= $[q + 2];
                D *= $[q + 3];
                j *= $[q + 4];
                L *= $[q + 5];
                N *= $[q + 6];
                U *= $[q + 7];
                l2 = (c2 = (c2 = S * E + 128 >> 8) + (l2 = S * j + 128 >> 8) + 1 >> 1) - l2;
                H = (h2 = R) * w + (d2 = N) * _ + 128 >> 8;
                h2 = h2 * _ - d2 * w + 128 >> 8;
                O = (g2 = (g2 = C * (M - U) + 128 >> 8) + (O = L << 4) + 1 >> 1) - O;
                x2 = (T = (T = C * (M + U) + 128 >> 8) + (x2 = D << 4) + 1 >> 1) - x2;
                d2 = (c2 = c2 + (d2 = H) + 1 >> 1) - d2;
                h2 = (l2 = l2 + h2 + 1 >> 1) - h2;
                H = g2 * k + T * v + 2048 >> 12;
                g2 = g2 * v - T * k + 2048 >> 12;
                T = H;
                H = x2 * y + O * m + 2048 >> 12;
                x2 = x2 * m - O * y + 2048 >> 12;
                O = H;
                o3[q] = c2 + T;
                o3[q + 7] = c2 - T;
                o3[q + 1] = l2 + O;
                o3[q + 6] = l2 - O;
                o3[q + 2] = h2 + x2;
                o3[q + 5] = h2 - x2;
                o3[q + 3] = d2 + g2;
                o3[q + 4] = d2 - g2;
              } else {
                H = S * E + 512 >> 10;
                o3[q] = H;
                o3[q + 1] = H;
                o3[q + 2] = H;
                o3[q + 3] = H;
                o3[q + 4] = H;
                o3[q + 5] = H;
                o3[q + 6] = H;
                o3[q + 7] = H;
              }
            }
            for (var G = 0; G < 8; ++G) {
              E = o3[G];
              if (((M = o3[G + 8]) | (R = o3[G + 16]) | (D = o3[G + 24]) | (j = o3[G + 32]) | (L = o3[G + 40]) | (N = o3[G + 48]) | (U = o3[G + 56])) != 0) {
                l2 = (c2 = 4112 + ((c2 = S * E + 2048 >> 12) + (l2 = S * j + 2048 >> 12) + 1 >> 1)) - l2;
                H = (h2 = R) * w + (d2 = N) * _ + 2048 >> 12;
                h2 = h2 * _ - d2 * w + 2048 >> 12;
                d2 = H;
                O = (g2 = (g2 = C * (M - U) + 2048 >> 12) + (O = L) + 1 >> 1) - O;
                x2 = (T = (T = C * (M + U) + 2048 >> 12) + (x2 = D) + 1 >> 1) - x2;
                H = g2 * k + T * v + 2048 >> 12;
                g2 = g2 * v - T * k + 2048 >> 12;
                T = H;
                H = x2 * y + O * m + 2048 >> 12;
                x2 = x2 * m - O * y + 2048 >> 12;
                (E = (c2 = c2 + d2 + 1 >> 1) + T) < 16 ? E = 0 : E >= 4080 ? E = 255 : E >>= 4;
                (M = (l2 = l2 + h2 + 1 >> 1) + (O = H)) < 16 ? M = 0 : M >= 4080 ? M = 255 : M >>= 4;
                (R = (h2 = l2 - h2) + x2) < 16 ? R = 0 : R >= 4080 ? R = 255 : R >>= 4;
                (D = (d2 = c2 - d2) + g2) < 16 ? D = 0 : D >= 4080 ? D = 255 : D >>= 4;
                (j = d2 - g2) < 16 ? j = 0 : j >= 4080 ? j = 255 : j >>= 4;
                (L = h2 - x2) < 16 ? L = 0 : L >= 4080 ? L = 255 : L >>= 4;
                (N = l2 - O) < 16 ? N = 0 : N >= 4080 ? N = 255 : N >>= 4;
                (U = c2 - T) < 16 ? U = 0 : U >= 4080 ? U = 255 : U >>= 4;
                X[r3 + G] = E;
                X[r3 + G + 8] = M;
                X[r3 + G + 16] = R;
                X[r3 + G + 24] = D;
                X[r3 + G + 32] = j;
                X[r3 + G + 40] = L;
                X[r3 + G + 48] = N;
                X[r3 + G + 56] = U;
              } else {
                H = (H = S * E + 8192 >> 14) < -2040 ? 0 : H >= 2024 ? 255 : H + 2056 >> 4;
                X[r3 + G] = H;
                X[r3 + G + 8] = H;
                X[r3 + G + 16] = H;
                X[r3 + G + 24] = H;
                X[r3 + G + 32] = H;
                X[r3 + G + 40] = H;
                X[r3 + G + 48] = H;
                X[r3 + G + 56] = H;
              }
            }
          }
          function buildComponentData(t3, r3) {
            for (var o3 = r3.blocksPerLine, c2 = r3.blocksPerColumn, l2 = new Int16Array(64), u2 = 0; u2 < c2; u2++)
              for (var h2 = 0; h2 < o3; h2++) {
                quantizeAndInverse(r3, getBlockBufferOffset(r3, u2, h2), l2);
              }
            return r3.blockData;
          }
          function findNextFileMarker(t3, r3) {
            var o3 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : r3, c2 = t3.length - 1, u2 = o3 < r3 ? o3 : r3;
            if (r3 >= c2)
              return null;
            var h2 = (0, l.readUint16)(t3, r3);
            if (h2 >= 65472 && h2 <= 65534)
              return { invalid: null, marker: h2, offset: r3 };
            for (var d2 = (0, l.readUint16)(t3, u2); !(d2 >= 65472 && d2 <= 65534); ) {
              if (++u2 >= c2)
                return null;
              d2 = (0, l.readUint16)(t3, u2);
            }
            return { invalid: h2.toString(16), marker: d2, offset: u2 };
          }
          var x = function() {
            function JpegImage() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, r3 = t3.decodeTransform, o3 = r3 === void 0 ? null : r3, c2 = t3.colorTransform, l2 = c2 === void 0 ? -1 : c2;
              _classCallCheck(this, JpegImage);
              this._decodeTransform = o3;
              this._colorTransform = l2;
            }
            _createClass(JpegImage, [{ key: "parse", value: function parse(t3) {
              var r3 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, o3 = r3.dnlScanLines, m2 = o3 === void 0 ? null : o3;
              function readDataBlock() {
                var r4 = (0, l.readUint16)(t3, k2), o4 = (k2 += 2) + r4 - 2, u2 = findNextFileMarker(t3, o4, k2);
                if (u2 && u2.invalid) {
                  (0, c.warn)("readDataBlock - incorrect length, current marker is: " + u2.invalid);
                  o4 = u2.offset;
                }
                var h2 = t3.subarray(k2, o4);
                k2 += h2.length;
                return h2;
              }
              function prepareComponents(t4) {
                for (var r4 = Math.ceil(t4.samplesPerLine / 8 / t4.maxH), o4 = Math.ceil(t4.scanLines / 8 / t4.maxV), c2 = 0, l2 = t4.components.length; c2 < l2; c2++) {
                  var u2 = t4.components[c2], h2 = Math.ceil(Math.ceil(t4.samplesPerLine / 8) * u2.h / t4.maxH), d2 = Math.ceil(Math.ceil(t4.scanLines / 8) * u2.v / t4.maxV), g2 = r4 * u2.h, m3 = 64 * (o4 * u2.v) * (g2 + 1);
                  u2.blockData = new Int16Array(m3);
                  u2.blocksPerLine = h2;
                  u2.blocksPerColumn = d2;
                }
                t4.mcusPerLine = r4;
                t4.mcusPerColumn = o4;
              }
              var y2, v2, k2 = 0, _2 = null, w2 = null, S2 = 0, C2 = [], x2 = [], O = [], T = (0, l.readUint16)(t3, k2);
              k2 += 2;
              if (T !== 65496)
                throw new u("SOI not found");
              T = (0, l.readUint16)(t3, k2);
              k2 += 2;
              e:
                for (; T !== 65497; ) {
                  var E = void 0, M = void 0, R = void 0;
                  switch (T) {
                    case 65504:
                    case 65505:
                    case 65506:
                    case 65507:
                    case 65508:
                    case 65509:
                    case 65510:
                    case 65511:
                    case 65512:
                    case 65513:
                    case 65514:
                    case 65515:
                    case 65516:
                    case 65517:
                    case 65518:
                    case 65519:
                    case 65534:
                      var D = readDataBlock();
                      T === 65504 && D[0] === 74 && D[1] === 70 && D[2] === 73 && D[3] === 70 && D[4] === 0 && (_2 = { version: { major: D[5], minor: D[6] }, densityUnits: D[7], xDensity: D[8] << 8 | D[9], yDensity: D[10] << 8 | D[11], thumbWidth: D[12], thumbHeight: D[13], thumbData: D.subarray(14, 14 + 3 * D[12] * D[13]) });
                      T === 65518 && D[0] === 65 && D[1] === 100 && D[2] === 111 && D[3] === 98 && D[4] === 101 && (w2 = { version: D[5] << 8 | D[6], flags0: D[7] << 8 | D[8], flags1: D[9] << 8 | D[10], transformCode: D[11] });
                      break;
                    case 65499:
                      for (var j = (0, l.readUint16)(t3, k2), L = j + (k2 += 2) - 2; k2 < L; ) {
                        var N = t3[k2++], U = new Uint16Array(64);
                        if (N >> 4 == 0)
                          for (M = 0; M < 64; M++)
                            U[g[M]] = t3[k2++];
                        else {
                          if (N >> 4 != 1)
                            throw new u("DQT - invalid table spec");
                          for (M = 0; M < 64; M++) {
                            U[g[M]] = (0, l.readUint16)(t3, k2);
                            k2 += 2;
                          }
                        }
                        C2[15 & N] = U;
                      }
                      break;
                    case 65472:
                    case 65473:
                    case 65474:
                      if (y2)
                        throw new u("Only single frame JPEGs supported");
                      k2 += 2;
                      (y2 = {}).extended = T === 65473;
                      y2.progressive = T === 65474;
                      y2.precision = t3[k2++];
                      var H = (0, l.readUint16)(t3, k2);
                      k2 += 2;
                      y2.scanLines = m2 || H;
                      y2.samplesPerLine = (0, l.readUint16)(t3, k2);
                      k2 += 2;
                      y2.components = [];
                      y2.componentIds = {};
                      var $ = t3[k2++], X = 0, q = 0;
                      for (E = 0; E < $; E++) {
                        var G = t3[k2], z = t3[k2 + 1] >> 4, W = 15 & t3[k2 + 1];
                        X < z && (X = z);
                        q < W && (q = W);
                        var V = t3[k2 + 2];
                        R = y2.components.push({ h: z, v: W, quantizationId: V, quantizationTable: null });
                        y2.componentIds[G] = R - 1;
                        k2 += 3;
                      }
                      y2.maxH = X;
                      y2.maxV = q;
                      prepareComponents(y2);
                      break;
                    case 65476:
                      var K = (0, l.readUint16)(t3, k2);
                      k2 += 2;
                      for (E = 2; E < K; ) {
                        var Y = t3[k2++], J = new Uint8Array(16), Z = 0;
                        for (M = 0; M < 16; M++, k2++)
                          Z += J[M] = t3[k2];
                        var Q = new Uint8Array(Z);
                        for (M = 0; M < Z; M++, k2++)
                          Q[M] = t3[k2];
                        E += 17 + Z;
                        (Y >> 4 == 0 ? O : x2)[15 & Y] = buildHuffmanTable(J, Q);
                      }
                      break;
                    case 65501:
                      k2 += 2;
                      v2 = (0, l.readUint16)(t3, k2);
                      k2 += 2;
                      break;
                    case 65498:
                      var ee = ++S2 == 1 && !m2;
                      k2 += 2;
                      var te = t3[k2++], re = [];
                      for (E = 0; E < te; E++) {
                        var ae = t3[k2++], ne = y2.componentIds[ae], ie = y2.components[ne];
                        ie.index = ae;
                        var oe = t3[k2++];
                        ie.huffmanTableDC = O[oe >> 4];
                        ie.huffmanTableAC = x2[15 & oe];
                        re.push(ie);
                      }
                      var se = t3[k2++], ce = t3[k2++], le = t3[k2++];
                      try {
                        var ue = decodeScan(t3, k2, y2, re, v2, se, ce, le >> 4, 15 & le, ee);
                        k2 += ue;
                      } catch (r4) {
                        if (r4 instanceof h) {
                          (0, c.warn)("".concat(r4.message, " -- attempting to re-parse the JPEG image."));
                          return this.parse(t3, { dnlScanLines: r4.scanLines });
                        }
                        if (r4 instanceof d) {
                          (0, c.warn)("".concat(r4.message, " -- ignoring the rest of the image data."));
                          break e;
                        }
                        throw r4;
                      }
                      break;
                    case 65500:
                      k2 += 4;
                      break;
                    case 65535:
                      t3[k2] !== 255 && k2--;
                      break;
                    default:
                      var fe = findNextFileMarker(t3, k2 - 2, k2 - 3);
                      if (fe && fe.invalid) {
                        (0, c.warn)("JpegImage.parse - unexpected data, current marker is: " + fe.invalid);
                        k2 = fe.offset;
                        break;
                      }
                      if (!fe || k2 >= t3.length - 1) {
                        (0, c.warn)("JpegImage.parse - reached the end of the image data without finding an EOI marker (0xFFD9).");
                        break e;
                      }
                      throw new u("JpegImage.parse - unknown marker: " + T.toString(16));
                  }
                  T = (0, l.readUint16)(t3, k2);
                  k2 += 2;
                }
              this.width = y2.samplesPerLine;
              this.height = y2.scanLines;
              this.jfif = _2;
              this.adobe = w2;
              this.components = [];
              for (var he = 0, de = y2.components.length; he < de; he++) {
                var pe = y2.components[he], ge = C2[pe.quantizationId];
                ge && (pe.quantizationTable = ge);
                this.components.push({ index: pe.index, output: buildComponentData(0, pe), scaleX: pe.h / y2.maxH, scaleY: pe.v / y2.maxV, blocksPerLine: pe.blocksPerLine, blocksPerColumn: pe.blocksPerColumn });
              }
              this.numComponents = this.components.length;
            } }, { key: "_getLinearizedBlockData", value: function _getLinearizedBlockData(t3, r3) {
              var o3, c2, l2, u2, h2, d2, g2, m2, y2, v2, k2, _2, w2 = arguments.length > 2 && arguments[2] !== void 0 && arguments[2], S2 = this.width / t3, C2 = this.height / r3, x2 = 0, O = this.components.length, T = t3 * r3 * O, E = new Uint8ClampedArray(T), M = new Uint32Array(t3), R = 4294967288;
              for (g2 = 0; g2 < O; g2++) {
                c2 = (o3 = this.components[g2]).scaleX * S2;
                l2 = o3.scaleY * C2;
                x2 = g2;
                k2 = o3.output;
                u2 = o3.blocksPerLine + 1 << 3;
                if (c2 !== _2) {
                  for (h2 = 0; h2 < t3; h2++) {
                    m2 = 0 | h2 * c2;
                    M[h2] = (m2 & R) << 3 | 7 & m2;
                  }
                  _2 = c2;
                }
                for (d2 = 0; d2 < r3; d2++) {
                  v2 = u2 * ((m2 = 0 | d2 * l2) & R) | (7 & m2) << 3;
                  for (h2 = 0; h2 < t3; h2++) {
                    E[x2] = k2[v2 + M[h2]];
                    x2 += O;
                  }
                }
              }
              var D = this._decodeTransform;
              w2 || O !== 4 || D || (D = new Int32Array([-256, 255, -256, 255, -256, 255, -256, 255]));
              if (D)
                for (g2 = 0; g2 < T; )
                  for (m2 = 0, y2 = 0; m2 < O; m2++, g2++, y2 += 2)
                    E[g2] = (E[g2] * D[y2] >> 8) + D[y2 + 1];
              return E;
            } }, { key: "_isColorConversionNeeded", get: function get() {
              return this.adobe ? !!this.adobe.transformCode : this.numComponents === 3 ? this._colorTransform !== 0 && (this.components[0].index !== 82 || this.components[1].index !== 71 || this.components[2].index !== 66) : this._colorTransform === 1;
            } }, { key: "_convertYccToRgb", value: function _convertYccToRgb(t3) {
              for (var r3, o3, c2, l2 = 0, u2 = t3.length; l2 < u2; l2 += 3) {
                r3 = t3[l2];
                o3 = t3[l2 + 1];
                c2 = t3[l2 + 2];
                t3[l2] = r3 - 179.456 + 1.402 * c2;
                t3[l2 + 1] = r3 + 135.459 - 0.344 * o3 - 0.714 * c2;
                t3[l2 + 2] = r3 - 226.816 + 1.772 * o3;
              }
              return t3;
            } }, { key: "_convertYcckToRgb", value: function _convertYcckToRgb(t3) {
              for (var r3, o3, c2, l2, u2 = 0, h2 = 0, d2 = t3.length; h2 < d2; h2 += 4) {
                r3 = t3[h2];
                o3 = t3[h2 + 1];
                c2 = t3[h2 + 2];
                l2 = t3[h2 + 3];
                t3[u2++] = o3 * (-660635669420364e-19 * o3 + 437130475926232e-18 * c2 - 54080610064599e-18 * r3 + 48449797120281e-17 * l2 - 0.154362151871126) - 122.67195406894 + c2 * (-957964378445773e-18 * c2 + 817076911346625e-18 * r3 - 0.00477271405408747 * l2 + 1.53380253221734) + r3 * (961250184130688e-18 * r3 - 0.00266257332283933 * l2 + 0.48357088451265) + l2 * (-336197177618394e-18 * l2 + 0.484791561490776);
                t3[u2++] = 107.268039397724 + o3 * (219927104525741e-19 * o3 - 640992018297945e-18 * c2 + 659397001245577e-18 * r3 + 426105652938837e-18 * l2 - 0.176491792462875) + c2 * (-778269941513683e-18 * c2 + 0.00130872261408275 * r3 + 770482631801132e-18 * l2 - 0.151051492775562) + r3 * (0.00126935368114843 * r3 - 0.00265090189010898 * l2 + 0.25802910206845) + l2 * (-318913117588328e-18 * l2 - 0.213742400323665);
                t3[u2++] = o3 * (-570115196973677e-18 * o3 - 263409051004589e-19 * c2 + 0.0020741088115012 * r3 - 0.00288260236853442 * l2 + 0.814272968359295) - 20.810012546947 + c2 * (-153496057440975e-19 * c2 - 132689043961446e-18 * r3 + 560833691242812e-18 * l2 - 0.195152027534049) + r3 * (0.00174418132927582 * r3 - 0.00255243321439347 * l2 + 0.116935020465145) + l2 * (-343531996510555e-18 * l2 + 0.24165260232407);
              }
              return t3.subarray(0, u2);
            } }, { key: "_convertYcckToCmyk", value: function _convertYcckToCmyk(t3) {
              for (var r3, o3, c2, l2 = 0, u2 = t3.length; l2 < u2; l2 += 4) {
                r3 = t3[l2];
                o3 = t3[l2 + 1];
                c2 = t3[l2 + 2];
                t3[l2] = 434.456 - r3 - 1.402 * c2;
                t3[l2 + 1] = 119.541 - r3 + 0.344 * o3 + 0.714 * c2;
                t3[l2 + 2] = 481.816 - r3 - 1.772 * o3;
              }
              return t3;
            } }, { key: "_convertCmykToRgb", value: function _convertCmykToRgb(t3) {
              for (var r3, o3, c2, l2, u2 = 0, h2 = 0, d2 = t3.length; h2 < d2; h2 += 4) {
                r3 = t3[h2];
                o3 = t3[h2 + 1];
                c2 = t3[h2 + 2];
                l2 = t3[h2 + 3];
                t3[u2++] = 255 + r3 * (-6747147073602441e-20 * r3 + 8379262121013727e-19 * o3 + 2894718188643294e-19 * c2 + 0.003264231057537806 * l2 - 1.1185611867203937) + o3 * (26374107616089405e-21 * o3 - 8626949158638572e-20 * c2 - 2748769067499491e-19 * l2 - 0.02155688794978967) + c2 * (-3878099212869363e-20 * c2 - 3267808279485286e-19 * l2 + 0.0686742238595345) - l2 * (3361971776183937e-19 * l2 + 0.7430659151342254);
                t3[u2++] = 255 + r3 * (13596372813588848e-20 * r3 + 924537132573585e-18 * o3 + 10567359618683593e-20 * c2 + 4791864687436512e-19 * l2 - 0.3109689587515875) + o3 * (-23545346108370344e-20 * o3 + 2702845253534714e-19 * c2 + 0.0020200308977307156 * l2 - 0.7488052167015494) + c2 * (6834815998235662e-20 * c2 + 15168452363460973e-20 * l2 - 0.09751927774728933) - l2 * (3189131175883281e-19 * l2 + 0.7364883807733168);
                t3[u2++] = 255 + r3 * (13598650411385307e-21 * r3 + 12423956175490851e-20 * o3 + 4751985097583589e-19 * c2 - 36729317476630422e-22 * l2 - 0.05562186980264034) + o3 * (16141380598724676e-20 * o3 + 9692239130725186e-19 * c2 + 7782692450036253e-19 * l2 - 0.44015232367526463) + c2 * (5068882914068769e-22 * c2 + 0.0017778369011375071 * l2 - 0.7591454649749609) - l2 * (3435319965105553e-19 * l2 + 0.7063770186160144);
              }
              return t3.subarray(0, u2);
            } }, { key: "getData", value: function getData(t3) {
              var r3 = t3.width, o3 = t3.height, c2 = t3.forceRGB, l2 = c2 !== void 0 && c2, h2 = t3.isSourcePDF, d2 = h2 !== void 0 && h2;
              if (this.numComponents > 4)
                throw new u("Unsupported color mode");
              var g2 = this._getLinearizedBlockData(r3, o3, d2);
              if (this.numComponents === 1 && l2) {
                for (var m2 = g2.length, y2 = new Uint8ClampedArray(3 * m2), v2 = 0, k2 = 0; k2 < m2; k2++) {
                  var _2 = g2[k2];
                  y2[v2++] = _2;
                  y2[v2++] = _2;
                  y2[v2++] = _2;
                }
                return y2;
              }
              if (this.numComponents === 3 && this._isColorConversionNeeded)
                return this._convertYccToRgb(g2);
              if (this.numComponents === 4) {
                if (this._isColorConversionNeeded)
                  return l2 ? this._convertYcckToRgb(g2) : this._convertYcckToCmyk(g2);
                if (l2)
                  return this._convertCmykToRgb(g2);
              }
              return g2;
            } }]);
            return JpegImage;
          }();
          r2.JpegImage = x;
        }, (t2, r2, o2) => {
          "use strict";
          function _typeof(t3) {
            return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t4) {
              return typeof t4;
            } : function(t4) {
              return t4 && typeof Symbol == "function" && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
            }, _typeof(t3);
          }
          Object.defineProperty(r2, "__esModule", { value: true });
          r2.JpxStream = void 0;
          var c = o2(182), l = o2(193), u = o2(4);
          function _defineProperties(t3, r3) {
            for (var o3 = 0; o3 < r3.length; o3++) {
              var c2 = r3[o3];
              c2.enumerable = c2.enumerable || false;
              c2.configurable = true;
              "value" in c2 && (c2.writable = true);
              Object.defineProperty(t3, c2.key, c2);
            }
          }
          function _setPrototypeOf(t3, r3) {
            _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(t4, r4) {
              t4.__proto__ = r4;
              return t4;
            };
            return _setPrototypeOf(t3, r3);
          }
          function _createSuper(t3) {
            var r3 = function _isNativeReflectConstruct() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                }));
                return true;
              } catch (t4) {
                return false;
              }
            }();
            return function _createSuperInternal() {
              var o3, c2 = _getPrototypeOf(t3);
              if (r3) {
                var l2 = _getPrototypeOf(this).constructor;
                o3 = Reflect.construct(c2, arguments, l2);
              } else
                o3 = c2.apply(this, arguments);
              return _possibleConstructorReturn(this, o3);
            };
          }
          function _possibleConstructorReturn(t3, r3) {
            if (r3 && (_typeof(r3) === "object" || typeof r3 == "function"))
              return r3;
            if (r3 !== void 0)
              throw new TypeError("Derived constructors may only return object or undefined");
            return function _assertThisInitialized(t4) {
              if (t4 === void 0)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return t4;
            }(t3);
          }
          function _getPrototypeOf(t3) {
            _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(t4) {
              return t4.__proto__ || Object.getPrototypeOf(t4);
            };
            return _getPrototypeOf(t3);
          }
          var h = function(t3) {
            !function _inherits(t4, r4) {
              if (typeof r4 != "function" && r4 !== null)
                throw new TypeError("Super expression must either be null or a function");
              t4.prototype = Object.create(r4 && r4.prototype, { constructor: { value: t4, writable: true, configurable: true } });
              Object.defineProperty(t4, "prototype", { writable: false });
              r4 && _setPrototypeOf(t4, r4);
            }(JpxStream, t3);
            var r3 = _createSuper(JpxStream);
            function JpxStream(t4, o3, c2) {
              var l2;
              !function _classCallCheck(t5, r4) {
                if (!(t5 instanceof r4))
                  throw new TypeError("Cannot call a class as a function");
              }(this, JpxStream);
              (l2 = r3.call(this, o3)).stream = t4;
              l2.dict = t4.dict;
              l2.maybeLength = o3;
              l2.params = c2;
              return l2;
            }
            !function _createClass(t4, r4, o3) {
              r4 && _defineProperties(t4.prototype, r4);
              o3 && _defineProperties(t4, o3);
              Object.defineProperty(t4, "prototype", { writable: false });
              return t4;
            }(JpxStream, [{ key: "bytes", get: function get() {
              return (0, u.shadow)(this, "bytes", this.stream.getBytes(this.maybeLength));
            } }, { key: "ensureBuffer", value: function ensureBuffer(t4) {
            } }, { key: "readBlock", value: function readBlock() {
              if (!this.eof) {
                var t4 = new l.JpxImage();
                t4.parse(this.bytes);
                var r4 = t4.width, o3 = t4.height, c2 = t4.componentsCount, u2 = t4.tiles.length;
                if (u2 === 1)
                  this.buffer = t4.tiles[0].items;
                else {
                  for (var h2 = new Uint8ClampedArray(r4 * o3 * c2), d = 0; d < u2; d++)
                    for (var g = t4.tiles[d], m = g.width, y = g.height, v = g.left, k = g.top, _ = g.items, w = 0, S = (r4 * k + v) * c2, C = r4 * c2, x = m * c2, O = 0; O < y; O++) {
                      var T = _.subarray(w, w + x);
                      h2.set(T, S);
                      w += x;
                      S += C;
                    }
                  this.buffer = h2;
                }
                this.bufferLength = this.buffer.length;
                this.eof = true;
              }
            } }]);
            return JpxStream;
          }(c.DecodeStream);
          r2.JpxStream = h;
        }, (t2, r2, o2) => {
          "use strict";
          function _typeof(t3) {
            return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t4) {
              return typeof t4;
            } : function(t4) {
              return t4 && typeof Symbol == "function" && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
            }, _typeof(t3);
          }
          Object.defineProperty(r2, "__esModule", { value: true });
          r2.JpxImage = void 0;
          var c = o2(4), l = o2(161), u = o2(189);
          function _defineProperties(t3, r3) {
            for (var o3 = 0; o3 < r3.length; o3++) {
              var c2 = r3[o3];
              c2.enumerable = c2.enumerable || false;
              c2.configurable = true;
              "value" in c2 && (c2.writable = true);
              Object.defineProperty(t3, c2.key, c2);
            }
          }
          function _createClass(t3, r3, o3) {
            r3 && _defineProperties(t3.prototype, r3);
            o3 && _defineProperties(t3, o3);
            Object.defineProperty(t3, "prototype", { writable: false });
            return t3;
          }
          function _classCallCheck(t3, r3) {
            if (!(t3 instanceof r3))
              throw new TypeError("Cannot call a class as a function");
          }
          function _inherits(t3, r3) {
            if (typeof r3 != "function" && r3 !== null)
              throw new TypeError("Super expression must either be null or a function");
            t3.prototype = Object.create(r3 && r3.prototype, { constructor: { value: t3, writable: true, configurable: true } });
            Object.defineProperty(t3, "prototype", { writable: false });
            r3 && _setPrototypeOf(t3, r3);
          }
          function _setPrototypeOf(t3, r3) {
            _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(t4, r4) {
              t4.__proto__ = r4;
              return t4;
            };
            return _setPrototypeOf(t3, r3);
          }
          function _createSuper(t3) {
            var r3 = function _isNativeReflectConstruct() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                }));
                return true;
              } catch (t4) {
                return false;
              }
            }();
            return function _createSuperInternal() {
              var o3, c2 = _getPrototypeOf(t3);
              if (r3) {
                var l2 = _getPrototypeOf(this).constructor;
                o3 = Reflect.construct(c2, arguments, l2);
              } else
                o3 = c2.apply(this, arguments);
              return _possibleConstructorReturn(this, o3);
            };
          }
          function _possibleConstructorReturn(t3, r3) {
            if (r3 && (_typeof(r3) === "object" || typeof r3 == "function"))
              return r3;
            if (r3 !== void 0)
              throw new TypeError("Derived constructors may only return object or undefined");
            return function _assertThisInitialized(t4) {
              if (t4 === void 0)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return t4;
            }(t3);
          }
          function _getPrototypeOf(t3) {
            _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(t4) {
              return t4.__proto__ || Object.getPrototypeOf(t4);
            };
            return _getPrototypeOf(t3);
          }
          var h = function(t3) {
            _inherits(JpxError, t3);
            var r3 = _createSuper(JpxError);
            function JpxError(t4) {
              _classCallCheck(this, JpxError);
              return r3.call(this, "JPX error: ".concat(t4), "JpxError");
            }
            return _createClass(JpxError);
          }(c.BaseException), d = { LL: 0, LH: 1, HL: 1, HH: 2 }, g = function() {
            function JpxImage() {
              _classCallCheck(this, JpxImage);
              this.failOnCorruptedImage = false;
            }
            _createClass(JpxImage, [{ key: "parse", value: function parse(t3) {
              if ((0, l.readUint16)(t3, 0) !== 65359)
                for (var r3 = t3.length, o3 = 0; o3 < r3; ) {
                  var u2 = 8, d2 = (0, l.readUint32)(t3, o3), g2 = (0, l.readUint32)(t3, o3 + 4);
                  o3 += u2;
                  if (d2 === 1) {
                    d2 = 4294967296 * (0, l.readUint32)(t3, o3) + (0, l.readUint32)(t3, o3 + 4);
                    o3 += 8;
                    u2 += 8;
                  }
                  d2 === 0 && (d2 = r3 - o3 + u2);
                  if (d2 < u2)
                    throw new h("Invalid box field size");
                  var m2 = d2 - u2, y2 = true;
                  switch (g2) {
                    case 1785737832:
                      y2 = false;
                      break;
                    case 1668246642:
                      var v2 = t3[o3];
                      if (v2 === 1) {
                        var k2 = (0, l.readUint32)(t3, o3 + 3);
                        switch (k2) {
                          case 16:
                          case 17:
                          case 18:
                            break;
                          default:
                            (0, c.warn)("Unknown colorspace " + k2);
                        }
                      } else
                        v2 === 2 && (0, c.info)("ICC profile not supported");
                      break;
                    case 1785737827:
                      this.parseCodestream(t3, o3, o3 + m2);
                      break;
                    case 1783636e3:
                      (0, l.readUint32)(t3, o3) !== 218793738 && (0, c.warn)("Invalid JP2 signature");
                      break;
                    case 1783634458:
                    case 1718909296:
                    case 1920099697:
                    case 1919251232:
                    case 1768449138:
                      break;
                    default:
                      var _2 = String.fromCharCode(g2 >> 24 & 255, g2 >> 16 & 255, g2 >> 8 & 255, 255 & g2);
                      (0, c.warn)("Unsupported header type ".concat(g2, " (").concat(_2, ")."));
                  }
                  y2 && (o3 += m2);
                }
              else
                this.parseCodestream(t3, 0, t3.length);
            } }, { key: "parseImageProperties", value: function parseImageProperties(t3) {
              for (var r3 = t3.getByte(); r3 >= 0; ) {
                if ((r3 << 8 | (r3 = t3.getByte())) === 65361) {
                  t3.skip(4);
                  var o3 = t3.getInt32() >>> 0, c2 = t3.getInt32() >>> 0, l2 = t3.getInt32() >>> 0, u2 = t3.getInt32() >>> 0;
                  t3.skip(16);
                  var d2 = t3.getUint16();
                  this.width = o3 - l2;
                  this.height = c2 - u2;
                  this.componentsCount = d2;
                  this.bitsPerComponent = 8;
                  return;
                }
              }
              throw new h("No size marker found in JPX stream");
            } }, { key: "parseCodestream", value: function parseCodestream(t3, r3, o3) {
              var u2 = {}, d2 = false;
              try {
                for (var g2 = r3; g2 + 1 < o3; ) {
                  var m2 = (0, l.readUint16)(t3, g2);
                  g2 += 2;
                  var y2 = 0, v2 = void 0, k2 = void 0, _2 = void 0, w2 = void 0, S = void 0, C = void 0;
                  switch (m2) {
                    case 65359:
                      u2.mainHeader = true;
                      break;
                    case 65497:
                      break;
                    case 65361:
                      y2 = (0, l.readUint16)(t3, g2);
                      var x = {};
                      x.Xsiz = (0, l.readUint32)(t3, g2 + 4);
                      x.Ysiz = (0, l.readUint32)(t3, g2 + 8);
                      x.XOsiz = (0, l.readUint32)(t3, g2 + 12);
                      x.YOsiz = (0, l.readUint32)(t3, g2 + 16);
                      x.XTsiz = (0, l.readUint32)(t3, g2 + 20);
                      x.YTsiz = (0, l.readUint32)(t3, g2 + 24);
                      x.XTOsiz = (0, l.readUint32)(t3, g2 + 28);
                      x.YTOsiz = (0, l.readUint32)(t3, g2 + 32);
                      var O = (0, l.readUint16)(t3, g2 + 36);
                      x.Csiz = O;
                      var T = [];
                      v2 = g2 + 38;
                      for (var E = 0; E < O; E++) {
                        var M = { precision: 1 + (127 & t3[v2]), isSigned: !!(128 & t3[v2]), XRsiz: t3[v2 + 1], YRsiz: t3[v2 + 2] };
                        v2 += 3;
                        calculateComponentDimensions(M, x);
                        T.push(M);
                      }
                      u2.SIZ = x;
                      u2.components = T;
                      calculateTileGrids(u2, T);
                      u2.QCC = [];
                      u2.COC = [];
                      break;
                    case 65372:
                      y2 = (0, l.readUint16)(t3, g2);
                      var R = {};
                      v2 = g2 + 2;
                      switch (31 & (k2 = t3[v2++])) {
                        case 0:
                          w2 = 8;
                          S = true;
                          break;
                        case 1:
                          w2 = 16;
                          S = false;
                          break;
                        case 2:
                          w2 = 16;
                          S = true;
                          break;
                        default:
                          throw new Error("Invalid SQcd value " + k2);
                      }
                      R.noQuantization = w2 === 8;
                      R.scalarExpounded = S;
                      R.guardBits = k2 >> 5;
                      _2 = [];
                      for (; v2 < y2 + g2; ) {
                        var D = {};
                        if (w2 === 8) {
                          D.epsilon = t3[v2++] >> 3;
                          D.mu = 0;
                        } else {
                          D.epsilon = t3[v2] >> 3;
                          D.mu = (7 & t3[v2]) << 8 | t3[v2 + 1];
                          v2 += 2;
                        }
                        _2.push(D);
                      }
                      R.SPqcds = _2;
                      if (u2.mainHeader)
                        u2.QCD = R;
                      else {
                        u2.currentTile.QCD = R;
                        u2.currentTile.QCC = [];
                      }
                      break;
                    case 65373:
                      y2 = (0, l.readUint16)(t3, g2);
                      var j = {};
                      v2 = g2 + 2;
                      var L = void 0;
                      if (u2.SIZ.Csiz < 257)
                        L = t3[v2++];
                      else {
                        L = (0, l.readUint16)(t3, v2);
                        v2 += 2;
                      }
                      switch (31 & (k2 = t3[v2++])) {
                        case 0:
                          w2 = 8;
                          S = true;
                          break;
                        case 1:
                          w2 = 16;
                          S = false;
                          break;
                        case 2:
                          w2 = 16;
                          S = true;
                          break;
                        default:
                          throw new Error("Invalid SQcd value " + k2);
                      }
                      j.noQuantization = w2 === 8;
                      j.scalarExpounded = S;
                      j.guardBits = k2 >> 5;
                      _2 = [];
                      for (; v2 < y2 + g2; ) {
                        var N = {};
                        if (w2 === 8) {
                          N.epsilon = t3[v2++] >> 3;
                          N.mu = 0;
                        } else {
                          N.epsilon = t3[v2] >> 3;
                          N.mu = (7 & t3[v2]) << 8 | t3[v2 + 1];
                          v2 += 2;
                        }
                        _2.push(N);
                      }
                      j.SPqcds = _2;
                      u2.mainHeader ? u2.QCC[L] = j : u2.currentTile.QCC[L] = j;
                      break;
                    case 65362:
                      y2 = (0, l.readUint16)(t3, g2);
                      var U = {};
                      v2 = g2 + 2;
                      var H = t3[v2++];
                      U.entropyCoderWithCustomPrecincts = !!(1 & H);
                      U.sopMarkerUsed = !!(2 & H);
                      U.ephMarkerUsed = !!(4 & H);
                      U.progressionOrder = t3[v2++];
                      U.layersCount = (0, l.readUint16)(t3, v2);
                      v2 += 2;
                      U.multipleComponentTransform = t3[v2++];
                      U.decompositionLevelsCount = t3[v2++];
                      U.xcb = 2 + (15 & t3[v2++]);
                      U.ycb = 2 + (15 & t3[v2++]);
                      var $ = t3[v2++];
                      U.selectiveArithmeticCodingBypass = !!(1 & $);
                      U.resetContextProbabilities = !!(2 & $);
                      U.terminationOnEachCodingPass = !!(4 & $);
                      U.verticallyStripe = !!(8 & $);
                      U.predictableTermination = !!(16 & $);
                      U.segmentationSymbolUsed = !!(32 & $);
                      U.reversibleTransformation = t3[v2++];
                      if (U.entropyCoderWithCustomPrecincts) {
                        for (var X = []; v2 < y2 + g2; ) {
                          var q = t3[v2++];
                          X.push({ PPx: 15 & q, PPy: q >> 4 });
                        }
                        U.precinctsSizes = X;
                      }
                      var G = [];
                      U.selectiveArithmeticCodingBypass && G.push("selectiveArithmeticCodingBypass");
                      U.terminationOnEachCodingPass && G.push("terminationOnEachCodingPass");
                      U.verticallyStripe && G.push("verticallyStripe");
                      U.predictableTermination && G.push("predictableTermination");
                      if (G.length > 0) {
                        d2 = true;
                        (0, c.warn)("JPX: Unsupported COD options (".concat(G.join(", "), ")."));
                      }
                      if (u2.mainHeader)
                        u2.COD = U;
                      else {
                        u2.currentTile.COD = U;
                        u2.currentTile.COC = [];
                      }
                      break;
                    case 65424:
                      y2 = (0, l.readUint16)(t3, g2);
                      (C = {}).index = (0, l.readUint16)(t3, g2 + 2);
                      C.length = (0, l.readUint32)(t3, g2 + 4);
                      C.dataEnd = C.length + g2 - 2;
                      C.partIndex = t3[g2 + 8];
                      C.partsCount = t3[g2 + 9];
                      u2.mainHeader = false;
                      if (C.partIndex === 0) {
                        C.COD = u2.COD;
                        C.COC = u2.COC.slice(0);
                        C.QCD = u2.QCD;
                        C.QCC = u2.QCC.slice(0);
                      }
                      u2.currentTile = C;
                      break;
                    case 65427:
                      if ((C = u2.currentTile).partIndex === 0) {
                        initializeTile(u2, C.index);
                        buildPackets(u2);
                      }
                      parseTilePackets(u2, t3, g2, y2 = C.dataEnd - g2);
                      break;
                    case 65363:
                      (0, c.warn)("JPX: Codestream code 0xFF53 (COC) is not implemented.");
                    case 65365:
                    case 65367:
                    case 65368:
                    case 65380:
                      y2 = (0, l.readUint16)(t3, g2);
                      break;
                    default:
                      throw new Error("Unknown codestream code: " + m2.toString(16));
                  }
                  g2 += y2;
                }
              } catch (t4) {
                if (d2 || this.failOnCorruptedImage)
                  throw new h(t4.message);
                (0, c.warn)('JPX: Trying to recover from: "'.concat(t4.message, '".'));
              }
              this.tiles = function transformComponents(t4) {
                for (var r4 = t4.SIZ, o4 = t4.components, c2 = r4.Csiz, l2 = [], u3 = 0, h2 = t4.tiles.length; u3 < h2; u3++) {
                  for (var d3 = t4.tiles[u3], g3 = [], m3 = 0; m3 < c2; m3++)
                    g3[m3] = transformTile(t4, d3, m3);
                  var y3 = g3[0], v3 = new Uint8ClampedArray(y3.items.length * c2), k3 = { left: y3.left, top: y3.top, width: y3.width, height: y3.height, items: v3 }, _3 = void 0, w3 = void 0, S2 = 0, C2 = void 0, x2 = void 0, O2 = void 0, T2 = void 0, E2 = void 0;
                  if (d3.codingStyleDefaultParameters.multipleComponentTransform) {
                    var M2 = c2 === 4, R2 = g3[0].items, D2 = g3[1].items, j2 = g3[2].items, L2 = M2 ? g3[3].items : null;
                    w3 = 0.5 + (128 << (_3 = o4[0].precision - 8));
                    var N2 = d3.components[0], U2 = c2 - 3;
                    x2 = R2.length;
                    if (N2.codingStyleParameters.reversibleTransformation)
                      for (C2 = 0; C2 < x2; C2++, S2 += U2) {
                        O2 = R2[C2] + w3;
                        T2 = D2[C2];
                        var H2 = O2 - ((E2 = j2[C2]) + T2 >> 2);
                        v3[S2++] = H2 + E2 >> _3;
                        v3[S2++] = H2 >> _3;
                        v3[S2++] = H2 + T2 >> _3;
                      }
                    else
                      for (C2 = 0; C2 < x2; C2++, S2 += U2) {
                        O2 = R2[C2] + w3;
                        T2 = D2[C2];
                        E2 = j2[C2];
                        v3[S2++] = O2 + 1.402 * E2 >> _3;
                        v3[S2++] = O2 - 0.34413 * T2 - 0.71414 * E2 >> _3;
                        v3[S2++] = O2 + 1.772 * T2 >> _3;
                      }
                    if (M2)
                      for (C2 = 0, S2 = 3; C2 < x2; C2++, S2 += 4)
                        v3[S2] = L2[C2] + w3 >> _3;
                  } else
                    for (var $2 = 0; $2 < c2; $2++) {
                      var X2 = g3[$2].items;
                      w3 = 0.5 + (128 << (_3 = o4[$2].precision - 8));
                      for (S2 = $2, C2 = 0, x2 = X2.length; C2 < x2; C2++) {
                        v3[S2] = X2[C2] + w3 >> _3;
                        S2 += c2;
                      }
                    }
                  l2.push(k3);
                }
                return l2;
              }(u2);
              this.width = u2.SIZ.Xsiz - u2.SIZ.XOsiz;
              this.height = u2.SIZ.Ysiz - u2.SIZ.YOsiz;
              this.componentsCount = u2.SIZ.Csiz;
            } }]);
            return JpxImage;
          }();
          r2.JpxImage = g;
          function calculateComponentDimensions(t3, r3) {
            t3.x0 = Math.ceil(r3.XOsiz / t3.XRsiz);
            t3.x1 = Math.ceil(r3.Xsiz / t3.XRsiz);
            t3.y0 = Math.ceil(r3.YOsiz / t3.YRsiz);
            t3.y1 = Math.ceil(r3.Ysiz / t3.YRsiz);
            t3.width = t3.x1 - t3.x0;
            t3.height = t3.y1 - t3.y0;
          }
          function calculateTileGrids(t3, r3) {
            for (var o3, c2 = t3.SIZ, l2 = [], u2 = Math.ceil((c2.Xsiz - c2.XTOsiz) / c2.XTsiz), h2 = Math.ceil((c2.Ysiz - c2.YTOsiz) / c2.YTsiz), d2 = 0; d2 < h2; d2++)
              for (var g2 = 0; g2 < u2; g2++) {
                (o3 = {}).tx0 = Math.max(c2.XTOsiz + g2 * c2.XTsiz, c2.XOsiz);
                o3.ty0 = Math.max(c2.YTOsiz + d2 * c2.YTsiz, c2.YOsiz);
                o3.tx1 = Math.min(c2.XTOsiz + (g2 + 1) * c2.XTsiz, c2.Xsiz);
                o3.ty1 = Math.min(c2.YTOsiz + (d2 + 1) * c2.YTsiz, c2.Ysiz);
                o3.width = o3.tx1 - o3.tx0;
                o3.height = o3.ty1 - o3.ty0;
                o3.components = [];
                l2.push(o3);
              }
            t3.tiles = l2;
            for (var m2 = 0, y2 = c2.Csiz; m2 < y2; m2++)
              for (var v2 = r3[m2], k2 = 0, _2 = l2.length; k2 < _2; k2++) {
                var w2 = {};
                o3 = l2[k2];
                w2.tcx0 = Math.ceil(o3.tx0 / v2.XRsiz);
                w2.tcy0 = Math.ceil(o3.ty0 / v2.YRsiz);
                w2.tcx1 = Math.ceil(o3.tx1 / v2.XRsiz);
                w2.tcy1 = Math.ceil(o3.ty1 / v2.YRsiz);
                w2.width = w2.tcx1 - w2.tcx0;
                w2.height = w2.tcy1 - w2.tcy0;
                o3.components[m2] = w2;
              }
          }
          function getBlocksDimensions(t3, r3, o3) {
            var c2 = r3.codingStyleParameters, l2 = {};
            if (c2.entropyCoderWithCustomPrecincts) {
              l2.PPx = c2.precinctsSizes[o3].PPx;
              l2.PPy = c2.precinctsSizes[o3].PPy;
            } else {
              l2.PPx = 15;
              l2.PPy = 15;
            }
            l2.xcb_ = o3 > 0 ? Math.min(c2.xcb, l2.PPx - 1) : Math.min(c2.xcb, l2.PPx);
            l2.ycb_ = o3 > 0 ? Math.min(c2.ycb, l2.PPy - 1) : Math.min(c2.ycb, l2.PPy);
            return l2;
          }
          function buildPrecincts(t3, r3, o3) {
            var c2 = 1 << o3.PPx, l2 = 1 << o3.PPy, u2 = r3.resLevel === 0, h2 = 1 << o3.PPx + (u2 ? 0 : -1), d2 = 1 << o3.PPy + (u2 ? 0 : -1), g2 = r3.trx1 > r3.trx0 ? Math.ceil(r3.trx1 / c2) - Math.floor(r3.trx0 / c2) : 0, m2 = r3.try1 > r3.try0 ? Math.ceil(r3.try1 / l2) - Math.floor(r3.try0 / l2) : 0, y2 = g2 * m2;
            r3.precinctParameters = { precinctWidth: c2, precinctHeight: l2, numprecinctswide: g2, numprecinctshigh: m2, numprecincts: y2, precinctWidthInSubband: h2, precinctHeightInSubband: d2 };
          }
          function buildCodeblocks(t3, r3, o3) {
            var c2, l2, u2, h2, d2 = o3.xcb_, g2 = o3.ycb_, m2 = 1 << d2, y2 = 1 << g2, v2 = r3.tbx0 >> d2, k2 = r3.tby0 >> g2, _2 = r3.tbx1 + m2 - 1 >> d2, w2 = r3.tby1 + y2 - 1 >> g2, S = r3.resolution.precinctParameters, C = [], x = [];
            for (l2 = k2; l2 < w2; l2++)
              for (c2 = v2; c2 < _2; c2++) {
                (u2 = { cbx: c2, cby: l2, tbx0: m2 * c2, tby0: y2 * l2, tbx1: m2 * (c2 + 1), tby1: y2 * (l2 + 1) }).tbx0_ = Math.max(r3.tbx0, u2.tbx0);
                u2.tby0_ = Math.max(r3.tby0, u2.tby0);
                u2.tbx1_ = Math.min(r3.tbx1, u2.tbx1);
                u2.tby1_ = Math.min(r3.tby1, u2.tby1);
                h2 = Math.floor((u2.tbx0_ - r3.tbx0) / S.precinctWidthInSubband) + Math.floor((u2.tby0_ - r3.tby0) / S.precinctHeightInSubband) * S.numprecinctswide;
                u2.precinctNumber = h2;
                u2.subbandType = r3.type;
                u2.Lblock = 3;
                if (!(u2.tbx1_ <= u2.tbx0_ || u2.tby1_ <= u2.tby0_)) {
                  C.push(u2);
                  var O = x[h2];
                  if (O !== void 0) {
                    c2 < O.cbxMin ? O.cbxMin = c2 : c2 > O.cbxMax && (O.cbxMax = c2);
                    l2 < O.cbyMin ? O.cbxMin = l2 : l2 > O.cbyMax && (O.cbyMax = l2);
                  } else
                    x[h2] = O = { cbxMin: c2, cbyMin: l2, cbxMax: c2, cbyMax: l2 };
                  u2.precinct = O;
                }
              }
            r3.codeblockParameters = { codeblockWidth: d2, codeblockHeight: g2, numcodeblockwide: _2 - v2 + 1, numcodeblockhigh: w2 - k2 + 1 };
            r3.codeblocks = C;
            r3.precincts = x;
          }
          function createPacket(t3, r3, o3) {
            for (var c2 = [], l2 = t3.subbands, u2 = 0, h2 = l2.length; u2 < h2; u2++)
              for (var d2 = l2[u2].codeblocks, g2 = 0, m2 = d2.length; g2 < m2; g2++) {
                var y2 = d2[g2];
                y2.precinctNumber === r3 && c2.push(y2);
              }
            return { layerNumber: o3, codeblocks: c2 };
          }
          function LayerResolutionComponentPositionIterator(t3) {
            for (var r3 = t3.SIZ, o3 = t3.currentTile.index, c2 = t3.tiles[o3], l2 = c2.codingStyleDefaultParameters.layersCount, u2 = r3.Csiz, d2 = 0, g2 = 0; g2 < u2; g2++)
              d2 = Math.max(d2, c2.components[g2].codingStyleParameters.decompositionLevelsCount);
            var m2 = 0, y2 = 0, v2 = 0, k2 = 0;
            this.nextPacket = function JpxImage_nextPacket() {
              for (; m2 < l2; m2++) {
                for (; y2 <= d2; y2++) {
                  for (; v2 < u2; v2++) {
                    var t4 = c2.components[v2];
                    if (!(y2 > t4.codingStyleParameters.decompositionLevelsCount)) {
                      for (var r4 = t4.resolutions[y2], o4 = r4.precinctParameters.numprecincts; k2 < o4; ) {
                        var g3 = createPacket(r4, k2, m2);
                        k2++;
                        return g3;
                      }
                      k2 = 0;
                    }
                  }
                  v2 = 0;
                }
                y2 = 0;
              }
              throw new h("Out of packets");
            };
          }
          function ResolutionLayerComponentPositionIterator(t3) {
            for (var r3 = t3.SIZ, o3 = t3.currentTile.index, c2 = t3.tiles[o3], l2 = c2.codingStyleDefaultParameters.layersCount, u2 = r3.Csiz, d2 = 0, g2 = 0; g2 < u2; g2++)
              d2 = Math.max(d2, c2.components[g2].codingStyleParameters.decompositionLevelsCount);
            var m2 = 0, y2 = 0, v2 = 0, k2 = 0;
            this.nextPacket = function JpxImage_nextPacket() {
              for (; m2 <= d2; m2++) {
                for (; y2 < l2; y2++) {
                  for (; v2 < u2; v2++) {
                    var t4 = c2.components[v2];
                    if (!(m2 > t4.codingStyleParameters.decompositionLevelsCount)) {
                      for (var r4 = t4.resolutions[m2], o4 = r4.precinctParameters.numprecincts; k2 < o4; ) {
                        var g3 = createPacket(r4, k2, y2);
                        k2++;
                        return g3;
                      }
                      k2 = 0;
                    }
                  }
                  v2 = 0;
                }
                y2 = 0;
              }
              throw new h("Out of packets");
            };
          }
          function ResolutionPositionComponentLayerIterator(t3) {
            var r3, o3, c2, l2, u2 = t3.SIZ, d2 = t3.currentTile.index, g2 = t3.tiles[d2], m2 = g2.codingStyleDefaultParameters.layersCount, y2 = u2.Csiz, v2 = 0;
            for (c2 = 0; c2 < y2; c2++) {
              var k2 = g2.components[c2];
              v2 = Math.max(v2, k2.codingStyleParameters.decompositionLevelsCount);
            }
            var _2 = new Int32Array(v2 + 1);
            for (o3 = 0; o3 <= v2; ++o3) {
              var w2 = 0;
              for (c2 = 0; c2 < y2; ++c2) {
                var S = g2.components[c2].resolutions;
                o3 < S.length && (w2 = Math.max(w2, S[o3].precinctParameters.numprecincts));
              }
              _2[o3] = w2;
            }
            r3 = 0;
            o3 = 0;
            c2 = 0;
            l2 = 0;
            this.nextPacket = function JpxImage_nextPacket() {
              for (; o3 <= v2; o3++) {
                for (; l2 < _2[o3]; l2++) {
                  for (; c2 < y2; c2++) {
                    var t4 = g2.components[c2];
                    if (!(o3 > t4.codingStyleParameters.decompositionLevelsCount)) {
                      var u3 = t4.resolutions[o3], d3 = u3.precinctParameters.numprecincts;
                      if (!(l2 >= d3)) {
                        for (; r3 < m2; ) {
                          var k3 = createPacket(u3, l2, r3);
                          r3++;
                          return k3;
                        }
                        r3 = 0;
                      }
                    }
                  }
                  c2 = 0;
                }
                l2 = 0;
              }
              throw new h("Out of packets");
            };
          }
          function PositionComponentResolutionLayerIterator(t3) {
            var r3 = t3.SIZ, o3 = t3.currentTile.index, c2 = t3.tiles[o3], l2 = c2.codingStyleDefaultParameters.layersCount, u2 = r3.Csiz, d2 = getPrecinctSizesInImageScale(c2), g2 = d2, m2 = 0, y2 = 0, v2 = 0, k2 = 0, _2 = 0;
            this.nextPacket = function JpxImage_nextPacket() {
              for (; _2 < g2.maxNumHigh; _2++) {
                for (; k2 < g2.maxNumWide; k2++) {
                  for (; v2 < u2; v2++) {
                    for (var t4 = c2.components[v2], r4 = t4.codingStyleParameters.decompositionLevelsCount; y2 <= r4; y2++) {
                      var o4 = t4.resolutions[y2], w2 = d2.components[v2].resolutions[y2], S = getPrecinctIndexIfExist(k2, _2, w2, g2, o4);
                      if (S !== null) {
                        for (; m2 < l2; ) {
                          var C = createPacket(o4, S, m2);
                          m2++;
                          return C;
                        }
                        m2 = 0;
                      }
                    }
                    y2 = 0;
                  }
                  v2 = 0;
                }
                k2 = 0;
              }
              throw new h("Out of packets");
            };
          }
          function ComponentPositionResolutionLayerIterator(t3) {
            var r3 = t3.SIZ, o3 = t3.currentTile.index, c2 = t3.tiles[o3], l2 = c2.codingStyleDefaultParameters.layersCount, u2 = r3.Csiz, d2 = getPrecinctSizesInImageScale(c2), g2 = 0, m2 = 0, y2 = 0, v2 = 0, k2 = 0;
            this.nextPacket = function JpxImage_nextPacket() {
              for (; y2 < u2; ++y2) {
                for (var t4 = c2.components[y2], r4 = d2.components[y2], o4 = t4.codingStyleParameters.decompositionLevelsCount; k2 < r4.maxNumHigh; k2++) {
                  for (; v2 < r4.maxNumWide; v2++) {
                    for (; m2 <= o4; m2++) {
                      var _2 = t4.resolutions[m2], w2 = r4.resolutions[m2], S = getPrecinctIndexIfExist(v2, k2, w2, r4, _2);
                      if (S !== null) {
                        for (; g2 < l2; ) {
                          var C = createPacket(_2, S, g2);
                          g2++;
                          return C;
                        }
                        g2 = 0;
                      }
                    }
                    m2 = 0;
                  }
                  v2 = 0;
                }
                k2 = 0;
              }
              throw new h("Out of packets");
            };
          }
          function getPrecinctIndexIfExist(t3, r3, o3, c2, l2) {
            var u2 = t3 * c2.minWidth, h2 = r3 * c2.minHeight;
            if (u2 % o3.width != 0 || h2 % o3.height != 0)
              return null;
            var d2 = h2 / o3.width * l2.precinctParameters.numprecinctswide;
            return u2 / o3.height + d2;
          }
          function getPrecinctSizesInImageScale(t3) {
            for (var r3 = t3.components.length, o3 = Number.MAX_VALUE, c2 = Number.MAX_VALUE, l2 = 0, u2 = 0, h2 = new Array(r3), d2 = 0; d2 < r3; d2++) {
              for (var g2 = t3.components[d2], m2 = g2.codingStyleParameters.decompositionLevelsCount, y2 = new Array(m2 + 1), v2 = Number.MAX_VALUE, k2 = Number.MAX_VALUE, _2 = 0, w2 = 0, S = 1, C = m2; C >= 0; --C) {
                var x = g2.resolutions[C], O = S * x.precinctParameters.precinctWidth, T = S * x.precinctParameters.precinctHeight;
                v2 = Math.min(v2, O);
                k2 = Math.min(k2, T);
                _2 = Math.max(_2, x.precinctParameters.numprecinctswide);
                w2 = Math.max(w2, x.precinctParameters.numprecinctshigh);
                y2[C] = { width: O, height: T };
                S <<= 1;
              }
              o3 = Math.min(o3, v2);
              c2 = Math.min(c2, k2);
              l2 = Math.max(l2, _2);
              u2 = Math.max(u2, w2);
              h2[d2] = { resolutions: y2, minWidth: v2, minHeight: k2, maxNumWide: _2, maxNumHigh: w2 };
            }
            return { components: h2, minWidth: o3, minHeight: c2, maxNumWide: l2, maxNumHigh: u2 };
          }
          function buildPackets(t3) {
            for (var r3 = t3.SIZ, o3 = t3.currentTile.index, c2 = t3.tiles[o3], l2 = r3.Csiz, u2 = 0; u2 < l2; u2++) {
              for (var d2 = c2.components[u2], g2 = d2.codingStyleParameters.decompositionLevelsCount, m2 = [], y2 = [], v2 = 0; v2 <= g2; v2++) {
                var k2 = getBlocksDimensions(0, d2, v2), _2 = {}, w2 = 1 << g2 - v2;
                _2.trx0 = Math.ceil(d2.tcx0 / w2);
                _2.try0 = Math.ceil(d2.tcy0 / w2);
                _2.trx1 = Math.ceil(d2.tcx1 / w2);
                _2.try1 = Math.ceil(d2.tcy1 / w2);
                _2.resLevel = v2;
                buildPrecincts(0, _2, k2);
                m2.push(_2);
                var S = void 0;
                if (v2 === 0) {
                  (S = {}).type = "LL";
                  S.tbx0 = Math.ceil(d2.tcx0 / w2);
                  S.tby0 = Math.ceil(d2.tcy0 / w2);
                  S.tbx1 = Math.ceil(d2.tcx1 / w2);
                  S.tby1 = Math.ceil(d2.tcy1 / w2);
                  S.resolution = _2;
                  buildCodeblocks(0, S, k2);
                  y2.push(S);
                  _2.subbands = [S];
                } else {
                  var C = 1 << g2 - v2 + 1, x = [];
                  (S = {}).type = "HL";
                  S.tbx0 = Math.ceil(d2.tcx0 / C - 0.5);
                  S.tby0 = Math.ceil(d2.tcy0 / C);
                  S.tbx1 = Math.ceil(d2.tcx1 / C - 0.5);
                  S.tby1 = Math.ceil(d2.tcy1 / C);
                  S.resolution = _2;
                  buildCodeblocks(0, S, k2);
                  y2.push(S);
                  x.push(S);
                  (S = {}).type = "LH";
                  S.tbx0 = Math.ceil(d2.tcx0 / C);
                  S.tby0 = Math.ceil(d2.tcy0 / C - 0.5);
                  S.tbx1 = Math.ceil(d2.tcx1 / C);
                  S.tby1 = Math.ceil(d2.tcy1 / C - 0.5);
                  S.resolution = _2;
                  buildCodeblocks(0, S, k2);
                  y2.push(S);
                  x.push(S);
                  (S = {}).type = "HH";
                  S.tbx0 = Math.ceil(d2.tcx0 / C - 0.5);
                  S.tby0 = Math.ceil(d2.tcy0 / C - 0.5);
                  S.tbx1 = Math.ceil(d2.tcx1 / C - 0.5);
                  S.tby1 = Math.ceil(d2.tcy1 / C - 0.5);
                  S.resolution = _2;
                  buildCodeblocks(0, S, k2);
                  y2.push(S);
                  x.push(S);
                  _2.subbands = x;
                }
              }
              d2.resolutions = m2;
              d2.subbands = y2;
            }
            var O = c2.codingStyleDefaultParameters.progressionOrder;
            switch (O) {
              case 0:
                c2.packetsIterator = new LayerResolutionComponentPositionIterator(t3);
                break;
              case 1:
                c2.packetsIterator = new ResolutionLayerComponentPositionIterator(t3);
                break;
              case 2:
                c2.packetsIterator = new ResolutionPositionComponentLayerIterator(t3);
                break;
              case 3:
                c2.packetsIterator = new PositionComponentResolutionLayerIterator(t3);
                break;
              case 4:
                c2.packetsIterator = new ComponentPositionResolutionLayerIterator(t3);
                break;
              default:
                throw new h("Unsupported progression order ".concat(O));
            }
          }
          function parseTilePackets(t3, r3, o3, c2) {
            var u2, d2 = 0, g2 = 0, v2 = false;
            function readBits(t4) {
              for (; g2 < t4; ) {
                var c3 = r3[o3 + d2];
                d2++;
                if (v2) {
                  u2 = u2 << 7 | c3;
                  g2 += 7;
                  v2 = false;
                } else {
                  u2 = u2 << 8 | c3;
                  g2 += 8;
                }
                c3 === 255 && (v2 = true);
              }
              return u2 >>> (g2 -= t4) & (1 << t4) - 1;
            }
            function skipMarkerIfEqual(t4) {
              if (r3[o3 + d2 - 1] === 255 && r3[o3 + d2] === t4) {
                skipBytes(1);
                return true;
              }
              if (r3[o3 + d2] === 255 && r3[o3 + d2 + 1] === t4) {
                skipBytes(2);
                return true;
              }
              return false;
            }
            function skipBytes(t4) {
              d2 += t4;
            }
            function alignToByte() {
              g2 = 0;
              if (v2) {
                d2++;
                v2 = false;
              }
            }
            function readCodingpasses() {
              if (readBits(1) === 0)
                return 1;
              if (readBits(1) === 0)
                return 2;
              var t4 = readBits(2);
              return t4 < 3 ? t4 + 3 : (t4 = readBits(5)) < 31 ? t4 + 6 : (t4 = readBits(7)) + 37;
            }
            for (var k2 = t3.currentTile.index, _2 = t3.tiles[k2], w2 = t3.COD.sopMarkerUsed, S = t3.COD.ephMarkerUsed, C = _2.packetsIterator; d2 < c2; ) {
              alignToByte();
              w2 && skipMarkerIfEqual(145) && skipBytes(4);
              var x = C.nextPacket();
              if (readBits(1)) {
                for (var O = x.layerNumber, T = [], E = void 0, M = 0, R = x.codeblocks.length; M < R; M++) {
                  var D = (E = x.codeblocks[M]).precinct, j = E.cbx - D.cbxMin, L = E.cby - D.cbyMin, N = false, U = false, H = void 0;
                  if (E.included !== void 0)
                    N = !!readBits(1);
                  else {
                    var $ = void 0;
                    if ((D = E.precinct).inclusionTree !== void 0)
                      $ = D.inclusionTree;
                    else {
                      var X = D.cbxMax - D.cbxMin + 1, q = D.cbyMax - D.cbyMin + 1;
                      $ = new y(X, q, O);
                      H = new m(X, q);
                      D.inclusionTree = $;
                      D.zeroBitPlanesTree = H;
                      for (var G = 0; G < O; G++)
                        if (readBits(1) !== 0)
                          throw new h("Invalid tag tree");
                    }
                    if ($.reset(j, L, O))
                      for (; ; ) {
                        if (!readBits(1)) {
                          $.incrementValue(O);
                          break;
                        }
                        if (!$.nextLevel()) {
                          E.included = true;
                          N = U = true;
                          break;
                        }
                      }
                  }
                  if (N) {
                    if (U) {
                      (H = D.zeroBitPlanesTree).reset(j, L);
                      for (; ; )
                        if (readBits(1)) {
                          if (!H.nextLevel())
                            break;
                        } else
                          H.incrementValue();
                      E.zeroBitPlanes = H.value;
                    }
                    for (var z = readCodingpasses(); readBits(1); )
                      E.Lblock++;
                    var W = (0, l.log2)(z), V = readBits((z < 1 << W ? W - 1 : W) + E.Lblock);
                    T.push({ codeblock: E, codingpasses: z, dataLength: V });
                  }
                }
                alignToByte();
                S && skipMarkerIfEqual(146);
                for (; T.length > 0; ) {
                  var K = T.shift();
                  (E = K.codeblock).data === void 0 && (E.data = []);
                  E.data.push({ data: r3, start: o3 + d2, end: o3 + d2 + K.dataLength, codingpasses: K.codingpasses });
                  d2 += K.dataLength;
                }
              }
            }
            return d2;
          }
          function copyCoefficients(t3, r3, o3, c2, l2, h2, d2, g2, m2) {
            for (var y2 = c2.tbx0, k2 = c2.tby0, _2 = c2.tbx1 - c2.tbx0, w2 = c2.codeblocks, S = c2.type.charAt(0) === "H" ? 1 : 0, C = c2.type.charAt(1) === "H" ? r3 : 0, x = 0, O = w2.length; x < O; ++x) {
              var T = w2[x], E = T.tbx1_ - T.tbx0_, M = T.tby1_ - T.tby0_;
              if (E !== 0 && M !== 0 && T.data !== void 0) {
                var R = new v(E, M, T.subbandType, T.zeroBitPlanes, h2), D = 2, j = T.data, L = 0, N = 0, U = void 0, H = void 0, $ = void 0;
                for (U = 0, H = j.length; U < H; U++) {
                  L += ($ = j[U]).end - $.start;
                  N += $.codingpasses;
                }
                var X = new Uint8Array(L), q = 0;
                for (U = 0, H = j.length; U < H; U++) {
                  var G = ($ = j[U]).data.subarray($.start, $.end);
                  X.set(G, q);
                  q += G.length;
                }
                var z = new u.ArithmeticDecoder(X, 0, L);
                R.setDecoder(z);
                for (U = 0; U < N; U++) {
                  switch (D) {
                    case 0:
                      R.runSignificancePropagationPass();
                      break;
                    case 1:
                      R.runMagnitudeRefinementPass();
                      break;
                    case 2:
                      R.runCleanupPass();
                      g2 && R.checkSegmentationSymbol();
                  }
                  m2 && R.reset();
                  D = (D + 1) % 3;
                }
                var W = T.tbx0_ - y2 + (T.tby0_ - k2) * _2, V = R.coefficentsSign, K = R.coefficentsMagnitude, Y = R.bitsDecoded, J = d2 ? 0 : 0.5, Z = void 0, Q = void 0, ee = void 0;
                q = 0;
                var te = c2.type !== "LL";
                for (U = 0; U < M; U++) {
                  var re = 2 * (W / _2 | 0) * (r3 - _2) + S + C;
                  for (Z = 0; Z < E; Z++) {
                    if ((Q = K[q]) !== 0) {
                      Q = (Q + J) * l2;
                      V[q] !== 0 && (Q = -Q);
                      ee = Y[q];
                      var ae = te ? re + (W << 1) : W;
                      t3[ae] = d2 && ee >= h2 ? Q : Q * (1 << h2 - ee);
                    }
                    W++;
                    q++;
                  }
                  W += _2 - E;
                }
              }
            }
          }
          function transformTile(t3, r3, o3) {
            for (var c2 = r3.components[o3], l2 = c2.codingStyleParameters, u2 = c2.quantizationParameters, h2 = l2.decompositionLevelsCount, g2 = u2.SPqcds, m2 = u2.scalarExpounded, y2 = u2.guardBits, v2 = l2.segmentationSymbolUsed, k2 = l2.resetContextProbabilities, S = t3.components[o3].precision, C = l2.reversibleTransformation, x = C ? new w() : new _(), O = [], T = 0, E = 0; E <= h2; E++) {
              for (var M = c2.resolutions[E], R = M.trx1 - M.trx0, D = M.try1 - M.try0, j = new Float32Array(R * D), L = 0, N = M.subbands.length; L < N; L++) {
                var U = void 0, H = void 0;
                if (m2) {
                  U = g2[T].mu;
                  H = g2[T].epsilon;
                  T++;
                } else {
                  U = g2[0].mu;
                  H = g2[0].epsilon + (E > 0 ? 1 - E : 0);
                }
                var $ = M.subbands[L], X = d[$.type];
                copyCoefficients(j, R, 0, $, C ? 1 : Math.pow(2, S + X - H) * (1 + U / 2048), y2 + H - 1, C, v2, k2);
              }
              O.push({ width: R, height: D, items: j });
            }
            var q = x.calculate(O, c2.tcx0, c2.tcy0);
            return { left: c2.tcx0, top: c2.tcy0, width: q.width, height: q.height, items: q.items };
          }
          function initializeTile(t3, r3) {
            for (var o3 = t3.SIZ.Csiz, c2 = t3.tiles[r3], l2 = 0; l2 < o3; l2++) {
              var u2 = c2.components[l2], h2 = t3.currentTile.QCC[l2] !== void 0 ? t3.currentTile.QCC[l2] : t3.currentTile.QCD;
              u2.quantizationParameters = h2;
              var d2 = t3.currentTile.COC[l2] !== void 0 ? t3.currentTile.COC[l2] : t3.currentTile.COD;
              u2.codingStyleParameters = d2;
            }
            c2.codingStyleDefaultParameters = t3.currentTile.COD;
          }
          var m = function() {
            function TagTree(t3, r3) {
              _classCallCheck(this, TagTree);
              var o3 = (0, l.log2)(Math.max(t3, r3)) + 1;
              this.levels = [];
              for (var c2 = 0; c2 < o3; c2++) {
                var u2 = { width: t3, height: r3, items: [] };
                this.levels.push(u2);
                t3 = Math.ceil(t3 / 2);
                r3 = Math.ceil(r3 / 2);
              }
            }
            _createClass(TagTree, [{ key: "reset", value: function reset(t3, r3) {
              for (var o3, c2 = 0, l2 = 0; c2 < this.levels.length; ) {
                var u2 = t3 + r3 * (o3 = this.levels[c2]).width;
                if (o3.items[u2] !== void 0) {
                  l2 = o3.items[u2];
                  break;
                }
                o3.index = u2;
                t3 >>= 1;
                r3 >>= 1;
                c2++;
              }
              c2--;
              (o3 = this.levels[c2]).items[o3.index] = l2;
              this.currentLevel = c2;
              delete this.value;
            } }, { key: "incrementValue", value: function incrementValue() {
              var t3 = this.levels[this.currentLevel];
              t3.items[t3.index]++;
            } }, { key: "nextLevel", value: function nextLevel() {
              var t3 = this.currentLevel, r3 = this.levels[t3], o3 = r3.items[r3.index];
              if (--t3 < 0) {
                this.value = o3;
                return false;
              }
              this.currentLevel = t3;
              (r3 = this.levels[t3]).items[r3.index] = o3;
              return true;
            } }]);
            return TagTree;
          }(), y = function() {
            function InclusionTree(t3, r3, o3) {
              _classCallCheck(this, InclusionTree);
              var c2 = (0, l.log2)(Math.max(t3, r3)) + 1;
              this.levels = [];
              for (var u2 = 0; u2 < c2; u2++) {
                for (var h2 = new Uint8Array(t3 * r3), d2 = 0, g2 = h2.length; d2 < g2; d2++)
                  h2[d2] = o3;
                var m2 = { width: t3, height: r3, items: h2 };
                this.levels.push(m2);
                t3 = Math.ceil(t3 / 2);
                r3 = Math.ceil(r3 / 2);
              }
            }
            _createClass(InclusionTree, [{ key: "reset", value: function reset(t3, r3, o3) {
              for (var c2 = 0; c2 < this.levels.length; ) {
                var l2 = this.levels[c2], u2 = t3 + r3 * l2.width;
                l2.index = u2;
                var h2 = l2.items[u2];
                if (h2 === 255)
                  break;
                if (h2 > o3) {
                  this.currentLevel = c2;
                  this.propagateValues();
                  return false;
                }
                t3 >>= 1;
                r3 >>= 1;
                c2++;
              }
              this.currentLevel = c2 - 1;
              return true;
            } }, { key: "incrementValue", value: function incrementValue(t3) {
              var r3 = this.levels[this.currentLevel];
              r3.items[r3.index] = t3 + 1;
              this.propagateValues();
            } }, { key: "propagateValues", value: function propagateValues() {
              for (var t3 = this.currentLevel, r3 = this.levels[t3], o3 = r3.items[r3.index]; --t3 >= 0; )
                (r3 = this.levels[t3]).items[r3.index] = o3;
            } }, { key: "nextLevel", value: function nextLevel() {
              var t3 = this.currentLevel, r3 = this.levels[t3], o3 = r3.items[r3.index];
              r3.items[r3.index] = 255;
              if (--t3 < 0)
                return false;
              this.currentLevel = t3;
              (r3 = this.levels[t3]).items[r3.index] = o3;
              return true;
            } }]);
            return InclusionTree;
          }(), v = function BitModelClosure() {
            var t3 = 17, r3 = new Uint8Array([0, 5, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 1, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 2, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 2, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 2, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8]), o3 = new Uint8Array([0, 3, 4, 0, 5, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 1, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 2, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 2, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 2, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8]), c2 = new Uint8Array([0, 1, 2, 0, 1, 2, 2, 0, 2, 2, 2, 0, 0, 0, 0, 0, 3, 4, 5, 0, 4, 5, 5, 0, 5, 5, 5, 0, 0, 0, 0, 0, 6, 7, 7, 0, 7, 7, 7, 0, 7, 7, 7, 0, 0, 0, 0, 0, 8, 8, 8, 0, 8, 8, 8, 0, 8, 8, 8, 0, 0, 0, 0, 0, 8, 8, 8, 0, 8, 8, 8, 0, 8, 8, 8]);
            return function() {
              function BitModel(t4, l2, u2, h2, d2) {
                _classCallCheck(this, BitModel);
                this.width = t4;
                this.height = l2;
                var g2;
                g2 = u2 === "HH" ? c2 : u2 === "HL" ? o3 : r3;
                this.contextLabelTable = g2;
                var m2, y2 = t4 * l2;
                this.neighborsSignificance = new Uint8Array(y2);
                this.coefficentsSign = new Uint8Array(y2);
                m2 = d2 > 14 ? new Uint32Array(y2) : d2 > 6 ? new Uint16Array(y2) : new Uint8Array(y2);
                this.coefficentsMagnitude = m2;
                this.processingFlags = new Uint8Array(y2);
                var v2 = new Uint8Array(y2);
                if (h2 !== 0)
                  for (var k2 = 0; k2 < y2; k2++)
                    v2[k2] = h2;
                this.bitsDecoded = v2;
                this.reset();
              }
              _createClass(BitModel, [{ key: "setDecoder", value: function setDecoder(t4) {
                this.decoder = t4;
              } }, { key: "reset", value: function reset() {
                this.contexts = new Int8Array(19);
                this.contexts[0] = 8;
                this.contexts[17] = 92;
                this.contexts[18] = 6;
              } }, { key: "setNeighborsSignificance", value: function setNeighborsSignificance(t4, r4, o4) {
                var c3, l2 = this.neighborsSignificance, u2 = this.width, h2 = this.height, d2 = r4 > 0, g2 = r4 + 1 < u2;
                if (t4 > 0) {
                  c3 = o4 - u2;
                  d2 && (l2[c3 - 1] += 16);
                  g2 && (l2[c3 + 1] += 16);
                  l2[c3] += 4;
                }
                if (t4 + 1 < h2) {
                  c3 = o4 + u2;
                  d2 && (l2[c3 - 1] += 16);
                  g2 && (l2[c3 + 1] += 16);
                  l2[c3] += 4;
                }
                d2 && (l2[o4 - 1] += 1);
                g2 && (l2[o4 + 1] += 1);
                l2[o4] |= 128;
              } }, { key: "runSignificancePropagationPass", value: function runSignificancePropagationPass() {
                for (var t4 = this.decoder, r4 = this.width, o4 = this.height, c3 = this.coefficentsMagnitude, l2 = this.coefficentsSign, u2 = this.neighborsSignificance, h2 = this.processingFlags, d2 = this.contexts, g2 = this.contextLabelTable, m2 = this.bitsDecoded, y2 = 0; y2 < o4; y2 += 4)
                  for (var v2 = 0; v2 < r4; v2++)
                    for (var k2 = y2 * r4 + v2, _2 = 0; _2 < 4; _2++, k2 += r4) {
                      var w2 = y2 + _2;
                      if (w2 >= o4)
                        break;
                      h2[k2] &= -2;
                      if (!c3[k2] && u2[k2]) {
                        var S = g2[u2[k2]];
                        if (t4.readBit(d2, S)) {
                          var C = this.decodeSignBit(w2, v2, k2);
                          l2[k2] = C;
                          c3[k2] = 1;
                          this.setNeighborsSignificance(w2, v2, k2);
                          h2[k2] |= 2;
                        }
                        m2[k2]++;
                        h2[k2] |= 1;
                      }
                    }
              } }, { key: "decodeSignBit", value: function decodeSignBit(t4, r4, o4) {
                var c3, l2, u2, h2, d2, g2, m2 = this.width, y2 = this.height, v2 = this.coefficentsMagnitude, k2 = this.coefficentsSign;
                h2 = r4 > 0 && v2[o4 - 1] !== 0;
                if (r4 + 1 < m2 && v2[o4 + 1] !== 0) {
                  u2 = k2[o4 + 1];
                  c3 = h2 ? 1 - u2 - (l2 = k2[o4 - 1]) : 1 - u2 - u2;
                } else
                  c3 = h2 ? 1 - (l2 = k2[o4 - 1]) - l2 : 0;
                var _2 = 3 * c3;
                h2 = t4 > 0 && v2[o4 - m2] !== 0;
                if (t4 + 1 < y2 && v2[o4 + m2] !== 0) {
                  u2 = k2[o4 + m2];
                  c3 = h2 ? 1 - u2 - (l2 = k2[o4 - m2]) + _2 : 1 - u2 - u2 + _2;
                } else
                  c3 = h2 ? 1 - (l2 = k2[o4 - m2]) - l2 + _2 : _2;
                if (c3 >= 0) {
                  d2 = 9 + c3;
                  g2 = this.decoder.readBit(this.contexts, d2);
                } else {
                  d2 = 9 - c3;
                  g2 = 1 ^ this.decoder.readBit(this.contexts, d2);
                }
                return g2;
              } }, { key: "runMagnitudeRefinementPass", value: function runMagnitudeRefinementPass() {
                for (var t4, r4 = this.decoder, o4 = this.width, c3 = this.height, l2 = this.coefficentsMagnitude, u2 = this.neighborsSignificance, h2 = this.contexts, d2 = this.bitsDecoded, g2 = this.processingFlags, m2 = o4 * c3, y2 = 4 * o4, v2 = 0; v2 < m2; v2 = t4) {
                  t4 = Math.min(m2, v2 + y2);
                  for (var k2 = 0; k2 < o4; k2++)
                    for (var _2 = v2 + k2; _2 < t4; _2 += o4)
                      if (l2[_2] && (1 & g2[_2]) == 0) {
                        var w2 = 16;
                        if ((2 & g2[_2]) != 0) {
                          g2[_2] ^= 2;
                          w2 = (127 & u2[_2]) === 0 ? 15 : 14;
                        }
                        var S = r4.readBit(h2, w2);
                        l2[_2] = l2[_2] << 1 | S;
                        d2[_2]++;
                        g2[_2] |= 1;
                      }
                }
              } }, { key: "runCleanupPass", value: function runCleanupPass() {
                for (var r4, o4 = this.decoder, c3 = this.width, l2 = this.height, u2 = this.neighborsSignificance, h2 = this.coefficentsMagnitude, d2 = this.coefficentsSign, g2 = this.contexts, m2 = this.contextLabelTable, y2 = this.bitsDecoded, v2 = this.processingFlags, k2 = c3, _2 = 2 * c3, w2 = 3 * c3, S = 0; S < l2; S = r4) {
                  r4 = Math.min(S + 4, l2);
                  for (var C = S * c3, x = S + 3 < l2, O = 0; O < c3; O++) {
                    var T = C + O, E = 0, M = T, R = S, D = void 0;
                    if (x && v2[T] === 0 && v2[T + k2] === 0 && v2[T + _2] === 0 && v2[T + w2] === 0 && u2[T] === 0 && u2[T + k2] === 0 && u2[T + _2] === 0 && u2[T + w2] === 0) {
                      if (!o4.readBit(g2, 18)) {
                        y2[T]++;
                        y2[T + k2]++;
                        y2[T + _2]++;
                        y2[T + w2]++;
                        continue;
                      }
                      if ((E = o4.readBit(g2, t3) << 1 | o4.readBit(g2, t3)) !== 0) {
                        R = S + E;
                        M += E * c3;
                      }
                      D = this.decodeSignBit(R, O, M);
                      d2[M] = D;
                      h2[M] = 1;
                      this.setNeighborsSignificance(R, O, M);
                      v2[M] |= 2;
                      M = T;
                      for (var j = S; j <= R; j++, M += c3)
                        y2[M]++;
                      E++;
                    }
                    for (R = S + E; R < r4; R++, M += c3)
                      if (!h2[M] && (1 & v2[M]) == 0) {
                        var L = m2[u2[M]];
                        if (o4.readBit(g2, L) === 1) {
                          D = this.decodeSignBit(R, O, M);
                          d2[M] = D;
                          h2[M] = 1;
                          this.setNeighborsSignificance(R, O, M);
                          v2[M] |= 2;
                        }
                        y2[M]++;
                      }
                  }
                }
              } }, { key: "checkSegmentationSymbol", value: function checkSegmentationSymbol() {
                var r4 = this.decoder, o4 = this.contexts;
                if ((r4.readBit(o4, t3) << 3 | r4.readBit(o4, t3) << 2 | r4.readBit(o4, t3) << 1 | r4.readBit(o4, t3)) !== 10)
                  throw new h("Invalid segmentation symbol");
              } }]);
              return BitModel;
            }();
          }(), k = function() {
            function Transform() {
              _classCallCheck(this, Transform);
              this.constructor === Transform && (0, c.unreachable)("Cannot initialize Transform.");
            }
            _createClass(Transform, [{ key: "calculate", value: function calculate(t3, r3, o3) {
              for (var c2 = t3[0], l2 = 1, u2 = t3.length; l2 < u2; l2++)
                c2 = this.iterate(c2, t3[l2], r3, o3);
              return c2;
            } }, { key: "extend", value: function extend(t3, r3, o3) {
              var c2 = r3 - 1, l2 = r3 + 1, u2 = r3 + o3 - 2, h2 = r3 + o3;
              t3[c2--] = t3[l2++];
              t3[h2++] = t3[u2--];
              t3[c2--] = t3[l2++];
              t3[h2++] = t3[u2--];
              t3[c2--] = t3[l2++];
              t3[h2++] = t3[u2--];
              t3[c2] = t3[l2];
              t3[h2] = t3[u2];
            } }, { key: "filter", value: function filter(t3, r3, o3) {
              (0, c.unreachable)("Abstract method `filter` called");
            } }, { key: "iterate", value: function iterate(t3, r3, o3, c2) {
              var l2, u2, h2, d2, g2, m2, y2 = t3.width, v2 = t3.height, k2 = t3.items, _2 = r3.width, w2 = r3.height, S = r3.items;
              for (h2 = 0, l2 = 0; l2 < v2; l2++) {
                d2 = 2 * l2 * _2;
                for (u2 = 0; u2 < y2; u2++, h2++, d2 += 2)
                  S[d2] = k2[h2];
              }
              k2 = t3.items = null;
              var C = new Float32Array(_2 + 8);
              if (_2 === 1) {
                if ((1 & o3) != 0)
                  for (m2 = 0, h2 = 0; m2 < w2; m2++, h2 += _2)
                    S[h2] *= 0.5;
              } else
                for (m2 = 0, h2 = 0; m2 < w2; m2++, h2 += _2) {
                  C.set(S.subarray(h2, h2 + _2), 4);
                  this.extend(C, 4, _2);
                  this.filter(C, 4, _2);
                  S.set(C.subarray(4, 4 + _2), h2);
                }
              var x = 16, O = [];
              for (l2 = 0; l2 < x; l2++)
                O.push(new Float32Array(w2 + 8));
              var T, E = 0;
              t3 = 4 + w2;
              if (w2 === 1) {
                if ((1 & c2) != 0)
                  for (g2 = 0; g2 < _2; g2++)
                    S[g2] *= 0.5;
              } else
                for (g2 = 0; g2 < _2; g2++) {
                  if (E === 0) {
                    x = Math.min(_2 - g2, x);
                    for (h2 = g2, d2 = 4; d2 < t3; h2 += _2, d2++)
                      for (T = 0; T < x; T++)
                        O[T][d2] = S[h2 + T];
                    E = x;
                  }
                  var M = O[--E];
                  this.extend(M, 4, w2);
                  this.filter(M, 4, w2);
                  if (E === 0) {
                    h2 = g2 - x + 1;
                    for (d2 = 4; d2 < t3; h2 += _2, d2++)
                      for (T = 0; T < x; T++)
                        S[h2 + T] = O[T][d2];
                  }
                }
              return { width: _2, height: w2, items: S };
            } }]);
            return Transform;
          }(), _ = function(t3) {
            _inherits(IrreversibleTransform, t3);
            var r3 = _createSuper(IrreversibleTransform);
            function IrreversibleTransform() {
              _classCallCheck(this, IrreversibleTransform);
              return r3.apply(this, arguments);
            }
            _createClass(IrreversibleTransform, [{ key: "filter", value: function filter(t4, r4, o3) {
              var c2, l2, u2, h2, d2 = o3 >> 1, g2 = -1.586134342059924, m2 = -0.052980118572961, y2 = 0.882911075530934, v2 = 0.443506852043971, k2 = 1.230174104914001;
              c2 = (r4 |= 0) - 3;
              for (l2 = d2 + 4; l2--; c2 += 2)
                t4[c2] *= 0.8128930661159609;
              u2 = v2 * t4[(c2 = r4 - 2) - 1];
              for (l2 = d2 + 3; l2--; c2 += 2) {
                h2 = v2 * t4[c2 + 1];
                t4[c2] = k2 * t4[c2] - u2 - h2;
                if (!l2--)
                  break;
                u2 = v2 * t4[(c2 += 2) + 1];
                t4[c2] = k2 * t4[c2] - u2 - h2;
              }
              u2 = y2 * t4[(c2 = r4 - 1) - 1];
              for (l2 = d2 + 2; l2--; c2 += 2) {
                h2 = y2 * t4[c2 + 1];
                t4[c2] -= u2 + h2;
                if (!l2--)
                  break;
                u2 = y2 * t4[(c2 += 2) + 1];
                t4[c2] -= u2 + h2;
              }
              u2 = m2 * t4[(c2 = r4) - 1];
              for (l2 = d2 + 1; l2--; c2 += 2) {
                h2 = m2 * t4[c2 + 1];
                t4[c2] -= u2 + h2;
                if (!l2--)
                  break;
                u2 = m2 * t4[(c2 += 2) + 1];
                t4[c2] -= u2 + h2;
              }
              if (d2 !== 0) {
                u2 = g2 * t4[(c2 = r4 + 1) - 1];
                for (l2 = d2; l2--; c2 += 2) {
                  h2 = g2 * t4[c2 + 1];
                  t4[c2] -= u2 + h2;
                  if (!l2--)
                    break;
                  u2 = g2 * t4[(c2 += 2) + 1];
                  t4[c2] -= u2 + h2;
                }
              }
            } }]);
            return IrreversibleTransform;
          }(k), w = function(t3) {
            _inherits(ReversibleTransform, t3);
            var r3 = _createSuper(ReversibleTransform);
            function ReversibleTransform() {
              _classCallCheck(this, ReversibleTransform);
              return r3.apply(this, arguments);
            }
            _createClass(ReversibleTransform, [{ key: "filter", value: function filter(t4, r4, o3) {
              var c2, l2, u2 = o3 >> 1;
              for (c2 = r4 |= 0, l2 = u2 + 1; l2--; c2 += 2)
                t4[c2] -= t4[c2 - 1] + t4[c2 + 1] + 2 >> 2;
              for (c2 = r4 + 1, l2 = u2; l2--; c2 += 2)
                t4[c2] += t4[c2 - 1] + t4[c2 + 1] >> 1;
            } }]);
            return ReversibleTransform;
          }(k);
        }, (t2, r2, o2) => {
          "use strict";
          function _typeof(t3) {
            return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t4) {
              return typeof t4;
            } : function(t4) {
              return t4 && typeof Symbol == "function" && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
            }, _typeof(t3);
          }
          Object.defineProperty(r2, "__esModule", { value: true });
          r2.LZWStream = void 0;
          function _defineProperties(t3, r3) {
            for (var o3 = 0; o3 < r3.length; o3++) {
              var c2 = r3[o3];
              c2.enumerable = c2.enumerable || false;
              c2.configurable = true;
              "value" in c2 && (c2.writable = true);
              Object.defineProperty(t3, c2.key, c2);
            }
          }
          function _setPrototypeOf(t3, r3) {
            _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(t4, r4) {
              t4.__proto__ = r4;
              return t4;
            };
            return _setPrototypeOf(t3, r3);
          }
          function _createSuper(t3) {
            var r3 = function _isNativeReflectConstruct() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                }));
                return true;
              } catch (t4) {
                return false;
              }
            }();
            return function _createSuperInternal() {
              var o3, c2 = _getPrototypeOf(t3);
              if (r3) {
                var l = _getPrototypeOf(this).constructor;
                o3 = Reflect.construct(c2, arguments, l);
              } else
                o3 = c2.apply(this, arguments);
              return _possibleConstructorReturn(this, o3);
            };
          }
          function _possibleConstructorReturn(t3, r3) {
            if (r3 && (_typeof(r3) === "object" || typeof r3 == "function"))
              return r3;
            if (r3 !== void 0)
              throw new TypeError("Derived constructors may only return object or undefined");
            return function _assertThisInitialized(t4) {
              if (t4 === void 0)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return t4;
            }(t3);
          }
          function _getPrototypeOf(t3) {
            _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(t4) {
              return t4.__proto__ || Object.getPrototypeOf(t4);
            };
            return _getPrototypeOf(t3);
          }
          var c = function(t3) {
            !function _inherits(t4, r4) {
              if (typeof r4 != "function" && r4 !== null)
                throw new TypeError("Super expression must either be null or a function");
              t4.prototype = Object.create(r4 && r4.prototype, { constructor: { value: t4, writable: true, configurable: true } });
              Object.defineProperty(t4, "prototype", { writable: false });
              r4 && _setPrototypeOf(t4, r4);
            }(LZWStream, t3);
            var r3 = _createSuper(LZWStream);
            function LZWStream(t4, o3, c2) {
              var l;
              !function _classCallCheck(t5, r4) {
                if (!(t5 instanceof r4))
                  throw new TypeError("Cannot call a class as a function");
              }(this, LZWStream);
              (l = r3.call(this, o3)).str = t4;
              l.dict = t4.dict;
              l.cachedData = 0;
              l.bitsCached = 0;
              for (var u = 4096, h = { earlyChange: c2, codeLength: 9, nextCode: 258, dictionaryValues: new Uint8Array(u), dictionaryLengths: new Uint16Array(u), dictionaryPrevCodes: new Uint16Array(u), currentSequence: new Uint8Array(u), currentSequenceLength: 0 }, d = 0; d < 256; ++d) {
                h.dictionaryValues[d] = d;
                h.dictionaryLengths[d] = 1;
              }
              l.lzwState = h;
              return l;
            }
            !function _createClass(t4, r4, o3) {
              r4 && _defineProperties(t4.prototype, r4);
              o3 && _defineProperties(t4, o3);
              Object.defineProperty(t4, "prototype", { writable: false });
              return t4;
            }(LZWStream, [{ key: "readBits", value: function readBits(t4) {
              for (var r4 = this.bitsCached, o3 = this.cachedData; r4 < t4; ) {
                var c2 = this.str.getByte();
                if (c2 === -1) {
                  this.eof = true;
                  return null;
                }
                o3 = o3 << 8 | c2;
                r4 += 8;
              }
              this.bitsCached = r4 -= t4;
              this.cachedData = o3;
              this.lastCode = null;
              return o3 >>> r4 & (1 << t4) - 1;
            } }, { key: "readBlock", value: function readBlock() {
              var t4, r4, o3, c2 = 1024, l = this.lzwState;
              if (l) {
                var u = l.earlyChange, h = l.nextCode, d = l.dictionaryValues, g = l.dictionaryLengths, m = l.dictionaryPrevCodes, y = l.codeLength, v = l.prevCode, k = l.currentSequence, _ = l.currentSequenceLength, w = 0, S = this.bufferLength, C = this.ensureBuffer(this.bufferLength + c2);
                for (t4 = 0; t4 < 512; t4++) {
                  var x = this.readBits(y), O = _ > 0;
                  if (x < 256) {
                    k[0] = x;
                    _ = 1;
                  } else {
                    if (!(x >= 258)) {
                      if (x === 256) {
                        y = 9;
                        h = 258;
                        _ = 0;
                        continue;
                      }
                      this.eof = true;
                      delete this.lzwState;
                      break;
                    }
                    if (x < h)
                      for (r4 = (_ = g[x]) - 1, o3 = x; r4 >= 0; r4--) {
                        k[r4] = d[o3];
                        o3 = m[o3];
                      }
                    else
                      k[_++] = k[0];
                  }
                  if (O) {
                    m[h] = v;
                    g[h] = g[v] + 1;
                    d[h] = k[0];
                    y = ++h + u & h + u - 1 ? y : 0 | Math.min(Math.log(h + u) / 0.6931471805599453 + 1, 12);
                  }
                  v = x;
                  if (c2 < (w += _)) {
                    do {
                      c2 += 512;
                    } while (c2 < w);
                    C = this.ensureBuffer(this.bufferLength + c2);
                  }
                  for (r4 = 0; r4 < _; r4++)
                    C[S++] = k[r4];
                }
                l.nextCode = h;
                l.codeLength = y;
                l.prevCode = v;
                l.currentSequenceLength = _;
                this.bufferLength = S;
              }
            } }]);
            return LZWStream;
          }(o2(182).DecodeStream);
          r2.LZWStream = c;
        }, (t2, r2, o2) => {
          "use strict";
          function _typeof(t3) {
            return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t4) {
              return typeof t4;
            } : function(t4) {
              return t4 && typeof Symbol == "function" && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
            }, _typeof(t3);
          }
          Object.defineProperty(r2, "__esModule", { value: true });
          r2.PredictorStream = void 0;
          var c = o2(182), l = o2(158), u = o2(4);
          function _defineProperties(t3, r3) {
            for (var o3 = 0; o3 < r3.length; o3++) {
              var c2 = r3[o3];
              c2.enumerable = c2.enumerable || false;
              c2.configurable = true;
              "value" in c2 && (c2.writable = true);
              Object.defineProperty(t3, c2.key, c2);
            }
          }
          function _setPrototypeOf(t3, r3) {
            _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(t4, r4) {
              t4.__proto__ = r4;
              return t4;
            };
            return _setPrototypeOf(t3, r3);
          }
          function _createSuper(t3) {
            var r3 = function _isNativeReflectConstruct() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                }));
                return true;
              } catch (t4) {
                return false;
              }
            }();
            return function _createSuperInternal() {
              var o3, c2 = _getPrototypeOf(t3);
              if (r3) {
                var l2 = _getPrototypeOf(this).constructor;
                o3 = Reflect.construct(c2, arguments, l2);
              } else
                o3 = c2.apply(this, arguments);
              return _possibleConstructorReturn(this, o3);
            };
          }
          function _possibleConstructorReturn(t3, r3) {
            if (r3 && (_typeof(r3) === "object" || typeof r3 == "function"))
              return r3;
            if (r3 !== void 0)
              throw new TypeError("Derived constructors may only return object or undefined");
            return _assertThisInitialized(t3);
          }
          function _assertThisInitialized(t3) {
            if (t3 === void 0)
              throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return t3;
          }
          function _getPrototypeOf(t3) {
            _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(t4) {
              return t4.__proto__ || Object.getPrototypeOf(t4);
            };
            return _getPrototypeOf(t3);
          }
          var h = function(t3) {
            !function _inherits(t4, r4) {
              if (typeof r4 != "function" && r4 !== null)
                throw new TypeError("Super expression must either be null or a function");
              t4.prototype = Object.create(r4 && r4.prototype, { constructor: { value: t4, writable: true, configurable: true } });
              Object.defineProperty(t4, "prototype", { writable: false });
              r4 && _setPrototypeOf(t4, r4);
            }(PredictorStream, t3);
            var r3 = _createSuper(PredictorStream);
            function PredictorStream(t4, o3, c2) {
              var h2;
              !function _classCallCheck(t5, r4) {
                if (!(t5 instanceof r4))
                  throw new TypeError("Cannot call a class as a function");
              }(this, PredictorStream);
              h2 = r3.call(this, o3);
              if (!(c2 instanceof l.Dict))
                return _possibleConstructorReturn(h2, t4);
              var d = h2.predictor = c2.get("Predictor") || 1;
              if (d <= 1)
                return _possibleConstructorReturn(h2, t4);
              if (d !== 2 && (d < 10 || d > 15))
                throw new u.FormatError("Unsupported predictor: ".concat(d));
              h2.readBlock = d === 2 ? h2.readBlockTiff : h2.readBlockPng;
              h2.str = t4;
              h2.dict = t4.dict;
              var g = h2.colors = c2.get("Colors") || 1, m = h2.bits = c2.get("BPC", "BitsPerComponent") || 8, y = h2.columns = c2.get("Columns") || 1;
              h2.pixBytes = g * m + 7 >> 3;
              h2.rowBytes = y * g * m + 7 >> 3;
              return _possibleConstructorReturn(h2, _assertThisInitialized(h2));
            }
            !function _createClass(t4, r4, o3) {
              r4 && _defineProperties(t4.prototype, r4);
              o3 && _defineProperties(t4, o3);
              Object.defineProperty(t4, "prototype", { writable: false });
              return t4;
            }(PredictorStream, [{ key: "readBlockTiff", value: function readBlockTiff() {
              var t4 = this.rowBytes, r4 = this.bufferLength, o3 = this.ensureBuffer(r4 + t4), c2 = this.bits, l2 = this.colors, u2 = this.str.getBytes(t4);
              this.eof = !u2.length;
              if (!this.eof) {
                var h2, d = 0, g = 0, m = 0, y = 0, v = r4;
                if (c2 === 1 && l2 === 1)
                  for (h2 = 0; h2 < t4; ++h2) {
                    var k = u2[h2] ^ d;
                    k ^= k >> 1;
                    k ^= k >> 2;
                    d = (1 & (k ^= k >> 4)) << 7;
                    o3[v++] = k;
                  }
                else if (c2 === 8) {
                  for (h2 = 0; h2 < l2; ++h2)
                    o3[v++] = u2[h2];
                  for (; h2 < t4; ++h2) {
                    o3[v] = o3[v - l2] + u2[h2];
                    v++;
                  }
                } else if (c2 === 16) {
                  var _ = 2 * l2;
                  for (h2 = 0; h2 < _; ++h2)
                    o3[v++] = u2[h2];
                  for (; h2 < t4; h2 += 2) {
                    var w = ((255 & u2[h2]) << 8) + (255 & u2[h2 + 1]) + ((255 & o3[v - _]) << 8) + (255 & o3[v - _ + 1]);
                    o3[v++] = w >> 8 & 255;
                    o3[v++] = 255 & w;
                  }
                } else {
                  var S = new Uint8Array(l2 + 1), C = (1 << c2) - 1, x = 0, O = r4, T = this.columns;
                  for (h2 = 0; h2 < T; ++h2)
                    for (var E = 0; E < l2; ++E) {
                      if (m < c2) {
                        d = d << 8 | 255 & u2[x++];
                        m += 8;
                      }
                      S[E] = S[E] + (d >> m - c2) & C;
                      m -= c2;
                      g = g << c2 | S[E];
                      if ((y += c2) >= 8) {
                        o3[O++] = g >> y - 8 & 255;
                        y -= 8;
                      }
                    }
                  y > 0 && (o3[O++] = (g << 8 - y) + (d & (1 << 8 - y) - 1));
                }
                this.bufferLength += t4;
              }
            } }, { key: "readBlockPng", value: function readBlockPng() {
              var t4 = this.rowBytes, r4 = this.pixBytes, o3 = this.str.getByte(), c2 = this.str.getBytes(t4);
              this.eof = !c2.length;
              if (!this.eof) {
                var l2 = this.bufferLength, h2 = this.ensureBuffer(l2 + t4), d = h2.subarray(l2 - t4, l2);
                d.length === 0 && (d = new Uint8Array(t4));
                var g, m, y, v = l2;
                switch (o3) {
                  case 0:
                    for (g = 0; g < t4; ++g)
                      h2[v++] = c2[g];
                    break;
                  case 1:
                    for (g = 0; g < r4; ++g)
                      h2[v++] = c2[g];
                    for (; g < t4; ++g) {
                      h2[v] = h2[v - r4] + c2[g] & 255;
                      v++;
                    }
                    break;
                  case 2:
                    for (g = 0; g < t4; ++g)
                      h2[v++] = d[g] + c2[g] & 255;
                    break;
                  case 3:
                    for (g = 0; g < r4; ++g)
                      h2[v++] = (d[g] >> 1) + c2[g];
                    for (; g < t4; ++g) {
                      h2[v] = (d[g] + h2[v - r4] >> 1) + c2[g] & 255;
                      v++;
                    }
                    break;
                  case 4:
                    for (g = 0; g < r4; ++g) {
                      m = d[g];
                      y = c2[g];
                      h2[v++] = m + y;
                    }
                    for (; g < t4; ++g) {
                      m = d[g];
                      var k = d[g - r4], _ = h2[v - r4], w = _ + m - k, S = w - _;
                      S < 0 && (S = -S);
                      var C = w - m;
                      C < 0 && (C = -C);
                      var x = w - k;
                      x < 0 && (x = -x);
                      y = c2[g];
                      h2[v++] = S <= C && S <= x ? _ + y : C <= x ? m + y : k + y;
                    }
                    break;
                  default:
                    throw new u.FormatError("Unsupported predictor: ".concat(o3));
                }
                this.bufferLength += t4;
              }
            } }]);
            return PredictorStream;
          }(c.DecodeStream);
          r2.PredictorStream = h;
        }, (t2, r2, o2) => {
          "use strict";
          function _typeof(t3) {
            return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t4) {
              return typeof t4;
            } : function(t4) {
              return t4 && typeof Symbol == "function" && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
            }, _typeof(t3);
          }
          Object.defineProperty(r2, "__esModule", { value: true });
          r2.RunLengthStream = void 0;
          function _defineProperties(t3, r3) {
            for (var o3 = 0; o3 < r3.length; o3++) {
              var c2 = r3[o3];
              c2.enumerable = c2.enumerable || false;
              c2.configurable = true;
              "value" in c2 && (c2.writable = true);
              Object.defineProperty(t3, c2.key, c2);
            }
          }
          function _setPrototypeOf(t3, r3) {
            _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(t4, r4) {
              t4.__proto__ = r4;
              return t4;
            };
            return _setPrototypeOf(t3, r3);
          }
          function _createSuper(t3) {
            var r3 = function _isNativeReflectConstruct() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                }));
                return true;
              } catch (t4) {
                return false;
              }
            }();
            return function _createSuperInternal() {
              var o3, c2 = _getPrototypeOf(t3);
              if (r3) {
                var l = _getPrototypeOf(this).constructor;
                o3 = Reflect.construct(c2, arguments, l);
              } else
                o3 = c2.apply(this, arguments);
              return _possibleConstructorReturn(this, o3);
            };
          }
          function _possibleConstructorReturn(t3, r3) {
            if (r3 && (_typeof(r3) === "object" || typeof r3 == "function"))
              return r3;
            if (r3 !== void 0)
              throw new TypeError("Derived constructors may only return object or undefined");
            return function _assertThisInitialized(t4) {
              if (t4 === void 0)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return t4;
            }(t3);
          }
          function _getPrototypeOf(t3) {
            _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(t4) {
              return t4.__proto__ || Object.getPrototypeOf(t4);
            };
            return _getPrototypeOf(t3);
          }
          var c = function(t3) {
            !function _inherits(t4, r4) {
              if (typeof r4 != "function" && r4 !== null)
                throw new TypeError("Super expression must either be null or a function");
              t4.prototype = Object.create(r4 && r4.prototype, { constructor: { value: t4, writable: true, configurable: true } });
              Object.defineProperty(t4, "prototype", { writable: false });
              r4 && _setPrototypeOf(t4, r4);
            }(RunLengthStream, t3);
            var r3 = _createSuper(RunLengthStream);
            function RunLengthStream(t4, o3) {
              var c2;
              !function _classCallCheck(t5, r4) {
                if (!(t5 instanceof r4))
                  throw new TypeError("Cannot call a class as a function");
              }(this, RunLengthStream);
              (c2 = r3.call(this, o3)).str = t4;
              c2.dict = t4.dict;
              return c2;
            }
            !function _createClass(t4, r4, o3) {
              r4 && _defineProperties(t4.prototype, r4);
              o3 && _defineProperties(t4, o3);
              Object.defineProperty(t4, "prototype", { writable: false });
              return t4;
            }(RunLengthStream, [{ key: "readBlock", value: function readBlock() {
              var t4 = this.str.getBytes(2);
              if (!t4 || t4.length < 2 || t4[0] === 128)
                this.eof = true;
              else {
                var r4, o3 = this.bufferLength, c2 = t4[0];
                if (c2 < 128) {
                  (r4 = this.ensureBuffer(o3 + c2 + 1))[o3++] = t4[1];
                  if (c2 > 0) {
                    var l = this.str.getBytes(c2);
                    r4.set(l, o3);
                    o3 += c2;
                  }
                } else {
                  c2 = 257 - c2;
                  var u = t4[1];
                  r4 = this.ensureBuffer(o3 + c2 + 1);
                  for (var h = 0; h < c2; h++)
                    r4[o3++] = u;
                }
                this.bufferLength = o3;
              }
            } }]);
            return RunLengthStream;
          }(o2(182).DecodeStream);
          r2.RunLengthStream = c;
        }, (t2, r2, o2) => {
          "use strict";
          Object.defineProperty(r2, "__esModule", { value: true });
          r2.Font = r2.ErrorFont = void 0;
          var c = o2(4), l = o2(198), u = o2(171), h = o2(174), d = o2(173), g = o2(172), m = o2(200), y = o2(201), v = o2(202), k = o2(203), _ = o2(204), w = o2(205), S = o2(179), C = o2(206), x = o2(161), O = o2(163), T = o2(207);
          function _slicedToArray(t3, r3) {
            return function _arrayWithHoles(t4) {
              if (Array.isArray(t4))
                return t4;
            }(t3) || function _iterableToArrayLimit(t4, r4) {
              var o3 = t4 == null ? null : typeof Symbol != "undefined" && t4[Symbol.iterator] || t4["@@iterator"];
              if (o3 == null)
                return;
              var c2, l2, u2 = [], h2 = true, d2 = false;
              try {
                for (o3 = o3.call(t4); !(h2 = (c2 = o3.next()).done); h2 = true) {
                  u2.push(c2.value);
                  if (r4 && u2.length === r4)
                    break;
                }
              } catch (t5) {
                d2 = true;
                l2 = t5;
              } finally {
                try {
                  h2 || o3.return == null || o3.return();
                } finally {
                  if (d2)
                    throw l2;
                }
              }
              return u2;
            }(t3, r3) || _unsupportedIterableToArray(t3, r3) || function _nonIterableRest() {
              throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
            }();
          }
          function _createForOfIteratorHelper(t3, r3) {
            var o3 = typeof Symbol != "undefined" && t3[Symbol.iterator] || t3["@@iterator"];
            if (!o3) {
              if (Array.isArray(t3) || (o3 = _unsupportedIterableToArray(t3)) || r3 && t3 && typeof t3.length == "number") {
                o3 && (t3 = o3);
                var c2 = 0, l2 = function F() {
                };
                return { s: l2, n: function n() {
                  return c2 >= t3.length ? { done: true } : { done: false, value: t3[c2++] };
                }, e: function e(t4) {
                  throw t4;
                }, f: l2 };
              }
              throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
            }
            var u2, h2 = true, d2 = false;
            return { s: function s() {
              o3 = o3.call(t3);
            }, n: function n() {
              var t4 = o3.next();
              h2 = t4.done;
              return t4;
            }, e: function e(t4) {
              d2 = true;
              u2 = t4;
            }, f: function f() {
              try {
                h2 || o3.return == null || o3.return();
              } finally {
                if (d2)
                  throw u2;
              }
            } };
          }
          function _unsupportedIterableToArray(t3, r3) {
            if (t3) {
              if (typeof t3 == "string")
                return _arrayLikeToArray(t3, r3);
              var o3 = Object.prototype.toString.call(t3).slice(8, -1);
              o3 === "Object" && t3.constructor && (o3 = t3.constructor.name);
              return o3 === "Map" || o3 === "Set" ? Array.from(t3) : o3 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(o3) ? _arrayLikeToArray(t3, r3) : void 0;
            }
          }
          function _arrayLikeToArray(t3, r3) {
            (r3 == null || r3 > t3.length) && (r3 = t3.length);
            for (var o3 = 0, c2 = new Array(r3); o3 < r3; o3++)
              c2[o3] = t3[o3];
            return c2;
          }
          function _classCallCheck(t3, r3) {
            if (!(t3 instanceof r3))
              throw new TypeError("Cannot call a class as a function");
          }
          function _defineProperties(t3, r3) {
            for (var o3 = 0; o3 < r3.length; o3++) {
              var c2 = r3[o3];
              c2.enumerable = c2.enumerable || false;
              c2.configurable = true;
              "value" in c2 && (c2.writable = true);
              Object.defineProperty(t3, c2.key, c2);
            }
          }
          function _createClass(t3, r3, o3) {
            r3 && _defineProperties(t3.prototype, r3);
            o3 && _defineProperties(t3, o3);
            Object.defineProperty(t3, "prototype", { writable: false });
            return t3;
          }
          var E = [[57344, 63743], [1048576, 1114109]], M = 1e3, R = ["ascent", "bbox", "black", "bold", "charProcOperatorList", "composite", "cssFontInfo", "data", "defaultVMetrics", "defaultWidth", "descent", "fallbackName", "fontMatrix", "fontType", "isType3Font", "italic", "loadedName", "mimetype", "missingFile", "name", "remeasure", "subtype", "type", "vertical"], D = ["cMap", "defaultEncoding", "differences", "isMonospace", "isSerifFont", "isSymbolicFont", "seacMap", "toFontChar", "toUnicode", "vmetrics", "widths"];
          function adjustWidths(t3) {
            if (t3.fontMatrix && t3.fontMatrix[0] !== c.FONT_IDENTITY_MATRIX[0]) {
              var r3 = 1e-3 / t3.fontMatrix[0], o3 = t3.widths;
              for (var l2 in o3)
                o3[l2] *= r3;
              t3.defaultWidth *= r3;
            }
          }
          function amendFallbackToUnicode(t3) {
            if (t3.fallbackToUnicode && !(t3.toUnicode instanceof y.IdentityToUnicodeMap)) {
              var r3 = [];
              for (var o3 in t3.fallbackToUnicode)
                t3.toUnicode.has(o3) || (r3[o3] = t3.fallbackToUnicode[o3]);
              r3.length > 0 && t3.toUnicode.amend(r3);
            }
          }
          var j = function() {
            function Glyph(t3, r3, o3, c2, l2, u2, d2, g2, m2) {
              _classCallCheck(this, Glyph);
              this.originalCharCode = t3;
              this.fontChar = r3;
              this.unicode = o3;
              this.accent = c2;
              this.width = l2;
              this.vmetric = u2;
              this.operatorListId = d2;
              this.isSpace = g2;
              this.isInFont = m2;
              var y2 = (0, h.getCharUnicodeCategory)(o3);
              this.isWhitespace = y2.isWhitespace;
              this.isZeroWidthDiacritic = y2.isZeroWidthDiacritic;
              this.isInvisibleFormatMark = y2.isInvisibleFormatMark;
            }
            _createClass(Glyph, [{ key: "matchesForCache", value: function matchesForCache(t3, r3, o3, c2, l2, u2, h2, d2, g2) {
              return this.originalCharCode === t3 && this.fontChar === r3 && this.unicode === o3 && this.accent === c2 && this.width === l2 && this.vmetric === u2 && this.operatorListId === h2 && this.isSpace === d2 && this.isInFont === g2;
            } }]);
            return Glyph;
          }();
          function int16(t3, r3) {
            return (t3 << 8) + r3;
          }
          function writeSignedInt16(t3, r3, o3) {
            t3[r3 + 1] = o3;
            t3[r3] = o3 >>> 8;
          }
          function signedInt16(t3, r3) {
            var o3 = (t3 << 8) + r3;
            return 32768 & o3 ? o3 - 65536 : o3;
          }
          function string16(t3) {
            return String.fromCharCode(t3 >> 8 & 255, 255 & t3);
          }
          function safeString16(t3) {
            t3 > 32767 ? t3 = 32767 : t3 < -32768 && (t3 = -32768);
            return String.fromCharCode(t3 >> 8 & 255, 255 & t3);
          }
          function isTrueTypeCollectionFile(t3) {
            var r3 = t3.peekBytes(4);
            return (0, c.bytesToString)(r3) === "ttcf";
          }
          function getFontFileType(t3, r3) {
            var o3, l2, u2 = r3.type, h2 = r3.subtype, d2 = r3.composite;
            if (function isTrueTypeFile(t4) {
              var r4 = t4.peekBytes(4);
              return (0, x.readUint32)(r4, 0) === 65536 || (0, c.bytesToString)(r4) === "true";
            }(t3) || isTrueTypeCollectionFile(t3))
              o3 = d2 ? "CIDFontType2" : "TrueType";
            else if (function isOpenTypeFile(t4) {
              var r4 = t4.peekBytes(4);
              return (0, c.bytesToString)(r4) === "OTTO";
            }(t3))
              o3 = d2 ? "CIDFontType2" : "OpenType";
            else if (function isType1File(t4) {
              var r4 = t4.peekBytes(2);
              return r4[0] === 37 && r4[1] === 33 || r4[0] === 128 && r4[1] === 1;
            }(t3))
              o3 = d2 ? "CIDFontType0" : u2 === "MMType1" ? "MMType1" : "Type1";
            else if (function isCFFFile(t4) {
              var r4 = t4.peekBytes(4);
              return r4[0] >= 1 && r4[3] >= 1 && r4[3] <= 4;
            }(t3))
              if (d2) {
                o3 = "CIDFontType0";
                l2 = "CIDFontType0C";
              } else {
                o3 = u2 === "MMType1" ? "MMType1" : "Type1";
                l2 = "Type1C";
              }
            else {
              (0, c.warn)("getFontFileType: Unable to detect correct font file Type/Subtype.");
              o3 = u2;
              l2 = h2;
            }
            return [o3, l2];
          }
          function applyStandardFontGlyphMap(t3, r3) {
            for (var o3 in r3)
              t3[+o3] = r3[o3];
          }
          function buildToFontChar(t3, r3, o3) {
            for (var c2, l2 = [], u2 = 0, d2 = t3.length; u2 < d2; u2++)
              (c2 = (0, h.getUnicodeForGlyph)(t3[u2], r3)) !== -1 && (l2[u2] = c2);
            for (var g2 in o3)
              (c2 = (0, h.getUnicodeForGlyph)(o3[g2], r3)) !== -1 && (l2[+g2] = c2);
            return l2;
          }
          function convertCidString(t3, r3) {
            var o3 = arguments.length > 2 && arguments[2] !== void 0 && arguments[2];
            switch (r3.length) {
              case 1:
                return r3.charCodeAt(0);
              case 2:
                return r3.charCodeAt(0) << 8 | r3.charCodeAt(1);
            }
            var l2 = "Unsupported CID string (charCode ".concat(t3, '): "').concat(r3, '".');
            if (o3)
              throw new c.FormatError(l2);
            (0, c.warn)(l2);
            return r3;
          }
          function adjustMapping(t3, r3, o3) {
            var l2 = /* @__PURE__ */ Object.create(null), u2 = [], h2 = 0, d2 = E[h2][0], g2 = E[h2][1];
            for (var m2 in t3) {
              var y2 = t3[m2 |= 0];
              if (r3(y2)) {
                if (d2 > g2) {
                  if (++h2 >= E.length) {
                    (0, c.warn)("Ran out of space in font private use area.");
                    break;
                  }
                  d2 = E[h2][0];
                  g2 = E[h2][1];
                }
                var v2 = d2++;
                y2 === 0 && (y2 = o3);
                l2[v2] = y2;
                u2[m2] = v2;
              }
            }
            return { toFontChar: u2, charCodeToGlyphId: l2, nextAvailableFontCharCode: d2 };
          }
          function createCmapTable(t3, r3) {
            var o3, l2, u2, h2, d2 = function getRanges(t4, r4) {
              var o4 = [];
              for (var c2 in t4)
                t4[c2] >= r4 || o4.push({ fontCharCode: 0 | c2, glyphId: t4[c2] });
              o4.length === 0 && o4.push({ fontCharCode: 0, glyphId: 0 });
              o4.sort(function fontGetRangesSort(t5, r5) {
                return t5.fontCharCode - r5.fontCharCode;
              });
              for (var l3 = [], u3 = o4.length, h3 = 0; h3 < u3; ) {
                var d3 = o4[h3].fontCharCode, g3 = [o4[h3].glyphId];
                ++h3;
                for (var m3 = d3; h3 < u3 && m3 + 1 === o4[h3].fontCharCode; ) {
                  g3.push(o4[h3].glyphId);
                  ++h3;
                  if (++m3 == 65535)
                    break;
                }
                l3.push([d3, m3, g3]);
              }
              return l3;
            }(t3, r3), g2 = d2[d2.length - 1][1] > 65535 ? 2 : 1, m2 = "\0\0" + string16(g2) + "\0\0" + (0, c.string32)(4 + 8 * g2);
            for (o3 = d2.length - 1; o3 >= 0 && !(d2[o3][0] <= 65535); --o3)
              ;
            var y2 = o3 + 1;
            d2[o3][0] < 65535 && d2[o3][1] === 65535 && (d2[o3][1] = 65534);
            var v2, k2, _2, w2, S2 = d2[o3][1] < 65535 ? 1 : 0, x2 = y2 + S2, O2 = C.OpenTypeFileBuilder.getSearchParams(x2, 2), T2 = "", E2 = "", M2 = "", R2 = "", D2 = "", j2 = 0;
            for (o3 = 0, l2 = y2; o3 < l2; o3++) {
              k2 = (v2 = d2[o3])[0];
              _2 = v2[1];
              T2 += string16(k2);
              E2 += string16(_2);
              var L2 = true;
              for (u2 = 1, h2 = (w2 = v2[2]).length; u2 < h2; ++u2)
                if (w2[u2] !== w2[u2 - 1] + 1) {
                  L2 = false;
                  break;
                }
              if (L2) {
                M2 += string16(w2[0] - k2 & 65535);
                R2 += string16(0);
              } else {
                var N2 = 2 * (x2 - o3) + 2 * j2;
                j2 += _2 - k2 + 1;
                M2 += string16(0);
                R2 += string16(N2);
                for (u2 = 0, h2 = w2.length; u2 < h2; ++u2)
                  D2 += string16(w2[u2]);
              }
            }
            if (S2 > 0) {
              E2 += "\xFF\xFF";
              T2 += "\xFF\xFF";
              M2 += "\0";
              R2 += "\0\0";
            }
            var U = "\0\0" + string16(2 * x2) + string16(O2.range) + string16(O2.entry) + string16(O2.rangeShift) + E2 + "\0\0" + T2 + M2 + R2 + D2, H = "", $ = "";
            if (g2 > 1) {
              m2 += "\0\0\n" + (0, c.string32)(4 + 8 * g2 + 4 + U.length);
              H = "";
              for (o3 = 0, l2 = d2.length; o3 < l2; o3++) {
                k2 = (v2 = d2[o3])[0];
                var X = (w2 = v2[2])[0];
                for (u2 = 1, h2 = w2.length; u2 < h2; ++u2)
                  if (w2[u2] !== w2[u2 - 1] + 1) {
                    _2 = v2[0] + u2 - 1;
                    H += (0, c.string32)(k2) + (0, c.string32)(_2) + (0, c.string32)(X);
                    k2 = _2 + 1;
                    X = w2[u2];
                  }
                H += (0, c.string32)(k2) + (0, c.string32)(v2[1]) + (0, c.string32)(X);
              }
              $ = "\0\f\0\0" + (0, c.string32)(H.length + 16) + "\0\0\0\0" + (0, c.string32)(H.length / 12);
            }
            return m2 + "\0" + string16(U.length + 4) + U + $ + H;
          }
          function createOS2Table(t3, r3, o3) {
            o3 = o3 || { unitsPerEm: 0, yMax: 0, yMin: 0, ascent: 0, descent: 0 };
            var l2 = 0, u2 = 0, d2 = 0, g2 = 0, m2 = null, y2 = 0;
            if (r3) {
              for (var v2 in r3) {
                (m2 > (v2 |= 0) || !m2) && (m2 = v2);
                y2 < v2 && (y2 = v2);
                var k2 = (0, h.getUnicodeRangeFor)(v2);
                if (k2 < 32)
                  l2 |= 1 << k2;
                else if (k2 < 64)
                  u2 |= 1 << k2 - 32;
                else if (k2 < 96)
                  d2 |= 1 << k2 - 64;
                else {
                  if (!(k2 < 123))
                    throw new c.FormatError("Unicode ranges Bits > 123 are reserved for internal usage");
                  g2 |= 1 << k2 - 96;
                }
              }
              y2 > 65535 && (y2 = 65535);
            } else {
              m2 = 0;
              y2 = 255;
            }
            var _2 = t3.bbox || [0, 0, 0, 0], w2 = o3.unitsPerEm || 1 / (t3.fontMatrix || c.FONT_IDENTITY_MATRIX)[0], S2 = t3.ascentScaled ? 1 : w2 / M, C2 = o3.ascent || Math.round(S2 * (t3.ascent || _2[3])), x2 = o3.descent || Math.round(S2 * (t3.descent || _2[1]));
            x2 > 0 && t3.descent > 0 && _2[1] < 0 && (x2 = -x2);
            var O2 = o3.yMax || C2, T2 = -o3.yMin || -x2;
            return "\0$\xF4\0\0\0\x8A\xBB\0\0\0\x8C\x8A\xBB\0\0\xDF\x001\0\0\0\0" + String.fromCharCode(t3.fixedPitch ? 9 : 0) + "\0\0\0\0\0\0" + (0, c.string32)(l2) + (0, c.string32)(u2) + (0, c.string32)(d2) + (0, c.string32)(g2) + "*21*" + string16(t3.italicAngle ? 1 : 0) + string16(m2 || t3.firstChar) + string16(y2 || t3.lastChar) + string16(C2) + string16(x2) + "\0d" + string16(O2) + string16(T2) + "\0\0\0\0\0\0\0\0" + string16(t3.xHeight) + string16(t3.capHeight) + string16(0) + string16(m2 || t3.firstChar) + "\0";
          }
          function createPostTable(t3) {
            var r3 = Math.floor(t3.italicAngle * Math.pow(2, 16));
            return "\0\0\0" + (0, c.string32)(r3) + "\0\0\0\0" + (0, c.string32)(t3.fixedPitch ? 1 : 0) + "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0";
          }
          function createPostscriptName(t3) {
            return t3.replace(/[^\x21-\x7E]|[[\](){}<>/%]/g, "").slice(0, 63);
          }
          function createNameTable(t3, r3) {
            r3 || (r3 = [[], []]);
            var o3, c2, l2, u2, h2, d2 = [r3[0][0] || "Original licence", r3[0][1] || t3, r3[0][2] || "Unknown", r3[0][3] || "uniqueID", r3[0][4] || t3, r3[0][5] || "Version 0.11", r3[0][6] || createPostscriptName(t3), r3[0][7] || "Unknown", r3[0][8] || "Unknown", r3[0][9] || "Unknown"], g2 = [];
            for (o3 = 0, c2 = d2.length; o3 < c2; o3++) {
              var m2 = [];
              for (l2 = 0, u2 = (h2 = r3[1][o3] || d2[o3]).length; l2 < u2; l2++)
                m2.push(string16(h2.charCodeAt(l2)));
              g2.push(m2.join(""));
            }
            var y2 = [d2, g2], v2 = ["\0", "\0"], k2 = ["\0\0", "\0"], _2 = ["\0\0", "	"], w2 = d2.length * v2.length, S2 = "\0\0" + string16(w2) + string16(12 * w2 + 6), C2 = 0;
            for (o3 = 0, c2 = v2.length; o3 < c2; o3++) {
              var x2 = y2[o3];
              for (l2 = 0, u2 = x2.length; l2 < u2; l2++) {
                h2 = x2[l2];
                S2 += v2[o3] + k2[o3] + _2[o3] + string16(l2) + string16(h2.length) + string16(C2);
                C2 += h2.length;
              }
            }
            return S2 += d2.join("") + g2.join("");
          }
          var L = function() {
            function Font(t3, r3, o3) {
              _classCallCheck(this, Font);
              this.name = t3;
              this.psName = null;
              this.mimetype = null;
              this.disableFontFace = false;
              this.loadedName = o3.loadedName;
              this.isType3Font = o3.isType3Font;
              this.missingFile = false;
              this.cssFontInfo = o3.cssFontInfo;
              this._charsCache = /* @__PURE__ */ Object.create(null);
              this._glyphCache = /* @__PURE__ */ Object.create(null);
              var l2 = !!(o3.flags & u.FontFlags.Serif);
              if (!l2 && !o3.isSimulatedFlags) {
                var h2, d2 = t3.replace(/[,_]/g, "-").split("-")[0], g2 = (0, m.getSerifFonts)(), y2 = _createForOfIteratorHelper(d2.split("+"));
                try {
                  for (y2.s(); !(h2 = y2.n()).done; ) {
                    if (g2[h2.value]) {
                      l2 = true;
                      break;
                    }
                  }
                } catch (t4) {
                  y2.e(t4);
                } finally {
                  y2.f();
                }
              }
              this.isSerifFont = l2;
              this.isSymbolicFont = !!(o3.flags & u.FontFlags.Symbolic);
              this.isMonospace = !!(o3.flags & u.FontFlags.FixedPitch);
              var k2 = o3.type, _2 = o3.subtype;
              this.type = k2;
              this.subtype = _2;
              var w2 = "sans-serif";
              this.isMonospace ? w2 = "monospace" : this.isSerifFont && (w2 = "serif");
              this.fallbackName = w2;
              this.differences = o3.differences;
              this.widths = o3.widths;
              this.defaultWidth = o3.defaultWidth;
              this.composite = o3.composite;
              this.cMap = o3.cMap;
              this.capHeight = o3.capHeight / M;
              this.ascent = o3.ascent / M;
              this.descent = o3.descent / M;
              this.lineHeight = this.ascent - this.descent;
              this.fontMatrix = o3.fontMatrix;
              this.bbox = o3.bbox;
              this.defaultEncoding = o3.defaultEncoding;
              this.toUnicode = o3.toUnicode;
              this.toFontChar = [];
              if (o3.type !== "Type3") {
                this.cidEncoding = o3.cidEncoding || "";
                this.vertical = !!o3.vertical;
                if (this.vertical) {
                  this.vmetrics = o3.vmetrics;
                  this.defaultVMetrics = o3.defaultVMetrics;
                }
                if (r3 && !r3.isEmpty) {
                  var S2, C2 = _slicedToArray(getFontFileType(r3, o3), 2);
                  k2 = C2[0];
                  _2 = C2[1];
                  k2 === this.type && _2 === this.subtype || (0, c.info)("Inconsistent font file Type/SubType, expected: " + "".concat(this.type, "/").concat(this.subtype, " but found: ").concat(k2, "/").concat(_2, "."));
                  try {
                    switch (k2) {
                      case "MMType1":
                        (0, c.info)("MMType1 font (" + t3 + "), falling back to Type1.");
                      case "Type1":
                      case "CIDFontType0":
                        this.mimetype = "font/opentype";
                        var x2 = _2 === "Type1C" || _2 === "CIDFontType0C" ? new v.CFFFont(r3, o3) : new T.Type1Font(t3, r3, o3);
                        adjustWidths(o3);
                        S2 = this.convert(t3, x2, o3);
                        break;
                      case "OpenType":
                      case "TrueType":
                      case "CIDFontType2":
                        this.mimetype = "font/opentype";
                        S2 = this.checkAndRepair(t3, r3, o3);
                        if (this.isOpenType) {
                          adjustWidths(o3);
                          k2 = "OpenType";
                        }
                        break;
                      default:
                        throw new c.FormatError("Font ".concat(k2, " is not supported"));
                    }
                  } catch (t4) {
                    (0, c.warn)(t4);
                    this.fallbackToSystemFont(o3);
                    return;
                  }
                  amendFallbackToUnicode(o3);
                  this.data = S2;
                  this.fontType = (0, u.getFontType)(k2, _2, o3.isStandardFont);
                  this.fontMatrix = o3.fontMatrix;
                  this.widths = o3.widths;
                  this.defaultWidth = o3.defaultWidth;
                  this.toUnicode = o3.toUnicode;
                  this.seacMap = o3.seacMap;
                } else {
                  r3 && (0, c.warn)('Font file is empty in "' + t3 + '" (' + this.loadedName + ")");
                  this.fallbackToSystemFont(o3);
                }
              } else {
                for (var O2 = 0; O2 < 256; O2++)
                  this.toFontChar[O2] = this.differences[O2] || o3.defaultEncoding[O2];
                this.fontType = c.FontType.TYPE3;
              }
            }
            _createClass(Font, [{ key: "renderer", get: function get() {
              var t3 = k.FontRendererFactory.create(this, u.SEAC_ANALYSIS_ENABLED);
              return (0, c.shadow)(this, "renderer", t3);
            } }, { key: "exportData", value: function exportData() {
              var t3, r3, o3, c2 = arguments.length > 0 && arguments[0] !== void 0 && arguments[0], l2 = c2 ? [].concat(R, D) : R, u2 = /* @__PURE__ */ Object.create(null), h2 = _createForOfIteratorHelper(l2);
              try {
                for (h2.s(); !(o3 = h2.n()).done; )
                  (r3 = this[t3 = o3.value]) !== void 0 && (u2[t3] = r3);
              } catch (t4) {
                h2.e(t4);
              } finally {
                h2.f();
              }
              return u2;
            } }, { key: "fallbackToSystemFont", value: function fallbackToSystemFont(t3) {
              var r3 = this;
              this.missingFile = true;
              var o3 = this.name, l2 = this.type, v2 = this.subtype, k2 = (0, u.normalizeFontName)(o3), w2 = (0, m.getStdFontMap)(), S2 = (0, m.getNonStdFontMap)(), C2 = !!w2[k2], x2 = !(!S2[k2] || !w2[S2[k2]]);
              k2 = w2[k2] || S2[k2] || k2;
              var O2 = (0, _.getFontBasicMetrics)()[k2];
              if (O2) {
                isNaN(this.ascent) && (this.ascent = O2.ascent / M);
                isNaN(this.descent) && (this.descent = O2.descent / M);
                isNaN(this.capHeight) && (this.capHeight = O2.capHeight / M);
              }
              this.bold = k2.search(/bold/gi) !== -1;
              this.italic = k2.search(/oblique/gi) !== -1 || k2.search(/italic/gi) !== -1;
              this.black = o3.search(/Black/g) !== -1;
              var T2 = o3.search(/Narrow/g) !== -1;
              this.remeasure = (!C2 || T2) && Object.keys(this.widths).length > 0;
              if ((C2 || x2) && l2 === "CIDFontType2" && this.cidEncoding.startsWith("Identity-")) {
                var E2 = t3.cidToGidMap, R2 = [];
                applyStandardFontGlyphMap(R2, (0, m.getGlyphMapForStandardFonts)());
                /Arial-?Black/i.test(o3) ? applyStandardFontGlyphMap(R2, (0, m.getSupplementalGlyphMapForArialBlack)()) : /Calibri/i.test(o3) && applyStandardFontGlyphMap(R2, (0, m.getSupplementalGlyphMapForCalibri)());
                if (E2) {
                  for (var D2 in R2) {
                    var j2 = R2[D2];
                    E2[j2] !== void 0 && (R2[+D2] = E2[j2]);
                  }
                  E2.length !== this.toUnicode.length && t3.hasIncludedToUnicodeMap && this.toUnicode instanceof y.IdentityToUnicodeMap && this.toUnicode.forEach(function(t4, r4) {
                    var o4 = R2[t4];
                    E2[o4] === void 0 && (R2[+t4] = r4);
                  });
                }
                this.toUnicode instanceof y.IdentityToUnicodeMap || this.toUnicode.forEach(function(t4, r4) {
                  R2[+t4] = r4;
                });
                this.toFontChar = R2;
                this.toUnicode = new y.ToUnicodeMap(R2);
              } else if (/Symbol/i.test(k2))
                this.toFontChar = buildToFontChar(g.SymbolSetEncoding, (0, d.getGlyphsUnicode)(), this.differences);
              else if (/Dingbats/i.test(k2)) {
                /Wingdings/i.test(o3) && (0, c.warn)("Non-embedded Wingdings font, falling back to ZapfDingbats.");
                this.toFontChar = buildToFontChar(g.ZapfDingbatsEncoding, (0, d.getDingbatsGlyphsUnicode)(), this.differences);
              } else if (C2) {
                var L2 = buildToFontChar(this.defaultEncoding, (0, d.getGlyphsUnicode)(), this.differences);
                l2 !== "CIDFontType2" || this.cidEncoding.startsWith("Identity-") || this.toUnicode instanceof y.IdentityToUnicodeMap || this.toUnicode.forEach(function(t4, r4) {
                  L2[+t4] = r4;
                });
                this.toFontChar = L2;
              } else {
                var N2 = (0, d.getGlyphsUnicode)(), U = [];
                this.toUnicode.forEach(function(t4, o4) {
                  if (!r3.composite) {
                    var c2 = r3.differences[t4] || r3.defaultEncoding[t4], l3 = (0, h.getUnicodeForGlyph)(c2, N2);
                    l3 !== -1 && (o4 = l3);
                  }
                  U[+t4] = o4;
                });
                this.composite && this.toUnicode instanceof y.IdentityToUnicodeMap && /Verdana/i.test(o3) && applyStandardFontGlyphMap(U, (0, m.getGlyphMapForStandardFonts)());
                this.toFontChar = U;
              }
              amendFallbackToUnicode(t3);
              this.loadedName = k2.split("-")[0];
              this.fontType = (0, u.getFontType)(l2, v2, t3.isStandardFont);
            } }, { key: "checkAndRepair", value: function checkAndRepair(t3, r3, o3) {
              var h2 = ["OS/2", "cmap", "head", "hhea", "hmtx", "maxp", "name", "post", "loca", "glyf", "fpgm", "prep", "cvt ", "CFF "];
              function readTables(t4, r4) {
                var o4 = /* @__PURE__ */ Object.create(null);
                o4["OS/2"] = null;
                o4.cmap = null;
                o4.head = null;
                o4.hhea = null;
                o4.hmtx = null;
                o4.maxp = null;
                o4.name = null;
                o4.post = null;
                for (var c2 = 0; c2 < r4; c2++) {
                  var l2 = readTableEntry(t4);
                  h2.includes(l2.tag) && (l2.length !== 0 && (o4[l2.tag] = l2));
                }
                return o4;
              }
              function readTableEntry(t4) {
                var r4 = t4.getString(4), o4 = t4.getInt32() >>> 0, c2 = t4.getInt32() >>> 0, l2 = t4.getInt32() >>> 0, u2 = t4.pos;
                t4.pos = t4.start ? t4.start : 0;
                t4.skip(c2);
                var h3 = t4.getBytes(l2);
                t4.pos = u2;
                if (r4 === "head") {
                  h3[8] = h3[9] = h3[10] = h3[11] = 0;
                  h3[17] |= 32;
                }
                return { tag: r4, checksum: o4, length: l2, offset: c2, data: h3 };
              }
              function readOpenTypeHeader(t4) {
                return { version: t4.getString(4), numTables: t4.getUint16(), searchRange: t4.getUint16(), entrySelector: t4.getUint16(), rangeShift: t4.getUint16() };
              }
              function sanitizeGlyph(t4, r4, o4, c2, l2, u2) {
                var h3 = { length: 0, sizeOfInstructions: 0 };
                if (o4 - r4 <= 12)
                  return h3;
                var d2 = t4.subarray(r4, o4), g2 = signedInt16(d2[0], d2[1]);
                if (g2 < 0) {
                  writeSignedInt16(d2, 0, g2 = -1);
                  c2.set(d2, l2);
                  h3.length = d2.length;
                  return h3;
                }
                var m3, y2 = 10, v2 = 0;
                for (m3 = 0; m3 < g2; m3++) {
                  v2 = (d2[y2] << 8 | d2[y2 + 1]) + 1;
                  y2 += 2;
                }
                var k3 = y2, _3 = d2[y2] << 8 | d2[y2 + 1];
                h3.sizeOfInstructions = _3;
                var w2 = y2 += 2 + _3, S2 = 0;
                for (m3 = 0; m3 < v2; m3++) {
                  var C2 = d2[y2++];
                  192 & C2 && (d2[y2 - 1] = 63 & C2);
                  var x3 = 2;
                  2 & C2 ? x3 = 1 : 16 & C2 && (x3 = 0);
                  var O2 = 2;
                  4 & C2 ? O2 = 1 : 32 & C2 && (O2 = 0);
                  var T3 = x3 + O2;
                  S2 += T3;
                  if (8 & C2) {
                    var E3 = d2[y2++];
                    m3 += E3;
                    S2 += E3 * T3;
                  }
                }
                if (S2 === 0)
                  return h3;
                var M3 = y2 + S2;
                if (M3 > d2.length)
                  return h3;
                if (!u2 && _3 > 0) {
                  c2.set(d2.subarray(0, k3), l2);
                  c2.set([0, 0], l2 + k3);
                  c2.set(d2.subarray(w2, M3), l2 + k3 + 2);
                  M3 -= _3;
                  d2.length - M3 > 3 && (M3 = M3 + 3 & -4);
                  h3.length = M3;
                  return h3;
                }
                if (d2.length - M3 > 3) {
                  M3 = M3 + 3 & -4;
                  c2.set(d2.subarray(0, M3), l2);
                  h3.length = M3;
                  return h3;
                }
                c2.set(d2, l2);
                h3.length = d2.length;
                return h3;
              }
              function readNameTable(t4) {
                var o4 = (r3.start ? r3.start : 0) + t4.offset;
                r3.pos = o4;
                var c2 = [[], []], l2 = t4.length, u2 = o4 + l2;
                if (r3.getUint16() !== 0 || l2 < 6)
                  return c2;
                var h3, d2, g2 = r3.getUint16(), m3 = r3.getUint16(), y2 = [];
                for (h3 = 0; h3 < g2 && r3.pos + 12 <= u2; h3++) {
                  var v2 = { platform: r3.getUint16(), encoding: r3.getUint16(), language: r3.getUint16(), name: r3.getUint16(), length: r3.getUint16(), offset: r3.getUint16() };
                  (v2.platform === 1 && v2.encoding === 0 && v2.language === 0 || v2.platform === 3 && v2.encoding === 1 && v2.language === 1033) && y2.push(v2);
                }
                for (h3 = 0, d2 = y2.length; h3 < d2; h3++) {
                  var k3 = y2[h3];
                  if (!(k3.length <= 0)) {
                    var _3 = o4 + m3 + k3.offset;
                    if (!(_3 + k3.length > u2)) {
                      r3.pos = _3;
                      var w2 = k3.name;
                      if (k3.encoding) {
                        for (var S2 = "", C2 = 0, x3 = k3.length; C2 < x3; C2 += 2)
                          S2 += String.fromCharCode(r3.getUint16());
                        c2[1][w2] = S2;
                      } else
                        c2[0][w2] = r3.getString(k3.length);
                    }
                  }
                }
                return c2;
              }
              var m2, k2, _2, x2, T2 = [0, 0, 0, 0, 0, 0, 0, 0, -2, -2, -2, -2, 0, 0, -2, -5, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, -1, 0, -1, -1, -1, -1, 1, -1, -999, 0, 1, 0, -1, -2, 0, -1, -2, -1, -1, 0, -1, -1, 0, 0, -999, -999, -1, -1, -1, -1, -2, -999, -2, -2, -999, 0, -2, -2, 0, 0, -2, 0, -2, 0, 0, 0, -2, -1, -1, 1, 1, 0, 0, -1, -1, -1, -1, -1, -1, -1, 0, 0, -1, 0, -1, -1, 0, -999, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2, -999, -999, -999, -999, -999, -1, -1, -2, -2, 0, 0, 0, 0, -1, -1, -999, -2, -2, 0, 0, -1, -2, -2, 0, 0, 0, -1, -1, -1, -2];
              function sanitizeTTProgram(t4, r4) {
                for (var o4, l2, u2, h3, d2, g2 = t4.data, m3 = 0, y2 = 0, v2 = 0, k3 = [], _3 = [], w2 = [], S2 = r4.tooComplexToFollowFunctions, C2 = false, x3 = 0, O2 = 0, E3 = g2.length; m3 < E3; ) {
                  var M3 = g2[m3++];
                  if (M3 === 64) {
                    l2 = g2[m3++];
                    if (C2 || O2)
                      m3 += l2;
                    else
                      for (o4 = 0; o4 < l2; o4++)
                        k3.push(g2[m3++]);
                  } else if (M3 === 65) {
                    l2 = g2[m3++];
                    if (C2 || O2)
                      m3 += 2 * l2;
                    else
                      for (o4 = 0; o4 < l2; o4++) {
                        u2 = g2[m3++];
                        k3.push(u2 << 8 | g2[m3++]);
                      }
                  } else if ((248 & M3) == 176) {
                    l2 = M3 - 176 + 1;
                    if (C2 || O2)
                      m3 += l2;
                    else
                      for (o4 = 0; o4 < l2; o4++)
                        k3.push(g2[m3++]);
                  } else if ((248 & M3) == 184) {
                    l2 = M3 - 184 + 1;
                    if (C2 || O2)
                      m3 += 2 * l2;
                    else
                      for (o4 = 0; o4 < l2; o4++) {
                        u2 = g2[m3++];
                        k3.push(u2 << 8 | g2[m3++]);
                      }
                  } else if (M3 !== 43 || S2)
                    if (M3 !== 44 || S2) {
                      if (M3 === 45)
                        if (C2) {
                          C2 = false;
                          y2 = m3;
                        } else {
                          if (!(d2 = _3.pop())) {
                            (0, c.warn)("TT: ENDF bad stack");
                            r4.hintsValid = false;
                            return;
                          }
                          h3 = w2.pop();
                          g2 = d2.data;
                          m3 = d2.i;
                          r4.functionsStackDeltas[h3] = k3.length - d2.stackTop;
                        }
                      else if (M3 === 137) {
                        if (C2 || O2) {
                          (0, c.warn)("TT: nested IDEFs not allowed");
                          S2 = true;
                        }
                        C2 = true;
                        v2 = m3;
                      } else if (M3 === 88)
                        ++x3;
                      else if (M3 === 27)
                        O2 = x3;
                      else if (M3 === 89) {
                        O2 === x3 && (O2 = 0);
                        --x3;
                      } else if (M3 === 28 && !C2 && !O2) {
                        var R3 = k3[k3.length - 1];
                        R3 > 0 && (m3 += R3 - 1);
                      }
                    } else {
                      if (C2 || O2) {
                        (0, c.warn)("TT: nested FDEFs not allowed");
                        S2 = true;
                      }
                      C2 = true;
                      v2 = m3;
                      h3 = k3.pop();
                      r4.functionsDefined[h3] = { data: g2, i: m3 };
                    }
                  else if (!C2 && !O2) {
                    h3 = k3[k3.length - 1];
                    if (isNaN(h3))
                      (0, c.info)("TT: CALL empty stack (or invalid entry).");
                    else {
                      r4.functionsUsed[h3] = true;
                      if (h3 in r4.functionsStackDeltas) {
                        var D3 = k3.length + r4.functionsStackDeltas[h3];
                        if (D3 < 0) {
                          (0, c.warn)("TT: CALL invalid functions stack delta.");
                          r4.hintsValid = false;
                          return;
                        }
                        k3.length = D3;
                      } else if (h3 in r4.functionsDefined && !w2.includes(h3)) {
                        _3.push({ data: g2, i: m3, stackTop: k3.length - 1 });
                        w2.push(h3);
                        if (!(d2 = r4.functionsDefined[h3])) {
                          (0, c.warn)("TT: CALL non-existent function");
                          r4.hintsValid = false;
                          return;
                        }
                        g2 = d2.data;
                        m3 = d2.i;
                      }
                    }
                  }
                  if (!C2 && !O2) {
                    var j3 = 0;
                    M3 <= 142 ? j3 = T2[M3] : M3 >= 192 && M3 <= 223 ? j3 = -1 : M3 >= 224 && (j3 = -2);
                    if (M3 >= 113 && M3 <= 117) {
                      l2 = k3.pop();
                      isNaN(l2) || (j3 = 2 * -l2);
                    }
                    for (; j3 < 0 && k3.length > 0; ) {
                      k3.pop();
                      j3++;
                    }
                    for (; j3 > 0; ) {
                      k3.push(NaN);
                      j3--;
                    }
                  }
                }
                r4.tooComplexToFollowFunctions = S2;
                var L3 = [g2];
                m3 > g2.length && L3.push(new Uint8Array(m3 - g2.length));
                if (v2 > y2) {
                  (0, c.warn)("TT: complementing a missing function tail");
                  L3.push(new Uint8Array([34, 45]));
                }
                !function foldTTTable(t5, r5) {
                  if (r5.length > 1) {
                    var o5, c2, l3 = 0;
                    for (o5 = 0, c2 = r5.length; o5 < c2; o5++)
                      l3 += r5[o5].length;
                    l3 = l3 + 3 & -4;
                    var u3 = new Uint8Array(l3), h4 = 0;
                    for (o5 = 0, c2 = r5.length; o5 < c2; o5++) {
                      u3.set(r5[o5], h4);
                      h4 += r5[o5].length;
                    }
                    t5.data = u3;
                    t5.length = l3;
                  }
                }(t4, L3);
              }
              if (isTrueTypeCollectionFile(r3 = new O.Stream(new Uint8Array(r3.getBytes())))) {
                var E2 = function readTrueTypeCollectionData(t4, r4) {
                  for (var o4, l2 = function readTrueTypeCollectionHeader(t5) {
                    var r5 = t5.getString(4);
                    (0, c.assert)(r5 === "ttcf", "Must be a TrueType Collection font.");
                    for (var o5 = t5.getUint16(), l3 = t5.getUint16(), u3 = t5.getInt32() >>> 0, h4 = [], d3 = 0; d3 < u3; d3++)
                      h4.push(t5.getInt32() >>> 0);
                    var g3 = { ttcTag: r5, majorVersion: o5, minorVersion: l3, numFonts: u3, offsetTable: h4 };
                    switch (o5) {
                      case 1:
                        return g3;
                      case 2:
                        g3.dsigTag = t5.getInt32() >>> 0;
                        g3.dsigLength = t5.getInt32() >>> 0;
                        g3.dsigOffset = t5.getInt32() >>> 0;
                        return g3;
                    }
                    throw new c.FormatError("Invalid TrueType Collection majorVersion: ".concat(o5, "."));
                  }(t4), u2 = l2.numFonts, h3 = l2.offsetTable, d2 = r4.split("+"), g2 = 0; g2 < u2; g2++) {
                    t4.pos = (t4.start || 0) + h3[g2];
                    var m3 = readOpenTypeHeader(t4), y2 = readTables(t4, m3.numTables);
                    if (!y2.name)
                      throw new c.FormatError('TrueType Collection font must contain a "name" table.');
                    for (var v2 = readNameTable(y2.name), k3 = 0, _3 = v2.length; k3 < _3; k3++)
                      for (var w2 = 0, S2 = v2[k3].length; w2 < S2; w2++) {
                        var C2 = v2[k3][w2] && v2[k3][w2].replace(/\s/g, "");
                        if (C2) {
                          if (C2 === r4)
                            return { header: m3, tables: y2 };
                          if (!(d2.length < 2)) {
                            var x3, O2 = _createForOfIteratorHelper(d2);
                            try {
                              for (O2.s(); !(x3 = O2.n()).done; ) {
                                var T3 = x3.value;
                                C2 === T3 && (o4 = { name: T3, header: m3, tables: y2 });
                              }
                            } catch (t5) {
                              O2.e(t5);
                            } finally {
                              O2.f();
                            }
                          }
                        }
                      }
                  }
                  if (o4) {
                    (0, c.warn)('TrueType Collection does not contain "'.concat(r4, '" font, ') + 'falling back to "'.concat(o4.name, '" font instead.'));
                    return { header: o4.header, tables: o4.tables };
                  }
                  throw new c.FormatError('TrueType Collection does not contain "'.concat(r4, '" font.'));
                }(r3, this.name);
                m2 = E2.header;
                k2 = E2.tables;
              } else {
                m2 = readOpenTypeHeader(r3);
                k2 = readTables(r3, m2.numTables);
              }
              var M2 = !k2["CFF "];
              if (M2) {
                if (!k2.loca)
                  throw new c.FormatError('Required "loca" table is not found');
                if (!k2.glyf) {
                  (0, c.warn)('Required "glyf" table is not found -- trying to recover.');
                  k2.glyf = { tag: "glyf", data: new Uint8Array(0) };
                }
                this.isOpenType = false;
              } else {
                var R2 = o3.composite && ((o3.cidToGidMap || []).length > 0 || !(o3.cMap instanceof S.IdentityCMap));
                if (m2.version === "OTTO" && !R2 || !k2.head || !k2.hhea || !k2.maxp || !k2.post) {
                  x2 = new O.Stream(k2["CFF "].data);
                  _2 = new v.CFFFont(x2, o3);
                  adjustWidths(o3);
                  return this.convert(t3, _2, o3);
                }
                delete k2.glyf;
                delete k2.loca;
                delete k2.fpgm;
                delete k2.prep;
                delete k2["cvt "];
                this.isOpenType = true;
              }
              if (!k2.maxp)
                throw new c.FormatError('Required "maxp" table is not found');
              r3.pos = (r3.start || 0) + k2.maxp.offset;
              var D2 = r3.getInt32(), j2 = r3.getUint16();
              if (o3.scaleFactors && o3.scaleFactors.length === j2 && M2) {
                var L2 = o3.scaleFactors, N2 = int16(k2.head.data[50], k2.head.data[51]), U = new w.GlyfTable({ glyfTable: k2.glyf.data, isGlyphLocationsLong: N2, locaTable: k2.loca.data, numGlyphs: j2 });
                U.scale(L2);
                var H = U.write(), $ = H.glyf, X = H.loca, q = H.isLocationLong;
                k2.glyf.data = $;
                k2.loca.data = X;
                if (q !== !!N2) {
                  k2.head.data[50] = 0;
                  k2.head.data[51] = q ? 1 : 0;
                }
                for (var G = k2.hmtx.data, z = 0; z < j2; z++) {
                  var W = 4 * z, V = Math.round(L2[z] * int16(G[W], G[W + 1]));
                  G[W] = V >> 8 & 255;
                  G[W + 1] = 255 & V;
                  writeSignedInt16(G, W + 2, Math.round(L2[z] * signedInt16(G[W + 2], G[W + 3])));
                }
              }
              var K = j2 + 1, Y = true;
              if (K > 65535) {
                Y = false;
                K = j2;
                (0, c.warn)("Not enough space in glyfs to duplicate first glyph.");
              }
              var J = 0, Z = 0;
              if (D2 >= 65536 && k2.maxp.length >= 22) {
                r3.pos += 8;
                if (r3.getUint16() > 2) {
                  k2.maxp.data[14] = 0;
                  k2.maxp.data[15] = 2;
                }
                r3.pos += 4;
                J = r3.getUint16();
                r3.pos += 4;
                Z = r3.getUint16();
              }
              k2.maxp.data[4] = K >> 8;
              k2.maxp.data[5] = 255 & K;
              var Q = function sanitizeTTPrograms(t4, r4, o4, l2) {
                var u2 = { functionsDefined: [], functionsUsed: [], functionsStackDeltas: [], tooComplexToFollowFunctions: false, hintsValid: true };
                t4 && sanitizeTTProgram(t4, u2);
                r4 && sanitizeTTProgram(r4, u2);
                t4 && function checkInvalidFunctions(t5, r5) {
                  if (!t5.tooComplexToFollowFunctions)
                    if (t5.functionsDefined.length > r5) {
                      (0, c.warn)("TT: more functions defined than expected");
                      t5.hintsValid = false;
                    } else
                      for (var o5 = 0, l3 = t5.functionsUsed.length; o5 < l3; o5++) {
                        if (o5 > r5) {
                          (0, c.warn)("TT: invalid function id: " + o5);
                          t5.hintsValid = false;
                          return;
                        }
                        if (t5.functionsUsed[o5] && !t5.functionsDefined[o5]) {
                          (0, c.warn)("TT: undefined function: " + o5);
                          t5.hintsValid = false;
                          return;
                        }
                      }
                }(u2, l2);
                if (o4 && 1 & o4.length) {
                  var h3 = new Uint8Array(o4.length + 1);
                  h3.set(o4.data);
                  o4.data = h3;
                }
                return u2.hintsValid;
              }(k2.fpgm, k2.prep, k2["cvt "], J);
              if (!Q) {
                delete k2.fpgm;
                delete k2.prep;
                delete k2["cvt "];
              }
              !function sanitizeMetrics(t4, r4, o4, l2, u2, h3) {
                if (r4) {
                  t4.pos = (t4.start ? t4.start : 0) + r4.offset;
                  t4.pos += 4;
                  t4.pos += 2;
                  t4.pos += 2;
                  t4.pos += 2;
                  t4.pos += 2;
                  t4.pos += 2;
                  t4.pos += 2;
                  t4.pos += 2;
                  t4.pos += 2;
                  t4.pos += 2;
                  var d2 = t4.getUint16();
                  t4.pos += 8;
                  t4.pos += 2;
                  var g2 = t4.getUint16();
                  if (d2 !== 0) {
                    if (!(2 & int16(l2.data[44], l2.data[45]))) {
                      r4.data[22] = 0;
                      r4.data[23] = 0;
                    }
                  }
                  if (g2 > u2) {
                    (0, c.info)("The numOfMetrics (".concat(g2, ") should not be ") + "greater than the numGlyphs (".concat(u2, ")."));
                    g2 = u2;
                    r4.data[34] = (65280 & g2) >> 8;
                    r4.data[35] = 255 & g2;
                  }
                  var m3 = u2 - g2 - (o4.length - 4 * g2 >> 1);
                  if (m3 > 0) {
                    var y2 = new Uint8Array(o4.length + 2 * m3);
                    y2.set(o4.data);
                    if (h3) {
                      y2[o4.length] = o4.data[2];
                      y2[o4.length + 1] = o4.data[3];
                    }
                    o4.data = y2;
                  }
                } else
                  o4 && (o4.data = null);
              }(r3, k2.hhea, k2.hmtx, k2.head, K, Y);
              if (!k2.head)
                throw new c.FormatError('Required "head" table is not found');
              !function sanitizeHead(t4, r4, o4) {
                var l2 = t4.data, u2 = function int32(t5, r5, o5, c2) {
                  return (t5 << 24) + (r5 << 16) + (o5 << 8) + c2;
                }(l2[0], l2[1], l2[2], l2[3]);
                if (u2 >> 16 != 1) {
                  (0, c.info)("Attempting to fix invalid version in head table: " + u2);
                  l2[0] = 0;
                  l2[1] = 1;
                  l2[2] = 0;
                  l2[3] = 0;
                }
                var h3 = int16(l2[50], l2[51]);
                if (h3 < 0 || h3 > 1) {
                  (0, c.info)("Attempting to fix invalid indexToLocFormat in head table: " + h3);
                  var d2 = r4 + 1;
                  if (o4 === d2 << 1) {
                    l2[50] = 0;
                    l2[51] = 0;
                  } else {
                    if (o4 !== d2 << 2)
                      throw new c.FormatError("Could not fix indexToLocFormat: " + h3);
                    l2[50] = 0;
                    l2[51] = 1;
                  }
                }
              }(k2.head, j2, M2 ? k2.loca.length : 0);
              var ee = /* @__PURE__ */ Object.create(null);
              if (M2) {
                var te = int16(k2.head.data[50], k2.head.data[51]), re = function sanitizeGlyphLocations(t4, r4, o4, c2, l2, u2, h3) {
                  var d2, g2, m3;
                  if (c2) {
                    d2 = 4;
                    g2 = function fontItemDecodeLong(t5, r5) {
                      return t5[r5] << 24 | t5[r5 + 1] << 16 | t5[r5 + 2] << 8 | t5[r5 + 3];
                    };
                    m3 = function fontItemEncodeLong(t5, r5, o5) {
                      t5[r5] = o5 >>> 24 & 255;
                      t5[r5 + 1] = o5 >> 16 & 255;
                      t5[r5 + 2] = o5 >> 8 & 255;
                      t5[r5 + 3] = 255 & o5;
                    };
                  } else {
                    d2 = 2;
                    g2 = function fontItemDecode(t5, r5) {
                      return t5[r5] << 9 | t5[r5 + 1] << 1;
                    };
                    m3 = function fontItemEncode(t5, r5, o5) {
                      t5[r5] = o5 >> 9 & 255;
                      t5[r5 + 1] = o5 >> 1 & 255;
                    };
                  }
                  var y2 = u2 ? o4 + 1 : o4, v2 = d2 * (1 + y2), k3 = new Uint8Array(v2);
                  k3.set(t4.data.subarray(0, v2));
                  t4.data = k3;
                  var _3, w2, S2 = r4.data, C2 = S2.length, x3 = new Uint8Array(C2), O2 = [];
                  for (_3 = 0, w2 = 0; _3 < o4 + 1; _3++, w2 += d2) {
                    var T3 = g2(k3, w2);
                    T3 > C2 && (T3 = C2);
                    O2.push({ index: _3, offset: T3, endOffset: 0 });
                  }
                  O2.sort(function(t5, r5) {
                    return t5.offset - r5.offset;
                  });
                  for (_3 = 0; _3 < o4; _3++)
                    O2[_3].endOffset = O2[_3 + 1].offset;
                  O2.sort(function(t5, r5) {
                    return t5.index - r5.index;
                  });
                  for (_3 = 0; _3 < o4; _3++) {
                    var E3 = O2[_3], M3 = E3.offset, R3 = E3.endOffset;
                    if (M3 !== 0 || R3 !== 0)
                      break;
                    var D3 = O2[_3 + 1].offset;
                    if (D3 !== 0) {
                      O2[_3].endOffset = D3;
                      break;
                    }
                  }
                  var j3 = /* @__PURE__ */ Object.create(null), L3 = 0;
                  m3(k3, 0, L3);
                  for (_3 = 0, w2 = d2; _3 < o4; _3++, w2 += d2) {
                    var N3 = sanitizeGlyph(S2, O2[_3].offset, O2[_3].endOffset, x3, L3, l2), U2 = N3.length;
                    U2 === 0 && (j3[_3] = true);
                    N3.sizeOfInstructions > h3 && (h3 = N3.sizeOfInstructions);
                    m3(k3, w2, L3 += U2);
                  }
                  if (L3 === 0) {
                    var H2 = new Uint8Array([0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 49, 0]);
                    for (_3 = 0, w2 = d2; _3 < y2; _3++, w2 += d2)
                      m3(k3, w2, H2.length);
                    r4.data = H2;
                  } else if (u2) {
                    var $2 = g2(k3, d2);
                    if (x3.length > $2 + L3)
                      r4.data = x3.subarray(0, $2 + L3);
                    else {
                      r4.data = new Uint8Array($2 + L3);
                      r4.data.set(x3.subarray(0, L3));
                    }
                    r4.data.set(x3.subarray(0, $2), L3);
                    m3(t4.data, k3.length - d2, L3 + $2);
                  } else
                    r4.data = x3.subarray(0, L3);
                  return { missingGlyphs: j3, maxSizeOfInstructions: h3 };
                }(k2.loca, k2.glyf, j2, te, Q, Y, Z);
                ee = re.missingGlyphs;
                if (D2 >= 65536 && k2.maxp.length >= 22) {
                  k2.maxp.data[26] = re.maxSizeOfInstructions >> 8;
                  k2.maxp.data[27] = 255 & re.maxSizeOfInstructions;
                }
              }
              if (!k2.hhea)
                throw new c.FormatError('Required "hhea" table is not found');
              if (k2.hhea.data[10] === 0 && k2.hhea.data[11] === 0) {
                k2.hhea.data[10] = 255;
                k2.hhea.data[11] = 255;
              }
              var ae = { unitsPerEm: int16(k2.head.data[18], k2.head.data[19]), yMax: int16(k2.head.data[42], k2.head.data[43]), yMin: signedInt16(k2.head.data[38], k2.head.data[39]), ascent: signedInt16(k2.hhea.data[4], k2.hhea.data[5]), descent: signedInt16(k2.hhea.data[6], k2.hhea.data[7]), lineGap: signedInt16(k2.hhea.data[8], k2.hhea.data[9]) };
              this.ascent = ae.ascent / ae.unitsPerEm;
              this.descent = ae.descent / ae.unitsPerEm;
              this.lineGap = ae.lineGap / ae.unitsPerEm;
              if (this.cssFontInfo && this.cssFontInfo.lineHeight) {
                this.lineHeight = this.cssFontInfo.metrics.lineHeight;
                this.lineGap = this.cssFontInfo.metrics.lineGap;
              } else
                this.lineHeight = this.ascent - this.descent + this.lineGap;
              k2.post && function readPostScriptTable(t4, o4, l2) {
                var h3 = (r3.start ? r3.start : 0) + t4.offset;
                r3.pos = h3;
                var d2, g2 = h3 + t4.length, m3 = r3.getInt32();
                r3.skip(28);
                var y2, v2 = true;
                switch (m3) {
                  case 65536:
                    d2 = u.MacStandardGlyphOrdering;
                    break;
                  case 131072:
                    var k3 = r3.getUint16();
                    if (k3 !== l2) {
                      v2 = false;
                      break;
                    }
                    var _3 = [];
                    for (y2 = 0; y2 < k3; ++y2) {
                      var w2 = r3.getUint16();
                      if (w2 >= 32768) {
                        v2 = false;
                        break;
                      }
                      _3.push(w2);
                    }
                    if (!v2)
                      break;
                    for (var S2 = [], C2 = []; r3.pos < g2; ) {
                      var x3 = r3.getByte();
                      C2.length = x3;
                      for (y2 = 0; y2 < x3; ++y2)
                        C2[y2] = String.fromCharCode(r3.getByte());
                      S2.push(C2.join(""));
                    }
                    d2 = [];
                    for (y2 = 0; y2 < k3; ++y2) {
                      var O2 = _3[y2];
                      O2 < 258 ? d2.push(u.MacStandardGlyphOrdering[O2]) : d2.push(S2[O2 - 258]);
                    }
                    break;
                  case 196608:
                    break;
                  default:
                    (0, c.warn)("Unknown/unsupported post table version " + m3);
                    v2 = false;
                    o4.defaultEncoding && (d2 = o4.defaultEncoding);
                }
                o4.glyphNames = d2;
                return v2;
              }(k2.post, o3, j2);
              k2.post = { tag: "post", data: createPostTable(o3) };
              var ne = [];
              function hasGlyph(t4) {
                return !ee[t4];
              }
              if (o3.composite) {
                var ie = o3.cidToGidMap || [], oe = ie.length === 0;
                o3.cMap.forEach(function(t4, r4) {
                  typeof r4 == "string" && (r4 = convertCidString(t4, r4, true));
                  if (r4 > 65535)
                    throw new c.FormatError("Max size of CID is 65,535");
                  var o4 = -1;
                  oe ? o4 = r4 : ie[r4] !== void 0 && (o4 = ie[r4]);
                  o4 >= 0 && o4 < j2 && hasGlyph(o4) && (ne[t4] = o4);
                });
              } else {
                var se = function readCmapTable(t4, r4, o4, l2) {
                  if (!t4) {
                    (0, c.warn)("No cmap table available.");
                    return { platformId: -1, encodingId: -1, mappings: [], hasShortCmap: false };
                  }
                  var u2, h3 = (r4.start ? r4.start : 0) + t4.offset;
                  r4.pos = h3;
                  r4.skip(2);
                  for (var d2, g2 = r4.getUint16(), m3 = false, y2 = 0; y2 < g2; y2++) {
                    var v2 = r4.getUint16(), k3 = r4.getUint16(), _3 = r4.getInt32() >>> 0, w2 = false;
                    if (!d2 || d2.platformId !== v2 || d2.encodingId !== k3) {
                      if (v2 !== 0 || k3 !== 0 && k3 !== 1 && k3 !== 3)
                        if (v2 === 1 && k3 === 0)
                          w2 = true;
                        else if (v2 !== 3 || k3 !== 1 || !l2 && d2) {
                          if (o4 && v2 === 3 && k3 === 0) {
                            w2 = true;
                            var S2 = true;
                            if (y2 < g2 - 1) {
                              var C2 = r4.peekBytes(2);
                              int16(C2[0], C2[1]) < v2 && (S2 = false);
                            }
                            S2 && (m3 = true);
                          }
                        } else {
                          w2 = true;
                          o4 || (m3 = true);
                        }
                      else
                        w2 = true;
                      w2 && (d2 = { platformId: v2, encodingId: k3, offset: _3 });
                      if (m3)
                        break;
                    }
                  }
                  d2 && (r4.pos = h3 + d2.offset);
                  if (!d2 || r4.peekByte() === -1) {
                    (0, c.warn)("Could not find a preferred cmap table.");
                    return { platformId: -1, encodingId: -1, mappings: [], hasShortCmap: false };
                  }
                  var x3, O2, T3 = r4.getUint16(), E3 = false, M3 = [];
                  if (T3 === 0) {
                    r4.skip(4);
                    for (x3 = 0; x3 < 256; x3++) {
                      var R3 = r4.getByte();
                      R3 && M3.push({ charCode: x3, glyphId: R3 });
                    }
                    E3 = true;
                  } else if (T3 === 2) {
                    r4.skip(4);
                    for (var D3 = [], j3 = 0, L3 = 0; L3 < 256; L3++) {
                      var N3 = r4.getUint16() >> 3;
                      D3.push(N3);
                      j3 = Math.max(N3, j3);
                    }
                    for (var U2 = [], H2 = 0; H2 <= j3; H2++)
                      U2.push({ firstCode: r4.getUint16(), entryCount: r4.getUint16(), idDelta: signedInt16(r4.getByte(), r4.getByte()), idRangePos: r4.pos + r4.getUint16() });
                    for (var $2 = 0; $2 < 256; $2++)
                      if (D3[$2] === 0) {
                        r4.pos = U2[0].idRangePos + 2 * $2;
                        O2 = r4.getUint16();
                        M3.push({ charCode: $2, glyphId: O2 });
                      } else {
                        var X2 = U2[D3[$2]];
                        for (x3 = 0; x3 < X2.entryCount; x3++) {
                          var q2 = ($2 << 8) + x3 + X2.firstCode;
                          r4.pos = X2.idRangePos + 2 * x3;
                          (O2 = r4.getUint16()) !== 0 && (O2 = (O2 + X2.idDelta) % 65536);
                          M3.push({ charCode: q2, glyphId: O2 });
                        }
                      }
                  } else if (T3 === 4) {
                    r4.skip(4);
                    var G2 = r4.getUint16() >> 1;
                    r4.skip(6);
                    var z2, W2 = [];
                    for (z2 = 0; z2 < G2; z2++)
                      W2.push({ end: r4.getUint16() });
                    r4.skip(2);
                    for (z2 = 0; z2 < G2; z2++)
                      W2[z2].start = r4.getUint16();
                    for (z2 = 0; z2 < G2; z2++)
                      W2[z2].delta = r4.getUint16();
                    var V2, K2 = 0;
                    for (z2 = 0; z2 < G2; z2++) {
                      u2 = W2[z2];
                      var Y2 = r4.getUint16();
                      if (Y2) {
                        V2 = (Y2 >> 1) - (G2 - z2);
                        u2.offsetIndex = V2;
                        K2 = Math.max(K2, V2 + u2.end - u2.start + 1);
                      } else
                        u2.offsetIndex = -1;
                    }
                    var J2 = [];
                    for (x3 = 0; x3 < K2; x3++)
                      J2.push(r4.getUint16());
                    for (z2 = 0; z2 < G2; z2++) {
                      h3 = (u2 = W2[z2]).start;
                      var Z2 = u2.end, Q2 = u2.delta;
                      V2 = u2.offsetIndex;
                      for (x3 = h3; x3 <= Z2; x3++)
                        if (x3 !== 65535) {
                          O2 = (O2 = V2 < 0 ? x3 : J2[V2 + x3 - h3]) + Q2 & 65535;
                          M3.push({ charCode: x3, glyphId: O2 });
                        }
                    }
                  } else if (T3 === 6) {
                    r4.skip(4);
                    var ee2 = r4.getUint16(), te2 = r4.getUint16();
                    for (x3 = 0; x3 < te2; x3++) {
                      O2 = r4.getUint16();
                      var re2 = ee2 + x3;
                      M3.push({ charCode: re2, glyphId: O2 });
                    }
                  } else {
                    if (T3 !== 12) {
                      (0, c.warn)("cmap table has unsupported format: " + T3);
                      return { platformId: -1, encodingId: -1, mappings: [], hasShortCmap: false };
                    }
                    r4.skip(10);
                    var ae2 = r4.getInt32() >>> 0;
                    for (x3 = 0; x3 < ae2; x3++)
                      for (var ne2 = r4.getInt32() >>> 0, ie2 = r4.getInt32() >>> 0, oe2 = r4.getInt32() >>> 0, se2 = ne2; se2 <= ie2; se2++)
                        M3.push({ charCode: se2, glyphId: oe2++ });
                  }
                  M3.sort(function(t5, r5) {
                    return t5.charCode - r5.charCode;
                  });
                  for (var ce2 = 1; ce2 < M3.length; ce2++)
                    if (M3[ce2 - 1].charCode === M3[ce2].charCode) {
                      M3.splice(ce2, 1);
                      ce2--;
                    }
                  return { platformId: d2.platformId, encodingId: d2.encodingId, mappings: M3, hasShortCmap: E3 };
                }(k2.cmap, r3, this.isSymbolicFont, o3.hasEncoding), ce = se.platformId, le = se.encodingId, ue = se.mappings, fe = ue.length, he = [], de = false;
                !o3.hasEncoding || o3.baseEncodingName !== "MacRomanEncoding" && o3.baseEncodingName !== "WinAnsiEncoding" || (he = (0, g.getEncoding)(o3.baseEncodingName));
                if (o3.hasEncoding && !this.isSymbolicFont && (ce === 3 && le === 1 || ce === 1 && le === 0))
                  for (var pe = (0, d.getGlyphsUnicode)(), ge = 0; ge < 256; ge++) {
                    var me = void 0;
                    if (me = this.differences[ge] !== void 0 ? this.differences[ge] : he.length && he[ge] !== "" ? he[ge] : g.StandardEncoding[ge]) {
                      var ye = (0, u.recoverGlyphName)(me, pe), ve = void 0;
                      ce === 3 && le === 1 ? ve = pe[ye] : ce === 1 && le === 0 && (ve = g.MacRomanEncoding.indexOf(ye));
                      if (ve === void 0) {
                        if (!o3.glyphNames && o3.hasIncludedToUnicodeMap && !(this.toUnicode instanceof y.IdentityToUnicodeMap)) {
                          var be = this.toUnicode.get(ge);
                          be && (ve = be.codePointAt(0));
                        }
                        if (ve === void 0)
                          continue;
                      }
                      for (var ke = 0; ke < fe; ++ke)
                        if (ue[ke].charCode === ve) {
                          ne[ge] = ue[ke].glyphId;
                          break;
                        }
                    }
                  }
                else if (ce === 0) {
                  for (var _e = 0; _e < fe; ++_e)
                    ne[ue[_e].charCode] = ue[_e].glyphId;
                  de = true;
                } else
                  for (var we = 0; we < fe; ++we) {
                    var Se = ue[we].charCode;
                    ce === 3 && Se >= 61440 && Se <= 61695 && (Se &= 255);
                    ne[Se] = ue[we].glyphId;
                  }
                if (o3.glyphNames && (he.length || this.differences.length)) {
                  for (var Ce = 0; Ce < 256; ++Ce)
                    if (de || ne[Ce] === void 0) {
                      var xe = this.differences[Ce] || he[Ce];
                      if (xe) {
                        var Oe = o3.glyphNames.indexOf(xe);
                        Oe > 0 && hasGlyph(Oe) && (ne[Ce] = Oe);
                      }
                    }
                }
              }
              ne.length === 0 && (ne[0] = 0);
              var Ae = K - 1;
              Y || (Ae = 0);
              if (!o3.cssFontInfo) {
                var Pe = adjustMapping(ne, hasGlyph, Ae);
                this.toFontChar = Pe.toFontChar;
                k2.cmap = { tag: "cmap", data: createCmapTable(Pe.charCodeToGlyphId, K) };
                k2["OS/2"] && function validateOS2Table(t4, r4) {
                  r4.pos = (r4.start || 0) + t4.offset;
                  var o4 = r4.getUint16();
                  r4.skip(60);
                  var c2 = r4.getUint16();
                  if (o4 < 4 && 768 & c2)
                    return false;
                  if (r4.getUint16() > r4.getUint16())
                    return false;
                  r4.skip(6);
                  if (r4.getUint16() === 0)
                    return false;
                  t4.data[8] = t4.data[9] = 0;
                  return true;
                }(k2["OS/2"], r3) || (k2["OS/2"] = { tag: "OS/2", data: createOS2Table(o3, Pe.charCodeToGlyphId, ae) });
              }
              if (!M2)
                try {
                  x2 = new O.Stream(k2["CFF "].data);
                  (_2 = new l.CFFParser(x2, o3, u.SEAC_ANALYSIS_ENABLED).parse()).duplicateFirstGlyph();
                  var Te = new l.CFFCompiler(_2);
                  k2["CFF "].data = Te.compile();
                } catch (t4) {
                  (0, c.warn)("Failed to compile font " + o3.loadedName);
                }
              if (k2.name) {
                var Fe = readNameTable(k2.name);
                k2.name.data = createNameTable(t3, Fe);
                this.psName = Fe[0][6] || null;
              } else
                k2.name = { tag: "name", data: createNameTable(this.name) };
              var Ie = new C.OpenTypeFileBuilder(m2.version);
              for (var Ee in k2)
                Ie.addTable(Ee, k2[Ee].data);
              return Ie.toArray();
            } }, { key: "convert", value: function convert(t3, r3, o3) {
              o3.fixedPitch = false;
              o3.builtInEncoding && function adjustToUnicode(t4, r4) {
                if (!(t4.isInternalFont || r4 === t4.defaultEncoding || t4.toUnicode instanceof y.IdentityToUnicodeMap)) {
                  var o4 = [], c2 = (0, d.getGlyphsUnicode)();
                  for (var l3 in r4) {
                    if (t4.hasIncludedToUnicodeMap) {
                      if (t4.toUnicode.has(l3))
                        continue;
                    } else if (t4.hasEncoding && (t4.differences.length === 0 || t4.differences[l3] !== void 0))
                      continue;
                    var u2 = r4[l3], g2 = (0, h.getUnicodeForGlyph)(u2, c2);
                    g2 !== -1 && (o4[l3] = String.fromCharCode(g2));
                  }
                  o4.length > 0 && t4.toUnicode.amend(o4);
                }
              }(o3, o3.builtInEncoding);
              var l2 = 1;
              r3 instanceof v.CFFFont && (l2 = r3.numGlyphs - 1);
              var m2 = r3.getGlyphMapping(o3), k2 = null, _2 = m2;
              if (!o3.cssFontInfo) {
                k2 = adjustMapping(m2, r3.hasGlyphId.bind(r3), l2);
                this.toFontChar = k2.toFontChar;
                _2 = k2.charCodeToGlyphId;
              }
              var w2 = r3.numGlyphs;
              function getCharCodes(t4, r4) {
                var o4 = null;
                for (var c2 in t4)
                  if (r4 === t4[c2]) {
                    o4 || (o4 = []);
                    o4.push(0 | c2);
                  }
                return o4;
              }
              function createCharCode(t4, r4) {
                for (var o4 in t4)
                  if (r4 === t4[o4])
                    return 0 | o4;
                k2.charCodeToGlyphId[k2.nextAvailableFontCharCode] = r4;
                return k2.nextAvailableFontCharCode++;
              }
              var S2 = r3.seacs;
              if (k2 && u.SEAC_ANALYSIS_ENABLED && S2 && S2.length) {
                var x2 = o3.fontMatrix || c.FONT_IDENTITY_MATRIX, O2 = r3.getCharset(), T2 = /* @__PURE__ */ Object.create(null);
                for (var E2 in S2) {
                  var M2 = S2[E2 |= 0], R2 = g.StandardEncoding[M2[2]], D2 = g.StandardEncoding[M2[3]], j2 = O2.indexOf(R2), L2 = O2.indexOf(D2);
                  if (!(j2 < 0 || L2 < 0)) {
                    var N2 = { x: M2[0] * x2[0] + M2[1] * x2[2] + x2[4], y: M2[0] * x2[1] + M2[1] * x2[3] + x2[5] }, U = getCharCodes(m2, E2);
                    if (U)
                      for (var H = 0, $ = U.length; H < $; H++) {
                        var X = U[H], q = k2.charCodeToGlyphId, G = createCharCode(q, j2), z = createCharCode(q, L2);
                        T2[X] = { baseFontCharCode: G, accentFontCharCode: z, accentOffset: N2 };
                      }
                  }
                }
                o3.seacMap = T2;
              }
              var W = 1 / (o3.fontMatrix || c.FONT_IDENTITY_MATRIX)[0], V = new C.OpenTypeFileBuilder("OTTO");
              V.addTable("CFF ", r3.data);
              V.addTable("OS/2", createOS2Table(o3, _2));
              V.addTable("cmap", createCmapTable(_2, w2));
              V.addTable("head", "\0\0\0\0\0\0\0\0\0\0_<\xF5\0\0" + safeString16(W) + "\0\0\0\0\x9E\v~'\0\0\0\0\x9E\v~'\0\0" + safeString16(o3.descent) + "\xFF" + safeString16(o3.ascent) + string16(o3.italicAngle ? 2 : 0) + "\0\0\0\0\0\0\0");
              V.addTable("hhea", "\0\0\0" + safeString16(o3.ascent) + safeString16(o3.descent) + "\0\0\xFF\xFF\0\0\0\0\0\0" + safeString16(o3.capHeight) + safeString16(Math.tan(o3.italicAngle) * o3.xHeight) + "\0\0\0\0\0\0\0\0\0\0\0\0" + string16(w2));
              V.addTable("hmtx", function fontFieldsHmtx() {
                for (var t4 = r3.charstrings, o4 = r3.cff ? r3.cff.widths : null, c2 = "\0\0\0\0", l3 = 1, u2 = w2; l3 < u2; l3++) {
                  var h2 = 0;
                  if (t4) {
                    var d2 = t4[l3 - 1];
                    h2 = "width" in d2 ? d2.width : 0;
                  } else
                    o4 && (h2 = Math.ceil(o4[l3] || 0));
                  c2 += string16(h2) + string16(0);
                }
                return c2;
              }());
              V.addTable("maxp", "\0\0P\0" + string16(w2));
              V.addTable("name", createNameTable(t3));
              V.addTable("post", createPostTable(o3));
              return V.toArray();
            } }, { key: "spaceWidth", get: function get() {
              for (var t3, r3 = ["space", "minus", "one", "i", "I"], o3 = 0, l2 = r3.length; o3 < l2; o3++) {
                var u2 = r3[o3];
                if (u2 in this.widths) {
                  t3 = this.widths[u2];
                  break;
                }
                var h2 = (0, d.getGlyphsUnicode)()[u2], g2 = 0;
                this.composite && this.cMap.contains(h2) && typeof (g2 = this.cMap.lookup(h2)) == "string" && (g2 = convertCidString(h2, g2));
                !g2 && this.toUnicode && (g2 = this.toUnicode.charCodeOf(h2));
                g2 <= 0 && (g2 = h2);
                if (t3 = this.widths[g2])
                  break;
              }
              t3 = t3 || this.defaultWidth;
              return (0, c.shadow)(this, "spaceWidth", t3);
            } }, { key: "_charToGlyph", value: function _charToGlyph(t3) {
              var r3, o3, l2, u2 = arguments.length > 1 && arguments[1] !== void 0 && arguments[1], d2 = t3;
              this.cMap && this.cMap.contains(t3) && typeof (d2 = this.cMap.lookup(t3)) == "string" && (d2 = convertCidString(t3, d2));
              typeof (o3 = this.widths[d2]) != "number" && (o3 = this.defaultWidth);
              var g2 = this.vmetrics && this.vmetrics[d2], m2 = this.toUnicode.get(t3) || t3;
              typeof m2 == "number" && (m2 = String.fromCharCode(m2));
              var y2 = this.toFontChar[t3] !== void 0;
              r3 = this.toFontChar[t3] || t3;
              if (this.missingFile) {
                var v2 = this.differences[t3] || this.defaultEncoding[t3];
                v2 !== ".notdef" && v2 !== "" || this.type !== "Type1" || (r3 = 32);
                r3 = (0, h.mapSpecialUnicodeValues)(r3);
              }
              this.isType3Font && (l2 = r3);
              var k2 = null;
              if (this.seacMap && this.seacMap[t3]) {
                y2 = true;
                var _2 = this.seacMap[t3];
                r3 = _2.baseFontCharCode;
                k2 = { fontChar: String.fromCodePoint(_2.accentFontCharCode), offset: _2.accentOffset };
              }
              var w2 = "";
              typeof r3 == "number" && (r3 <= 1114111 ? w2 = String.fromCodePoint(r3) : (0, c.warn)("charToGlyph - invalid fontCharCode: ".concat(r3)));
              var S2 = this._glyphCache[t3];
              if (!S2 || !S2.matchesForCache(t3, w2, m2, k2, o3, g2, l2, u2, y2)) {
                S2 = new j(t3, w2, m2, k2, o3, g2, l2, u2, y2);
                this._glyphCache[t3] = S2;
              }
              return S2;
            } }, { key: "charsToGlyphs", value: function charsToGlyphs(t3) {
              var r3 = this._charsCache[t3];
              if (r3)
                return r3;
              r3 = [];
              if (this.cMap)
                for (var o3 = /* @__PURE__ */ Object.create(null), c2 = t3.length, l2 = 0; l2 < c2; ) {
                  this.cMap.readCharCode(t3, l2, o3);
                  var u2 = o3.charcode, h2 = o3.length;
                  l2 += h2;
                  var d2 = this._charToGlyph(u2, h2 === 1 && t3.charCodeAt(l2 - 1) === 32);
                  r3.push(d2);
                }
              else
                for (var g2 = 0, m2 = t3.length; g2 < m2; ++g2) {
                  var y2 = t3.charCodeAt(g2), v2 = this._charToGlyph(y2, y2 === 32);
                  r3.push(v2);
                }
              return this._charsCache[t3] = r3;
            } }, { key: "getCharPositions", value: function getCharPositions(t3) {
              var r3 = [];
              if (this.cMap)
                for (var o3 = /* @__PURE__ */ Object.create(null), c2 = 0; c2 < t3.length; ) {
                  this.cMap.readCharCode(t3, c2, o3);
                  var l2 = o3.length;
                  r3.push([c2, c2 + l2]);
                  c2 += l2;
                }
              else
                for (var u2 = 0, h2 = t3.length; u2 < h2; ++u2)
                  r3.push([u2, u2 + 1]);
              return r3;
            } }, { key: "glyphCacheValues", get: function get() {
              return Object.values(this._glyphCache);
            } }, { key: "encodeString", value: function encodeString(t3) {
              for (var r3 = this, o3 = [], c2 = [], l2 = function hasCurrentBufErrors() {
                return o3.length % 2 == 1;
              }, u2 = this.toUnicode instanceof y.IdentityToUnicodeMap ? function(t4) {
                return r3.toUnicode.charCodeOf(t4);
              } : function(t4) {
                return r3.toUnicode.charCodeOf(String.fromCodePoint(t4));
              }, h2 = 0, d2 = t3.length; h2 < d2; h2++) {
                var g2 = t3.codePointAt(h2);
                g2 > 55295 && (g2 < 57344 || g2 > 65533) && h2++;
                if (this.toUnicode) {
                  var m2 = u2(g2);
                  if (m2 !== -1) {
                    if (l2()) {
                      o3.push(c2.join(""));
                      c2.length = 0;
                    }
                    for (var v2 = (this.cMap ? this.cMap.getCharCodeLength(m2) : 1) - 1; v2 >= 0; v2--)
                      c2.push(String.fromCharCode(m2 >> 8 * v2 & 255));
                    continue;
                  }
                }
                if (!l2()) {
                  o3.push(c2.join(""));
                  c2.length = 0;
                }
                c2.push(String.fromCodePoint(g2));
              }
              o3.push(c2.join(""));
              return o3;
            } }]);
            return Font;
          }();
          r2.Font = L;
          var N = function() {
            function ErrorFont(t3) {
              _classCallCheck(this, ErrorFont);
              this.error = t3;
              this.loadedName = "g_font_error";
              this.missingFile = true;
            }
            _createClass(ErrorFont, [{ key: "charsToGlyphs", value: function charsToGlyphs() {
              return [];
            } }, { key: "encodeString", value: function encodeString(t3) {
              return [t3];
            } }, { key: "exportData", value: function exportData() {
              return { error: this.error };
            } }]);
            return ErrorFont;
          }();
          r2.ErrorFont = N;
        }, (t2, r2, o2) => {
          "use strict";
          function _typeof(t3) {
            return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t4) {
              return typeof t4;
            } : function(t4) {
              return t4 && typeof Symbol == "function" && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
            }, _typeof(t3);
          }
          Object.defineProperty(r2, "__esModule", { value: true });
          r2.CFFTopDict = r2.CFFStrings = r2.CFFStandardStrings = r2.CFFPrivateDict = r2.CFFParser = r2.CFFIndex = r2.CFFHeader = r2.CFFFDSelect = r2.CFFCompiler = r2.CFFCharset = r2.CFF = void 0;
          var c = o2(4), l = o2(199), u = o2(172);
          function _inherits(t3, r3) {
            if (typeof r3 != "function" && r3 !== null)
              throw new TypeError("Super expression must either be null or a function");
            t3.prototype = Object.create(r3 && r3.prototype, { constructor: { value: t3, writable: true, configurable: true } });
            Object.defineProperty(t3, "prototype", { writable: false });
            r3 && _setPrototypeOf(t3, r3);
          }
          function _setPrototypeOf(t3, r3) {
            _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(t4, r4) {
              t4.__proto__ = r4;
              return t4;
            };
            return _setPrototypeOf(t3, r3);
          }
          function _createSuper(t3) {
            var r3 = function _isNativeReflectConstruct() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                }));
                return true;
              } catch (t4) {
                return false;
              }
            }();
            return function _createSuperInternal() {
              var o3, c2 = _getPrototypeOf(t3);
              if (r3) {
                var l2 = _getPrototypeOf(this).constructor;
                o3 = Reflect.construct(c2, arguments, l2);
              } else
                o3 = c2.apply(this, arguments);
              return _possibleConstructorReturn(this, o3);
            };
          }
          function _possibleConstructorReturn(t3, r3) {
            if (r3 && (_typeof(r3) === "object" || typeof r3 == "function"))
              return r3;
            if (r3 !== void 0)
              throw new TypeError("Derived constructors may only return object or undefined");
            return function _assertThisInitialized(t4) {
              if (t4 === void 0)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return t4;
            }(t3);
          }
          function _getPrototypeOf(t3) {
            _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(t4) {
              return t4.__proto__ || Object.getPrototypeOf(t4);
            };
            return _getPrototypeOf(t3);
          }
          function _classCallCheck(t3, r3) {
            if (!(t3 instanceof r3))
              throw new TypeError("Cannot call a class as a function");
          }
          function _defineProperties(t3, r3) {
            for (var o3 = 0; o3 < r3.length; o3++) {
              var c2 = r3[o3];
              c2.enumerable = c2.enumerable || false;
              c2.configurable = true;
              "value" in c2 && (c2.writable = true);
              Object.defineProperty(t3, c2.key, c2);
            }
          }
          function _createClass(t3, r3, o3) {
            r3 && _defineProperties(t3.prototype, r3);
            o3 && _defineProperties(t3, o3);
            Object.defineProperty(t3, "prototype", { writable: false });
            return t3;
          }
          var h = [".notdef", "space", "exclam", "quotedbl", "numbersign", "dollar", "percent", "ampersand", "quoteright", "parenleft", "parenright", "asterisk", "plus", "comma", "hyphen", "period", "slash", "zero", "one", "two", "three", "four", "five", "six", "seven", "eight", "nine", "colon", "semicolon", "less", "equal", "greater", "question", "at", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "bracketleft", "backslash", "bracketright", "asciicircum", "underscore", "quoteleft", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "braceleft", "bar", "braceright", "asciitilde", "exclamdown", "cent", "sterling", "fraction", "yen", "florin", "section", "currency", "quotesingle", "quotedblleft", "guillemotleft", "guilsinglleft", "guilsinglright", "fi", "fl", "endash", "dagger", "daggerdbl", "periodcentered", "paragraph", "bullet", "quotesinglbase", "quotedblbase", "quotedblright", "guillemotright", "ellipsis", "perthousand", "questiondown", "grave", "acute", "circumflex", "tilde", "macron", "breve", "dotaccent", "dieresis", "ring", "cedilla", "hungarumlaut", "ogonek", "caron", "emdash", "AE", "ordfeminine", "Lslash", "Oslash", "OE", "ordmasculine", "ae", "dotlessi", "lslash", "oslash", "oe", "germandbls", "onesuperior", "logicalnot", "mu", "trademark", "Eth", "onehalf", "plusminus", "Thorn", "onequarter", "divide", "brokenbar", "degree", "thorn", "threequarters", "twosuperior", "registered", "minus", "eth", "multiply", "threesuperior", "copyright", "Aacute", "Acircumflex", "Adieresis", "Agrave", "Aring", "Atilde", "Ccedilla", "Eacute", "Ecircumflex", "Edieresis", "Egrave", "Iacute", "Icircumflex", "Idieresis", "Igrave", "Ntilde", "Oacute", "Ocircumflex", "Odieresis", "Ograve", "Otilde", "Scaron", "Uacute", "Ucircumflex", "Udieresis", "Ugrave", "Yacute", "Ydieresis", "Zcaron", "aacute", "acircumflex", "adieresis", "agrave", "aring", "atilde", "ccedilla", "eacute", "ecircumflex", "edieresis", "egrave", "iacute", "icircumflex", "idieresis", "igrave", "ntilde", "oacute", "ocircumflex", "odieresis", "ograve", "otilde", "scaron", "uacute", "ucircumflex", "udieresis", "ugrave", "yacute", "ydieresis", "zcaron", "exclamsmall", "Hungarumlautsmall", "dollaroldstyle", "dollarsuperior", "ampersandsmall", "Acutesmall", "parenleftsuperior", "parenrightsuperior", "twodotenleader", "onedotenleader", "zerooldstyle", "oneoldstyle", "twooldstyle", "threeoldstyle", "fouroldstyle", "fiveoldstyle", "sixoldstyle", "sevenoldstyle", "eightoldstyle", "nineoldstyle", "commasuperior", "threequartersemdash", "periodsuperior", "questionsmall", "asuperior", "bsuperior", "centsuperior", "dsuperior", "esuperior", "isuperior", "lsuperior", "msuperior", "nsuperior", "osuperior", "rsuperior", "ssuperior", "tsuperior", "ff", "ffi", "ffl", "parenleftinferior", "parenrightinferior", "Circumflexsmall", "hyphensuperior", "Gravesmall", "Asmall", "Bsmall", "Csmall", "Dsmall", "Esmall", "Fsmall", "Gsmall", "Hsmall", "Ismall", "Jsmall", "Ksmall", "Lsmall", "Msmall", "Nsmall", "Osmall", "Psmall", "Qsmall", "Rsmall", "Ssmall", "Tsmall", "Usmall", "Vsmall", "Wsmall", "Xsmall", "Ysmall", "Zsmall", "colonmonetary", "onefitted", "rupiah", "Tildesmall", "exclamdownsmall", "centoldstyle", "Lslashsmall", "Scaronsmall", "Zcaronsmall", "Dieresissmall", "Brevesmall", "Caronsmall", "Dotaccentsmall", "Macronsmall", "figuredash", "hypheninferior", "Ogoneksmall", "Ringsmall", "Cedillasmall", "questiondownsmall", "oneeighth", "threeeighths", "fiveeighths", "seveneighths", "onethird", "twothirds", "zerosuperior", "foursuperior", "fivesuperior", "sixsuperior", "sevensuperior", "eightsuperior", "ninesuperior", "zeroinferior", "oneinferior", "twoinferior", "threeinferior", "fourinferior", "fiveinferior", "sixinferior", "seveninferior", "eightinferior", "nineinferior", "centinferior", "dollarinferior", "periodinferior", "commainferior", "Agravesmall", "Aacutesmall", "Acircumflexsmall", "Atildesmall", "Adieresissmall", "Aringsmall", "AEsmall", "Ccedillasmall", "Egravesmall", "Eacutesmall", "Ecircumflexsmall", "Edieresissmall", "Igravesmall", "Iacutesmall", "Icircumflexsmall", "Idieresissmall", "Ethsmall", "Ntildesmall", "Ogravesmall", "Oacutesmall", "Ocircumflexsmall", "Otildesmall", "Odieresissmall", "OEsmall", "Oslashsmall", "Ugravesmall", "Uacutesmall", "Ucircumflexsmall", "Udieresissmall", "Yacutesmall", "Thornsmall", "Ydieresissmall", "001.000", "001.001", "001.002", "001.003", "Black", "Bold", "Book", "Light", "Medium", "Regular", "Roman", "Semibold"];
          r2.CFFStandardStrings = h;
          var d = 391, g = function CFFParserClosure() {
            var t3 = [null, { id: "hstem", min: 2, stackClearing: true, stem: true }, null, { id: "vstem", min: 2, stackClearing: true, stem: true }, { id: "vmoveto", min: 1, stackClearing: true }, { id: "rlineto", min: 2, resetStack: true }, { id: "hlineto", min: 1, resetStack: true }, { id: "vlineto", min: 1, resetStack: true }, { id: "rrcurveto", min: 6, resetStack: true }, null, { id: "callsubr", min: 1, undefStack: true }, { id: "return", min: 0, undefStack: true }, null, null, { id: "endchar", min: 0, stackClearing: true }, null, null, null, { id: "hstemhm", min: 2, stackClearing: true, stem: true }, { id: "hintmask", min: 0, stackClearing: true }, { id: "cntrmask", min: 0, stackClearing: true }, { id: "rmoveto", min: 2, stackClearing: true }, { id: "hmoveto", min: 1, stackClearing: true }, { id: "vstemhm", min: 2, stackClearing: true, stem: true }, { id: "rcurveline", min: 8, resetStack: true }, { id: "rlinecurve", min: 8, resetStack: true }, { id: "vvcurveto", min: 4, resetStack: true }, { id: "hhcurveto", min: 4, resetStack: true }, null, { id: "callgsubr", min: 1, undefStack: true }, { id: "vhcurveto", min: 4, resetStack: true }, { id: "hvcurveto", min: 4, resetStack: true }], r3 = [null, null, null, { id: "and", min: 2, stackDelta: -1 }, { id: "or", min: 2, stackDelta: -1 }, { id: "not", min: 1, stackDelta: 0 }, null, null, null, { id: "abs", min: 1, stackDelta: 0 }, { id: "add", min: 2, stackDelta: -1, stackFn: function stack_div(t4, r4) {
              t4[r4 - 2] = t4[r4 - 2] + t4[r4 - 1];
            } }, { id: "sub", min: 2, stackDelta: -1, stackFn: function stack_div(t4, r4) {
              t4[r4 - 2] = t4[r4 - 2] - t4[r4 - 1];
            } }, { id: "div", min: 2, stackDelta: -1, stackFn: function stack_div(t4, r4) {
              t4[r4 - 2] = t4[r4 - 2] / t4[r4 - 1];
            } }, null, { id: "neg", min: 1, stackDelta: 0, stackFn: function stack_div(t4, r4) {
              t4[r4 - 1] = -t4[r4 - 1];
            } }, { id: "eq", min: 2, stackDelta: -1 }, null, null, { id: "drop", min: 1, stackDelta: -1 }, null, { id: "put", min: 2, stackDelta: -2 }, { id: "get", min: 1, stackDelta: 0 }, { id: "ifelse", min: 4, stackDelta: -3 }, { id: "random", min: 0, stackDelta: 1 }, { id: "mul", min: 2, stackDelta: -1, stackFn: function stack_div(t4, r4) {
              t4[r4 - 2] = t4[r4 - 2] * t4[r4 - 1];
            } }, null, { id: "sqrt", min: 1, stackDelta: 0 }, { id: "dup", min: 1, stackDelta: 1 }, { id: "exch", min: 2, stackDelta: 0 }, { id: "index", min: 2, stackDelta: 0 }, { id: "roll", min: 3, stackDelta: -2 }, null, null, null, { id: "hflex", min: 7, resetStack: true }, { id: "flex", min: 13, resetStack: true }, { id: "hflex1", min: 9, resetStack: true }, { id: "flex1", min: 11, resetStack: true }];
            return function() {
              function CFFParser(t4, r4, o3) {
                _classCallCheck(this, CFFParser);
                this.bytes = t4.getBytes();
                this.properties = r4;
                this.seacAnalysisEnabled = !!o3;
              }
              _createClass(CFFParser, [{ key: "parse", value: function parse() {
                var t4 = this.properties, r4 = new m();
                this.cff = r4;
                var o3 = this.parseHeader(), c2 = this.parseIndex(o3.endPos), l2 = this.parseIndex(c2.endPos), u2 = this.parseIndex(l2.endPos), h2 = this.parseIndex(u2.endPos), d2 = this.parseDict(l2.obj.get(0)), g2 = this.createDict(w, d2, r4.strings);
                r4.header = o3.obj;
                r4.names = this.parseNameIndex(c2.obj);
                r4.strings = this.parseStringIndex(u2.obj);
                r4.topDict = g2;
                r4.globalSubrIndex = h2.obj;
                this.parsePrivateDict(r4.topDict);
                r4.isCIDFont = g2.hasName("ROS");
                var y2 = g2.getByName("CharStrings"), v2 = this.parseIndex(y2).obj, k2 = g2.getByName("FontMatrix");
                k2 && (t4.fontMatrix = k2);
                var _2, S2, C2 = g2.getByName("FontBBox");
                if (C2) {
                  t4.ascent = Math.max(C2[3], C2[1]);
                  t4.descent = Math.min(C2[1], C2[3]);
                  t4.ascentScaled = true;
                }
                if (r4.isCIDFont) {
                  for (var x2 = this.parseIndex(g2.getByName("FDArray")).obj, O2 = 0, T2 = x2.count; O2 < T2; ++O2) {
                    var E2 = x2.get(O2), M2 = this.createDict(w, this.parseDict(E2), r4.strings);
                    this.parsePrivateDict(M2);
                    r4.fdArray.push(M2);
                  }
                  S2 = null;
                  _2 = this.parseCharsets(g2.getByName("charset"), v2.count, r4.strings, true);
                  r4.fdSelect = this.parseFDSelect(g2.getByName("FDSelect"), v2.count);
                } else {
                  _2 = this.parseCharsets(g2.getByName("charset"), v2.count, r4.strings, false);
                  S2 = this.parseEncoding(g2.getByName("Encoding"), t4, r4.strings, _2.charset);
                }
                r4.charset = _2;
                r4.encoding = S2;
                var R = this.parseCharStrings({ charStrings: v2, localSubrIndex: g2.privateDict.subrsIndex, globalSubrIndex: h2.obj, fdSelect: r4.fdSelect, fdArray: r4.fdArray, privateDict: g2.privateDict });
                r4.charStrings = R.charStrings;
                r4.seacs = R.seacs;
                r4.widths = R.widths;
                return r4;
              } }, { key: "parseHeader", value: function parseHeader() {
                for (var t4 = this.bytes, r4 = t4.length, o3 = 0; o3 < r4 && t4[o3] !== 1; )
                  ++o3;
                if (o3 >= r4)
                  throw new c.FormatError("Invalid CFF header");
                if (o3 !== 0) {
                  (0, c.info)("cff data is shifted");
                  t4 = t4.subarray(o3);
                  this.bytes = t4;
                }
                var l2 = t4[0], u2 = t4[1], h2 = t4[2], d2 = t4[3];
                return { obj: new y(l2, u2, h2, d2), endPos: h2 };
              } }, { key: "parseDict", value: function parseDict(t4) {
                var r4 = 0;
                function parseOperand() {
                  var o4 = t4[r4++];
                  if (o4 === 30)
                    return function parseFloatOperand() {
                      var o5 = "", c2 = 15, l3 = ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", ".", "E", "E-", null, "-"], u3 = t4.length;
                      for (; r4 < u3; ) {
                        var h3 = t4[r4++], d2 = h3 >> 4, g2 = 15 & h3;
                        if (d2 === c2)
                          break;
                        o5 += l3[d2];
                        if (g2 === c2)
                          break;
                        o5 += l3[g2];
                      }
                      return parseFloat(o5);
                    }();
                  if (o4 === 28)
                    return o4 = ((o4 = t4[r4++]) << 24 | t4[r4++] << 16) >> 16;
                  if (o4 === 29)
                    return o4 = (o4 = (o4 = (o4 = t4[r4++]) << 8 | t4[r4++]) << 8 | t4[r4++]) << 8 | t4[r4++];
                  if (o4 >= 32 && o4 <= 246)
                    return o4 - 139;
                  if (o4 >= 247 && o4 <= 250)
                    return 256 * (o4 - 247) + t4[r4++] + 108;
                  if (o4 >= 251 && o4 <= 254)
                    return -256 * (o4 - 251) - t4[r4++] - 108;
                  (0, c.warn)('CFFParser_parseDict: "' + o4 + '" is a reserved command.');
                  return NaN;
                }
                var o3 = [], l2 = [];
                r4 = 0;
                for (var u2 = t4.length; r4 < u2; ) {
                  var h2 = t4[r4];
                  if (h2 <= 21) {
                    h2 === 12 && (h2 = h2 << 8 | t4[++r4]);
                    l2.push([h2, o3]);
                    o3 = [];
                    ++r4;
                  } else
                    o3.push(parseOperand());
                }
                return l2;
              } }, { key: "parseIndex", value: function parseIndex(t4) {
                var r4, o3, c2 = new k(), l2 = this.bytes, u2 = l2[t4++] << 8 | l2[t4++], h2 = [], d2 = t4;
                if (u2 !== 0) {
                  var g2 = l2[t4++], m2 = t4 + (u2 + 1) * g2 - 1;
                  for (r4 = 0, o3 = u2 + 1; r4 < o3; ++r4) {
                    for (var y2 = 0, v2 = 0; v2 < g2; ++v2) {
                      y2 <<= 8;
                      y2 += l2[t4++];
                    }
                    h2.push(m2 + y2);
                  }
                  d2 = h2[u2];
                }
                for (r4 = 0, o3 = h2.length - 1; r4 < o3; ++r4) {
                  var _2 = h2[r4], w2 = h2[r4 + 1];
                  c2.add(l2.subarray(_2, w2));
                }
                return { obj: c2, endPos: d2 };
              } }, { key: "parseNameIndex", value: function parseNameIndex(t4) {
                for (var r4 = [], o3 = 0, l2 = t4.count; o3 < l2; ++o3) {
                  var u2 = t4.get(o3);
                  r4.push((0, c.bytesToString)(u2));
                }
                return r4;
              } }, { key: "parseStringIndex", value: function parseStringIndex(t4) {
                for (var r4 = new v(), o3 = 0, l2 = t4.count; o3 < l2; ++o3) {
                  var u2 = t4.get(o3);
                  r4.add((0, c.bytesToString)(u2));
                }
                return r4;
              } }, { key: "createDict", value: function createDict(t4, r4, o3) {
                for (var c2 = new t4(o3), l2 = 0, u2 = r4.length; l2 < u2; ++l2) {
                  var h2 = r4[l2], d2 = h2[0], g2 = h2[1];
                  c2.setByKey(d2, g2);
                }
                return c2;
              } }, { key: "parseCharString", value: function parseCharString(o3, l2, u2, h2) {
                if (!l2 || o3.callDepth > 10)
                  return false;
                for (var d2 = o3.stackSize, g2 = o3.stack, m2 = l2.length, y2 = 0; y2 < m2; ) {
                  var v2 = l2[y2++], k2 = null;
                  if (v2 === 12) {
                    var _2 = l2[y2++];
                    if (_2 === 0) {
                      l2[y2 - 2] = 139;
                      l2[y2 - 1] = 22;
                      d2 = 0;
                    } else
                      k2 = r3[_2];
                  } else if (v2 === 28) {
                    g2[d2] = (l2[y2] << 24 | l2[y2 + 1] << 16) >> 16;
                    y2 += 2;
                    d2++;
                  } else if (v2 === 14) {
                    if (d2 >= 4) {
                      d2 -= 4;
                      if (this.seacAnalysisEnabled) {
                        o3.seac = g2.slice(d2, d2 + 4);
                        return false;
                      }
                    }
                    k2 = t3[v2];
                  } else if (v2 >= 32 && v2 <= 246) {
                    g2[d2] = v2 - 139;
                    d2++;
                  } else if (v2 >= 247 && v2 <= 254) {
                    g2[d2] = v2 < 251 ? (v2 - 247 << 8) + l2[y2] + 108 : -(v2 - 251 << 8) - l2[y2] - 108;
                    y2++;
                    d2++;
                  } else if (v2 === 255) {
                    g2[d2] = (l2[y2] << 24 | l2[y2 + 1] << 16 | l2[y2 + 2] << 8 | l2[y2 + 3]) / 65536;
                    y2 += 4;
                    d2++;
                  } else if (v2 === 19 || v2 === 20) {
                    o3.hints += d2 >> 1;
                    y2 += o3.hints + 7 >> 3;
                    d2 %= 2;
                    k2 = t3[v2];
                  } else {
                    if (v2 === 10 || v2 === 29) {
                      var w2 = void 0;
                      if (!(w2 = v2 === 10 ? u2 : h2)) {
                        k2 = t3[v2];
                        (0, c.warn)("Missing subrsIndex for " + k2.id);
                        return false;
                      }
                      var S2 = 32768;
                      w2.count < 1240 ? S2 = 107 : w2.count < 33900 && (S2 = 1131);
                      var C2 = g2[--d2] + S2;
                      if (C2 < 0 || C2 >= w2.count || isNaN(C2)) {
                        k2 = t3[v2];
                        (0, c.warn)("Out of bounds subrIndex for " + k2.id);
                        return false;
                      }
                      o3.stackSize = d2;
                      o3.callDepth++;
                      if (!this.parseCharString(o3, w2.get(C2), u2, h2))
                        return false;
                      o3.callDepth--;
                      d2 = o3.stackSize;
                      continue;
                    }
                    if (v2 === 11) {
                      o3.stackSize = d2;
                      return true;
                    }
                    if (v2 === 0 && y2 === l2.length) {
                      l2[y2 - 1] = 14;
                      k2 = t3[14];
                    } else
                      k2 = t3[v2];
                  }
                  if (k2) {
                    if (k2.stem) {
                      o3.hints += d2 >> 1;
                      if (v2 === 3 || v2 === 23)
                        o3.hasVStems = true;
                      else if (o3.hasVStems && (v2 === 1 || v2 === 18)) {
                        (0, c.warn)("CFF stem hints are in wrong order");
                        l2[y2 - 1] = v2 === 1 ? 3 : 23;
                      }
                    }
                    if ("min" in k2 && !o3.undefStack && d2 < k2.min) {
                      (0, c.warn)("Not enough parameters for " + k2.id + "; actual: " + d2 + ", expected: " + k2.min);
                      if (d2 === 0) {
                        l2[y2 - 1] = 14;
                        return true;
                      }
                      return false;
                    }
                    if (o3.firstStackClearing && k2.stackClearing) {
                      o3.firstStackClearing = false;
                      (d2 -= k2.min) >= 2 && k2.stem ? d2 %= 2 : d2 > 1 && (0, c.warn)("Found too many parameters for stack-clearing command");
                      d2 > 0 && (o3.width = g2[d2 - 1]);
                    }
                    if ("stackDelta" in k2) {
                      "stackFn" in k2 && k2.stackFn(g2, d2);
                      d2 += k2.stackDelta;
                    } else if (k2.stackClearing)
                      d2 = 0;
                    else if (k2.resetStack) {
                      d2 = 0;
                      o3.undefStack = false;
                    } else if (k2.undefStack) {
                      d2 = 0;
                      o3.undefStack = true;
                      o3.firstStackClearing = false;
                    }
                  }
                }
                o3.stackSize = d2;
                return true;
              } }, { key: "parseCharStrings", value: function parseCharStrings(t4) {
                for (var r4 = t4.charStrings, o3 = t4.localSubrIndex, l2 = t4.globalSubrIndex, u2 = t4.fdSelect, h2 = t4.fdArray, d2 = t4.privateDict, g2 = [], m2 = [], y2 = r4.count, v2 = 0; v2 < y2; v2++) {
                  var k2 = r4.get(v2), _2 = { callDepth: 0, stackSize: 0, stack: [], undefStack: true, hints: 0, firstStackClearing: true, seac: null, width: null, hasVStems: false }, w2 = true, S2 = null, C2 = d2;
                  if (u2 && h2.length) {
                    var x2 = u2.getFDIndex(v2);
                    if (x2 === -1) {
                      (0, c.warn)("Glyph index is not in fd select.");
                      w2 = false;
                    }
                    if (x2 >= h2.length) {
                      (0, c.warn)("Invalid fd index for glyph index.");
                      w2 = false;
                    }
                    w2 && (S2 = (C2 = h2[x2].privateDict).subrsIndex);
                  } else
                    o3 && (S2 = o3);
                  w2 && (w2 = this.parseCharString(_2, k2, S2, l2));
                  if (_2.width !== null) {
                    var O2 = C2.getByName("nominalWidthX");
                    m2[v2] = O2 + _2.width;
                  } else {
                    var T2 = C2.getByName("defaultWidthX");
                    m2[v2] = T2;
                  }
                  _2.seac !== null && (g2[v2] = _2.seac);
                  w2 || r4.set(v2, new Uint8Array([14]));
                }
                return { charStrings: r4, seacs: g2, widths: m2 };
              } }, { key: "emptyPrivateDictionary", value: function emptyPrivateDictionary(t4) {
                var r4 = this.createDict(S, [], t4.strings);
                t4.setByKey(18, [0, 0]);
                t4.privateDict = r4;
              } }, { key: "parsePrivateDict", value: function parsePrivateDict(t4) {
                if (t4.hasName("Private")) {
                  var r4 = t4.getByName("Private");
                  if (Array.isArray(r4) && r4.length === 2) {
                    var o3 = r4[0], c2 = r4[1];
                    if (o3 === 0 || c2 >= this.bytes.length)
                      this.emptyPrivateDictionary(t4);
                    else {
                      var l2 = c2 + o3, u2 = this.bytes.subarray(c2, l2), h2 = this.parseDict(u2), d2 = this.createDict(S, h2, t4.strings);
                      t4.privateDict = d2;
                      if (d2.getByName("Subrs")) {
                        var g2 = d2.getByName("Subrs"), m2 = c2 + g2;
                        if (g2 === 0 || m2 >= this.bytes.length)
                          this.emptyPrivateDictionary(t4);
                        else {
                          var y2 = this.parseIndex(m2);
                          d2.subrsIndex = y2.obj;
                        }
                      }
                    }
                  } else
                    t4.removeByName("Private");
                } else
                  this.emptyPrivateDictionary(t4);
              } }, { key: "parseCharsets", value: function parseCharsets(t4, r4, o3, u2) {
                if (t4 === 0)
                  return new x(true, C.ISO_ADOBE, l.ISOAdobeCharset);
                if (t4 === 1)
                  return new x(true, C.EXPERT, l.ExpertCharset);
                if (t4 === 2)
                  return new x(true, C.EXPERT_SUBSET, l.ExpertSubsetCharset);
                var h2, d2, g2, m2 = this.bytes, y2 = t4, v2 = m2[t4++], k2 = [u2 ? 0 : ".notdef"];
                r4 -= 1;
                switch (v2) {
                  case 0:
                    for (g2 = 0; g2 < r4; g2++) {
                      h2 = m2[t4++] << 8 | m2[t4++];
                      k2.push(u2 ? h2 : o3.get(h2));
                    }
                    break;
                  case 1:
                    for (; k2.length <= r4; ) {
                      h2 = m2[t4++] << 8 | m2[t4++];
                      d2 = m2[t4++];
                      for (g2 = 0; g2 <= d2; g2++)
                        k2.push(u2 ? h2++ : o3.get(h2++));
                    }
                    break;
                  case 2:
                    for (; k2.length <= r4; ) {
                      h2 = m2[t4++] << 8 | m2[t4++];
                      d2 = m2[t4++] << 8 | m2[t4++];
                      for (g2 = 0; g2 <= d2; g2++)
                        k2.push(u2 ? h2++ : o3.get(h2++));
                    }
                    break;
                  default:
                    throw new c.FormatError("Unknown charset format");
                }
                var _2 = t4, w2 = m2.subarray(y2, _2);
                return new x(false, v2, k2, w2);
              } }, { key: "parseEncoding", value: function parseEncoding(t4, r4, o3, l2) {
                var h2, d2, g2, m2 = /* @__PURE__ */ Object.create(null), y2 = this.bytes, v2 = false, k2 = null;
                if (t4 === 0 || t4 === 1) {
                  v2 = true;
                  h2 = t4;
                  var _2 = t4 ? u.ExpertEncoding : u.StandardEncoding;
                  for (d2 = 0, g2 = l2.length; d2 < g2; d2++) {
                    var w2 = _2.indexOf(l2[d2]);
                    w2 !== -1 && (m2[w2] = d2);
                  }
                } else {
                  var S2 = t4;
                  switch (127 & (h2 = y2[t4++])) {
                    case 0:
                      var C2 = y2[t4++];
                      for (d2 = 1; d2 <= C2; d2++)
                        m2[y2[t4++]] = d2;
                      break;
                    case 1:
                      var x2 = y2[t4++], T2 = 1;
                      for (d2 = 0; d2 < x2; d2++)
                        for (var E2 = y2[t4++], M2 = y2[t4++], R = E2; R <= E2 + M2; R++)
                          m2[R] = T2++;
                      break;
                    default:
                      throw new c.FormatError("Unknown encoding format: ".concat(h2, " in CFF"));
                  }
                  var D = t4;
                  if (128 & h2) {
                    y2[S2] &= 127;
                    !function readSupplement() {
                      var r5 = y2[t4++];
                      for (d2 = 0; d2 < r5; d2++) {
                        var c2 = y2[t4++], u2 = (y2[t4++] << 8) + (255 & y2[t4++]);
                        m2[c2] = l2.indexOf(o3.get(u2));
                      }
                    }();
                  }
                  k2 = y2.subarray(S2, D);
                }
                return new O(v2, h2 &= 127, m2, k2);
              } }, { key: "parseFDSelect", value: function parseFDSelect(t4, r4) {
                var o3, l2 = this.bytes, u2 = l2[t4++], h2 = [];
                switch (u2) {
                  case 0:
                    for (o3 = 0; o3 < r4; ++o3) {
                      var d2 = l2[t4++];
                      h2.push(d2);
                    }
                    break;
                  case 3:
                    var g2 = l2[t4++] << 8 | l2[t4++];
                    for (o3 = 0; o3 < g2; ++o3) {
                      var m2 = l2[t4++] << 8 | l2[t4++];
                      if (o3 === 0 && m2 !== 0) {
                        (0, c.warn)("parseFDSelect: The first range must have a first GID of 0 -- trying to recover.");
                        m2 = 0;
                      }
                      for (var y2 = l2[t4++], v2 = l2[t4] << 8 | l2[t4 + 1], k2 = m2; k2 < v2; ++k2)
                        h2.push(y2);
                    }
                    t4 += 2;
                    break;
                  default:
                    throw new c.FormatError('parseFDSelect: Unknown format "'.concat(u2, '".'));
                }
                if (h2.length !== r4)
                  throw new c.FormatError("parseFDSelect: Invalid font data.");
                return new T(u2, h2);
              } }]);
              return CFFParser;
            }();
          }();
          r2.CFFParser = g;
          var m = function() {
            function CFF() {
              _classCallCheck(this, CFF);
              this.header = null;
              this.names = [];
              this.topDict = null;
              this.strings = new v();
              this.globalSubrIndex = null;
              this.encoding = null;
              this.charset = null;
              this.charStrings = null;
              this.fdArray = [];
              this.fdSelect = null;
              this.isCIDFont = false;
            }
            _createClass(CFF, [{ key: "duplicateFirstGlyph", value: function duplicateFirstGlyph() {
              if (this.charStrings.count >= 65535)
                (0, c.warn)("Not enough space in charstrings to duplicate first glyph.");
              else {
                var t3 = this.charStrings.get(0);
                this.charStrings.add(t3);
                this.isCIDFont && this.fdSelect.fdSelect.push(this.fdSelect.fdSelect[0]);
              }
            } }, { key: "hasGlyphId", value: function hasGlyphId(t3) {
              return !(t3 < 0 || t3 >= this.charStrings.count) && this.charStrings.get(t3).length > 0;
            } }]);
            return CFF;
          }();
          r2.CFF = m;
          var y = _createClass(function CFFHeader(t3, r3, o3, c2) {
            _classCallCheck(this, CFFHeader);
            this.major = t3;
            this.minor = r3;
            this.hdrSize = o3;
            this.offSize = c2;
          });
          r2.CFFHeader = y;
          var v = function() {
            function CFFStrings() {
              _classCallCheck(this, CFFStrings);
              this.strings = [];
            }
            _createClass(CFFStrings, [{ key: "get", value: function get(t3) {
              return t3 >= 0 && t3 <= 390 ? h[t3] : t3 - d <= this.strings.length ? this.strings[t3 - d] : h[0];
            } }, { key: "getSID", value: function getSID(t3) {
              var r3 = h.indexOf(t3);
              return r3 !== -1 ? r3 : (r3 = this.strings.indexOf(t3)) !== -1 ? r3 + d : -1;
            } }, { key: "add", value: function add(t3) {
              this.strings.push(t3);
            } }, { key: "count", get: function get() {
              return this.strings.length;
            } }]);
            return CFFStrings;
          }();
          r2.CFFStrings = v;
          var k = function() {
            function CFFIndex() {
              _classCallCheck(this, CFFIndex);
              this.objects = [];
              this.length = 0;
            }
            _createClass(CFFIndex, [{ key: "add", value: function add(t3) {
              this.length += t3.length;
              this.objects.push(t3);
            } }, { key: "set", value: function set(t3, r3) {
              this.length += r3.length - this.objects[t3].length;
              this.objects[t3] = r3;
            } }, { key: "get", value: function get(t3) {
              return this.objects[t3];
            } }, { key: "count", get: function get() {
              return this.objects.length;
            } }]);
            return CFFIndex;
          }();
          r2.CFFIndex = k;
          var _ = function() {
            function CFFDict(t3, r3) {
              _classCallCheck(this, CFFDict);
              this.keyToNameMap = t3.keyToNameMap;
              this.nameToKeyMap = t3.nameToKeyMap;
              this.defaults = t3.defaults;
              this.types = t3.types;
              this.opcodes = t3.opcodes;
              this.order = t3.order;
              this.strings = r3;
              this.values = /* @__PURE__ */ Object.create(null);
            }
            _createClass(CFFDict, [{ key: "setByKey", value: function setByKey(t3, r3) {
              if (!(t3 in this.keyToNameMap))
                return false;
              var o3 = r3.length;
              if (o3 === 0)
                return true;
              for (var l2 = 0; l2 < o3; l2++)
                if (isNaN(r3[l2])) {
                  (0, c.warn)('Invalid CFFDict value: "' + r3 + '" for key "' + t3 + '".');
                  return true;
                }
              var u2 = this.types[t3];
              u2 !== "num" && u2 !== "sid" && u2 !== "offset" || (r3 = r3[0]);
              this.values[t3] = r3;
              return true;
            } }, { key: "setByName", value: function setByName(t3, r3) {
              if (!(t3 in this.nameToKeyMap))
                throw new c.FormatError('Invalid dictionary name "'.concat(t3, '"'));
              this.values[this.nameToKeyMap[t3]] = r3;
            } }, { key: "hasName", value: function hasName(t3) {
              return this.nameToKeyMap[t3] in this.values;
            } }, { key: "getByName", value: function getByName(t3) {
              if (!(t3 in this.nameToKeyMap))
                throw new c.FormatError("Invalid dictionary name ".concat(t3, '"'));
              var r3 = this.nameToKeyMap[t3];
              return r3 in this.values ? this.values[r3] : this.defaults[r3];
            } }, { key: "removeByName", value: function removeByName(t3) {
              delete this.values[this.nameToKeyMap[t3]];
            } }], [{ key: "createTables", value: function createTables(t3) {
              for (var r3 = { keyToNameMap: {}, nameToKeyMap: {}, defaults: {}, types: {}, opcodes: {}, order: [] }, o3 = 0, c2 = t3.length; o3 < c2; ++o3) {
                var l2 = t3[o3], u2 = Array.isArray(l2[0]) ? (l2[0][0] << 8) + l2[0][1] : l2[0];
                r3.keyToNameMap[u2] = l2[1];
                r3.nameToKeyMap[l2[1]] = u2;
                r3.types[u2] = l2[2];
                r3.defaults[u2] = l2[3];
                r3.opcodes[u2] = Array.isArray(l2[0]) ? l2[0] : [l2[0]];
                r3.order.push(u2);
              }
              return r3;
            } }]);
            return CFFDict;
          }(), w = function CFFTopDictClosure() {
            var t3 = [[[12, 30], "ROS", ["sid", "sid", "num"], null], [[12, 20], "SyntheticBase", "num", null], [0, "version", "sid", null], [1, "Notice", "sid", null], [[12, 0], "Copyright", "sid", null], [2, "FullName", "sid", null], [3, "FamilyName", "sid", null], [4, "Weight", "sid", null], [[12, 1], "isFixedPitch", "num", 0], [[12, 2], "ItalicAngle", "num", 0], [[12, 3], "UnderlinePosition", "num", -100], [[12, 4], "UnderlineThickness", "num", 50], [[12, 5], "PaintType", "num", 0], [[12, 6], "CharstringType", "num", 2], [[12, 7], "FontMatrix", ["num", "num", "num", "num", "num", "num"], [1e-3, 0, 0, 1e-3, 0, 0]], [13, "UniqueID", "num", null], [5, "FontBBox", ["num", "num", "num", "num"], [0, 0, 0, 0]], [[12, 8], "StrokeWidth", "num", 0], [14, "XUID", "array", null], [15, "charset", "offset", 0], [16, "Encoding", "offset", 0], [17, "CharStrings", "offset", 0], [18, "Private", ["offset", "offset"], null], [[12, 21], "PostScript", "sid", null], [[12, 22], "BaseFontName", "sid", null], [[12, 23], "BaseFontBlend", "delta", null], [[12, 31], "CIDFontVersion", "num", 0], [[12, 32], "CIDFontRevision", "num", 0], [[12, 33], "CIDFontType", "num", 0], [[12, 34], "CIDCount", "num", 8720], [[12, 35], "UIDBase", "num", null], [[12, 37], "FDSelect", "offset", null], [[12, 36], "FDArray", "offset", null], [[12, 38], "FontName", "sid", null]], r3 = null;
            return function(o3) {
              _inherits(CFFTopDict, o3);
              var c2 = _createSuper(CFFTopDict);
              function CFFTopDict(o4) {
                var l2;
                _classCallCheck(this, CFFTopDict);
                r3 === null && (r3 = _.createTables(t3));
                (l2 = c2.call(this, r3, o4)).privateDict = null;
                return l2;
              }
              return _createClass(CFFTopDict);
            }(_);
          }();
          r2.CFFTopDict = w;
          var S = function CFFPrivateDictClosure() {
            var t3 = [[6, "BlueValues", "delta", null], [7, "OtherBlues", "delta", null], [8, "FamilyBlues", "delta", null], [9, "FamilyOtherBlues", "delta", null], [[12, 9], "BlueScale", "num", 0.039625], [[12, 10], "BlueShift", "num", 7], [[12, 11], "BlueFuzz", "num", 1], [10, "StdHW", "num", null], [11, "StdVW", "num", null], [[12, 12], "StemSnapH", "delta", null], [[12, 13], "StemSnapV", "delta", null], [[12, 14], "ForceBold", "num", 0], [[12, 17], "LanguageGroup", "num", 0], [[12, 18], "ExpansionFactor", "num", 0.06], [[12, 19], "initialRandomSeed", "num", 0], [20, "defaultWidthX", "num", 0], [21, "nominalWidthX", "num", 0], [19, "Subrs", "offset", null]], r3 = null;
            return function(o3) {
              _inherits(CFFPrivateDict, o3);
              var c2 = _createSuper(CFFPrivateDict);
              function CFFPrivateDict(o4) {
                var l2;
                _classCallCheck(this, CFFPrivateDict);
                r3 === null && (r3 = _.createTables(t3));
                (l2 = c2.call(this, r3, o4)).subrsIndex = null;
                return l2;
              }
              return _createClass(CFFPrivateDict);
            }(_);
          }();
          r2.CFFPrivateDict = S;
          var C = { ISO_ADOBE: 0, EXPERT: 1, EXPERT_SUBSET: 2 }, x = _createClass(function CFFCharset(t3, r3, o3, c2) {
            _classCallCheck(this, CFFCharset);
            this.predefined = t3;
            this.format = r3;
            this.charset = o3;
            this.raw = c2;
          });
          r2.CFFCharset = x;
          var O = _createClass(function CFFEncoding(t3, r3, o3, c2) {
            _classCallCheck(this, CFFEncoding);
            this.predefined = t3;
            this.format = r3;
            this.encoding = o3;
            this.raw = c2;
          }), T = function() {
            function CFFFDSelect(t3, r3) {
              _classCallCheck(this, CFFFDSelect);
              this.format = t3;
              this.fdSelect = r3;
            }
            _createClass(CFFFDSelect, [{ key: "getFDIndex", value: function getFDIndex(t3) {
              return t3 < 0 || t3 >= this.fdSelect.length ? -1 : this.fdSelect[t3];
            } }]);
            return CFFFDSelect;
          }();
          r2.CFFFDSelect = T;
          var E = function() {
            function CFFOffsetTracker() {
              _classCallCheck(this, CFFOffsetTracker);
              this.offsets = /* @__PURE__ */ Object.create(null);
            }
            _createClass(CFFOffsetTracker, [{ key: "isTracking", value: function isTracking(t3) {
              return t3 in this.offsets;
            } }, { key: "track", value: function track(t3, r3) {
              if (t3 in this.offsets)
                throw new c.FormatError("Already tracking location of ".concat(t3));
              this.offsets[t3] = r3;
            } }, { key: "offset", value: function offset(t3) {
              for (var r3 in this.offsets)
                this.offsets[r3] += t3;
            } }, { key: "setEntryLocation", value: function setEntryLocation(t3, r3, o3) {
              if (!(t3 in this.offsets))
                throw new c.FormatError("Not tracking location of ".concat(t3));
              for (var l2 = o3.data, u2 = this.offsets[t3], h2 = 0, d2 = r3.length; h2 < d2; ++h2) {
                var g2 = 5 * h2 + u2, m2 = g2 + 1, y2 = g2 + 2, v2 = g2 + 3, k2 = g2 + 4;
                if (l2[g2] !== 29 || l2[m2] !== 0 || l2[y2] !== 0 || l2[v2] !== 0 || l2[k2] !== 0)
                  throw new c.FormatError("writing to an offset that is not empty");
                var _2 = r3[h2];
                l2[g2] = 29;
                l2[m2] = _2 >> 24 & 255;
                l2[y2] = _2 >> 16 & 255;
                l2[v2] = _2 >> 8 & 255;
                l2[k2] = 255 & _2;
              }
            } }]);
            return CFFOffsetTracker;
          }(), M = function() {
            function CFFCompiler(t3) {
              _classCallCheck(this, CFFCompiler);
              this.cff = t3;
            }
            _createClass(CFFCompiler, [{ key: "compile", value: function compile() {
              var t3 = this.cff, r3 = { data: [], length: 0, add: function CFFCompiler_add(t4) {
                this.data = this.data.concat(t4);
                this.length = this.data.length;
              } }, o3 = this.compileHeader(t3.header);
              r3.add(o3);
              var l2 = this.compileNameIndex(t3.names);
              r3.add(l2);
              if (t3.isCIDFont && t3.topDict.hasName("FontMatrix")) {
                var u2 = t3.topDict.getByName("FontMatrix");
                t3.topDict.removeByName("FontMatrix");
                for (var h2 = 0, d2 = t3.fdArray.length; h2 < d2; h2++) {
                  var g2 = t3.fdArray[h2], m2 = u2.slice(0);
                  g2.hasName("FontMatrix") && (m2 = c.Util.transform(m2, g2.getByName("FontMatrix")));
                  g2.setByName("FontMatrix", m2);
                }
              }
              var y2 = t3.topDict.getByName("XUID");
              y2 && y2.length > 16 && t3.topDict.removeByName("XUID");
              t3.topDict.setByName("charset", 0);
              var v2 = this.compileTopDicts([t3.topDict], r3.length, t3.isCIDFont);
              r3.add(v2.output);
              var k2 = v2.trackers[0], _2 = this.compileStringIndex(t3.strings.strings);
              r3.add(_2);
              var w2 = this.compileIndex(t3.globalSubrIndex);
              r3.add(w2);
              if (t3.encoding && t3.topDict.hasName("Encoding"))
                if (t3.encoding.predefined)
                  k2.setEntryLocation("Encoding", [t3.encoding.format], r3);
                else {
                  var S2 = this.compileEncoding(t3.encoding);
                  k2.setEntryLocation("Encoding", [r3.length], r3);
                  r3.add(S2);
                }
              var C2 = this.compileCharset(t3.charset, t3.charStrings.count, t3.strings, t3.isCIDFont);
              k2.setEntryLocation("charset", [r3.length], r3);
              r3.add(C2);
              var x2 = this.compileCharStrings(t3.charStrings);
              k2.setEntryLocation("CharStrings", [r3.length], r3);
              r3.add(x2);
              if (t3.isCIDFont) {
                k2.setEntryLocation("FDSelect", [r3.length], r3);
                var O2 = this.compileFDSelect(t3.fdSelect);
                r3.add(O2);
                v2 = this.compileTopDicts(t3.fdArray, r3.length, true);
                k2.setEntryLocation("FDArray", [r3.length], r3);
                r3.add(v2.output);
                var T2 = v2.trackers;
                this.compilePrivateDicts(t3.fdArray, T2, r3);
              }
              this.compilePrivateDicts([t3.topDict], [k2], r3);
              r3.add([0]);
              return r3.data;
            } }, { key: "encodeNumber", value: function encodeNumber(t3) {
              return Number.isInteger(t3) ? this.encodeInteger(t3) : this.encodeFloat(t3);
            } }, { key: "encodeFloat", value: function encodeFloat(t3) {
              var r3 = t3.toString(), o3 = CFFCompiler.EncodeFloatRegExp.exec(r3);
              if (o3) {
                var c2 = parseFloat("1e" + ((o3[2] ? +o3[2] : 0) + o3[1].length));
                r3 = (Math.round(t3 * c2) / c2).toString();
              }
              var l2, u2, h2 = "";
              for (l2 = 0, u2 = r3.length; l2 < u2; ++l2) {
                var d2 = r3[l2];
                h2 += d2 === "e" ? r3[++l2] === "-" ? "c" : "b" : d2 === "." ? "a" : d2 === "-" ? "e" : d2;
              }
              var g2 = [30];
              for (l2 = 0, u2 = (h2 += 1 & h2.length ? "f" : "ff").length; l2 < u2; l2 += 2)
                g2.push(parseInt(h2.substring(l2, l2 + 2), 16));
              return g2;
            } }, { key: "encodeInteger", value: function encodeInteger(t3) {
              return t3 >= -107 && t3 <= 107 ? [t3 + 139] : t3 >= 108 && t3 <= 1131 ? [247 + ((t3 -= 108) >> 8), 255 & t3] : t3 >= -1131 && t3 <= -108 ? [251 + ((t3 = -t3 - 108) >> 8), 255 & t3] : t3 >= -32768 && t3 <= 32767 ? [28, t3 >> 8 & 255, 255 & t3] : [29, t3 >> 24 & 255, t3 >> 16 & 255, t3 >> 8 & 255, 255 & t3];
            } }, { key: "compileHeader", value: function compileHeader(t3) {
              return [t3.major, t3.minor, 4, t3.offSize];
            } }, { key: "compileNameIndex", value: function compileNameIndex(t3) {
              for (var r3 = new k(), o3 = 0, l2 = t3.length; o3 < l2; ++o3) {
                for (var u2 = t3[o3], h2 = Math.min(u2.length, 127), d2 = new Array(h2), g2 = 0; g2 < h2; g2++) {
                  var m2 = u2[g2];
                  (m2 < "!" || m2 > "~" || m2 === "[" || m2 === "]" || m2 === "(" || m2 === ")" || m2 === "{" || m2 === "}" || m2 === "<" || m2 === ">" || m2 === "/" || m2 === "%") && (m2 = "_");
                  d2[g2] = m2;
                }
                (d2 = d2.join("")) === "" && (d2 = "Bad_Font_Name");
                r3.add((0, c.stringToBytes)(d2));
              }
              return this.compileIndex(r3);
            } }, { key: "compileTopDicts", value: function compileTopDicts(t3, r3, o3) {
              for (var c2 = [], l2 = new k(), u2 = 0, h2 = t3.length; u2 < h2; ++u2) {
                var d2 = t3[u2];
                if (o3) {
                  d2.removeByName("CIDFontVersion");
                  d2.removeByName("CIDFontRevision");
                  d2.removeByName("CIDFontType");
                  d2.removeByName("CIDCount");
                  d2.removeByName("UIDBase");
                }
                var g2 = new E(), m2 = this.compileDict(d2, g2);
                c2.push(g2);
                l2.add(m2);
                g2.offset(r3);
              }
              return { trackers: c2, output: l2 = this.compileIndex(l2, c2) };
            } }, { key: "compilePrivateDicts", value: function compilePrivateDicts(t3, r3, o3) {
              for (var l2 = 0, u2 = t3.length; l2 < u2; ++l2) {
                var h2 = t3[l2], d2 = h2.privateDict;
                if (!d2 || !h2.hasName("Private"))
                  throw new c.FormatError("There must be a private dictionary.");
                var g2 = new E(), m2 = this.compileDict(d2, g2), y2 = o3.length;
                g2.offset(y2);
                m2.length || (y2 = 0);
                r3[l2].setEntryLocation("Private", [m2.length, y2], o3);
                o3.add(m2);
                if (d2.subrsIndex && d2.hasName("Subrs")) {
                  var v2 = this.compileIndex(d2.subrsIndex);
                  g2.setEntryLocation("Subrs", [m2.length], o3);
                  o3.add(v2);
                }
              }
            } }, { key: "compileDict", value: function compileDict(t3, r3) {
              for (var o3 = [], l2 = t3.order, u2 = 0; u2 < l2.length; ++u2) {
                var h2 = l2[u2];
                if (h2 in t3.values) {
                  var d2 = t3.values[h2], g2 = t3.types[h2];
                  Array.isArray(g2) || (g2 = [g2]);
                  Array.isArray(d2) || (d2 = [d2]);
                  if (d2.length !== 0) {
                    for (var m2 = 0, y2 = g2.length; m2 < y2; ++m2) {
                      var v2 = g2[m2], k2 = d2[m2];
                      switch (v2) {
                        case "num":
                        case "sid":
                          o3 = o3.concat(this.encodeNumber(k2));
                          break;
                        case "offset":
                          var _2 = t3.keyToNameMap[h2];
                          r3.isTracking(_2) || r3.track(_2, o3.length);
                          o3 = o3.concat([29, 0, 0, 0, 0]);
                          break;
                        case "array":
                        case "delta":
                          o3 = o3.concat(this.encodeNumber(k2));
                          for (var w2 = 1, S2 = d2.length; w2 < S2; ++w2)
                            o3 = o3.concat(this.encodeNumber(d2[w2]));
                          break;
                        default:
                          throw new c.FormatError("Unknown data type of ".concat(v2));
                      }
                    }
                    o3 = o3.concat(t3.opcodes[h2]);
                  }
                }
              }
              return o3;
            } }, { key: "compileStringIndex", value: function compileStringIndex(t3) {
              for (var r3 = new k(), o3 = 0, l2 = t3.length; o3 < l2; ++o3)
                r3.add((0, c.stringToBytes)(t3[o3]));
              return this.compileIndex(r3);
            } }, { key: "compileGlobalSubrIndex", value: function compileGlobalSubrIndex() {
              var t3 = this.cff.globalSubrIndex;
              this.out.writeByteArray(this.compileIndex(t3));
            } }, { key: "compileCharStrings", value: function compileCharStrings(t3) {
              for (var r3 = new k(), o3 = 0; o3 < t3.count; o3++) {
                var c2 = t3.get(o3);
                c2.length !== 0 ? r3.add(c2) : r3.add(new Uint8Array([139, 14]));
              }
              return this.compileIndex(r3);
            } }, { key: "compileCharset", value: function compileCharset(t3, r3, o3, l2) {
              var u2, h2 = r3 - 1;
              if (l2)
                u2 = new Uint8Array([2, 0, 0, h2 >> 8 & 255, 255 & h2]);
              else {
                (u2 = new Uint8Array(1 + 2 * h2))[0] = 0;
                for (var d2 = 0, g2 = t3.charset.length, m2 = false, y2 = 1; y2 < u2.length; y2 += 2) {
                  var v2 = 0;
                  if (d2 < g2) {
                    var k2 = t3.charset[d2++];
                    if ((v2 = o3.getSID(k2)) === -1) {
                      v2 = 0;
                      if (!m2) {
                        m2 = true;
                        (0, c.warn)("Couldn't find ".concat(k2, " in CFF strings"));
                      }
                    }
                  }
                  u2[y2] = v2 >> 8 & 255;
                  u2[y2 + 1] = 255 & v2;
                }
              }
              return this.compileTypedArray(u2);
            } }, { key: "compileEncoding", value: function compileEncoding(t3) {
              return this.compileTypedArray(t3.raw);
            } }, { key: "compileFDSelect", value: function compileFDSelect(t3) {
              var r3, o3, c2 = t3.format;
              switch (c2) {
                case 0:
                  (r3 = new Uint8Array(1 + t3.fdSelect.length))[0] = c2;
                  for (o3 = 0; o3 < t3.fdSelect.length; o3++)
                    r3[o3 + 1] = t3.fdSelect[o3];
                  break;
                case 3:
                  var l2 = t3.fdSelect[0], u2 = [c2, 0, 0, 0, 0, l2];
                  for (o3 = 1; o3 < t3.fdSelect.length; o3++) {
                    var h2 = t3.fdSelect[o3];
                    if (h2 !== l2) {
                      u2.push(o3 >> 8 & 255, 255 & o3, h2);
                      l2 = h2;
                    }
                  }
                  var d2 = (u2.length - 3) / 3;
                  u2[1] = d2 >> 8 & 255;
                  u2[2] = 255 & d2;
                  u2.push(o3 >> 8 & 255, 255 & o3);
                  r3 = new Uint8Array(u2);
              }
              return this.compileTypedArray(r3);
            } }, { key: "compileTypedArray", value: function compileTypedArray(t3) {
              for (var r3 = [], o3 = 0, c2 = t3.length; o3 < c2; ++o3)
                r3[o3] = t3[o3];
              return r3;
            } }, { key: "compileIndex", value: function compileIndex(t3) {
              var r3 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [], o3 = t3.objects, c2 = o3.length;
              if (c2 === 0)
                return [0, 0, 0];
              var l2, u2, h2 = [c2 >> 8 & 255, 255 & c2], d2 = 1;
              for (l2 = 0; l2 < c2; ++l2)
                d2 += o3[l2].length;
              u2 = d2 < 256 ? 1 : d2 < 65536 ? 2 : d2 < 16777216 ? 3 : 4;
              h2.push(u2);
              var g2 = 1;
              for (l2 = 0; l2 < c2 + 1; l2++) {
                u2 === 1 ? h2.push(255 & g2) : u2 === 2 ? h2.push(g2 >> 8 & 255, 255 & g2) : u2 === 3 ? h2.push(g2 >> 16 & 255, g2 >> 8 & 255, 255 & g2) : h2.push(g2 >>> 24 & 255, g2 >> 16 & 255, g2 >> 8 & 255, 255 & g2);
                o3[l2] && (g2 += o3[l2].length);
              }
              for (l2 = 0; l2 < c2; l2++) {
                r3[l2] && r3[l2].offset(h2.length);
                for (var m2 = 0, y2 = o3[l2].length; m2 < y2; m2++)
                  h2.push(o3[l2][m2]);
              }
              return h2;
            } }], [{ key: "EncodeFloatRegExp", get: function get() {
              return (0, c.shadow)(this, "EncodeFloatRegExp", /\.(\d*?)(?:9{5,20}|0{5,20})\d{0,2}(?:e(.+)|$)/);
            } }]);
            return CFFCompiler;
          }();
          r2.CFFCompiler = M;
        }, (t2, r2) => {
          "use strict";
          Object.defineProperty(r2, "__esModule", { value: true });
          r2.ISOAdobeCharset = r2.ExpertSubsetCharset = r2.ExpertCharset = void 0;
          r2.ISOAdobeCharset = [".notdef", "space", "exclam", "quotedbl", "numbersign", "dollar", "percent", "ampersand", "quoteright", "parenleft", "parenright", "asterisk", "plus", "comma", "hyphen", "period", "slash", "zero", "one", "two", "three", "four", "five", "six", "seven", "eight", "nine", "colon", "semicolon", "less", "equal", "greater", "question", "at", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "bracketleft", "backslash", "bracketright", "asciicircum", "underscore", "quoteleft", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "braceleft", "bar", "braceright", "asciitilde", "exclamdown", "cent", "sterling", "fraction", "yen", "florin", "section", "currency", "quotesingle", "quotedblleft", "guillemotleft", "guilsinglleft", "guilsinglright", "fi", "fl", "endash", "dagger", "daggerdbl", "periodcentered", "paragraph", "bullet", "quotesinglbase", "quotedblbase", "quotedblright", "guillemotright", "ellipsis", "perthousand", "questiondown", "grave", "acute", "circumflex", "tilde", "macron", "breve", "dotaccent", "dieresis", "ring", "cedilla", "hungarumlaut", "ogonek", "caron", "emdash", "AE", "ordfeminine", "Lslash", "Oslash", "OE", "ordmasculine", "ae", "dotlessi", "lslash", "oslash", "oe", "germandbls", "onesuperior", "logicalnot", "mu", "trademark", "Eth", "onehalf", "plusminus", "Thorn", "onequarter", "divide", "brokenbar", "degree", "thorn", "threequarters", "twosuperior", "registered", "minus", "eth", "multiply", "threesuperior", "copyright", "Aacute", "Acircumflex", "Adieresis", "Agrave", "Aring", "Atilde", "Ccedilla", "Eacute", "Ecircumflex", "Edieresis", "Egrave", "Iacute", "Icircumflex", "Idieresis", "Igrave", "Ntilde", "Oacute", "Ocircumflex", "Odieresis", "Ograve", "Otilde", "Scaron", "Uacute", "Ucircumflex", "Udieresis", "Ugrave", "Yacute", "Ydieresis", "Zcaron", "aacute", "acircumflex", "adieresis", "agrave", "aring", "atilde", "ccedilla", "eacute", "ecircumflex", "edieresis", "egrave", "iacute", "icircumflex", "idieresis", "igrave", "ntilde", "oacute", "ocircumflex", "odieresis", "ograve", "otilde", "scaron", "uacute", "ucircumflex", "udieresis", "ugrave", "yacute", "ydieresis", "zcaron"];
          r2.ExpertCharset = [".notdef", "space", "exclamsmall", "Hungarumlautsmall", "dollaroldstyle", "dollarsuperior", "ampersandsmall", "Acutesmall", "parenleftsuperior", "parenrightsuperior", "twodotenleader", "onedotenleader", "comma", "hyphen", "period", "fraction", "zerooldstyle", "oneoldstyle", "twooldstyle", "threeoldstyle", "fouroldstyle", "fiveoldstyle", "sixoldstyle", "sevenoldstyle", "eightoldstyle", "nineoldstyle", "colon", "semicolon", "commasuperior", "threequartersemdash", "periodsuperior", "questionsmall", "asuperior", "bsuperior", "centsuperior", "dsuperior", "esuperior", "isuperior", "lsuperior", "msuperior", "nsuperior", "osuperior", "rsuperior", "ssuperior", "tsuperior", "ff", "fi", "fl", "ffi", "ffl", "parenleftinferior", "parenrightinferior", "Circumflexsmall", "hyphensuperior", "Gravesmall", "Asmall", "Bsmall", "Csmall", "Dsmall", "Esmall", "Fsmall", "Gsmall", "Hsmall", "Ismall", "Jsmall", "Ksmall", "Lsmall", "Msmall", "Nsmall", "Osmall", "Psmall", "Qsmall", "Rsmall", "Ssmall", "Tsmall", "Usmall", "Vsmall", "Wsmall", "Xsmall", "Ysmall", "Zsmall", "colonmonetary", "onefitted", "rupiah", "Tildesmall", "exclamdownsmall", "centoldstyle", "Lslashsmall", "Scaronsmall", "Zcaronsmall", "Dieresissmall", "Brevesmall", "Caronsmall", "Dotaccentsmall", "Macronsmall", "figuredash", "hypheninferior", "Ogoneksmall", "Ringsmall", "Cedillasmall", "onequarter", "onehalf", "threequarters", "questiondownsmall", "oneeighth", "threeeighths", "fiveeighths", "seveneighths", "onethird", "twothirds", "zerosuperior", "onesuperior", "twosuperior", "threesuperior", "foursuperior", "fivesuperior", "sixsuperior", "sevensuperior", "eightsuperior", "ninesuperior", "zeroinferior", "oneinferior", "twoinferior", "threeinferior", "fourinferior", "fiveinferior", "sixinferior", "seveninferior", "eightinferior", "nineinferior", "centinferior", "dollarinferior", "periodinferior", "commainferior", "Agravesmall", "Aacutesmall", "Acircumflexsmall", "Atildesmall", "Adieresissmall", "Aringsmall", "AEsmall", "Ccedillasmall", "Egravesmall", "Eacutesmall", "Ecircumflexsmall", "Edieresissmall", "Igravesmall", "Iacutesmall", "Icircumflexsmall", "Idieresissmall", "Ethsmall", "Ntildesmall", "Ogravesmall", "Oacutesmall", "Ocircumflexsmall", "Otildesmall", "Odieresissmall", "OEsmall", "Oslashsmall", "Ugravesmall", "Uacutesmall", "Ucircumflexsmall", "Udieresissmall", "Yacutesmall", "Thornsmall", "Ydieresissmall"];
          r2.ExpertSubsetCharset = [".notdef", "space", "dollaroldstyle", "dollarsuperior", "parenleftsuperior", "parenrightsuperior", "twodotenleader", "onedotenleader", "comma", "hyphen", "period", "fraction", "zerooldstyle", "oneoldstyle", "twooldstyle", "threeoldstyle", "fouroldstyle", "fiveoldstyle", "sixoldstyle", "sevenoldstyle", "eightoldstyle", "nineoldstyle", "colon", "semicolon", "commasuperior", "threequartersemdash", "periodsuperior", "asuperior", "bsuperior", "centsuperior", "dsuperior", "esuperior", "isuperior", "lsuperior", "msuperior", "nsuperior", "osuperior", "rsuperior", "ssuperior", "tsuperior", "ff", "fi", "fl", "ffi", "ffl", "parenleftinferior", "parenrightinferior", "hyphensuperior", "colonmonetary", "onefitted", "rupiah", "centoldstyle", "figuredash", "hypheninferior", "onequarter", "onehalf", "threequarters", "oneeighth", "threeeighths", "fiveeighths", "seveneighths", "onethird", "twothirds", "zerosuperior", "onesuperior", "twosuperior", "threesuperior", "foursuperior", "fivesuperior", "sixsuperior", "sevensuperior", "eightsuperior", "ninesuperior", "zeroinferior", "oneinferior", "twoinferior", "threeinferior", "fourinferior", "fiveinferior", "sixinferior", "seveninferior", "eightinferior", "nineinferior", "centinferior", "dollarinferior", "periodinferior", "commainferior"];
        }, (t2, r2, o2) => {
          "use strict";
          Object.defineProperty(r2, "__esModule", { value: true });
          r2.getSerifFonts = r2.getNonStdFontMap = r2.getGlyphMapForStandardFonts = r2.getFontNameToFileMap = void 0;
          r2.getStandardFontName = function getStandardFontName(t3) {
            var r3 = (0, l.normalizeFontName)(t3);
            return u()[r3];
          };
          r2.getSymbolsFonts = r2.getSupplementalGlyphMapForCalibri = r2.getSupplementalGlyphMapForArialBlack = r2.getStdFontMap = void 0;
          var c = o2(161), l = o2(171), u = (0, c.getLookupTableFactory)(function(t3) {
            t3["Times-Roman"] = "Times-Roman";
            t3.Helvetica = "Helvetica";
            t3.Courier = "Courier";
            t3.Symbol = "Symbol";
            t3["Times-Bold"] = "Times-Bold";
            t3["Helvetica-Bold"] = "Helvetica-Bold";
            t3["Courier-Bold"] = "Courier-Bold";
            t3.ZapfDingbats = "ZapfDingbats";
            t3["Times-Italic"] = "Times-Italic";
            t3["Helvetica-Oblique"] = "Helvetica-Oblique";
            t3["Courier-Oblique"] = "Courier-Oblique";
            t3["Times-BoldItalic"] = "Times-BoldItalic";
            t3["Helvetica-BoldOblique"] = "Helvetica-BoldOblique";
            t3["Courier-BoldOblique"] = "Courier-BoldOblique";
            t3.ArialNarrow = "Helvetica";
            t3["ArialNarrow-Bold"] = "Helvetica-Bold";
            t3["ArialNarrow-BoldItalic"] = "Helvetica-BoldOblique";
            t3["ArialNarrow-Italic"] = "Helvetica-Oblique";
            t3.ArialBlack = "Helvetica";
            t3["ArialBlack-Bold"] = "Helvetica-Bold";
            t3["ArialBlack-BoldItalic"] = "Helvetica-BoldOblique";
            t3["ArialBlack-Italic"] = "Helvetica-Oblique";
            t3["Arial-Black"] = "Helvetica";
            t3["Arial-Black-Bold"] = "Helvetica-Bold";
            t3["Arial-Black-BoldItalic"] = "Helvetica-BoldOblique";
            t3["Arial-Black-Italic"] = "Helvetica-Oblique";
            t3.Arial = "Helvetica";
            t3["Arial-Bold"] = "Helvetica-Bold";
            t3["Arial-BoldItalic"] = "Helvetica-BoldOblique";
            t3["Arial-Italic"] = "Helvetica-Oblique";
            t3["Arial-BoldItalicMT"] = "Helvetica-BoldOblique";
            t3["Arial-BoldMT"] = "Helvetica-Bold";
            t3["Arial-ItalicMT"] = "Helvetica-Oblique";
            t3.ArialMT = "Helvetica";
            t3["Courier-BoldItalic"] = "Courier-BoldOblique";
            t3["Courier-Italic"] = "Courier-Oblique";
            t3.CourierNew = "Courier";
            t3["CourierNew-Bold"] = "Courier-Bold";
            t3["CourierNew-BoldItalic"] = "Courier-BoldOblique";
            t3["CourierNew-Italic"] = "Courier-Oblique";
            t3["CourierNewPS-BoldItalicMT"] = "Courier-BoldOblique";
            t3["CourierNewPS-BoldMT"] = "Courier-Bold";
            t3["CourierNewPS-ItalicMT"] = "Courier-Oblique";
            t3.CourierNewPSMT = "Courier";
            t3["Helvetica-BoldItalic"] = "Helvetica-BoldOblique";
            t3["Helvetica-Italic"] = "Helvetica-Oblique";
            t3["Symbol-Bold"] = "Symbol";
            t3["Symbol-BoldItalic"] = "Symbol";
            t3["Symbol-Italic"] = "Symbol";
            t3.TimesNewRoman = "Times-Roman";
            t3["TimesNewRoman-Bold"] = "Times-Bold";
            t3["TimesNewRoman-BoldItalic"] = "Times-BoldItalic";
            t3["TimesNewRoman-Italic"] = "Times-Italic";
            t3.TimesNewRomanPS = "Times-Roman";
            t3["TimesNewRomanPS-Bold"] = "Times-Bold";
            t3["TimesNewRomanPS-BoldItalic"] = "Times-BoldItalic";
            t3["TimesNewRomanPS-BoldItalicMT"] = "Times-BoldItalic";
            t3["TimesNewRomanPS-BoldMT"] = "Times-Bold";
            t3["TimesNewRomanPS-Italic"] = "Times-Italic";
            t3["TimesNewRomanPS-ItalicMT"] = "Times-Italic";
            t3.TimesNewRomanPSMT = "Times-Roman";
            t3["TimesNewRomanPSMT-Bold"] = "Times-Bold";
            t3["TimesNewRomanPSMT-BoldItalic"] = "Times-BoldItalic";
            t3["TimesNewRomanPSMT-Italic"] = "Times-Italic";
          });
          r2.getStdFontMap = u;
          var h = (0, c.getLookupTableFactory)(function(t3) {
            t3.Courier = "FoxitFixed.pfb";
            t3["Courier-Bold"] = "FoxitFixedBold.pfb";
            t3["Courier-BoldOblique"] = "FoxitFixedBoldItalic.pfb";
            t3["Courier-Oblique"] = "FoxitFixedItalic.pfb";
            t3.Helvetica = "FoxitSans.pfb";
            t3["Helvetica-Bold"] = "FoxitSansBold.pfb";
            t3["Helvetica-BoldOblique"] = "FoxitSansBoldItalic.pfb";
            t3["Helvetica-Oblique"] = "FoxitSansItalic.pfb";
            t3["Times-Roman"] = "FoxitSerif.pfb";
            t3["Times-Bold"] = "FoxitSerifBold.pfb";
            t3["Times-BoldItalic"] = "FoxitSerifBoldItalic.pfb";
            t3["Times-Italic"] = "FoxitSerifItalic.pfb";
            t3.Symbol = "FoxitSymbol.pfb";
            t3.ZapfDingbats = "FoxitDingbats.pfb";
            t3["LiberationSans-Regular"] = "LiberationSans-Regular.ttf";
            t3["LiberationSans-Bold"] = "LiberationSans-Bold.ttf";
            t3["LiberationSans-Italic"] = "LiberationSans-Italic.ttf";
            t3["LiberationSans-BoldItalic"] = "LiberationSans-BoldItalic.ttf";
          });
          r2.getFontNameToFileMap = h;
          var d = (0, c.getLookupTableFactory)(function(t3) {
            t3.Calibri = "Helvetica";
            t3["Calibri-Bold"] = "Helvetica-Bold";
            t3["Calibri-BoldItalic"] = "Helvetica-BoldOblique";
            t3["Calibri-Italic"] = "Helvetica-Oblique";
            t3.CenturyGothic = "Helvetica";
            t3["CenturyGothic-Bold"] = "Helvetica-Bold";
            t3["CenturyGothic-BoldItalic"] = "Helvetica-BoldOblique";
            t3["CenturyGothic-Italic"] = "Helvetica-Oblique";
            t3.ComicSansMS = "Comic Sans MS";
            t3["ComicSansMS-Bold"] = "Comic Sans MS-Bold";
            t3["ComicSansMS-BoldItalic"] = "Comic Sans MS-BoldItalic";
            t3["ComicSansMS-Italic"] = "Comic Sans MS-Italic";
            t3["ItcSymbol-Bold"] = "Helvetica-Bold";
            t3["ItcSymbol-BoldItalic"] = "Helvetica-BoldOblique";
            t3["ItcSymbol-Book"] = "Helvetica";
            t3["ItcSymbol-BookItalic"] = "Helvetica-Oblique";
            t3["ItcSymbol-Medium"] = "Helvetica";
            t3["ItcSymbol-MediumItalic"] = "Helvetica-Oblique";
            t3.LucidaConsole = "Courier";
            t3["LucidaConsole-Bold"] = "Courier-Bold";
            t3["LucidaConsole-BoldItalic"] = "Courier-BoldOblique";
            t3["LucidaConsole-Italic"] = "Courier-Oblique";
            t3["LucidaSans-Demi"] = "Helvetica-Bold";
            t3["MS-Gothic"] = "MS Gothic";
            t3["MS-Gothic-Bold"] = "MS Gothic-Bold";
            t3["MS-Gothic-BoldItalic"] = "MS Gothic-BoldItalic";
            t3["MS-Gothic-Italic"] = "MS Gothic-Italic";
            t3["MS-Mincho"] = "MS Mincho";
            t3["MS-Mincho-Bold"] = "MS Mincho-Bold";
            t3["MS-Mincho-BoldItalic"] = "MS Mincho-BoldItalic";
            t3["MS-Mincho-Italic"] = "MS Mincho-Italic";
            t3["MS-PGothic"] = "MS PGothic";
            t3["MS-PGothic-Bold"] = "MS PGothic-Bold";
            t3["MS-PGothic-BoldItalic"] = "MS PGothic-BoldItalic";
            t3["MS-PGothic-Italic"] = "MS PGothic-Italic";
            t3["MS-PMincho"] = "MS PMincho";
            t3["MS-PMincho-Bold"] = "MS PMincho-Bold";
            t3["MS-PMincho-BoldItalic"] = "MS PMincho-BoldItalic";
            t3["MS-PMincho-Italic"] = "MS PMincho-Italic";
            t3.NuptialScript = "Times-Italic";
            t3.SegoeUISymbol = "Helvetica";
            t3.Wingdings = "ZapfDingbats";
            t3["Wingdings-Regular"] = "ZapfDingbats";
          });
          r2.getNonStdFontMap = d;
          var g = (0, c.getLookupTableFactory)(function(t3) {
            t3["Adobe Jenson"] = true;
            t3["Adobe Text"] = true;
            t3.Albertus = true;
            t3.Aldus = true;
            t3.Alexandria = true;
            t3.Algerian = true;
            t3["American Typewriter"] = true;
            t3.Antiqua = true;
            t3.Apex = true;
            t3.Arno = true;
            t3.Aster = true;
            t3.Aurora = true;
            t3.Baskerville = true;
            t3.Bell = true;
            t3.Bembo = true;
            t3["Bembo Schoolbook"] = true;
            t3.Benguiat = true;
            t3["Berkeley Old Style"] = true;
            t3["Bernhard Modern"] = true;
            t3["Berthold City"] = true;
            t3.Bodoni = true;
            t3["Bauer Bodoni"] = true;
            t3["Book Antiqua"] = true;
            t3.Bookman = true;
            t3["Bordeaux Roman"] = true;
            t3["Californian FB"] = true;
            t3.Calisto = true;
            t3.Calvert = true;
            t3.Capitals = true;
            t3.Cambria = true;
            t3.Cartier = true;
            t3.Caslon = true;
            t3.Catull = true;
            t3.Centaur = true;
            t3["Century Old Style"] = true;
            t3["Century Schoolbook"] = true;
            t3.Chaparral = true;
            t3["Charis SIL"] = true;
            t3.Cheltenham = true;
            t3["Cholla Slab"] = true;
            t3.Clarendon = true;
            t3.Clearface = true;
            t3.Cochin = true;
            t3.Colonna = true;
            t3["Computer Modern"] = true;
            t3["Concrete Roman"] = true;
            t3.Constantia = true;
            t3["Cooper Black"] = true;
            t3.Corona = true;
            t3.Ecotype = true;
            t3.Egyptienne = true;
            t3.Elephant = true;
            t3.Excelsior = true;
            t3.Fairfield = true;
            t3["FF Scala"] = true;
            t3.Folkard = true;
            t3.Footlight = true;
            t3.FreeSerif = true;
            t3["Friz Quadrata"] = true;
            t3.Garamond = true;
            t3.Gentium = true;
            t3.Georgia = true;
            t3.Gloucester = true;
            t3["Goudy Old Style"] = true;
            t3["Goudy Schoolbook"] = true;
            t3["Goudy Pro Font"] = true;
            t3.Granjon = true;
            t3["Guardian Egyptian"] = true;
            t3.Heather = true;
            t3.Hercules = true;
            t3["High Tower Text"] = true;
            t3.Hiroshige = true;
            t3["Hoefler Text"] = true;
            t3["Humana Serif"] = true;
            t3.Imprint = true;
            t3["Ionic No. 5"] = true;
            t3.Janson = true;
            t3.Joanna = true;
            t3.Korinna = true;
            t3.Lexicon = true;
            t3.LiberationSerif = true;
            t3["Liberation Serif"] = true;
            t3["Linux Libertine"] = true;
            t3.Literaturnaya = true;
            t3.Lucida = true;
            t3["Lucida Bright"] = true;
            t3.Melior = true;
            t3.Memphis = true;
            t3.Miller = true;
            t3.Minion = true;
            t3.Modern = true;
            t3["Mona Lisa"] = true;
            t3["Mrs Eaves"] = true;
            t3["MS Serif"] = true;
            t3["Museo Slab"] = true;
            t3["New York"] = true;
            t3["Nimbus Roman"] = true;
            t3["NPS Rawlinson Roadway"] = true;
            t3.NuptialScript = true;
            t3.Palatino = true;
            t3.Perpetua = true;
            t3.Plantin = true;
            t3["Plantin Schoolbook"] = true;
            t3.Playbill = true;
            t3["Poor Richard"] = true;
            t3["Rawlinson Roadway"] = true;
            t3.Renault = true;
            t3.Requiem = true;
            t3.Rockwell = true;
            t3.Roman = true;
            t3["Rotis Serif"] = true;
            t3.Sabon = true;
            t3.Scala = true;
            t3.Seagull = true;
            t3.Sistina = true;
            t3.Souvenir = true;
            t3.STIX = true;
            t3["Stone Informal"] = true;
            t3["Stone Serif"] = true;
            t3.Sylfaen = true;
            t3.Times = true;
            t3.Trajan = true;
            t3["Trinit\xE9"] = true;
            t3["Trump Mediaeval"] = true;
            t3.Utopia = true;
            t3["Vale Type"] = true;
            t3["Bitstream Vera"] = true;
            t3["Vera Serif"] = true;
            t3.Versailles = true;
            t3.Wanted = true;
            t3.Weiss = true;
            t3["Wide Latin"] = true;
            t3.Windsor = true;
            t3.XITS = true;
          });
          r2.getSerifFonts = g;
          var m = (0, c.getLookupTableFactory)(function(t3) {
            t3.Dingbats = true;
            t3.Symbol = true;
            t3.ZapfDingbats = true;
          });
          r2.getSymbolsFonts = m;
          var y = (0, c.getLookupTableFactory)(function(t3) {
            t3[2] = 10;
            t3[3] = 32;
            t3[4] = 33;
            t3[5] = 34;
            t3[6] = 35;
            t3[7] = 36;
            t3[8] = 37;
            t3[9] = 38;
            t3[10] = 39;
            t3[11] = 40;
            t3[12] = 41;
            t3[13] = 42;
            t3[14] = 43;
            t3[15] = 44;
            t3[16] = 45;
            t3[17] = 46;
            t3[18] = 47;
            t3[19] = 48;
            t3[20] = 49;
            t3[21] = 50;
            t3[22] = 51;
            t3[23] = 52;
            t3[24] = 53;
            t3[25] = 54;
            t3[26] = 55;
            t3[27] = 56;
            t3[28] = 57;
            t3[29] = 58;
            t3[30] = 894;
            t3[31] = 60;
            t3[32] = 61;
            t3[33] = 62;
            t3[34] = 63;
            t3[35] = 64;
            t3[36] = 65;
            t3[37] = 66;
            t3[38] = 67;
            t3[39] = 68;
            t3[40] = 69;
            t3[41] = 70;
            t3[42] = 71;
            t3[43] = 72;
            t3[44] = 73;
            t3[45] = 74;
            t3[46] = 75;
            t3[47] = 76;
            t3[48] = 77;
            t3[49] = 78;
            t3[50] = 79;
            t3[51] = 80;
            t3[52] = 81;
            t3[53] = 82;
            t3[54] = 83;
            t3[55] = 84;
            t3[56] = 85;
            t3[57] = 86;
            t3[58] = 87;
            t3[59] = 88;
            t3[60] = 89;
            t3[61] = 90;
            t3[62] = 91;
            t3[63] = 92;
            t3[64] = 93;
            t3[65] = 94;
            t3[66] = 95;
            t3[67] = 96;
            t3[68] = 97;
            t3[69] = 98;
            t3[70] = 99;
            t3[71] = 100;
            t3[72] = 101;
            t3[73] = 102;
            t3[74] = 103;
            t3[75] = 104;
            t3[76] = 105;
            t3[77] = 106;
            t3[78] = 107;
            t3[79] = 108;
            t3[80] = 109;
            t3[81] = 110;
            t3[82] = 111;
            t3[83] = 112;
            t3[84] = 113;
            t3[85] = 114;
            t3[86] = 115;
            t3[87] = 116;
            t3[88] = 117;
            t3[89] = 118;
            t3[90] = 119;
            t3[91] = 120;
            t3[92] = 121;
            t3[93] = 122;
            t3[94] = 123;
            t3[95] = 124;
            t3[96] = 125;
            t3[97] = 126;
            t3[98] = 196;
            t3[99] = 197;
            t3[100] = 199;
            t3[101] = 201;
            t3[102] = 209;
            t3[103] = 214;
            t3[104] = 220;
            t3[105] = 225;
            t3[106] = 224;
            t3[107] = 226;
            t3[108] = 228;
            t3[109] = 227;
            t3[110] = 229;
            t3[111] = 231;
            t3[112] = 233;
            t3[113] = 232;
            t3[114] = 234;
            t3[115] = 235;
            t3[116] = 237;
            t3[117] = 236;
            t3[118] = 238;
            t3[119] = 239;
            t3[120] = 241;
            t3[121] = 243;
            t3[122] = 242;
            t3[123] = 244;
            t3[124] = 246;
            t3[125] = 245;
            t3[126] = 250;
            t3[127] = 249;
            t3[128] = 251;
            t3[129] = 252;
            t3[130] = 8224;
            t3[131] = 176;
            t3[132] = 162;
            t3[133] = 163;
            t3[134] = 167;
            t3[135] = 8226;
            t3[136] = 182;
            t3[137] = 223;
            t3[138] = 174;
            t3[139] = 169;
            t3[140] = 8482;
            t3[141] = 180;
            t3[142] = 168;
            t3[143] = 8800;
            t3[144] = 198;
            t3[145] = 216;
            t3[146] = 8734;
            t3[147] = 177;
            t3[148] = 8804;
            t3[149] = 8805;
            t3[150] = 165;
            t3[151] = 181;
            t3[152] = 8706;
            t3[153] = 8721;
            t3[154] = 8719;
            t3[156] = 8747;
            t3[157] = 170;
            t3[158] = 186;
            t3[159] = 8486;
            t3[160] = 230;
            t3[161] = 248;
            t3[162] = 191;
            t3[163] = 161;
            t3[164] = 172;
            t3[165] = 8730;
            t3[166] = 402;
            t3[167] = 8776;
            t3[168] = 8710;
            t3[169] = 171;
            t3[170] = 187;
            t3[171] = 8230;
            t3[200] = 193;
            t3[203] = 205;
            t3[210] = 218;
            t3[223] = 711;
            t3[224] = 321;
            t3[225] = 322;
            t3[226] = 352;
            t3[227] = 353;
            t3[228] = 381;
            t3[229] = 382;
            t3[233] = 221;
            t3[234] = 253;
            t3[252] = 263;
            t3[253] = 268;
            t3[254] = 269;
            t3[258] = 258;
            t3[260] = 260;
            t3[261] = 261;
            t3[265] = 280;
            t3[266] = 281;
            t3[267] = 282;
            t3[268] = 283;
            t3[269] = 313;
            t3[275] = 323;
            t3[276] = 324;
            t3[278] = 328;
            t3[283] = 344;
            t3[284] = 345;
            t3[285] = 346;
            t3[286] = 347;
            t3[292] = 367;
            t3[295] = 377;
            t3[296] = 378;
            t3[298] = 380;
            t3[305] = 963;
            t3[306] = 964;
            t3[307] = 966;
            t3[308] = 8215;
            t3[309] = 8252;
            t3[310] = 8319;
            t3[311] = 8359;
            t3[312] = 8592;
            t3[313] = 8593;
            t3[337] = 9552;
            t3[493] = 1039;
            t3[494] = 1040;
            t3[705] = 1524;
            t3[706] = 8362;
            t3[710] = 64288;
            t3[711] = 64298;
            t3[759] = 1617;
            t3[761] = 1776;
            t3[763] = 1778;
            t3[775] = 1652;
            t3[777] = 1764;
            t3[778] = 1780;
            t3[779] = 1781;
            t3[780] = 1782;
            t3[782] = 771;
            t3[783] = 64726;
            t3[786] = 8363;
            t3[788] = 8532;
            t3[790] = 768;
            t3[791] = 769;
            t3[792] = 768;
            t3[795] = 803;
            t3[797] = 64336;
            t3[798] = 64337;
            t3[799] = 64342;
            t3[800] = 64343;
            t3[801] = 64344;
            t3[802] = 64345;
            t3[803] = 64362;
            t3[804] = 64363;
            t3[805] = 64364;
            t3[2424] = 7821;
            t3[2425] = 7822;
            t3[2426] = 7823;
            t3[2427] = 7824;
            t3[2428] = 7825;
            t3[2429] = 7826;
            t3[2430] = 7827;
            t3[2433] = 7682;
            t3[2678] = 8045;
            t3[2679] = 8046;
            t3[2830] = 1552;
            t3[2838] = 686;
            t3[2840] = 751;
            t3[2842] = 753;
            t3[2843] = 754;
            t3[2844] = 755;
            t3[2846] = 757;
            t3[2856] = 767;
            t3[2857] = 848;
            t3[2858] = 849;
            t3[2862] = 853;
            t3[2863] = 854;
            t3[2864] = 855;
            t3[2865] = 861;
            t3[2866] = 862;
            t3[2906] = 7460;
            t3[2908] = 7462;
            t3[2909] = 7463;
            t3[2910] = 7464;
            t3[2912] = 7466;
            t3[2913] = 7467;
            t3[2914] = 7468;
            t3[2916] = 7470;
            t3[2917] = 7471;
            t3[2918] = 7472;
            t3[2920] = 7474;
            t3[2921] = 7475;
            t3[2922] = 7476;
            t3[2924] = 7478;
            t3[2925] = 7479;
            t3[2926] = 7480;
            t3[2928] = 7482;
            t3[2929] = 7483;
            t3[2930] = 7484;
            t3[2932] = 7486;
            t3[2933] = 7487;
            t3[2934] = 7488;
            t3[2936] = 7490;
            t3[2937] = 7491;
            t3[2938] = 7492;
            t3[2940] = 7494;
            t3[2941] = 7495;
            t3[2942] = 7496;
            t3[2944] = 7498;
            t3[2946] = 7500;
            t3[2948] = 7502;
            t3[2950] = 7504;
            t3[2951] = 7505;
            t3[2952] = 7506;
            t3[2954] = 7508;
            t3[2955] = 7509;
            t3[2956] = 7510;
            t3[2958] = 7512;
            t3[2959] = 7513;
            t3[2960] = 7514;
            t3[2962] = 7516;
            t3[2963] = 7517;
            t3[2964] = 7518;
            t3[2966] = 7520;
            t3[2967] = 7521;
            t3[2968] = 7522;
            t3[2970] = 7524;
            t3[2971] = 7525;
            t3[2972] = 7526;
            t3[2974] = 7528;
            t3[2975] = 7529;
            t3[2976] = 7530;
            t3[2978] = 1537;
            t3[2979] = 1538;
            t3[2980] = 1539;
            t3[2982] = 1549;
            t3[2983] = 1551;
            t3[2984] = 1552;
            t3[2986] = 1554;
            t3[2987] = 1555;
            t3[2988] = 1556;
            t3[2990] = 1623;
            t3[2991] = 1624;
            t3[2995] = 1775;
            t3[2999] = 1791;
            t3[3002] = 64290;
            t3[3003] = 64291;
            t3[3004] = 64292;
            t3[3006] = 64294;
            t3[3007] = 64295;
            t3[3008] = 64296;
            t3[3011] = 1900;
            t3[3014] = 8223;
            t3[3015] = 8244;
            t3[3017] = 7532;
            t3[3018] = 7533;
            t3[3019] = 7534;
            t3[3075] = 7590;
            t3[3076] = 7591;
            t3[3079] = 7594;
            t3[3080] = 7595;
            t3[3083] = 7598;
            t3[3084] = 7599;
            t3[3087] = 7602;
            t3[3088] = 7603;
            t3[3091] = 7606;
            t3[3092] = 7607;
            t3[3095] = 7610;
            t3[3096] = 7611;
            t3[3099] = 7614;
            t3[3100] = 7615;
            t3[3103] = 7618;
            t3[3104] = 7619;
            t3[3107] = 8337;
            t3[3108] = 8338;
            t3[3116] = 1884;
            t3[3119] = 1885;
            t3[3120] = 1885;
            t3[3123] = 1886;
            t3[3124] = 1886;
            t3[3127] = 1887;
            t3[3128] = 1887;
            t3[3131] = 1888;
            t3[3132] = 1888;
            t3[3135] = 1889;
            t3[3136] = 1889;
            t3[3139] = 1890;
            t3[3140] = 1890;
            t3[3143] = 1891;
            t3[3144] = 1891;
            t3[3147] = 1892;
            t3[3148] = 1892;
            t3[3153] = 580;
            t3[3154] = 581;
            t3[3157] = 584;
            t3[3158] = 585;
            t3[3161] = 588;
            t3[3162] = 589;
            t3[3165] = 891;
            t3[3166] = 892;
            t3[3169] = 1274;
            t3[3170] = 1275;
            t3[3173] = 1278;
            t3[3174] = 1279;
            t3[3181] = 7622;
            t3[3182] = 7623;
            t3[3282] = 11799;
            t3[3316] = 578;
            t3[3379] = 42785;
            t3[3393] = 1159;
            t3[3416] = 8377;
          });
          r2.getGlyphMapForStandardFonts = y;
          var v = (0, c.getLookupTableFactory)(function(t3) {
            t3[227] = 322;
            t3[264] = 261;
            t3[291] = 346;
          });
          r2.getSupplementalGlyphMapForArialBlack = v;
          var k = (0, c.getLookupTableFactory)(function(t3) {
            t3[1] = 32;
            t3[4] = 65;
            t3[6] = 193;
            t3[17] = 66;
            t3[18] = 67;
            t3[21] = 268;
            t3[24] = 68;
            t3[28] = 69;
            t3[30] = 201;
            t3[32] = 282;
            t3[38] = 70;
            t3[39] = 71;
            t3[44] = 72;
            t3[47] = 73;
            t3[49] = 205;
            t3[58] = 74;
            t3[60] = 75;
            t3[62] = 76;
            t3[68] = 77;
            t3[69] = 78;
            t3[75] = 79;
            t3[87] = 80;
            t3[89] = 81;
            t3[90] = 82;
            t3[92] = 344;
            t3[94] = 83;
            t3[97] = 352;
            t3[100] = 84;
            t3[104] = 85;
            t3[115] = 86;
            t3[116] = 87;
            t3[121] = 88;
            t3[122] = 89;
            t3[124] = 221;
            t3[127] = 90;
            t3[129] = 381;
            t3[258] = 97;
            t3[260] = 225;
            t3[268] = 261;
            t3[271] = 98;
            t3[272] = 99;
            t3[273] = 263;
            t3[275] = 269;
            t3[282] = 100;
            t3[286] = 101;
            t3[288] = 233;
            t3[290] = 283;
            t3[295] = 281;
            t3[296] = 102;
            t3[336] = 103;
            t3[346] = 104;
            t3[349] = 105;
            t3[351] = 237;
            t3[361] = 106;
            t3[364] = 107;
            t3[367] = 108;
            t3[371] = 322;
            t3[373] = 109;
            t3[374] = 110;
            t3[381] = 111;
            t3[383] = 243;
            t3[393] = 112;
            t3[395] = 113;
            t3[396] = 114;
            t3[398] = 345;
            t3[400] = 115;
            t3[401] = 347;
            t3[403] = 353;
            t3[410] = 116;
            t3[437] = 117;
            t3[448] = 118;
            t3[449] = 119;
            t3[454] = 120;
            t3[455] = 121;
            t3[457] = 253;
            t3[460] = 122;
            t3[462] = 382;
            t3[463] = 380;
            t3[853] = 44;
            t3[855] = 58;
            t3[856] = 46;
            t3[876] = 47;
            t3[878] = 45;
            t3[882] = 45;
            t3[894] = 40;
            t3[895] = 41;
            t3[896] = 91;
            t3[897] = 93;
            t3[923] = 64;
            t3[1004] = 48;
            t3[1005] = 49;
            t3[1006] = 50;
            t3[1007] = 51;
            t3[1008] = 52;
            t3[1009] = 53;
            t3[1010] = 54;
            t3[1011] = 55;
            t3[1012] = 56;
            t3[1013] = 57;
            t3[1081] = 37;
            t3[1085] = 43;
            t3[1086] = 45;
          });
          r2.getSupplementalGlyphMapForCalibri = k;
        }, (t2, r2, o2) => {
          "use strict";
          Object.defineProperty(r2, "__esModule", { value: true });
          r2.ToUnicodeMap = r2.IdentityToUnicodeMap = void 0;
          var c = o2(4);
          function _classCallCheck(t3, r3) {
            if (!(t3 instanceof r3))
              throw new TypeError("Cannot call a class as a function");
          }
          function _defineProperties(t3, r3) {
            for (var o3 = 0; o3 < r3.length; o3++) {
              var c2 = r3[o3];
              c2.enumerable = c2.enumerable || false;
              c2.configurable = true;
              "value" in c2 && (c2.writable = true);
              Object.defineProperty(t3, c2.key, c2);
            }
          }
          function _createClass(t3, r3, o3) {
            r3 && _defineProperties(t3.prototype, r3);
            o3 && _defineProperties(t3, o3);
            Object.defineProperty(t3, "prototype", { writable: false });
            return t3;
          }
          var l = function() {
            function ToUnicodeMap() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [];
              _classCallCheck(this, ToUnicodeMap);
              this._map = t3;
            }
            _createClass(ToUnicodeMap, [{ key: "length", get: function get() {
              return this._map.length;
            } }, { key: "forEach", value: function forEach(t3) {
              for (var r3 in this._map)
                t3(r3, this._map[r3].charCodeAt(0));
            } }, { key: "has", value: function has(t3) {
              return this._map[t3] !== void 0;
            } }, { key: "get", value: function get(t3) {
              return this._map[t3];
            } }, { key: "charCodeOf", value: function charCodeOf(t3) {
              var r3 = this._map;
              if (r3.length <= 65536)
                return r3.indexOf(t3);
              for (var o3 in r3)
                if (r3[o3] === t3)
                  return 0 | o3;
              return -1;
            } }, { key: "amend", value: function amend(t3) {
              for (var r3 in t3)
                this._map[r3] = t3[r3];
            } }]);
            return ToUnicodeMap;
          }();
          r2.ToUnicodeMap = l;
          var u = function() {
            function IdentityToUnicodeMap(t3, r3) {
              _classCallCheck(this, IdentityToUnicodeMap);
              this.firstChar = t3;
              this.lastChar = r3;
            }
            _createClass(IdentityToUnicodeMap, [{ key: "length", get: function get() {
              return this.lastChar + 1 - this.firstChar;
            } }, { key: "forEach", value: function forEach(t3) {
              for (var r3 = this.firstChar, o3 = this.lastChar; r3 <= o3; r3++)
                t3(r3, r3);
            } }, { key: "has", value: function has(t3) {
              return this.firstChar <= t3 && t3 <= this.lastChar;
            } }, { key: "get", value: function get(t3) {
              if (this.firstChar <= t3 && t3 <= this.lastChar)
                return String.fromCharCode(t3);
            } }, { key: "charCodeOf", value: function charCodeOf(t3) {
              return Number.isInteger(t3) && t3 >= this.firstChar && t3 <= this.lastChar ? t3 : -1;
            } }, { key: "amend", value: function amend(t3) {
              (0, c.unreachable)("Should not call amend()");
            } }]);
            return IdentityToUnicodeMap;
          }();
          r2.IdentityToUnicodeMap = u;
        }, (t2, r2, o2) => {
          "use strict";
          Object.defineProperty(r2, "__esModule", { value: true });
          r2.CFFFont = void 0;
          var c = o2(198), l = o2(171), u = o2(4);
          function _defineProperties(t3, r3) {
            for (var o3 = 0; o3 < r3.length; o3++) {
              var c2 = r3[o3];
              c2.enumerable = c2.enumerable || false;
              c2.configurable = true;
              "value" in c2 && (c2.writable = true);
              Object.defineProperty(t3, c2.key, c2);
            }
          }
          var h = function() {
            function CFFFont(t3, r3) {
              !function _classCallCheck(t4, r4) {
                if (!(t4 instanceof r4))
                  throw new TypeError("Cannot call a class as a function");
              }(this, CFFFont);
              this.properties = r3;
              var o3 = new c.CFFParser(t3, r3, l.SEAC_ANALYSIS_ENABLED);
              this.cff = o3.parse();
              this.cff.duplicateFirstGlyph();
              var h2 = new c.CFFCompiler(this.cff);
              this.seacs = this.cff.seacs;
              try {
                this.data = h2.compile();
              } catch (o4) {
                (0, u.warn)("Failed to compile font " + r3.loadedName);
                this.data = t3;
              }
              this._createBuiltInEncoding();
            }
            !function _createClass(t3, r3, o3) {
              r3 && _defineProperties(t3.prototype, r3);
              o3 && _defineProperties(t3, o3);
              Object.defineProperty(t3, "prototype", { writable: false });
              return t3;
            }(CFFFont, [{ key: "numGlyphs", get: function get() {
              return this.cff.charStrings.count;
            } }, { key: "getCharset", value: function getCharset() {
              return this.cff.charset.charset;
            } }, { key: "getGlyphMapping", value: function getGlyphMapping() {
              var t3, r3, o3 = this.cff, c2 = this.properties, u2 = o3.charset.charset;
              if (c2.composite) {
                t3 = /* @__PURE__ */ Object.create(null);
                if (o3.isCIDFont)
                  for (r3 = 0; r3 < u2.length; r3++) {
                    var h2 = u2[r3];
                    t3[c2.cMap.charCodeOf(h2)] = r3;
                  }
                else
                  for (r3 = 0; r3 < o3.charStrings.count; r3++)
                    t3[c2.cMap.charCodeOf(r3)] = r3;
                return t3;
              }
              var d = o3.encoding ? o3.encoding.encoding : null;
              c2.isInternalFont && (d = c2.defaultEncoding);
              return t3 = (0, l.type1FontGlyphMapping)(c2, d, u2);
            } }, { key: "hasGlyphId", value: function hasGlyphId(t3) {
              return this.cff.hasGlyphId(t3);
            } }, { key: "_createBuiltInEncoding", value: function _createBuiltInEncoding() {
              var t3 = this.cff, r3 = t3.charset, o3 = t3.encoding;
              if (r3 && o3) {
                var c2 = r3.charset, l2 = o3.encoding, u2 = [];
                for (var h2 in l2) {
                  var d = l2[h2];
                  if (d >= 0) {
                    var g = c2[d];
                    g && (u2[h2] = g);
                  }
                }
                u2.length > 0 && (this.properties.builtInEncoding = u2);
              }
            } }]);
            return CFFFont;
          }();
          r2.CFFFont = h;
        }, (t2, r2, o2) => {
          "use strict";
          function _typeof(t3) {
            return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t4) {
              return typeof t4;
            } : function(t4) {
              return t4 && typeof Symbol == "function" && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
            }, _typeof(t3);
          }
          Object.defineProperty(r2, "__esModule", { value: true });
          r2.FontRendererFactory = void 0;
          var c = o2(4), l = o2(198), u = o2(173), h = o2(172), d = o2(163);
          function _inherits(t3, r3) {
            if (typeof r3 != "function" && r3 !== null)
              throw new TypeError("Super expression must either be null or a function");
            t3.prototype = Object.create(r3 && r3.prototype, { constructor: { value: t3, writable: true, configurable: true } });
            Object.defineProperty(t3, "prototype", { writable: false });
            r3 && _setPrototypeOf(t3, r3);
          }
          function _setPrototypeOf(t3, r3) {
            _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(t4, r4) {
              t4.__proto__ = r4;
              return t4;
            };
            return _setPrototypeOf(t3, r3);
          }
          function _createSuper(t3) {
            var r3 = function _isNativeReflectConstruct() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                }));
                return true;
              } catch (t4) {
                return false;
              }
            }();
            return function _createSuperInternal() {
              var o3, c2 = _getPrototypeOf(t3);
              if (r3) {
                var l2 = _getPrototypeOf(this).constructor;
                o3 = Reflect.construct(c2, arguments, l2);
              } else
                o3 = c2.apply(this, arguments);
              return _possibleConstructorReturn(this, o3);
            };
          }
          function _possibleConstructorReturn(t3, r3) {
            if (r3 && (_typeof(r3) === "object" || typeof r3 == "function"))
              return r3;
            if (r3 !== void 0)
              throw new TypeError("Derived constructors may only return object or undefined");
            return function _assertThisInitialized(t4) {
              if (t4 === void 0)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return t4;
            }(t3);
          }
          function _getPrototypeOf(t3) {
            _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(t4) {
              return t4.__proto__ || Object.getPrototypeOf(t4);
            };
            return _getPrototypeOf(t3);
          }
          function _classCallCheck(t3, r3) {
            if (!(t3 instanceof r3))
              throw new TypeError("Cannot call a class as a function");
          }
          function _defineProperties(t3, r3) {
            for (var o3 = 0; o3 < r3.length; o3++) {
              var c2 = r3[o3];
              c2.enumerable = c2.enumerable || false;
              c2.configurable = true;
              "value" in c2 && (c2.writable = true);
              Object.defineProperty(t3, c2.key, c2);
            }
          }
          function _createClass(t3, r3, o3) {
            r3 && _defineProperties(t3.prototype, r3);
            o3 && _defineProperties(t3, o3);
            Object.defineProperty(t3, "prototype", { writable: false });
            return t3;
          }
          function getUint32(t3, r3) {
            return (t3[r3] << 24 | t3[r3 + 1] << 16 | t3[r3 + 2] << 8 | t3[r3 + 3]) >>> 0;
          }
          function getUint16(t3, r3) {
            return t3[r3] << 8 | t3[r3 + 1];
          }
          function getInt16(t3, r3) {
            return (t3[r3] << 24 | t3[r3 + 1] << 16) >> 16;
          }
          function getInt8(t3, r3) {
            return t3[r3] << 24 >> 24;
          }
          function getFloat214(t3, r3) {
            return getInt16(t3, r3) / 16384;
          }
          function getSubroutineBias(t3) {
            var r3 = t3.length, o3 = 32768;
            r3 < 1240 ? o3 = 107 : r3 < 33900 && (o3 = 1131);
            return o3;
          }
          function parseCmap(t3, r3, o3) {
            var l2, u2, h2, d2 = getUint16(t3, r3 + 2) === 1 ? getUint32(t3, r3 + 8) : getUint32(t3, r3 + 16), g2 = getUint16(t3, r3 + d2);
            if (g2 === 4) {
              getUint16(t3, r3 + d2 + 2);
              var m2 = getUint16(t3, r3 + d2 + 6) >> 1;
              u2 = r3 + d2 + 14;
              l2 = [];
              for (h2 = 0; h2 < m2; h2++, u2 += 2)
                l2[h2] = { end: getUint16(t3, u2) };
              u2 += 2;
              for (h2 = 0; h2 < m2; h2++, u2 += 2)
                l2[h2].start = getUint16(t3, u2);
              for (h2 = 0; h2 < m2; h2++, u2 += 2)
                l2[h2].idDelta = getUint16(t3, u2);
              for (h2 = 0; h2 < m2; h2++, u2 += 2) {
                var y2 = getUint16(t3, u2);
                if (y2 !== 0) {
                  l2[h2].ids = [];
                  for (var v2 = 0, k2 = l2[h2].end - l2[h2].start + 1; v2 < k2; v2++) {
                    l2[h2].ids[v2] = getUint16(t3, u2 + y2);
                    y2 += 2;
                  }
                }
              }
              return l2;
            }
            if (g2 === 12) {
              var _ = getUint32(t3, r3 + d2 + 12);
              u2 = r3 + d2 + 16;
              l2 = [];
              for (h2 = 0; h2 < _; h2++) {
                r3 = getUint32(t3, u2);
                l2.push({ start: r3, end: getUint32(t3, u2 + 4), idDelta: getUint32(t3, u2 + 8) - r3 });
                u2 += 12;
              }
              return l2;
            }
            throw new c.FormatError("unsupported cmap: ".concat(g2));
          }
          function parseCff(t3, r3, o3, c2) {
            var u2 = new l.CFFParser(new d.Stream(t3, r3, o3 - r3), {}, c2).parse();
            return { glyphs: u2.charStrings.objects, subrs: u2.topDict.privateDict && u2.topDict.privateDict.subrsIndex && u2.topDict.privateDict.subrsIndex.objects, gsubrs: u2.globalSubrIndex && u2.globalSubrIndex.objects, isCFFCIDFont: u2.isCIDFont, fdSelect: u2.fdSelect, fdArray: u2.fdArray };
          }
          function lookupCmap(t3, r3) {
            for (var o3 = r3.codePointAt(0), c2 = 0, l2 = 0, u2 = t3.length - 1; l2 < u2; ) {
              var h2 = l2 + u2 + 1 >> 1;
              o3 < t3[h2].start ? u2 = h2 - 1 : l2 = h2;
            }
            t3[l2].start <= o3 && o3 <= t3[l2].end && (c2 = t3[l2].idDelta + (t3[l2].ids ? t3[l2].ids[o3 - t3[l2].start] : o3) & 65535);
            return { charCode: o3, glyphId: c2 };
          }
          function compileGlyf(t3, r3, o3) {
            function moveTo(t4, o4) {
              r3.push({ cmd: "moveTo", args: [t4, o4] });
            }
            function lineTo(t4, o4) {
              r3.push({ cmd: "lineTo", args: [t4, o4] });
            }
            function quadraticCurveTo(t4, o4, c3, l3) {
              r3.push({ cmd: "quadraticCurveTo", args: [t4, o4, c3, l3] });
            }
            var c2, l2 = 0, u2 = getInt16(t3, l2), h2 = 0, d2 = 0;
            l2 += 10;
            if (u2 < 0)
              do {
                c2 = getUint16(t3, l2);
                var g2 = getUint16(t3, l2 + 2);
                l2 += 4;
                var m2 = void 0, y2 = void 0;
                if (1 & c2) {
                  if (2 & c2) {
                    m2 = getInt16(t3, l2);
                    y2 = getInt16(t3, l2 + 2);
                  } else {
                    m2 = getUint16(t3, l2);
                    y2 = getUint16(t3, l2 + 2);
                  }
                  l2 += 4;
                } else if (2 & c2) {
                  m2 = getInt8(t3, l2++);
                  y2 = getInt8(t3, l2++);
                } else {
                  m2 = t3[l2++];
                  y2 = t3[l2++];
                }
                if (2 & c2) {
                  h2 = m2;
                  d2 = y2;
                } else {
                  h2 = 0;
                  d2 = 0;
                }
                var v2 = 1, k2 = 1, _ = 0, w = 0;
                if (8 & c2) {
                  v2 = k2 = getFloat214(t3, l2);
                  l2 += 2;
                } else if (64 & c2) {
                  v2 = getFloat214(t3, l2);
                  k2 = getFloat214(t3, l2 + 2);
                  l2 += 4;
                } else if (128 & c2) {
                  v2 = getFloat214(t3, l2);
                  _ = getFloat214(t3, l2 + 2);
                  w = getFloat214(t3, l2 + 4);
                  k2 = getFloat214(t3, l2 + 6);
                  l2 += 8;
                }
                var S = o3.glyphs[g2];
                if (S) {
                  r3.push({ cmd: "save" }, { cmd: "transform", args: [v2, _, w, k2, h2, d2] });
                  compileGlyf(S, r3, o3);
                  r3.push({ cmd: "restore" });
                }
              } while (32 & c2);
            else {
              var C, x, O = [];
              for (C = 0; C < u2; C++) {
                O.push(getUint16(t3, l2));
                l2 += 2;
              }
              l2 += 2 + getUint16(t3, l2);
              for (var T = O[O.length - 1] + 1, E = []; E.length < T; ) {
                var M = 1;
                8 & (c2 = t3[l2++]) && (M += t3[l2++]);
                for (; M-- > 0; )
                  E.push({ flags: c2 });
              }
              for (C = 0; C < T; C++) {
                switch (18 & E[C].flags) {
                  case 0:
                    h2 += getInt16(t3, l2);
                    l2 += 2;
                    break;
                  case 2:
                    h2 -= t3[l2++];
                    break;
                  case 18:
                    h2 += t3[l2++];
                }
                E[C].x = h2;
              }
              for (C = 0; C < T; C++) {
                switch (36 & E[C].flags) {
                  case 0:
                    d2 += getInt16(t3, l2);
                    l2 += 2;
                    break;
                  case 4:
                    d2 -= t3[l2++];
                    break;
                  case 36:
                    d2 += t3[l2++];
                }
                E[C].y = d2;
              }
              var R = 0;
              for (l2 = 0; l2 < u2; l2++) {
                var D = O[l2], j = E.slice(R, D + 1);
                if (1 & j[0].flags)
                  j.push(j[0]);
                else if (1 & j[j.length - 1].flags)
                  j.unshift(j[j.length - 1]);
                else {
                  var L = { flags: 1, x: (j[0].x + j[j.length - 1].x) / 2, y: (j[0].y + j[j.length - 1].y) / 2 };
                  j.unshift(L);
                  j.push(L);
                }
                moveTo(j[0].x, j[0].y);
                for (C = 1, x = j.length; C < x; C++)
                  if (1 & j[C].flags)
                    lineTo(j[C].x, j[C].y);
                  else if (1 & j[C + 1].flags) {
                    quadraticCurveTo(j[C].x, j[C].y, j[C + 1].x, j[C + 1].y);
                    C++;
                  } else
                    quadraticCurveTo(j[C].x, j[C].y, (j[C].x + j[C + 1].x) / 2, (j[C].y + j[C + 1].y) / 2);
                R = D + 1;
              }
            }
          }
          function compileCharString(t3, r3, o3, l2) {
            function moveTo(t4, o4) {
              r3.push({ cmd: "moveTo", args: [t4, o4] });
            }
            function lineTo(t4, o4) {
              r3.push({ cmd: "lineTo", args: [t4, o4] });
            }
            function bezierCurveTo(t4, o4, c2, l3, u3, h2) {
              r3.push({ cmd: "bezierCurveTo", args: [t4, o4, c2, l3, u3, h2] });
            }
            var u2 = [], d2 = 0, g2 = 0, m2 = 0;
            !function parse(t4) {
              for (var y2 = 0; y2 < t4.length; ) {
                var v2 = false, k2 = t4[y2++], _ = void 0, w = void 0, S = void 0, C = void 0, x = void 0, O = void 0, T = void 0, E = void 0;
                switch (k2) {
                  case 1:
                  case 3:
                  case 18:
                  case 23:
                    m2 += u2.length >> 1;
                    v2 = true;
                    break;
                  case 4:
                    g2 += u2.pop();
                    moveTo(d2, g2);
                    v2 = true;
                    break;
                  case 5:
                    for (; u2.length > 0; ) {
                      d2 += u2.shift();
                      g2 += u2.shift();
                      lineTo(d2, g2);
                    }
                    break;
                  case 6:
                    for (; u2.length > 0; ) {
                      lineTo(d2 += u2.shift(), g2);
                      if (u2.length === 0)
                        break;
                      g2 += u2.shift();
                      lineTo(d2, g2);
                    }
                    break;
                  case 7:
                    for (; u2.length > 0; ) {
                      g2 += u2.shift();
                      lineTo(d2, g2);
                      if (u2.length === 0)
                        break;
                      lineTo(d2 += u2.shift(), g2);
                    }
                    break;
                  case 8:
                    for (; u2.length > 0; ) {
                      _ = d2 + u2.shift();
                      S = g2 + u2.shift();
                      w = _ + u2.shift();
                      C = S + u2.shift();
                      d2 = w + u2.shift();
                      g2 = C + u2.shift();
                      bezierCurveTo(_, S, w, C, d2, g2);
                    }
                    break;
                  case 10:
                    T = u2.pop();
                    E = null;
                    if (o3.isCFFCIDFont) {
                      var M = o3.fdSelect.getFDIndex(l2);
                      if (M >= 0 && M < o3.fdArray.length) {
                        var R = o3.fdArray[M], D = void 0;
                        R.privateDict && R.privateDict.subrsIndex && (D = R.privateDict.subrsIndex.objects);
                        D && (E = D[T += getSubroutineBias(D)]);
                      } else
                        (0, c.warn)("Invalid fd index for glyph index.");
                    } else
                      E = o3.subrs[T + o3.subrsBias];
                    E && parse(E);
                    break;
                  case 11:
                    return;
                  case 12:
                    switch (k2 = t4[y2++]) {
                      case 34:
                        w = (_ = d2 + u2.shift()) + u2.shift();
                        x = g2 + u2.shift();
                        d2 = w + u2.shift();
                        bezierCurveTo(_, g2, w, x, d2, x);
                        w = (_ = d2 + u2.shift()) + u2.shift();
                        d2 = w + u2.shift();
                        bezierCurveTo(_, x, w, g2, d2, g2);
                        break;
                      case 35:
                        _ = d2 + u2.shift();
                        S = g2 + u2.shift();
                        w = _ + u2.shift();
                        C = S + u2.shift();
                        d2 = w + u2.shift();
                        g2 = C + u2.shift();
                        bezierCurveTo(_, S, w, C, d2, g2);
                        _ = d2 + u2.shift();
                        S = g2 + u2.shift();
                        w = _ + u2.shift();
                        C = S + u2.shift();
                        d2 = w + u2.shift();
                        g2 = C + u2.shift();
                        bezierCurveTo(_, S, w, C, d2, g2);
                        u2.pop();
                        break;
                      case 36:
                        bezierCurveTo(_ = d2 + u2.shift(), x = g2 + u2.shift(), w = _ + u2.shift(), O = x + u2.shift(), d2 = w + u2.shift(), O);
                        bezierCurveTo(_ = d2 + u2.shift(), O, w = _ + u2.shift(), O + u2.shift(), d2 = w + u2.shift(), g2);
                        break;
                      case 37:
                        var j = d2, L = g2;
                        _ = d2 + u2.shift();
                        S = g2 + u2.shift();
                        w = _ + u2.shift();
                        C = S + u2.shift();
                        d2 = w + u2.shift();
                        g2 = C + u2.shift();
                        bezierCurveTo(_, S, w, C, d2, g2);
                        _ = d2 + u2.shift();
                        S = g2 + u2.shift();
                        w = _ + u2.shift();
                        C = S + u2.shift();
                        d2 = w;
                        g2 = C;
                        Math.abs(d2 - j) > Math.abs(g2 - L) ? d2 += u2.shift() : g2 += u2.shift();
                        bezierCurveTo(_, S, w, C, d2, g2);
                        break;
                      default:
                        throw new c.FormatError("unknown operator: 12 ".concat(k2));
                    }
                    break;
                  case 14:
                    if (u2.length >= 4) {
                      var N = u2.pop(), U = u2.pop();
                      g2 = u2.pop();
                      d2 = u2.pop();
                      r3.push({ cmd: "save" }, { cmd: "translate", args: [d2, g2] });
                      var H = lookupCmap(o3.cmap, String.fromCharCode(o3.glyphNameMap[h.StandardEncoding[N]]));
                      compileCharString(o3.glyphs[H.glyphId], r3, o3, H.glyphId);
                      r3.push({ cmd: "restore" });
                      H = lookupCmap(o3.cmap, String.fromCharCode(o3.glyphNameMap[h.StandardEncoding[U]]));
                      compileCharString(o3.glyphs[H.glyphId], r3, o3, H.glyphId);
                    }
                    return;
                  case 19:
                  case 20:
                    y2 += (m2 += u2.length >> 1) + 7 >> 3;
                    v2 = true;
                    break;
                  case 21:
                    g2 += u2.pop();
                    moveTo(d2 += u2.pop(), g2);
                    v2 = true;
                    break;
                  case 22:
                    moveTo(d2 += u2.pop(), g2);
                    v2 = true;
                    break;
                  case 24:
                    for (; u2.length > 2; ) {
                      _ = d2 + u2.shift();
                      S = g2 + u2.shift();
                      w = _ + u2.shift();
                      C = S + u2.shift();
                      d2 = w + u2.shift();
                      g2 = C + u2.shift();
                      bezierCurveTo(_, S, w, C, d2, g2);
                    }
                    d2 += u2.shift();
                    g2 += u2.shift();
                    lineTo(d2, g2);
                    break;
                  case 25:
                    for (; u2.length > 6; ) {
                      d2 += u2.shift();
                      g2 += u2.shift();
                      lineTo(d2, g2);
                    }
                    _ = d2 + u2.shift();
                    S = g2 + u2.shift();
                    w = _ + u2.shift();
                    C = S + u2.shift();
                    d2 = w + u2.shift();
                    g2 = C + u2.shift();
                    bezierCurveTo(_, S, w, C, d2, g2);
                    break;
                  case 26:
                    u2.length % 2 && (d2 += u2.shift());
                    for (; u2.length > 0; ) {
                      _ = d2;
                      S = g2 + u2.shift();
                      w = _ + u2.shift();
                      C = S + u2.shift();
                      d2 = w;
                      g2 = C + u2.shift();
                      bezierCurveTo(_, S, w, C, d2, g2);
                    }
                    break;
                  case 27:
                    u2.length % 2 && (g2 += u2.shift());
                    for (; u2.length > 0; )
                      bezierCurveTo(_ = d2 + u2.shift(), S = g2, w = _ + u2.shift(), C = S + u2.shift(), d2 = w + u2.shift(), g2 = C);
                    break;
                  case 28:
                    u2.push((t4[y2] << 24 | t4[y2 + 1] << 16) >> 16);
                    y2 += 2;
                    break;
                  case 29:
                    T = u2.pop() + o3.gsubrsBias;
                    (E = o3.gsubrs[T]) && parse(E);
                    break;
                  case 30:
                    for (; u2.length > 0; ) {
                      _ = d2;
                      S = g2 + u2.shift();
                      w = _ + u2.shift();
                      C = S + u2.shift();
                      d2 = w + u2.shift();
                      g2 = C + (u2.length === 1 ? u2.shift() : 0);
                      bezierCurveTo(_, S, w, C, d2, g2);
                      if (u2.length === 0)
                        break;
                      _ = d2 + u2.shift();
                      S = g2;
                      w = _ + u2.shift();
                      C = S + u2.shift();
                      g2 = C + u2.shift();
                      bezierCurveTo(_, S, w, C, d2 = w + (u2.length === 1 ? u2.shift() : 0), g2);
                    }
                    break;
                  case 31:
                    for (; u2.length > 0; ) {
                      _ = d2 + u2.shift();
                      S = g2;
                      w = _ + u2.shift();
                      C = S + u2.shift();
                      g2 = C + u2.shift();
                      bezierCurveTo(_, S, w, C, d2 = w + (u2.length === 1 ? u2.shift() : 0), g2);
                      if (u2.length === 0)
                        break;
                      _ = d2;
                      S = g2 + u2.shift();
                      w = _ + u2.shift();
                      C = S + u2.shift();
                      d2 = w + u2.shift();
                      g2 = C + (u2.length === 1 ? u2.shift() : 0);
                      bezierCurveTo(_, S, w, C, d2, g2);
                    }
                    break;
                  default:
                    if (k2 < 32)
                      throw new c.FormatError("unknown operator: ".concat(k2));
                    if (k2 < 247)
                      u2.push(k2 - 139);
                    else if (k2 < 251)
                      u2.push(256 * (k2 - 247) + t4[y2++] + 108);
                    else if (k2 < 255)
                      u2.push(256 * -(k2 - 251) - t4[y2++] - 108);
                    else {
                      u2.push((t4[y2] << 24 | t4[y2 + 1] << 16 | t4[y2 + 2] << 8 | t4[y2 + 3]) / 65536);
                      y2 += 4;
                    }
                }
                v2 && (u2.length = 0);
              }
            }(t3);
          }
          var g = [], m = function() {
            function CompiledFont(t3) {
              _classCallCheck(this, CompiledFont);
              this.constructor === CompiledFont && (0, c.unreachable)("Cannot initialize CompiledFont.");
              this.fontMatrix = t3;
              this.compiledGlyphs = /* @__PURE__ */ Object.create(null);
              this.compiledCharCodeToGlyphId = /* @__PURE__ */ Object.create(null);
            }
            _createClass(CompiledFont, [{ key: "getPathJs", value: function getPathJs(t3) {
              var r3 = lookupCmap(this.cmap, t3), o3 = r3.charCode, c2 = r3.glyphId, l2 = this.compiledGlyphs[c2];
              if (!l2)
                try {
                  l2 = this.compileGlyph(this.glyphs[c2], c2);
                  this.compiledGlyphs[c2] = l2;
                } catch (t4) {
                  this.compiledGlyphs[c2] = g;
                  this.compiledCharCodeToGlyphId[o3] === void 0 && (this.compiledCharCodeToGlyphId[o3] = c2);
                  throw t4;
                }
              this.compiledCharCodeToGlyphId[o3] === void 0 && (this.compiledCharCodeToGlyphId[o3] = c2);
              return l2;
            } }, { key: "compileGlyph", value: function compileGlyph(t3, r3) {
              if (!t3 || t3.length === 0 || t3[0] === 14)
                return g;
              var o3 = this.fontMatrix;
              if (this.isCFFCIDFont) {
                var l2 = this.fdSelect.getFDIndex(r3);
                if (l2 >= 0 && l2 < this.fdArray.length) {
                  o3 = this.fdArray[l2].getByName("FontMatrix") || c.FONT_IDENTITY_MATRIX;
                } else
                  (0, c.warn)("Invalid fd index for glyph index.");
              }
              var u2 = [{ cmd: "save" }, { cmd: "transform", args: o3.slice() }, { cmd: "scale", args: ["size", "-size"] }];
              this.compileGlyphImpl(t3, u2, r3);
              u2.push({ cmd: "restore" });
              return u2;
            } }, { key: "compileGlyphImpl", value: function compileGlyphImpl() {
              (0, c.unreachable)("Children classes should implement this.");
            } }, { key: "hasBuiltPath", value: function hasBuiltPath(t3) {
              var r3 = lookupCmap(this.cmap, t3), o3 = r3.charCode, c2 = r3.glyphId;
              return this.compiledGlyphs[c2] !== void 0 && this.compiledCharCodeToGlyphId[o3] !== void 0;
            } }]);
            return CompiledFont;
          }(), y = function(t3) {
            _inherits(TrueTypeCompiled, t3);
            var r3 = _createSuper(TrueTypeCompiled);
            function TrueTypeCompiled(t4, o3, c2) {
              var l2;
              _classCallCheck(this, TrueTypeCompiled);
              (l2 = r3.call(this, c2 || [488e-6, 0, 0, 488e-6, 0, 0])).glyphs = t4;
              l2.cmap = o3;
              return l2;
            }
            _createClass(TrueTypeCompiled, [{ key: "compileGlyphImpl", value: function compileGlyphImpl(t4, r4) {
              compileGlyf(t4, r4, this);
            } }]);
            return TrueTypeCompiled;
          }(m), v = function(t3) {
            _inherits(Type2Compiled, t3);
            var r3 = _createSuper(Type2Compiled);
            function Type2Compiled(t4, o3, c2, l2) {
              var h2;
              _classCallCheck(this, Type2Compiled);
              (h2 = r3.call(this, c2 || [1e-3, 0, 0, 1e-3, 0, 0])).glyphs = t4.glyphs;
              h2.gsubrs = t4.gsubrs || [];
              h2.subrs = t4.subrs || [];
              h2.cmap = o3;
              h2.glyphNameMap = l2 || (0, u.getGlyphsUnicode)();
              h2.gsubrsBias = getSubroutineBias(h2.gsubrs);
              h2.subrsBias = getSubroutineBias(h2.subrs);
              h2.isCFFCIDFont = t4.isCFFCIDFont;
              h2.fdSelect = t4.fdSelect;
              h2.fdArray = t4.fdArray;
              return h2;
            }
            _createClass(Type2Compiled, [{ key: "compileGlyphImpl", value: function compileGlyphImpl(t4, r4, o3) {
              compileCharString(t4, r4, this, o3);
            } }]);
            return Type2Compiled;
          }(m), k = function() {
            function FontRendererFactory() {
              _classCallCheck(this, FontRendererFactory);
            }
            _createClass(FontRendererFactory, null, [{ key: "create", value: function create(t3, r3) {
              for (var o3, l2, u2, h2, d2, g2, m2 = new Uint8Array(t3.data), k2 = getUint16(m2, 4), _ = 0, w = 12; _ < k2; _++, w += 16) {
                var S = (0, c.bytesToString)(m2.subarray(w, w + 4)), C = getUint32(m2, w + 8), x = getUint32(m2, w + 12);
                switch (S) {
                  case "cmap":
                    o3 = parseCmap(m2, C);
                    break;
                  case "glyf":
                    l2 = m2.subarray(C, C + x);
                    break;
                  case "loca":
                    u2 = m2.subarray(C, C + x);
                    break;
                  case "head":
                    g2 = getUint16(m2, C + 18);
                    d2 = getUint16(m2, C + 50);
                    break;
                  case "CFF ":
                    h2 = parseCff(m2, C, C + x, r3);
                }
              }
              if (l2) {
                var O = g2 ? [1 / g2, 0, 0, 1 / g2, 0, 0] : t3.fontMatrix;
                return new y(function parseGlyfTable(t4, r4, o4) {
                  var c2, l3;
                  if (o4) {
                    c2 = 4;
                    l3 = getUint32;
                  } else {
                    c2 = 2;
                    l3 = function itemDecode(t5, r5) {
                      return 2 * getUint16(t5, r5);
                    };
                  }
                  for (var u3 = [], h3 = l3(r4, 0), d3 = c2; d3 < r4.length; d3 += c2) {
                    var g3 = l3(r4, d3);
                    u3.push(t4.subarray(h3, g3));
                    h3 = g3;
                  }
                  return u3;
                }(l2, u2, d2), o3, O);
              }
              return new v(h2, o3, t3.fontMatrix, t3.glyphNameMap);
            } }]);
            return FontRendererFactory;
          }();
          r2.FontRendererFactory = k;
        }, (t2, r2, o2) => {
          "use strict";
          Object.defineProperty(r2, "__esModule", { value: true });
          r2.getMetrics = r2.getFontBasicMetrics = void 0;
          var c = o2(161), l = (0, c.getLookupTableFactory)(function(t3) {
            t3.Courier = 600;
            t3["Courier-Bold"] = 600;
            t3["Courier-BoldOblique"] = 600;
            t3["Courier-Oblique"] = 600;
            t3.Helvetica = (0, c.getLookupTableFactory)(function(t4) {
              t4.space = 278;
              t4.exclam = 278;
              t4.quotedbl = 355;
              t4.numbersign = 556;
              t4.dollar = 556;
              t4.percent = 889;
              t4.ampersand = 667;
              t4.quoteright = 222;
              t4.parenleft = 333;
              t4.parenright = 333;
              t4.asterisk = 389;
              t4.plus = 584;
              t4.comma = 278;
              t4.hyphen = 333;
              t4.period = 278;
              t4.slash = 278;
              t4.zero = 556;
              t4.one = 556;
              t4.two = 556;
              t4.three = 556;
              t4.four = 556;
              t4.five = 556;
              t4.six = 556;
              t4.seven = 556;
              t4.eight = 556;
              t4.nine = 556;
              t4.colon = 278;
              t4.semicolon = 278;
              t4.less = 584;
              t4.equal = 584;
              t4.greater = 584;
              t4.question = 556;
              t4.at = 1015;
              t4.A = 667;
              t4.B = 667;
              t4.C = 722;
              t4.D = 722;
              t4.E = 667;
              t4.F = 611;
              t4.G = 778;
              t4.H = 722;
              t4.I = 278;
              t4.J = 500;
              t4.K = 667;
              t4.L = 556;
              t4.M = 833;
              t4.N = 722;
              t4.O = 778;
              t4.P = 667;
              t4.Q = 778;
              t4.R = 722;
              t4.S = 667;
              t4.T = 611;
              t4.U = 722;
              t4.V = 667;
              t4.W = 944;
              t4.X = 667;
              t4.Y = 667;
              t4.Z = 611;
              t4.bracketleft = 278;
              t4.backslash = 278;
              t4.bracketright = 278;
              t4.asciicircum = 469;
              t4.underscore = 556;
              t4.quoteleft = 222;
              t4.a = 556;
              t4.b = 556;
              t4.c = 500;
              t4.d = 556;
              t4.e = 556;
              t4.f = 278;
              t4.g = 556;
              t4.h = 556;
              t4.i = 222;
              t4.j = 222;
              t4.k = 500;
              t4.l = 222;
              t4.m = 833;
              t4.n = 556;
              t4.o = 556;
              t4.p = 556;
              t4.q = 556;
              t4.r = 333;
              t4.s = 500;
              t4.t = 278;
              t4.u = 556;
              t4.v = 500;
              t4.w = 722;
              t4.x = 500;
              t4.y = 500;
              t4.z = 500;
              t4.braceleft = 334;
              t4.bar = 260;
              t4.braceright = 334;
              t4.asciitilde = 584;
              t4.exclamdown = 333;
              t4.cent = 556;
              t4.sterling = 556;
              t4.fraction = 167;
              t4.yen = 556;
              t4.florin = 556;
              t4.section = 556;
              t4.currency = 556;
              t4.quotesingle = 191;
              t4.quotedblleft = 333;
              t4.guillemotleft = 556;
              t4.guilsinglleft = 333;
              t4.guilsinglright = 333;
              t4.fi = 500;
              t4.fl = 500;
              t4.endash = 556;
              t4.dagger = 556;
              t4.daggerdbl = 556;
              t4.periodcentered = 278;
              t4.paragraph = 537;
              t4.bullet = 350;
              t4.quotesinglbase = 222;
              t4.quotedblbase = 333;
              t4.quotedblright = 333;
              t4.guillemotright = 556;
              t4.ellipsis = 1e3;
              t4.perthousand = 1e3;
              t4.questiondown = 611;
              t4.grave = 333;
              t4.acute = 333;
              t4.circumflex = 333;
              t4.tilde = 333;
              t4.macron = 333;
              t4.breve = 333;
              t4.dotaccent = 333;
              t4.dieresis = 333;
              t4.ring = 333;
              t4.cedilla = 333;
              t4.hungarumlaut = 333;
              t4.ogonek = 333;
              t4.caron = 333;
              t4.emdash = 1e3;
              t4.AE = 1e3;
              t4.ordfeminine = 370;
              t4.Lslash = 556;
              t4.Oslash = 778;
              t4.OE = 1e3;
              t4.ordmasculine = 365;
              t4.ae = 889;
              t4.dotlessi = 278;
              t4.lslash = 222;
              t4.oslash = 611;
              t4.oe = 944;
              t4.germandbls = 611;
              t4.Idieresis = 278;
              t4.eacute = 556;
              t4.abreve = 556;
              t4.uhungarumlaut = 556;
              t4.ecaron = 556;
              t4.Ydieresis = 667;
              t4.divide = 584;
              t4.Yacute = 667;
              t4.Acircumflex = 667;
              t4.aacute = 556;
              t4.Ucircumflex = 722;
              t4.yacute = 500;
              t4.scommaaccent = 500;
              t4.ecircumflex = 556;
              t4.Uring = 722;
              t4.Udieresis = 722;
              t4.aogonek = 556;
              t4.Uacute = 722;
              t4.uogonek = 556;
              t4.Edieresis = 667;
              t4.Dcroat = 722;
              t4.commaaccent = 250;
              t4.copyright = 737;
              t4.Emacron = 667;
              t4.ccaron = 500;
              t4.aring = 556;
              t4.Ncommaaccent = 722;
              t4.lacute = 222;
              t4.agrave = 556;
              t4.Tcommaaccent = 611;
              t4.Cacute = 722;
              t4.atilde = 556;
              t4.Edotaccent = 667;
              t4.scaron = 500;
              t4.scedilla = 500;
              t4.iacute = 278;
              t4.lozenge = 471;
              t4.Rcaron = 722;
              t4.Gcommaaccent = 778;
              t4.ucircumflex = 556;
              t4.acircumflex = 556;
              t4.Amacron = 667;
              t4.rcaron = 333;
              t4.ccedilla = 500;
              t4.Zdotaccent = 611;
              t4.Thorn = 667;
              t4.Omacron = 778;
              t4.Racute = 722;
              t4.Sacute = 667;
              t4.dcaron = 643;
              t4.Umacron = 722;
              t4.uring = 556;
              t4.threesuperior = 333;
              t4.Ograve = 778;
              t4.Agrave = 667;
              t4.Abreve = 667;
              t4.multiply = 584;
              t4.uacute = 556;
              t4.Tcaron = 611;
              t4.partialdiff = 476;
              t4.ydieresis = 500;
              t4.Nacute = 722;
              t4.icircumflex = 278;
              t4.Ecircumflex = 667;
              t4.adieresis = 556;
              t4.edieresis = 556;
              t4.cacute = 500;
              t4.nacute = 556;
              t4.umacron = 556;
              t4.Ncaron = 722;
              t4.Iacute = 278;
              t4.plusminus = 584;
              t4.brokenbar = 260;
              t4.registered = 737;
              t4.Gbreve = 778;
              t4.Idotaccent = 278;
              t4.summation = 600;
              t4.Egrave = 667;
              t4.racute = 333;
              t4.omacron = 556;
              t4.Zacute = 611;
              t4.Zcaron = 611;
              t4.greaterequal = 549;
              t4.Eth = 722;
              t4.Ccedilla = 722;
              t4.lcommaaccent = 222;
              t4.tcaron = 317;
              t4.eogonek = 556;
              t4.Uogonek = 722;
              t4.Aacute = 667;
              t4.Adieresis = 667;
              t4.egrave = 556;
              t4.zacute = 500;
              t4.iogonek = 222;
              t4.Oacute = 778;
              t4.oacute = 556;
              t4.amacron = 556;
              t4.sacute = 500;
              t4.idieresis = 278;
              t4.Ocircumflex = 778;
              t4.Ugrave = 722;
              t4.Delta = 612;
              t4.thorn = 556;
              t4.twosuperior = 333;
              t4.Odieresis = 778;
              t4.mu = 556;
              t4.igrave = 278;
              t4.ohungarumlaut = 556;
              t4.Eogonek = 667;
              t4.dcroat = 556;
              t4.threequarters = 834;
              t4.Scedilla = 667;
              t4.lcaron = 299;
              t4.Kcommaaccent = 667;
              t4.Lacute = 556;
              t4.trademark = 1e3;
              t4.edotaccent = 556;
              t4.Igrave = 278;
              t4.Imacron = 278;
              t4.Lcaron = 556;
              t4.onehalf = 834;
              t4.lessequal = 549;
              t4.ocircumflex = 556;
              t4.ntilde = 556;
              t4.Uhungarumlaut = 722;
              t4.Eacute = 667;
              t4.emacron = 556;
              t4.gbreve = 556;
              t4.onequarter = 834;
              t4.Scaron = 667;
              t4.Scommaaccent = 667;
              t4.Ohungarumlaut = 778;
              t4.degree = 400;
              t4.ograve = 556;
              t4.Ccaron = 722;
              t4.ugrave = 556;
              t4.radical = 453;
              t4.Dcaron = 722;
              t4.rcommaaccent = 333;
              t4.Ntilde = 722;
              t4.otilde = 556;
              t4.Rcommaaccent = 722;
              t4.Lcommaaccent = 556;
              t4.Atilde = 667;
              t4.Aogonek = 667;
              t4.Aring = 667;
              t4.Otilde = 778;
              t4.zdotaccent = 500;
              t4.Ecaron = 667;
              t4.Iogonek = 278;
              t4.kcommaaccent = 500;
              t4.minus = 584;
              t4.Icircumflex = 278;
              t4.ncaron = 556;
              t4.tcommaaccent = 278;
              t4.logicalnot = 584;
              t4.odieresis = 556;
              t4.udieresis = 556;
              t4.notequal = 549;
              t4.gcommaaccent = 556;
              t4.eth = 556;
              t4.zcaron = 500;
              t4.ncommaaccent = 556;
              t4.onesuperior = 333;
              t4.imacron = 278;
              t4.Euro = 556;
            });
            t3["Helvetica-Bold"] = (0, c.getLookupTableFactory)(function(t4) {
              t4.space = 278;
              t4.exclam = 333;
              t4.quotedbl = 474;
              t4.numbersign = 556;
              t4.dollar = 556;
              t4.percent = 889;
              t4.ampersand = 722;
              t4.quoteright = 278;
              t4.parenleft = 333;
              t4.parenright = 333;
              t4.asterisk = 389;
              t4.plus = 584;
              t4.comma = 278;
              t4.hyphen = 333;
              t4.period = 278;
              t4.slash = 278;
              t4.zero = 556;
              t4.one = 556;
              t4.two = 556;
              t4.three = 556;
              t4.four = 556;
              t4.five = 556;
              t4.six = 556;
              t4.seven = 556;
              t4.eight = 556;
              t4.nine = 556;
              t4.colon = 333;
              t4.semicolon = 333;
              t4.less = 584;
              t4.equal = 584;
              t4.greater = 584;
              t4.question = 611;
              t4.at = 975;
              t4.A = 722;
              t4.B = 722;
              t4.C = 722;
              t4.D = 722;
              t4.E = 667;
              t4.F = 611;
              t4.G = 778;
              t4.H = 722;
              t4.I = 278;
              t4.J = 556;
              t4.K = 722;
              t4.L = 611;
              t4.M = 833;
              t4.N = 722;
              t4.O = 778;
              t4.P = 667;
              t4.Q = 778;
              t4.R = 722;
              t4.S = 667;
              t4.T = 611;
              t4.U = 722;
              t4.V = 667;
              t4.W = 944;
              t4.X = 667;
              t4.Y = 667;
              t4.Z = 611;
              t4.bracketleft = 333;
              t4.backslash = 278;
              t4.bracketright = 333;
              t4.asciicircum = 584;
              t4.underscore = 556;
              t4.quoteleft = 278;
              t4.a = 556;
              t4.b = 611;
              t4.c = 556;
              t4.d = 611;
              t4.e = 556;
              t4.f = 333;
              t4.g = 611;
              t4.h = 611;
              t4.i = 278;
              t4.j = 278;
              t4.k = 556;
              t4.l = 278;
              t4.m = 889;
              t4.n = 611;
              t4.o = 611;
              t4.p = 611;
              t4.q = 611;
              t4.r = 389;
              t4.s = 556;
              t4.t = 333;
              t4.u = 611;
              t4.v = 556;
              t4.w = 778;
              t4.x = 556;
              t4.y = 556;
              t4.z = 500;
              t4.braceleft = 389;
              t4.bar = 280;
              t4.braceright = 389;
              t4.asciitilde = 584;
              t4.exclamdown = 333;
              t4.cent = 556;
              t4.sterling = 556;
              t4.fraction = 167;
              t4.yen = 556;
              t4.florin = 556;
              t4.section = 556;
              t4.currency = 556;
              t4.quotesingle = 238;
              t4.quotedblleft = 500;
              t4.guillemotleft = 556;
              t4.guilsinglleft = 333;
              t4.guilsinglright = 333;
              t4.fi = 611;
              t4.fl = 611;
              t4.endash = 556;
              t4.dagger = 556;
              t4.daggerdbl = 556;
              t4.periodcentered = 278;
              t4.paragraph = 556;
              t4.bullet = 350;
              t4.quotesinglbase = 278;
              t4.quotedblbase = 500;
              t4.quotedblright = 500;
              t4.guillemotright = 556;
              t4.ellipsis = 1e3;
              t4.perthousand = 1e3;
              t4.questiondown = 611;
              t4.grave = 333;
              t4.acute = 333;
              t4.circumflex = 333;
              t4.tilde = 333;
              t4.macron = 333;
              t4.breve = 333;
              t4.dotaccent = 333;
              t4.dieresis = 333;
              t4.ring = 333;
              t4.cedilla = 333;
              t4.hungarumlaut = 333;
              t4.ogonek = 333;
              t4.caron = 333;
              t4.emdash = 1e3;
              t4.AE = 1e3;
              t4.ordfeminine = 370;
              t4.Lslash = 611;
              t4.Oslash = 778;
              t4.OE = 1e3;
              t4.ordmasculine = 365;
              t4.ae = 889;
              t4.dotlessi = 278;
              t4.lslash = 278;
              t4.oslash = 611;
              t4.oe = 944;
              t4.germandbls = 611;
              t4.Idieresis = 278;
              t4.eacute = 556;
              t4.abreve = 556;
              t4.uhungarumlaut = 611;
              t4.ecaron = 556;
              t4.Ydieresis = 667;
              t4.divide = 584;
              t4.Yacute = 667;
              t4.Acircumflex = 722;
              t4.aacute = 556;
              t4.Ucircumflex = 722;
              t4.yacute = 556;
              t4.scommaaccent = 556;
              t4.ecircumflex = 556;
              t4.Uring = 722;
              t4.Udieresis = 722;
              t4.aogonek = 556;
              t4.Uacute = 722;
              t4.uogonek = 611;
              t4.Edieresis = 667;
              t4.Dcroat = 722;
              t4.commaaccent = 250;
              t4.copyright = 737;
              t4.Emacron = 667;
              t4.ccaron = 556;
              t4.aring = 556;
              t4.Ncommaaccent = 722;
              t4.lacute = 278;
              t4.agrave = 556;
              t4.Tcommaaccent = 611;
              t4.Cacute = 722;
              t4.atilde = 556;
              t4.Edotaccent = 667;
              t4.scaron = 556;
              t4.scedilla = 556;
              t4.iacute = 278;
              t4.lozenge = 494;
              t4.Rcaron = 722;
              t4.Gcommaaccent = 778;
              t4.ucircumflex = 611;
              t4.acircumflex = 556;
              t4.Amacron = 722;
              t4.rcaron = 389;
              t4.ccedilla = 556;
              t4.Zdotaccent = 611;
              t4.Thorn = 667;
              t4.Omacron = 778;
              t4.Racute = 722;
              t4.Sacute = 667;
              t4.dcaron = 743;
              t4.Umacron = 722;
              t4.uring = 611;
              t4.threesuperior = 333;
              t4.Ograve = 778;
              t4.Agrave = 722;
              t4.Abreve = 722;
              t4.multiply = 584;
              t4.uacute = 611;
              t4.Tcaron = 611;
              t4.partialdiff = 494;
              t4.ydieresis = 556;
              t4.Nacute = 722;
              t4.icircumflex = 278;
              t4.Ecircumflex = 667;
              t4.adieresis = 556;
              t4.edieresis = 556;
              t4.cacute = 556;
              t4.nacute = 611;
              t4.umacron = 611;
              t4.Ncaron = 722;
              t4.Iacute = 278;
              t4.plusminus = 584;
              t4.brokenbar = 280;
              t4.registered = 737;
              t4.Gbreve = 778;
              t4.Idotaccent = 278;
              t4.summation = 600;
              t4.Egrave = 667;
              t4.racute = 389;
              t4.omacron = 611;
              t4.Zacute = 611;
              t4.Zcaron = 611;
              t4.greaterequal = 549;
              t4.Eth = 722;
              t4.Ccedilla = 722;
              t4.lcommaaccent = 278;
              t4.tcaron = 389;
              t4.eogonek = 556;
              t4.Uogonek = 722;
              t4.Aacute = 722;
              t4.Adieresis = 722;
              t4.egrave = 556;
              t4.zacute = 500;
              t4.iogonek = 278;
              t4.Oacute = 778;
              t4.oacute = 611;
              t4.amacron = 556;
              t4.sacute = 556;
              t4.idieresis = 278;
              t4.Ocircumflex = 778;
              t4.Ugrave = 722;
              t4.Delta = 612;
              t4.thorn = 611;
              t4.twosuperior = 333;
              t4.Odieresis = 778;
              t4.mu = 611;
              t4.igrave = 278;
              t4.ohungarumlaut = 611;
              t4.Eogonek = 667;
              t4.dcroat = 611;
              t4.threequarters = 834;
              t4.Scedilla = 667;
              t4.lcaron = 400;
              t4.Kcommaaccent = 722;
              t4.Lacute = 611;
              t4.trademark = 1e3;
              t4.edotaccent = 556;
              t4.Igrave = 278;
              t4.Imacron = 278;
              t4.Lcaron = 611;
              t4.onehalf = 834;
              t4.lessequal = 549;
              t4.ocircumflex = 611;
              t4.ntilde = 611;
              t4.Uhungarumlaut = 722;
              t4.Eacute = 667;
              t4.emacron = 556;
              t4.gbreve = 611;
              t4.onequarter = 834;
              t4.Scaron = 667;
              t4.Scommaaccent = 667;
              t4.Ohungarumlaut = 778;
              t4.degree = 400;
              t4.ograve = 611;
              t4.Ccaron = 722;
              t4.ugrave = 611;
              t4.radical = 549;
              t4.Dcaron = 722;
              t4.rcommaaccent = 389;
              t4.Ntilde = 722;
              t4.otilde = 611;
              t4.Rcommaaccent = 722;
              t4.Lcommaaccent = 611;
              t4.Atilde = 722;
              t4.Aogonek = 722;
              t4.Aring = 722;
              t4.Otilde = 778;
              t4.zdotaccent = 500;
              t4.Ecaron = 667;
              t4.Iogonek = 278;
              t4.kcommaaccent = 556;
              t4.minus = 584;
              t4.Icircumflex = 278;
              t4.ncaron = 611;
              t4.tcommaaccent = 333;
              t4.logicalnot = 584;
              t4.odieresis = 611;
              t4.udieresis = 611;
              t4.notequal = 549;
              t4.gcommaaccent = 611;
              t4.eth = 611;
              t4.zcaron = 500;
              t4.ncommaaccent = 611;
              t4.onesuperior = 333;
              t4.imacron = 278;
              t4.Euro = 556;
            });
            t3["Helvetica-BoldOblique"] = (0, c.getLookupTableFactory)(function(t4) {
              t4.space = 278;
              t4.exclam = 333;
              t4.quotedbl = 474;
              t4.numbersign = 556;
              t4.dollar = 556;
              t4.percent = 889;
              t4.ampersand = 722;
              t4.quoteright = 278;
              t4.parenleft = 333;
              t4.parenright = 333;
              t4.asterisk = 389;
              t4.plus = 584;
              t4.comma = 278;
              t4.hyphen = 333;
              t4.period = 278;
              t4.slash = 278;
              t4.zero = 556;
              t4.one = 556;
              t4.two = 556;
              t4.three = 556;
              t4.four = 556;
              t4.five = 556;
              t4.six = 556;
              t4.seven = 556;
              t4.eight = 556;
              t4.nine = 556;
              t4.colon = 333;
              t4.semicolon = 333;
              t4.less = 584;
              t4.equal = 584;
              t4.greater = 584;
              t4.question = 611;
              t4.at = 975;
              t4.A = 722;
              t4.B = 722;
              t4.C = 722;
              t4.D = 722;
              t4.E = 667;
              t4.F = 611;
              t4.G = 778;
              t4.H = 722;
              t4.I = 278;
              t4.J = 556;
              t4.K = 722;
              t4.L = 611;
              t4.M = 833;
              t4.N = 722;
              t4.O = 778;
              t4.P = 667;
              t4.Q = 778;
              t4.R = 722;
              t4.S = 667;
              t4.T = 611;
              t4.U = 722;
              t4.V = 667;
              t4.W = 944;
              t4.X = 667;
              t4.Y = 667;
              t4.Z = 611;
              t4.bracketleft = 333;
              t4.backslash = 278;
              t4.bracketright = 333;
              t4.asciicircum = 584;
              t4.underscore = 556;
              t4.quoteleft = 278;
              t4.a = 556;
              t4.b = 611;
              t4.c = 556;
              t4.d = 611;
              t4.e = 556;
              t4.f = 333;
              t4.g = 611;
              t4.h = 611;
              t4.i = 278;
              t4.j = 278;
              t4.k = 556;
              t4.l = 278;
              t4.m = 889;
              t4.n = 611;
              t4.o = 611;
              t4.p = 611;
              t4.q = 611;
              t4.r = 389;
              t4.s = 556;
              t4.t = 333;
              t4.u = 611;
              t4.v = 556;
              t4.w = 778;
              t4.x = 556;
              t4.y = 556;
              t4.z = 500;
              t4.braceleft = 389;
              t4.bar = 280;
              t4.braceright = 389;
              t4.asciitilde = 584;
              t4.exclamdown = 333;
              t4.cent = 556;
              t4.sterling = 556;
              t4.fraction = 167;
              t4.yen = 556;
              t4.florin = 556;
              t4.section = 556;
              t4.currency = 556;
              t4.quotesingle = 238;
              t4.quotedblleft = 500;
              t4.guillemotleft = 556;
              t4.guilsinglleft = 333;
              t4.guilsinglright = 333;
              t4.fi = 611;
              t4.fl = 611;
              t4.endash = 556;
              t4.dagger = 556;
              t4.daggerdbl = 556;
              t4.periodcentered = 278;
              t4.paragraph = 556;
              t4.bullet = 350;
              t4.quotesinglbase = 278;
              t4.quotedblbase = 500;
              t4.quotedblright = 500;
              t4.guillemotright = 556;
              t4.ellipsis = 1e3;
              t4.perthousand = 1e3;
              t4.questiondown = 611;
              t4.grave = 333;
              t4.acute = 333;
              t4.circumflex = 333;
              t4.tilde = 333;
              t4.macron = 333;
              t4.breve = 333;
              t4.dotaccent = 333;
              t4.dieresis = 333;
              t4.ring = 333;
              t4.cedilla = 333;
              t4.hungarumlaut = 333;
              t4.ogonek = 333;
              t4.caron = 333;
              t4.emdash = 1e3;
              t4.AE = 1e3;
              t4.ordfeminine = 370;
              t4.Lslash = 611;
              t4.Oslash = 778;
              t4.OE = 1e3;
              t4.ordmasculine = 365;
              t4.ae = 889;
              t4.dotlessi = 278;
              t4.lslash = 278;
              t4.oslash = 611;
              t4.oe = 944;
              t4.germandbls = 611;
              t4.Idieresis = 278;
              t4.eacute = 556;
              t4.abreve = 556;
              t4.uhungarumlaut = 611;
              t4.ecaron = 556;
              t4.Ydieresis = 667;
              t4.divide = 584;
              t4.Yacute = 667;
              t4.Acircumflex = 722;
              t4.aacute = 556;
              t4.Ucircumflex = 722;
              t4.yacute = 556;
              t4.scommaaccent = 556;
              t4.ecircumflex = 556;
              t4.Uring = 722;
              t4.Udieresis = 722;
              t4.aogonek = 556;
              t4.Uacute = 722;
              t4.uogonek = 611;
              t4.Edieresis = 667;
              t4.Dcroat = 722;
              t4.commaaccent = 250;
              t4.copyright = 737;
              t4.Emacron = 667;
              t4.ccaron = 556;
              t4.aring = 556;
              t4.Ncommaaccent = 722;
              t4.lacute = 278;
              t4.agrave = 556;
              t4.Tcommaaccent = 611;
              t4.Cacute = 722;
              t4.atilde = 556;
              t4.Edotaccent = 667;
              t4.scaron = 556;
              t4.scedilla = 556;
              t4.iacute = 278;
              t4.lozenge = 494;
              t4.Rcaron = 722;
              t4.Gcommaaccent = 778;
              t4.ucircumflex = 611;
              t4.acircumflex = 556;
              t4.Amacron = 722;
              t4.rcaron = 389;
              t4.ccedilla = 556;
              t4.Zdotaccent = 611;
              t4.Thorn = 667;
              t4.Omacron = 778;
              t4.Racute = 722;
              t4.Sacute = 667;
              t4.dcaron = 743;
              t4.Umacron = 722;
              t4.uring = 611;
              t4.threesuperior = 333;
              t4.Ograve = 778;
              t4.Agrave = 722;
              t4.Abreve = 722;
              t4.multiply = 584;
              t4.uacute = 611;
              t4.Tcaron = 611;
              t4.partialdiff = 494;
              t4.ydieresis = 556;
              t4.Nacute = 722;
              t4.icircumflex = 278;
              t4.Ecircumflex = 667;
              t4.adieresis = 556;
              t4.edieresis = 556;
              t4.cacute = 556;
              t4.nacute = 611;
              t4.umacron = 611;
              t4.Ncaron = 722;
              t4.Iacute = 278;
              t4.plusminus = 584;
              t4.brokenbar = 280;
              t4.registered = 737;
              t4.Gbreve = 778;
              t4.Idotaccent = 278;
              t4.summation = 600;
              t4.Egrave = 667;
              t4.racute = 389;
              t4.omacron = 611;
              t4.Zacute = 611;
              t4.Zcaron = 611;
              t4.greaterequal = 549;
              t4.Eth = 722;
              t4.Ccedilla = 722;
              t4.lcommaaccent = 278;
              t4.tcaron = 389;
              t4.eogonek = 556;
              t4.Uogonek = 722;
              t4.Aacute = 722;
              t4.Adieresis = 722;
              t4.egrave = 556;
              t4.zacute = 500;
              t4.iogonek = 278;
              t4.Oacute = 778;
              t4.oacute = 611;
              t4.amacron = 556;
              t4.sacute = 556;
              t4.idieresis = 278;
              t4.Ocircumflex = 778;
              t4.Ugrave = 722;
              t4.Delta = 612;
              t4.thorn = 611;
              t4.twosuperior = 333;
              t4.Odieresis = 778;
              t4.mu = 611;
              t4.igrave = 278;
              t4.ohungarumlaut = 611;
              t4.Eogonek = 667;
              t4.dcroat = 611;
              t4.threequarters = 834;
              t4.Scedilla = 667;
              t4.lcaron = 400;
              t4.Kcommaaccent = 722;
              t4.Lacute = 611;
              t4.trademark = 1e3;
              t4.edotaccent = 556;
              t4.Igrave = 278;
              t4.Imacron = 278;
              t4.Lcaron = 611;
              t4.onehalf = 834;
              t4.lessequal = 549;
              t4.ocircumflex = 611;
              t4.ntilde = 611;
              t4.Uhungarumlaut = 722;
              t4.Eacute = 667;
              t4.emacron = 556;
              t4.gbreve = 611;
              t4.onequarter = 834;
              t4.Scaron = 667;
              t4.Scommaaccent = 667;
              t4.Ohungarumlaut = 778;
              t4.degree = 400;
              t4.ograve = 611;
              t4.Ccaron = 722;
              t4.ugrave = 611;
              t4.radical = 549;
              t4.Dcaron = 722;
              t4.rcommaaccent = 389;
              t4.Ntilde = 722;
              t4.otilde = 611;
              t4.Rcommaaccent = 722;
              t4.Lcommaaccent = 611;
              t4.Atilde = 722;
              t4.Aogonek = 722;
              t4.Aring = 722;
              t4.Otilde = 778;
              t4.zdotaccent = 500;
              t4.Ecaron = 667;
              t4.Iogonek = 278;
              t4.kcommaaccent = 556;
              t4.minus = 584;
              t4.Icircumflex = 278;
              t4.ncaron = 611;
              t4.tcommaaccent = 333;
              t4.logicalnot = 584;
              t4.odieresis = 611;
              t4.udieresis = 611;
              t4.notequal = 549;
              t4.gcommaaccent = 611;
              t4.eth = 611;
              t4.zcaron = 500;
              t4.ncommaaccent = 611;
              t4.onesuperior = 333;
              t4.imacron = 278;
              t4.Euro = 556;
            });
            t3["Helvetica-Oblique"] = (0, c.getLookupTableFactory)(function(t4) {
              t4.space = 278;
              t4.exclam = 278;
              t4.quotedbl = 355;
              t4.numbersign = 556;
              t4.dollar = 556;
              t4.percent = 889;
              t4.ampersand = 667;
              t4.quoteright = 222;
              t4.parenleft = 333;
              t4.parenright = 333;
              t4.asterisk = 389;
              t4.plus = 584;
              t4.comma = 278;
              t4.hyphen = 333;
              t4.period = 278;
              t4.slash = 278;
              t4.zero = 556;
              t4.one = 556;
              t4.two = 556;
              t4.three = 556;
              t4.four = 556;
              t4.five = 556;
              t4.six = 556;
              t4.seven = 556;
              t4.eight = 556;
              t4.nine = 556;
              t4.colon = 278;
              t4.semicolon = 278;
              t4.less = 584;
              t4.equal = 584;
              t4.greater = 584;
              t4.question = 556;
              t4.at = 1015;
              t4.A = 667;
              t4.B = 667;
              t4.C = 722;
              t4.D = 722;
              t4.E = 667;
              t4.F = 611;
              t4.G = 778;
              t4.H = 722;
              t4.I = 278;
              t4.J = 500;
              t4.K = 667;
              t4.L = 556;
              t4.M = 833;
              t4.N = 722;
              t4.O = 778;
              t4.P = 667;
              t4.Q = 778;
              t4.R = 722;
              t4.S = 667;
              t4.T = 611;
              t4.U = 722;
              t4.V = 667;
              t4.W = 944;
              t4.X = 667;
              t4.Y = 667;
              t4.Z = 611;
              t4.bracketleft = 278;
              t4.backslash = 278;
              t4.bracketright = 278;
              t4.asciicircum = 469;
              t4.underscore = 556;
              t4.quoteleft = 222;
              t4.a = 556;
              t4.b = 556;
              t4.c = 500;
              t4.d = 556;
              t4.e = 556;
              t4.f = 278;
              t4.g = 556;
              t4.h = 556;
              t4.i = 222;
              t4.j = 222;
              t4.k = 500;
              t4.l = 222;
              t4.m = 833;
              t4.n = 556;
              t4.o = 556;
              t4.p = 556;
              t4.q = 556;
              t4.r = 333;
              t4.s = 500;
              t4.t = 278;
              t4.u = 556;
              t4.v = 500;
              t4.w = 722;
              t4.x = 500;
              t4.y = 500;
              t4.z = 500;
              t4.braceleft = 334;
              t4.bar = 260;
              t4.braceright = 334;
              t4.asciitilde = 584;
              t4.exclamdown = 333;
              t4.cent = 556;
              t4.sterling = 556;
              t4.fraction = 167;
              t4.yen = 556;
              t4.florin = 556;
              t4.section = 556;
              t4.currency = 556;
              t4.quotesingle = 191;
              t4.quotedblleft = 333;
              t4.guillemotleft = 556;
              t4.guilsinglleft = 333;
              t4.guilsinglright = 333;
              t4.fi = 500;
              t4.fl = 500;
              t4.endash = 556;
              t4.dagger = 556;
              t4.daggerdbl = 556;
              t4.periodcentered = 278;
              t4.paragraph = 537;
              t4.bullet = 350;
              t4.quotesinglbase = 222;
              t4.quotedblbase = 333;
              t4.quotedblright = 333;
              t4.guillemotright = 556;
              t4.ellipsis = 1e3;
              t4.perthousand = 1e3;
              t4.questiondown = 611;
              t4.grave = 333;
              t4.acute = 333;
              t4.circumflex = 333;
              t4.tilde = 333;
              t4.macron = 333;
              t4.breve = 333;
              t4.dotaccent = 333;
              t4.dieresis = 333;
              t4.ring = 333;
              t4.cedilla = 333;
              t4.hungarumlaut = 333;
              t4.ogonek = 333;
              t4.caron = 333;
              t4.emdash = 1e3;
              t4.AE = 1e3;
              t4.ordfeminine = 370;
              t4.Lslash = 556;
              t4.Oslash = 778;
              t4.OE = 1e3;
              t4.ordmasculine = 365;
              t4.ae = 889;
              t4.dotlessi = 278;
              t4.lslash = 222;
              t4.oslash = 611;
              t4.oe = 944;
              t4.germandbls = 611;
              t4.Idieresis = 278;
              t4.eacute = 556;
              t4.abreve = 556;
              t4.uhungarumlaut = 556;
              t4.ecaron = 556;
              t4.Ydieresis = 667;
              t4.divide = 584;
              t4.Yacute = 667;
              t4.Acircumflex = 667;
              t4.aacute = 556;
              t4.Ucircumflex = 722;
              t4.yacute = 500;
              t4.scommaaccent = 500;
              t4.ecircumflex = 556;
              t4.Uring = 722;
              t4.Udieresis = 722;
              t4.aogonek = 556;
              t4.Uacute = 722;
              t4.uogonek = 556;
              t4.Edieresis = 667;
              t4.Dcroat = 722;
              t4.commaaccent = 250;
              t4.copyright = 737;
              t4.Emacron = 667;
              t4.ccaron = 500;
              t4.aring = 556;
              t4.Ncommaaccent = 722;
              t4.lacute = 222;
              t4.agrave = 556;
              t4.Tcommaaccent = 611;
              t4.Cacute = 722;
              t4.atilde = 556;
              t4.Edotaccent = 667;
              t4.scaron = 500;
              t4.scedilla = 500;
              t4.iacute = 278;
              t4.lozenge = 471;
              t4.Rcaron = 722;
              t4.Gcommaaccent = 778;
              t4.ucircumflex = 556;
              t4.acircumflex = 556;
              t4.Amacron = 667;
              t4.rcaron = 333;
              t4.ccedilla = 500;
              t4.Zdotaccent = 611;
              t4.Thorn = 667;
              t4.Omacron = 778;
              t4.Racute = 722;
              t4.Sacute = 667;
              t4.dcaron = 643;
              t4.Umacron = 722;
              t4.uring = 556;
              t4.threesuperior = 333;
              t4.Ograve = 778;
              t4.Agrave = 667;
              t4.Abreve = 667;
              t4.multiply = 584;
              t4.uacute = 556;
              t4.Tcaron = 611;
              t4.partialdiff = 476;
              t4.ydieresis = 500;
              t4.Nacute = 722;
              t4.icircumflex = 278;
              t4.Ecircumflex = 667;
              t4.adieresis = 556;
              t4.edieresis = 556;
              t4.cacute = 500;
              t4.nacute = 556;
              t4.umacron = 556;
              t4.Ncaron = 722;
              t4.Iacute = 278;
              t4.plusminus = 584;
              t4.brokenbar = 260;
              t4.registered = 737;
              t4.Gbreve = 778;
              t4.Idotaccent = 278;
              t4.summation = 600;
              t4.Egrave = 667;
              t4.racute = 333;
              t4.omacron = 556;
              t4.Zacute = 611;
              t4.Zcaron = 611;
              t4.greaterequal = 549;
              t4.Eth = 722;
              t4.Ccedilla = 722;
              t4.lcommaaccent = 222;
              t4.tcaron = 317;
              t4.eogonek = 556;
              t4.Uogonek = 722;
              t4.Aacute = 667;
              t4.Adieresis = 667;
              t4.egrave = 556;
              t4.zacute = 500;
              t4.iogonek = 222;
              t4.Oacute = 778;
              t4.oacute = 556;
              t4.amacron = 556;
              t4.sacute = 500;
              t4.idieresis = 278;
              t4.Ocircumflex = 778;
              t4.Ugrave = 722;
              t4.Delta = 612;
              t4.thorn = 556;
              t4.twosuperior = 333;
              t4.Odieresis = 778;
              t4.mu = 556;
              t4.igrave = 278;
              t4.ohungarumlaut = 556;
              t4.Eogonek = 667;
              t4.dcroat = 556;
              t4.threequarters = 834;
              t4.Scedilla = 667;
              t4.lcaron = 299;
              t4.Kcommaaccent = 667;
              t4.Lacute = 556;
              t4.trademark = 1e3;
              t4.edotaccent = 556;
              t4.Igrave = 278;
              t4.Imacron = 278;
              t4.Lcaron = 556;
              t4.onehalf = 834;
              t4.lessequal = 549;
              t4.ocircumflex = 556;
              t4.ntilde = 556;
              t4.Uhungarumlaut = 722;
              t4.Eacute = 667;
              t4.emacron = 556;
              t4.gbreve = 556;
              t4.onequarter = 834;
              t4.Scaron = 667;
              t4.Scommaaccent = 667;
              t4.Ohungarumlaut = 778;
              t4.degree = 400;
              t4.ograve = 556;
              t4.Ccaron = 722;
              t4.ugrave = 556;
              t4.radical = 453;
              t4.Dcaron = 722;
              t4.rcommaaccent = 333;
              t4.Ntilde = 722;
              t4.otilde = 556;
              t4.Rcommaaccent = 722;
              t4.Lcommaaccent = 556;
              t4.Atilde = 667;
              t4.Aogonek = 667;
              t4.Aring = 667;
              t4.Otilde = 778;
              t4.zdotaccent = 500;
              t4.Ecaron = 667;
              t4.Iogonek = 278;
              t4.kcommaaccent = 500;
              t4.minus = 584;
              t4.Icircumflex = 278;
              t4.ncaron = 556;
              t4.tcommaaccent = 278;
              t4.logicalnot = 584;
              t4.odieresis = 556;
              t4.udieresis = 556;
              t4.notequal = 549;
              t4.gcommaaccent = 556;
              t4.eth = 556;
              t4.zcaron = 500;
              t4.ncommaaccent = 556;
              t4.onesuperior = 333;
              t4.imacron = 278;
              t4.Euro = 556;
            });
            t3.Symbol = (0, c.getLookupTableFactory)(function(t4) {
              t4.space = 250;
              t4.exclam = 333;
              t4.universal = 713;
              t4.numbersign = 500;
              t4.existential = 549;
              t4.percent = 833;
              t4.ampersand = 778;
              t4.suchthat = 439;
              t4.parenleft = 333;
              t4.parenright = 333;
              t4.asteriskmath = 500;
              t4.plus = 549;
              t4.comma = 250;
              t4.minus = 549;
              t4.period = 250;
              t4.slash = 278;
              t4.zero = 500;
              t4.one = 500;
              t4.two = 500;
              t4.three = 500;
              t4.four = 500;
              t4.five = 500;
              t4.six = 500;
              t4.seven = 500;
              t4.eight = 500;
              t4.nine = 500;
              t4.colon = 278;
              t4.semicolon = 278;
              t4.less = 549;
              t4.equal = 549;
              t4.greater = 549;
              t4.question = 444;
              t4.congruent = 549;
              t4.Alpha = 722;
              t4.Beta = 667;
              t4.Chi = 722;
              t4.Delta = 612;
              t4.Epsilon = 611;
              t4.Phi = 763;
              t4.Gamma = 603;
              t4.Eta = 722;
              t4.Iota = 333;
              t4.theta1 = 631;
              t4.Kappa = 722;
              t4.Lambda = 686;
              t4.Mu = 889;
              t4.Nu = 722;
              t4.Omicron = 722;
              t4.Pi = 768;
              t4.Theta = 741;
              t4.Rho = 556;
              t4.Sigma = 592;
              t4.Tau = 611;
              t4.Upsilon = 690;
              t4.sigma1 = 439;
              t4.Omega = 768;
              t4.Xi = 645;
              t4.Psi = 795;
              t4.Zeta = 611;
              t4.bracketleft = 333;
              t4.therefore = 863;
              t4.bracketright = 333;
              t4.perpendicular = 658;
              t4.underscore = 500;
              t4.radicalex = 500;
              t4.alpha = 631;
              t4.beta = 549;
              t4.chi = 549;
              t4.delta = 494;
              t4.epsilon = 439;
              t4.phi = 521;
              t4.gamma = 411;
              t4.eta = 603;
              t4.iota = 329;
              t4.phi1 = 603;
              t4.kappa = 549;
              t4.lambda = 549;
              t4.mu = 576;
              t4.nu = 521;
              t4.omicron = 549;
              t4.pi = 549;
              t4.theta = 521;
              t4.rho = 549;
              t4.sigma = 603;
              t4.tau = 439;
              t4.upsilon = 576;
              t4.omega1 = 713;
              t4.omega = 686;
              t4.xi = 493;
              t4.psi = 686;
              t4.zeta = 494;
              t4.braceleft = 480;
              t4.bar = 200;
              t4.braceright = 480;
              t4.similar = 549;
              t4.Euro = 750;
              t4.Upsilon1 = 620;
              t4.minute = 247;
              t4.lessequal = 549;
              t4.fraction = 167;
              t4.infinity = 713;
              t4.florin = 500;
              t4.club = 753;
              t4.diamond = 753;
              t4.heart = 753;
              t4.spade = 753;
              t4.arrowboth = 1042;
              t4.arrowleft = 987;
              t4.arrowup = 603;
              t4.arrowright = 987;
              t4.arrowdown = 603;
              t4.degree = 400;
              t4.plusminus = 549;
              t4.second = 411;
              t4.greaterequal = 549;
              t4.multiply = 549;
              t4.proportional = 713;
              t4.partialdiff = 494;
              t4.bullet = 460;
              t4.divide = 549;
              t4.notequal = 549;
              t4.equivalence = 549;
              t4.approxequal = 549;
              t4.ellipsis = 1e3;
              t4.arrowvertex = 603;
              t4.arrowhorizex = 1e3;
              t4.carriagereturn = 658;
              t4.aleph = 823;
              t4.Ifraktur = 686;
              t4.Rfraktur = 795;
              t4.weierstrass = 987;
              t4.circlemultiply = 768;
              t4.circleplus = 768;
              t4.emptyset = 823;
              t4.intersection = 768;
              t4.union = 768;
              t4.propersuperset = 713;
              t4.reflexsuperset = 713;
              t4.notsubset = 713;
              t4.propersubset = 713;
              t4.reflexsubset = 713;
              t4.element = 713;
              t4.notelement = 713;
              t4.angle = 768;
              t4.gradient = 713;
              t4.registerserif = 790;
              t4.copyrightserif = 790;
              t4.trademarkserif = 890;
              t4.product = 823;
              t4.radical = 549;
              t4.dotmath = 250;
              t4.logicalnot = 713;
              t4.logicaland = 603;
              t4.logicalor = 603;
              t4.arrowdblboth = 1042;
              t4.arrowdblleft = 987;
              t4.arrowdblup = 603;
              t4.arrowdblright = 987;
              t4.arrowdbldown = 603;
              t4.lozenge = 494;
              t4.angleleft = 329;
              t4.registersans = 790;
              t4.copyrightsans = 790;
              t4.trademarksans = 786;
              t4.summation = 713;
              t4.parenlefttp = 384;
              t4.parenleftex = 384;
              t4.parenleftbt = 384;
              t4.bracketlefttp = 384;
              t4.bracketleftex = 384;
              t4.bracketleftbt = 384;
              t4.bracelefttp = 494;
              t4.braceleftmid = 494;
              t4.braceleftbt = 494;
              t4.braceex = 494;
              t4.angleright = 329;
              t4.integral = 274;
              t4.integraltp = 686;
              t4.integralex = 686;
              t4.integralbt = 686;
              t4.parenrighttp = 384;
              t4.parenrightex = 384;
              t4.parenrightbt = 384;
              t4.bracketrighttp = 384;
              t4.bracketrightex = 384;
              t4.bracketrightbt = 384;
              t4.bracerighttp = 494;
              t4.bracerightmid = 494;
              t4.bracerightbt = 494;
              t4.apple = 790;
            });
            t3["Times-Roman"] = (0, c.getLookupTableFactory)(function(t4) {
              t4.space = 250;
              t4.exclam = 333;
              t4.quotedbl = 408;
              t4.numbersign = 500;
              t4.dollar = 500;
              t4.percent = 833;
              t4.ampersand = 778;
              t4.quoteright = 333;
              t4.parenleft = 333;
              t4.parenright = 333;
              t4.asterisk = 500;
              t4.plus = 564;
              t4.comma = 250;
              t4.hyphen = 333;
              t4.period = 250;
              t4.slash = 278;
              t4.zero = 500;
              t4.one = 500;
              t4.two = 500;
              t4.three = 500;
              t4.four = 500;
              t4.five = 500;
              t4.six = 500;
              t4.seven = 500;
              t4.eight = 500;
              t4.nine = 500;
              t4.colon = 278;
              t4.semicolon = 278;
              t4.less = 564;
              t4.equal = 564;
              t4.greater = 564;
              t4.question = 444;
              t4.at = 921;
              t4.A = 722;
              t4.B = 667;
              t4.C = 667;
              t4.D = 722;
              t4.E = 611;
              t4.F = 556;
              t4.G = 722;
              t4.H = 722;
              t4.I = 333;
              t4.J = 389;
              t4.K = 722;
              t4.L = 611;
              t4.M = 889;
              t4.N = 722;
              t4.O = 722;
              t4.P = 556;
              t4.Q = 722;
              t4.R = 667;
              t4.S = 556;
              t4.T = 611;
              t4.U = 722;
              t4.V = 722;
              t4.W = 944;
              t4.X = 722;
              t4.Y = 722;
              t4.Z = 611;
              t4.bracketleft = 333;
              t4.backslash = 278;
              t4.bracketright = 333;
              t4.asciicircum = 469;
              t4.underscore = 500;
              t4.quoteleft = 333;
              t4.a = 444;
              t4.b = 500;
              t4.c = 444;
              t4.d = 500;
              t4.e = 444;
              t4.f = 333;
              t4.g = 500;
              t4.h = 500;
              t4.i = 278;
              t4.j = 278;
              t4.k = 500;
              t4.l = 278;
              t4.m = 778;
              t4.n = 500;
              t4.o = 500;
              t4.p = 500;
              t4.q = 500;
              t4.r = 333;
              t4.s = 389;
              t4.t = 278;
              t4.u = 500;
              t4.v = 500;
              t4.w = 722;
              t4.x = 500;
              t4.y = 500;
              t4.z = 444;
              t4.braceleft = 480;
              t4.bar = 200;
              t4.braceright = 480;
              t4.asciitilde = 541;
              t4.exclamdown = 333;
              t4.cent = 500;
              t4.sterling = 500;
              t4.fraction = 167;
              t4.yen = 500;
              t4.florin = 500;
              t4.section = 500;
              t4.currency = 500;
              t4.quotesingle = 180;
              t4.quotedblleft = 444;
              t4.guillemotleft = 500;
              t4.guilsinglleft = 333;
              t4.guilsinglright = 333;
              t4.fi = 556;
              t4.fl = 556;
              t4.endash = 500;
              t4.dagger = 500;
              t4.daggerdbl = 500;
              t4.periodcentered = 250;
              t4.paragraph = 453;
              t4.bullet = 350;
              t4.quotesinglbase = 333;
              t4.quotedblbase = 444;
              t4.quotedblright = 444;
              t4.guillemotright = 500;
              t4.ellipsis = 1e3;
              t4.perthousand = 1e3;
              t4.questiondown = 444;
              t4.grave = 333;
              t4.acute = 333;
              t4.circumflex = 333;
              t4.tilde = 333;
              t4.macron = 333;
              t4.breve = 333;
              t4.dotaccent = 333;
              t4.dieresis = 333;
              t4.ring = 333;
              t4.cedilla = 333;
              t4.hungarumlaut = 333;
              t4.ogonek = 333;
              t4.caron = 333;
              t4.emdash = 1e3;
              t4.AE = 889;
              t4.ordfeminine = 276;
              t4.Lslash = 611;
              t4.Oslash = 722;
              t4.OE = 889;
              t4.ordmasculine = 310;
              t4.ae = 667;
              t4.dotlessi = 278;
              t4.lslash = 278;
              t4.oslash = 500;
              t4.oe = 722;
              t4.germandbls = 500;
              t4.Idieresis = 333;
              t4.eacute = 444;
              t4.abreve = 444;
              t4.uhungarumlaut = 500;
              t4.ecaron = 444;
              t4.Ydieresis = 722;
              t4.divide = 564;
              t4.Yacute = 722;
              t4.Acircumflex = 722;
              t4.aacute = 444;
              t4.Ucircumflex = 722;
              t4.yacute = 500;
              t4.scommaaccent = 389;
              t4.ecircumflex = 444;
              t4.Uring = 722;
              t4.Udieresis = 722;
              t4.aogonek = 444;
              t4.Uacute = 722;
              t4.uogonek = 500;
              t4.Edieresis = 611;
              t4.Dcroat = 722;
              t4.commaaccent = 250;
              t4.copyright = 760;
              t4.Emacron = 611;
              t4.ccaron = 444;
              t4.aring = 444;
              t4.Ncommaaccent = 722;
              t4.lacute = 278;
              t4.agrave = 444;
              t4.Tcommaaccent = 611;
              t4.Cacute = 667;
              t4.atilde = 444;
              t4.Edotaccent = 611;
              t4.scaron = 389;
              t4.scedilla = 389;
              t4.iacute = 278;
              t4.lozenge = 471;
              t4.Rcaron = 667;
              t4.Gcommaaccent = 722;
              t4.ucircumflex = 500;
              t4.acircumflex = 444;
              t4.Amacron = 722;
              t4.rcaron = 333;
              t4.ccedilla = 444;
              t4.Zdotaccent = 611;
              t4.Thorn = 556;
              t4.Omacron = 722;
              t4.Racute = 667;
              t4.Sacute = 556;
              t4.dcaron = 588;
              t4.Umacron = 722;
              t4.uring = 500;
              t4.threesuperior = 300;
              t4.Ograve = 722;
              t4.Agrave = 722;
              t4.Abreve = 722;
              t4.multiply = 564;
              t4.uacute = 500;
              t4.Tcaron = 611;
              t4.partialdiff = 476;
              t4.ydieresis = 500;
              t4.Nacute = 722;
              t4.icircumflex = 278;
              t4.Ecircumflex = 611;
              t4.adieresis = 444;
              t4.edieresis = 444;
              t4.cacute = 444;
              t4.nacute = 500;
              t4.umacron = 500;
              t4.Ncaron = 722;
              t4.Iacute = 333;
              t4.plusminus = 564;
              t4.brokenbar = 200;
              t4.registered = 760;
              t4.Gbreve = 722;
              t4.Idotaccent = 333;
              t4.summation = 600;
              t4.Egrave = 611;
              t4.racute = 333;
              t4.omacron = 500;
              t4.Zacute = 611;
              t4.Zcaron = 611;
              t4.greaterequal = 549;
              t4.Eth = 722;
              t4.Ccedilla = 667;
              t4.lcommaaccent = 278;
              t4.tcaron = 326;
              t4.eogonek = 444;
              t4.Uogonek = 722;
              t4.Aacute = 722;
              t4.Adieresis = 722;
              t4.egrave = 444;
              t4.zacute = 444;
              t4.iogonek = 278;
              t4.Oacute = 722;
              t4.oacute = 500;
              t4.amacron = 444;
              t4.sacute = 389;
              t4.idieresis = 278;
              t4.Ocircumflex = 722;
              t4.Ugrave = 722;
              t4.Delta = 612;
              t4.thorn = 500;
              t4.twosuperior = 300;
              t4.Odieresis = 722;
              t4.mu = 500;
              t4.igrave = 278;
              t4.ohungarumlaut = 500;
              t4.Eogonek = 611;
              t4.dcroat = 500;
              t4.threequarters = 750;
              t4.Scedilla = 556;
              t4.lcaron = 344;
              t4.Kcommaaccent = 722;
              t4.Lacute = 611;
              t4.trademark = 980;
              t4.edotaccent = 444;
              t4.Igrave = 333;
              t4.Imacron = 333;
              t4.Lcaron = 611;
              t4.onehalf = 750;
              t4.lessequal = 549;
              t4.ocircumflex = 500;
              t4.ntilde = 500;
              t4.Uhungarumlaut = 722;
              t4.Eacute = 611;
              t4.emacron = 444;
              t4.gbreve = 500;
              t4.onequarter = 750;
              t4.Scaron = 556;
              t4.Scommaaccent = 556;
              t4.Ohungarumlaut = 722;
              t4.degree = 400;
              t4.ograve = 500;
              t4.Ccaron = 667;
              t4.ugrave = 500;
              t4.radical = 453;
              t4.Dcaron = 722;
              t4.rcommaaccent = 333;
              t4.Ntilde = 722;
              t4.otilde = 500;
              t4.Rcommaaccent = 667;
              t4.Lcommaaccent = 611;
              t4.Atilde = 722;
              t4.Aogonek = 722;
              t4.Aring = 722;
              t4.Otilde = 722;
              t4.zdotaccent = 444;
              t4.Ecaron = 611;
              t4.Iogonek = 333;
              t4.kcommaaccent = 500;
              t4.minus = 564;
              t4.Icircumflex = 333;
              t4.ncaron = 500;
              t4.tcommaaccent = 278;
              t4.logicalnot = 564;
              t4.odieresis = 500;
              t4.udieresis = 500;
              t4.notequal = 549;
              t4.gcommaaccent = 500;
              t4.eth = 500;
              t4.zcaron = 444;
              t4.ncommaaccent = 500;
              t4.onesuperior = 300;
              t4.imacron = 278;
              t4.Euro = 500;
            });
            t3["Times-Bold"] = (0, c.getLookupTableFactory)(function(t4) {
              t4.space = 250;
              t4.exclam = 333;
              t4.quotedbl = 555;
              t4.numbersign = 500;
              t4.dollar = 500;
              t4.percent = 1e3;
              t4.ampersand = 833;
              t4.quoteright = 333;
              t4.parenleft = 333;
              t4.parenright = 333;
              t4.asterisk = 500;
              t4.plus = 570;
              t4.comma = 250;
              t4.hyphen = 333;
              t4.period = 250;
              t4.slash = 278;
              t4.zero = 500;
              t4.one = 500;
              t4.two = 500;
              t4.three = 500;
              t4.four = 500;
              t4.five = 500;
              t4.six = 500;
              t4.seven = 500;
              t4.eight = 500;
              t4.nine = 500;
              t4.colon = 333;
              t4.semicolon = 333;
              t4.less = 570;
              t4.equal = 570;
              t4.greater = 570;
              t4.question = 500;
              t4.at = 930;
              t4.A = 722;
              t4.B = 667;
              t4.C = 722;
              t4.D = 722;
              t4.E = 667;
              t4.F = 611;
              t4.G = 778;
              t4.H = 778;
              t4.I = 389;
              t4.J = 500;
              t4.K = 778;
              t4.L = 667;
              t4.M = 944;
              t4.N = 722;
              t4.O = 778;
              t4.P = 611;
              t4.Q = 778;
              t4.R = 722;
              t4.S = 556;
              t4.T = 667;
              t4.U = 722;
              t4.V = 722;
              t4.W = 1e3;
              t4.X = 722;
              t4.Y = 722;
              t4.Z = 667;
              t4.bracketleft = 333;
              t4.backslash = 278;
              t4.bracketright = 333;
              t4.asciicircum = 581;
              t4.underscore = 500;
              t4.quoteleft = 333;
              t4.a = 500;
              t4.b = 556;
              t4.c = 444;
              t4.d = 556;
              t4.e = 444;
              t4.f = 333;
              t4.g = 500;
              t4.h = 556;
              t4.i = 278;
              t4.j = 333;
              t4.k = 556;
              t4.l = 278;
              t4.m = 833;
              t4.n = 556;
              t4.o = 500;
              t4.p = 556;
              t4.q = 556;
              t4.r = 444;
              t4.s = 389;
              t4.t = 333;
              t4.u = 556;
              t4.v = 500;
              t4.w = 722;
              t4.x = 500;
              t4.y = 500;
              t4.z = 444;
              t4.braceleft = 394;
              t4.bar = 220;
              t4.braceright = 394;
              t4.asciitilde = 520;
              t4.exclamdown = 333;
              t4.cent = 500;
              t4.sterling = 500;
              t4.fraction = 167;
              t4.yen = 500;
              t4.florin = 500;
              t4.section = 500;
              t4.currency = 500;
              t4.quotesingle = 278;
              t4.quotedblleft = 500;
              t4.guillemotleft = 500;
              t4.guilsinglleft = 333;
              t4.guilsinglright = 333;
              t4.fi = 556;
              t4.fl = 556;
              t4.endash = 500;
              t4.dagger = 500;
              t4.daggerdbl = 500;
              t4.periodcentered = 250;
              t4.paragraph = 540;
              t4.bullet = 350;
              t4.quotesinglbase = 333;
              t4.quotedblbase = 500;
              t4.quotedblright = 500;
              t4.guillemotright = 500;
              t4.ellipsis = 1e3;
              t4.perthousand = 1e3;
              t4.questiondown = 500;
              t4.grave = 333;
              t4.acute = 333;
              t4.circumflex = 333;
              t4.tilde = 333;
              t4.macron = 333;
              t4.breve = 333;
              t4.dotaccent = 333;
              t4.dieresis = 333;
              t4.ring = 333;
              t4.cedilla = 333;
              t4.hungarumlaut = 333;
              t4.ogonek = 333;
              t4.caron = 333;
              t4.emdash = 1e3;
              t4.AE = 1e3;
              t4.ordfeminine = 300;
              t4.Lslash = 667;
              t4.Oslash = 778;
              t4.OE = 1e3;
              t4.ordmasculine = 330;
              t4.ae = 722;
              t4.dotlessi = 278;
              t4.lslash = 278;
              t4.oslash = 500;
              t4.oe = 722;
              t4.germandbls = 556;
              t4.Idieresis = 389;
              t4.eacute = 444;
              t4.abreve = 500;
              t4.uhungarumlaut = 556;
              t4.ecaron = 444;
              t4.Ydieresis = 722;
              t4.divide = 570;
              t4.Yacute = 722;
              t4.Acircumflex = 722;
              t4.aacute = 500;
              t4.Ucircumflex = 722;
              t4.yacute = 500;
              t4.scommaaccent = 389;
              t4.ecircumflex = 444;
              t4.Uring = 722;
              t4.Udieresis = 722;
              t4.aogonek = 500;
              t4.Uacute = 722;
              t4.uogonek = 556;
              t4.Edieresis = 667;
              t4.Dcroat = 722;
              t4.commaaccent = 250;
              t4.copyright = 747;
              t4.Emacron = 667;
              t4.ccaron = 444;
              t4.aring = 500;
              t4.Ncommaaccent = 722;
              t4.lacute = 278;
              t4.agrave = 500;
              t4.Tcommaaccent = 667;
              t4.Cacute = 722;
              t4.atilde = 500;
              t4.Edotaccent = 667;
              t4.scaron = 389;
              t4.scedilla = 389;
              t4.iacute = 278;
              t4.lozenge = 494;
              t4.Rcaron = 722;
              t4.Gcommaaccent = 778;
              t4.ucircumflex = 556;
              t4.acircumflex = 500;
              t4.Amacron = 722;
              t4.rcaron = 444;
              t4.ccedilla = 444;
              t4.Zdotaccent = 667;
              t4.Thorn = 611;
              t4.Omacron = 778;
              t4.Racute = 722;
              t4.Sacute = 556;
              t4.dcaron = 672;
              t4.Umacron = 722;
              t4.uring = 556;
              t4.threesuperior = 300;
              t4.Ograve = 778;
              t4.Agrave = 722;
              t4.Abreve = 722;
              t4.multiply = 570;
              t4.uacute = 556;
              t4.Tcaron = 667;
              t4.partialdiff = 494;
              t4.ydieresis = 500;
              t4.Nacute = 722;
              t4.icircumflex = 278;
              t4.Ecircumflex = 667;
              t4.adieresis = 500;
              t4.edieresis = 444;
              t4.cacute = 444;
              t4.nacute = 556;
              t4.umacron = 556;
              t4.Ncaron = 722;
              t4.Iacute = 389;
              t4.plusminus = 570;
              t4.brokenbar = 220;
              t4.registered = 747;
              t4.Gbreve = 778;
              t4.Idotaccent = 389;
              t4.summation = 600;
              t4.Egrave = 667;
              t4.racute = 444;
              t4.omacron = 500;
              t4.Zacute = 667;
              t4.Zcaron = 667;
              t4.greaterequal = 549;
              t4.Eth = 722;
              t4.Ccedilla = 722;
              t4.lcommaaccent = 278;
              t4.tcaron = 416;
              t4.eogonek = 444;
              t4.Uogonek = 722;
              t4.Aacute = 722;
              t4.Adieresis = 722;
              t4.egrave = 444;
              t4.zacute = 444;
              t4.iogonek = 278;
              t4.Oacute = 778;
              t4.oacute = 500;
              t4.amacron = 500;
              t4.sacute = 389;
              t4.idieresis = 278;
              t4.Ocircumflex = 778;
              t4.Ugrave = 722;
              t4.Delta = 612;
              t4.thorn = 556;
              t4.twosuperior = 300;
              t4.Odieresis = 778;
              t4.mu = 556;
              t4.igrave = 278;
              t4.ohungarumlaut = 500;
              t4.Eogonek = 667;
              t4.dcroat = 556;
              t4.threequarters = 750;
              t4.Scedilla = 556;
              t4.lcaron = 394;
              t4.Kcommaaccent = 778;
              t4.Lacute = 667;
              t4.trademark = 1e3;
              t4.edotaccent = 444;
              t4.Igrave = 389;
              t4.Imacron = 389;
              t4.Lcaron = 667;
              t4.onehalf = 750;
              t4.lessequal = 549;
              t4.ocircumflex = 500;
              t4.ntilde = 556;
              t4.Uhungarumlaut = 722;
              t4.Eacute = 667;
              t4.emacron = 444;
              t4.gbreve = 500;
              t4.onequarter = 750;
              t4.Scaron = 556;
              t4.Scommaaccent = 556;
              t4.Ohungarumlaut = 778;
              t4.degree = 400;
              t4.ograve = 500;
              t4.Ccaron = 722;
              t4.ugrave = 556;
              t4.radical = 549;
              t4.Dcaron = 722;
              t4.rcommaaccent = 444;
              t4.Ntilde = 722;
              t4.otilde = 500;
              t4.Rcommaaccent = 722;
              t4.Lcommaaccent = 667;
              t4.Atilde = 722;
              t4.Aogonek = 722;
              t4.Aring = 722;
              t4.Otilde = 778;
              t4.zdotaccent = 444;
              t4.Ecaron = 667;
              t4.Iogonek = 389;
              t4.kcommaaccent = 556;
              t4.minus = 570;
              t4.Icircumflex = 389;
              t4.ncaron = 556;
              t4.tcommaaccent = 333;
              t4.logicalnot = 570;
              t4.odieresis = 500;
              t4.udieresis = 556;
              t4.notequal = 549;
              t4.gcommaaccent = 500;
              t4.eth = 500;
              t4.zcaron = 444;
              t4.ncommaaccent = 556;
              t4.onesuperior = 300;
              t4.imacron = 278;
              t4.Euro = 500;
            });
            t3["Times-BoldItalic"] = (0, c.getLookupTableFactory)(function(t4) {
              t4.space = 250;
              t4.exclam = 389;
              t4.quotedbl = 555;
              t4.numbersign = 500;
              t4.dollar = 500;
              t4.percent = 833;
              t4.ampersand = 778;
              t4.quoteright = 333;
              t4.parenleft = 333;
              t4.parenright = 333;
              t4.asterisk = 500;
              t4.plus = 570;
              t4.comma = 250;
              t4.hyphen = 333;
              t4.period = 250;
              t4.slash = 278;
              t4.zero = 500;
              t4.one = 500;
              t4.two = 500;
              t4.three = 500;
              t4.four = 500;
              t4.five = 500;
              t4.six = 500;
              t4.seven = 500;
              t4.eight = 500;
              t4.nine = 500;
              t4.colon = 333;
              t4.semicolon = 333;
              t4.less = 570;
              t4.equal = 570;
              t4.greater = 570;
              t4.question = 500;
              t4.at = 832;
              t4.A = 667;
              t4.B = 667;
              t4.C = 667;
              t4.D = 722;
              t4.E = 667;
              t4.F = 667;
              t4.G = 722;
              t4.H = 778;
              t4.I = 389;
              t4.J = 500;
              t4.K = 667;
              t4.L = 611;
              t4.M = 889;
              t4.N = 722;
              t4.O = 722;
              t4.P = 611;
              t4.Q = 722;
              t4.R = 667;
              t4.S = 556;
              t4.T = 611;
              t4.U = 722;
              t4.V = 667;
              t4.W = 889;
              t4.X = 667;
              t4.Y = 611;
              t4.Z = 611;
              t4.bracketleft = 333;
              t4.backslash = 278;
              t4.bracketright = 333;
              t4.asciicircum = 570;
              t4.underscore = 500;
              t4.quoteleft = 333;
              t4.a = 500;
              t4.b = 500;
              t4.c = 444;
              t4.d = 500;
              t4.e = 444;
              t4.f = 333;
              t4.g = 500;
              t4.h = 556;
              t4.i = 278;
              t4.j = 278;
              t4.k = 500;
              t4.l = 278;
              t4.m = 778;
              t4.n = 556;
              t4.o = 500;
              t4.p = 500;
              t4.q = 500;
              t4.r = 389;
              t4.s = 389;
              t4.t = 278;
              t4.u = 556;
              t4.v = 444;
              t4.w = 667;
              t4.x = 500;
              t4.y = 444;
              t4.z = 389;
              t4.braceleft = 348;
              t4.bar = 220;
              t4.braceright = 348;
              t4.asciitilde = 570;
              t4.exclamdown = 389;
              t4.cent = 500;
              t4.sterling = 500;
              t4.fraction = 167;
              t4.yen = 500;
              t4.florin = 500;
              t4.section = 500;
              t4.currency = 500;
              t4.quotesingle = 278;
              t4.quotedblleft = 500;
              t4.guillemotleft = 500;
              t4.guilsinglleft = 333;
              t4.guilsinglright = 333;
              t4.fi = 556;
              t4.fl = 556;
              t4.endash = 500;
              t4.dagger = 500;
              t4.daggerdbl = 500;
              t4.periodcentered = 250;
              t4.paragraph = 500;
              t4.bullet = 350;
              t4.quotesinglbase = 333;
              t4.quotedblbase = 500;
              t4.quotedblright = 500;
              t4.guillemotright = 500;
              t4.ellipsis = 1e3;
              t4.perthousand = 1e3;
              t4.questiondown = 500;
              t4.grave = 333;
              t4.acute = 333;
              t4.circumflex = 333;
              t4.tilde = 333;
              t4.macron = 333;
              t4.breve = 333;
              t4.dotaccent = 333;
              t4.dieresis = 333;
              t4.ring = 333;
              t4.cedilla = 333;
              t4.hungarumlaut = 333;
              t4.ogonek = 333;
              t4.caron = 333;
              t4.emdash = 1e3;
              t4.AE = 944;
              t4.ordfeminine = 266;
              t4.Lslash = 611;
              t4.Oslash = 722;
              t4.OE = 944;
              t4.ordmasculine = 300;
              t4.ae = 722;
              t4.dotlessi = 278;
              t4.lslash = 278;
              t4.oslash = 500;
              t4.oe = 722;
              t4.germandbls = 500;
              t4.Idieresis = 389;
              t4.eacute = 444;
              t4.abreve = 500;
              t4.uhungarumlaut = 556;
              t4.ecaron = 444;
              t4.Ydieresis = 611;
              t4.divide = 570;
              t4.Yacute = 611;
              t4.Acircumflex = 667;
              t4.aacute = 500;
              t4.Ucircumflex = 722;
              t4.yacute = 444;
              t4.scommaaccent = 389;
              t4.ecircumflex = 444;
              t4.Uring = 722;
              t4.Udieresis = 722;
              t4.aogonek = 500;
              t4.Uacute = 722;
              t4.uogonek = 556;
              t4.Edieresis = 667;
              t4.Dcroat = 722;
              t4.commaaccent = 250;
              t4.copyright = 747;
              t4.Emacron = 667;
              t4.ccaron = 444;
              t4.aring = 500;
              t4.Ncommaaccent = 722;
              t4.lacute = 278;
              t4.agrave = 500;
              t4.Tcommaaccent = 611;
              t4.Cacute = 667;
              t4.atilde = 500;
              t4.Edotaccent = 667;
              t4.scaron = 389;
              t4.scedilla = 389;
              t4.iacute = 278;
              t4.lozenge = 494;
              t4.Rcaron = 667;
              t4.Gcommaaccent = 722;
              t4.ucircumflex = 556;
              t4.acircumflex = 500;
              t4.Amacron = 667;
              t4.rcaron = 389;
              t4.ccedilla = 444;
              t4.Zdotaccent = 611;
              t4.Thorn = 611;
              t4.Omacron = 722;
              t4.Racute = 667;
              t4.Sacute = 556;
              t4.dcaron = 608;
              t4.Umacron = 722;
              t4.uring = 556;
              t4.threesuperior = 300;
              t4.Ograve = 722;
              t4.Agrave = 667;
              t4.Abreve = 667;
              t4.multiply = 570;
              t4.uacute = 556;
              t4.Tcaron = 611;
              t4.partialdiff = 494;
              t4.ydieresis = 444;
              t4.Nacute = 722;
              t4.icircumflex = 278;
              t4.Ecircumflex = 667;
              t4.adieresis = 500;
              t4.edieresis = 444;
              t4.cacute = 444;
              t4.nacute = 556;
              t4.umacron = 556;
              t4.Ncaron = 722;
              t4.Iacute = 389;
              t4.plusminus = 570;
              t4.brokenbar = 220;
              t4.registered = 747;
              t4.Gbreve = 722;
              t4.Idotaccent = 389;
              t4.summation = 600;
              t4.Egrave = 667;
              t4.racute = 389;
              t4.omacron = 500;
              t4.Zacute = 611;
              t4.Zcaron = 611;
              t4.greaterequal = 549;
              t4.Eth = 722;
              t4.Ccedilla = 667;
              t4.lcommaaccent = 278;
              t4.tcaron = 366;
              t4.eogonek = 444;
              t4.Uogonek = 722;
              t4.Aacute = 667;
              t4.Adieresis = 667;
              t4.egrave = 444;
              t4.zacute = 389;
              t4.iogonek = 278;
              t4.Oacute = 722;
              t4.oacute = 500;
              t4.amacron = 500;
              t4.sacute = 389;
              t4.idieresis = 278;
              t4.Ocircumflex = 722;
              t4.Ugrave = 722;
              t4.Delta = 612;
              t4.thorn = 500;
              t4.twosuperior = 300;
              t4.Odieresis = 722;
              t4.mu = 576;
              t4.igrave = 278;
              t4.ohungarumlaut = 500;
              t4.Eogonek = 667;
              t4.dcroat = 500;
              t4.threequarters = 750;
              t4.Scedilla = 556;
              t4.lcaron = 382;
              t4.Kcommaaccent = 667;
              t4.Lacute = 611;
              t4.trademark = 1e3;
              t4.edotaccent = 444;
              t4.Igrave = 389;
              t4.Imacron = 389;
              t4.Lcaron = 611;
              t4.onehalf = 750;
              t4.lessequal = 549;
              t4.ocircumflex = 500;
              t4.ntilde = 556;
              t4.Uhungarumlaut = 722;
              t4.Eacute = 667;
              t4.emacron = 444;
              t4.gbreve = 500;
              t4.onequarter = 750;
              t4.Scaron = 556;
              t4.Scommaaccent = 556;
              t4.Ohungarumlaut = 722;
              t4.degree = 400;
              t4.ograve = 500;
              t4.Ccaron = 667;
              t4.ugrave = 556;
              t4.radical = 549;
              t4.Dcaron = 722;
              t4.rcommaaccent = 389;
              t4.Ntilde = 722;
              t4.otilde = 500;
              t4.Rcommaaccent = 667;
              t4.Lcommaaccent = 611;
              t4.Atilde = 667;
              t4.Aogonek = 667;
              t4.Aring = 667;
              t4.Otilde = 722;
              t4.zdotaccent = 389;
              t4.Ecaron = 667;
              t4.Iogonek = 389;
              t4.kcommaaccent = 500;
              t4.minus = 606;
              t4.Icircumflex = 389;
              t4.ncaron = 556;
              t4.tcommaaccent = 278;
              t4.logicalnot = 606;
              t4.odieresis = 500;
              t4.udieresis = 556;
              t4.notequal = 549;
              t4.gcommaaccent = 500;
              t4.eth = 500;
              t4.zcaron = 389;
              t4.ncommaaccent = 556;
              t4.onesuperior = 300;
              t4.imacron = 278;
              t4.Euro = 500;
            });
            t3["Times-Italic"] = (0, c.getLookupTableFactory)(function(t4) {
              t4.space = 250;
              t4.exclam = 333;
              t4.quotedbl = 420;
              t4.numbersign = 500;
              t4.dollar = 500;
              t4.percent = 833;
              t4.ampersand = 778;
              t4.quoteright = 333;
              t4.parenleft = 333;
              t4.parenright = 333;
              t4.asterisk = 500;
              t4.plus = 675;
              t4.comma = 250;
              t4.hyphen = 333;
              t4.period = 250;
              t4.slash = 278;
              t4.zero = 500;
              t4.one = 500;
              t4.two = 500;
              t4.three = 500;
              t4.four = 500;
              t4.five = 500;
              t4.six = 500;
              t4.seven = 500;
              t4.eight = 500;
              t4.nine = 500;
              t4.colon = 333;
              t4.semicolon = 333;
              t4.less = 675;
              t4.equal = 675;
              t4.greater = 675;
              t4.question = 500;
              t4.at = 920;
              t4.A = 611;
              t4.B = 611;
              t4.C = 667;
              t4.D = 722;
              t4.E = 611;
              t4.F = 611;
              t4.G = 722;
              t4.H = 722;
              t4.I = 333;
              t4.J = 444;
              t4.K = 667;
              t4.L = 556;
              t4.M = 833;
              t4.N = 667;
              t4.O = 722;
              t4.P = 611;
              t4.Q = 722;
              t4.R = 611;
              t4.S = 500;
              t4.T = 556;
              t4.U = 722;
              t4.V = 611;
              t4.W = 833;
              t4.X = 611;
              t4.Y = 556;
              t4.Z = 556;
              t4.bracketleft = 389;
              t4.backslash = 278;
              t4.bracketright = 389;
              t4.asciicircum = 422;
              t4.underscore = 500;
              t4.quoteleft = 333;
              t4.a = 500;
              t4.b = 500;
              t4.c = 444;
              t4.d = 500;
              t4.e = 444;
              t4.f = 278;
              t4.g = 500;
              t4.h = 500;
              t4.i = 278;
              t4.j = 278;
              t4.k = 444;
              t4.l = 278;
              t4.m = 722;
              t4.n = 500;
              t4.o = 500;
              t4.p = 500;
              t4.q = 500;
              t4.r = 389;
              t4.s = 389;
              t4.t = 278;
              t4.u = 500;
              t4.v = 444;
              t4.w = 667;
              t4.x = 444;
              t4.y = 444;
              t4.z = 389;
              t4.braceleft = 400;
              t4.bar = 275;
              t4.braceright = 400;
              t4.asciitilde = 541;
              t4.exclamdown = 389;
              t4.cent = 500;
              t4.sterling = 500;
              t4.fraction = 167;
              t4.yen = 500;
              t4.florin = 500;
              t4.section = 500;
              t4.currency = 500;
              t4.quotesingle = 214;
              t4.quotedblleft = 556;
              t4.guillemotleft = 500;
              t4.guilsinglleft = 333;
              t4.guilsinglright = 333;
              t4.fi = 500;
              t4.fl = 500;
              t4.endash = 500;
              t4.dagger = 500;
              t4.daggerdbl = 500;
              t4.periodcentered = 250;
              t4.paragraph = 523;
              t4.bullet = 350;
              t4.quotesinglbase = 333;
              t4.quotedblbase = 556;
              t4.quotedblright = 556;
              t4.guillemotright = 500;
              t4.ellipsis = 889;
              t4.perthousand = 1e3;
              t4.questiondown = 500;
              t4.grave = 333;
              t4.acute = 333;
              t4.circumflex = 333;
              t4.tilde = 333;
              t4.macron = 333;
              t4.breve = 333;
              t4.dotaccent = 333;
              t4.dieresis = 333;
              t4.ring = 333;
              t4.cedilla = 333;
              t4.hungarumlaut = 333;
              t4.ogonek = 333;
              t4.caron = 333;
              t4.emdash = 889;
              t4.AE = 889;
              t4.ordfeminine = 276;
              t4.Lslash = 556;
              t4.Oslash = 722;
              t4.OE = 944;
              t4.ordmasculine = 310;
              t4.ae = 667;
              t4.dotlessi = 278;
              t4.lslash = 278;
              t4.oslash = 500;
              t4.oe = 667;
              t4.germandbls = 500;
              t4.Idieresis = 333;
              t4.eacute = 444;
              t4.abreve = 500;
              t4.uhungarumlaut = 500;
              t4.ecaron = 444;
              t4.Ydieresis = 556;
              t4.divide = 675;
              t4.Yacute = 556;
              t4.Acircumflex = 611;
              t4.aacute = 500;
              t4.Ucircumflex = 722;
              t4.yacute = 444;
              t4.scommaaccent = 389;
              t4.ecircumflex = 444;
              t4.Uring = 722;
              t4.Udieresis = 722;
              t4.aogonek = 500;
              t4.Uacute = 722;
              t4.uogonek = 500;
              t4.Edieresis = 611;
              t4.Dcroat = 722;
              t4.commaaccent = 250;
              t4.copyright = 760;
              t4.Emacron = 611;
              t4.ccaron = 444;
              t4.aring = 500;
              t4.Ncommaaccent = 667;
              t4.lacute = 278;
              t4.agrave = 500;
              t4.Tcommaaccent = 556;
              t4.Cacute = 667;
              t4.atilde = 500;
              t4.Edotaccent = 611;
              t4.scaron = 389;
              t4.scedilla = 389;
              t4.iacute = 278;
              t4.lozenge = 471;
              t4.Rcaron = 611;
              t4.Gcommaaccent = 722;
              t4.ucircumflex = 500;
              t4.acircumflex = 500;
              t4.Amacron = 611;
              t4.rcaron = 389;
              t4.ccedilla = 444;
              t4.Zdotaccent = 556;
              t4.Thorn = 611;
              t4.Omacron = 722;
              t4.Racute = 611;
              t4.Sacute = 500;
              t4.dcaron = 544;
              t4.Umacron = 722;
              t4.uring = 500;
              t4.threesuperior = 300;
              t4.Ograve = 722;
              t4.Agrave = 611;
              t4.Abreve = 611;
              t4.multiply = 675;
              t4.uacute = 500;
              t4.Tcaron = 556;
              t4.partialdiff = 476;
              t4.ydieresis = 444;
              t4.Nacute = 667;
              t4.icircumflex = 278;
              t4.Ecircumflex = 611;
              t4.adieresis = 500;
              t4.edieresis = 444;
              t4.cacute = 444;
              t4.nacute = 500;
              t4.umacron = 500;
              t4.Ncaron = 667;
              t4.Iacute = 333;
              t4.plusminus = 675;
              t4.brokenbar = 275;
              t4.registered = 760;
              t4.Gbreve = 722;
              t4.Idotaccent = 333;
              t4.summation = 600;
              t4.Egrave = 611;
              t4.racute = 389;
              t4.omacron = 500;
              t4.Zacute = 556;
              t4.Zcaron = 556;
              t4.greaterequal = 549;
              t4.Eth = 722;
              t4.Ccedilla = 667;
              t4.lcommaaccent = 278;
              t4.tcaron = 300;
              t4.eogonek = 444;
              t4.Uogonek = 722;
              t4.Aacute = 611;
              t4.Adieresis = 611;
              t4.egrave = 444;
              t4.zacute = 389;
              t4.iogonek = 278;
              t4.Oacute = 722;
              t4.oacute = 500;
              t4.amacron = 500;
              t4.sacute = 389;
              t4.idieresis = 278;
              t4.Ocircumflex = 722;
              t4.Ugrave = 722;
              t4.Delta = 612;
              t4.thorn = 500;
              t4.twosuperior = 300;
              t4.Odieresis = 722;
              t4.mu = 500;
              t4.igrave = 278;
              t4.ohungarumlaut = 500;
              t4.Eogonek = 611;
              t4.dcroat = 500;
              t4.threequarters = 750;
              t4.Scedilla = 500;
              t4.lcaron = 300;
              t4.Kcommaaccent = 667;
              t4.Lacute = 556;
              t4.trademark = 980;
              t4.edotaccent = 444;
              t4.Igrave = 333;
              t4.Imacron = 333;
              t4.Lcaron = 611;
              t4.onehalf = 750;
              t4.lessequal = 549;
              t4.ocircumflex = 500;
              t4.ntilde = 500;
              t4.Uhungarumlaut = 722;
              t4.Eacute = 611;
              t4.emacron = 444;
              t4.gbreve = 500;
              t4.onequarter = 750;
              t4.Scaron = 500;
              t4.Scommaaccent = 500;
              t4.Ohungarumlaut = 722;
              t4.degree = 400;
              t4.ograve = 500;
              t4.Ccaron = 667;
              t4.ugrave = 500;
              t4.radical = 453;
              t4.Dcaron = 722;
              t4.rcommaaccent = 389;
              t4.Ntilde = 667;
              t4.otilde = 500;
              t4.Rcommaaccent = 611;
              t4.Lcommaaccent = 556;
              t4.Atilde = 611;
              t4.Aogonek = 611;
              t4.Aring = 611;
              t4.Otilde = 722;
              t4.zdotaccent = 389;
              t4.Ecaron = 611;
              t4.Iogonek = 333;
              t4.kcommaaccent = 444;
              t4.minus = 675;
              t4.Icircumflex = 333;
              t4.ncaron = 500;
              t4.tcommaaccent = 278;
              t4.logicalnot = 675;
              t4.odieresis = 500;
              t4.udieresis = 500;
              t4.notequal = 549;
              t4.gcommaaccent = 500;
              t4.eth = 500;
              t4.zcaron = 389;
              t4.ncommaaccent = 500;
              t4.onesuperior = 300;
              t4.imacron = 278;
              t4.Euro = 500;
            });
            t3.ZapfDingbats = (0, c.getLookupTableFactory)(function(t4) {
              t4.space = 278;
              t4.a1 = 974;
              t4.a2 = 961;
              t4.a202 = 974;
              t4.a3 = 980;
              t4.a4 = 719;
              t4.a5 = 789;
              t4.a119 = 790;
              t4.a118 = 791;
              t4.a117 = 690;
              t4.a11 = 960;
              t4.a12 = 939;
              t4.a13 = 549;
              t4.a14 = 855;
              t4.a15 = 911;
              t4.a16 = 933;
              t4.a105 = 911;
              t4.a17 = 945;
              t4.a18 = 974;
              t4.a19 = 755;
              t4.a20 = 846;
              t4.a21 = 762;
              t4.a22 = 761;
              t4.a23 = 571;
              t4.a24 = 677;
              t4.a25 = 763;
              t4.a26 = 760;
              t4.a27 = 759;
              t4.a28 = 754;
              t4.a6 = 494;
              t4.a7 = 552;
              t4.a8 = 537;
              t4.a9 = 577;
              t4.a10 = 692;
              t4.a29 = 786;
              t4.a30 = 788;
              t4.a31 = 788;
              t4.a32 = 790;
              t4.a33 = 793;
              t4.a34 = 794;
              t4.a35 = 816;
              t4.a36 = 823;
              t4.a37 = 789;
              t4.a38 = 841;
              t4.a39 = 823;
              t4.a40 = 833;
              t4.a41 = 816;
              t4.a42 = 831;
              t4.a43 = 923;
              t4.a44 = 744;
              t4.a45 = 723;
              t4.a46 = 749;
              t4.a47 = 790;
              t4.a48 = 792;
              t4.a49 = 695;
              t4.a50 = 776;
              t4.a51 = 768;
              t4.a52 = 792;
              t4.a53 = 759;
              t4.a54 = 707;
              t4.a55 = 708;
              t4.a56 = 682;
              t4.a57 = 701;
              t4.a58 = 826;
              t4.a59 = 815;
              t4.a60 = 789;
              t4.a61 = 789;
              t4.a62 = 707;
              t4.a63 = 687;
              t4.a64 = 696;
              t4.a65 = 689;
              t4.a66 = 786;
              t4.a67 = 787;
              t4.a68 = 713;
              t4.a69 = 791;
              t4.a70 = 785;
              t4.a71 = 791;
              t4.a72 = 873;
              t4.a73 = 761;
              t4.a74 = 762;
              t4.a203 = 762;
              t4.a75 = 759;
              t4.a204 = 759;
              t4.a76 = 892;
              t4.a77 = 892;
              t4.a78 = 788;
              t4.a79 = 784;
              t4.a81 = 438;
              t4.a82 = 138;
              t4.a83 = 277;
              t4.a84 = 415;
              t4.a97 = 392;
              t4.a98 = 392;
              t4.a99 = 668;
              t4.a100 = 668;
              t4.a89 = 390;
              t4.a90 = 390;
              t4.a93 = 317;
              t4.a94 = 317;
              t4.a91 = 276;
              t4.a92 = 276;
              t4.a205 = 509;
              t4.a85 = 509;
              t4.a206 = 410;
              t4.a86 = 410;
              t4.a87 = 234;
              t4.a88 = 234;
              t4.a95 = 334;
              t4.a96 = 334;
              t4.a101 = 732;
              t4.a102 = 544;
              t4.a103 = 544;
              t4.a104 = 910;
              t4.a106 = 667;
              t4.a107 = 760;
              t4.a108 = 760;
              t4.a112 = 776;
              t4.a111 = 595;
              t4.a110 = 694;
              t4.a109 = 626;
              t4.a120 = 788;
              t4.a121 = 788;
              t4.a122 = 788;
              t4.a123 = 788;
              t4.a124 = 788;
              t4.a125 = 788;
              t4.a126 = 788;
              t4.a127 = 788;
              t4.a128 = 788;
              t4.a129 = 788;
              t4.a130 = 788;
              t4.a131 = 788;
              t4.a132 = 788;
              t4.a133 = 788;
              t4.a134 = 788;
              t4.a135 = 788;
              t4.a136 = 788;
              t4.a137 = 788;
              t4.a138 = 788;
              t4.a139 = 788;
              t4.a140 = 788;
              t4.a141 = 788;
              t4.a142 = 788;
              t4.a143 = 788;
              t4.a144 = 788;
              t4.a145 = 788;
              t4.a146 = 788;
              t4.a147 = 788;
              t4.a148 = 788;
              t4.a149 = 788;
              t4.a150 = 788;
              t4.a151 = 788;
              t4.a152 = 788;
              t4.a153 = 788;
              t4.a154 = 788;
              t4.a155 = 788;
              t4.a156 = 788;
              t4.a157 = 788;
              t4.a158 = 788;
              t4.a159 = 788;
              t4.a160 = 894;
              t4.a161 = 838;
              t4.a163 = 1016;
              t4.a164 = 458;
              t4.a196 = 748;
              t4.a165 = 924;
              t4.a192 = 748;
              t4.a166 = 918;
              t4.a167 = 927;
              t4.a168 = 928;
              t4.a169 = 928;
              t4.a170 = 834;
              t4.a171 = 873;
              t4.a172 = 828;
              t4.a173 = 924;
              t4.a162 = 924;
              t4.a174 = 917;
              t4.a175 = 930;
              t4.a176 = 931;
              t4.a177 = 463;
              t4.a178 = 883;
              t4.a179 = 836;
              t4.a193 = 836;
              t4.a180 = 867;
              t4.a199 = 867;
              t4.a181 = 696;
              t4.a200 = 696;
              t4.a182 = 874;
              t4.a201 = 874;
              t4.a183 = 760;
              t4.a184 = 946;
              t4.a197 = 771;
              t4.a185 = 865;
              t4.a194 = 771;
              t4.a198 = 888;
              t4.a186 = 967;
              t4.a195 = 888;
              t4.a187 = 831;
              t4.a188 = 873;
              t4.a189 = 927;
              t4.a190 = 970;
              t4.a191 = 918;
            });
          });
          r2.getMetrics = l;
          var u = (0, c.getLookupTableFactory)(function(t3) {
            t3.Courier = { ascent: 629, descent: -157, capHeight: 562, xHeight: -426 };
            t3["Courier-Bold"] = { ascent: 629, descent: -157, capHeight: 562, xHeight: 439 };
            t3["Courier-Oblique"] = { ascent: 629, descent: -157, capHeight: 562, xHeight: 426 };
            t3["Courier-BoldOblique"] = { ascent: 629, descent: -157, capHeight: 562, xHeight: 426 };
            t3.Helvetica = { ascent: 718, descent: -207, capHeight: 718, xHeight: 523 };
            t3["Helvetica-Bold"] = { ascent: 718, descent: -207, capHeight: 718, xHeight: 532 };
            t3["Helvetica-Oblique"] = { ascent: 718, descent: -207, capHeight: 718, xHeight: 523 };
            t3["Helvetica-BoldOblique"] = { ascent: 718, descent: -207, capHeight: 718, xHeight: 532 };
            t3["Times-Roman"] = { ascent: 683, descent: -217, capHeight: 662, xHeight: 450 };
            t3["Times-Bold"] = { ascent: 683, descent: -217, capHeight: 676, xHeight: 461 };
            t3["Times-Italic"] = { ascent: 683, descent: -217, capHeight: 653, xHeight: 441 };
            t3["Times-BoldItalic"] = { ascent: 683, descent: -217, capHeight: 669, xHeight: 462 };
            t3.Symbol = { ascent: Math.NaN, descent: Math.NaN, capHeight: Math.NaN, xHeight: Math.NaN };
            t3.ZapfDingbats = { ascent: Math.NaN, descent: Math.NaN, capHeight: Math.NaN, xHeight: Math.NaN };
          });
          r2.getFontBasicMetrics = u;
        }, (t2, r2) => {
          "use strict";
          Object.defineProperty(r2, "__esModule", { value: true });
          r2.GlyfTable = void 0;
          function _slicedToArray(t3, r3) {
            return function _arrayWithHoles(t4) {
              if (Array.isArray(t4))
                return t4;
            }(t3) || function _iterableToArrayLimit(t4, r4) {
              var o3 = t4 == null ? null : typeof Symbol != "undefined" && t4[Symbol.iterator] || t4["@@iterator"];
              if (o3 == null)
                return;
              var c2, l2, u2 = [], h2 = true, d2 = false;
              try {
                for (o3 = o3.call(t4); !(h2 = (c2 = o3.next()).done); h2 = true) {
                  u2.push(c2.value);
                  if (r4 && u2.length === r4)
                    break;
                }
              } catch (t5) {
                d2 = true;
                l2 = t5;
              } finally {
                try {
                  h2 || o3.return == null || o3.return();
                } finally {
                  if (d2)
                    throw l2;
                }
              }
              return u2;
            }(t3, r3) || _unsupportedIterableToArray(t3, r3) || function _nonIterableRest() {
              throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
            }();
          }
          function _createForOfIteratorHelper(t3, r3) {
            var o3 = typeof Symbol != "undefined" && t3[Symbol.iterator] || t3["@@iterator"];
            if (!o3) {
              if (Array.isArray(t3) || (o3 = _unsupportedIterableToArray(t3)) || r3 && t3 && typeof t3.length == "number") {
                o3 && (t3 = o3);
                var c2 = 0, l2 = function F() {
                };
                return { s: l2, n: function n() {
                  return c2 >= t3.length ? { done: true } : { done: false, value: t3[c2++] };
                }, e: function e(t4) {
                  throw t4;
                }, f: l2 };
              }
              throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
            }
            var u2, h2 = true, d2 = false;
            return { s: function s() {
              o3 = o3.call(t3);
            }, n: function n() {
              var t4 = o3.next();
              h2 = t4.done;
              return t4;
            }, e: function e(t4) {
              d2 = true;
              u2 = t4;
            }, f: function f() {
              try {
                h2 || o3.return == null || o3.return();
              } finally {
                if (d2)
                  throw u2;
              }
            } };
          }
          function _unsupportedIterableToArray(t3, r3) {
            if (t3) {
              if (typeof t3 == "string")
                return _arrayLikeToArray(t3, r3);
              var o3 = Object.prototype.toString.call(t3).slice(8, -1);
              o3 === "Object" && t3.constructor && (o3 = t3.constructor.name);
              return o3 === "Map" || o3 === "Set" ? Array.from(t3) : o3 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(o3) ? _arrayLikeToArray(t3, r3) : void 0;
            }
          }
          function _arrayLikeToArray(t3, r3) {
            (r3 == null || r3 > t3.length) && (r3 = t3.length);
            for (var o3 = 0, c2 = new Array(r3); o3 < r3; o3++)
              c2[o3] = t3[o3];
            return c2;
          }
          function _classCallCheck(t3, r3) {
            if (!(t3 instanceof r3))
              throw new TypeError("Cannot call a class as a function");
          }
          function _defineProperties(t3, r3) {
            for (var o3 = 0; o3 < r3.length; o3++) {
              var c2 = r3[o3];
              c2.enumerable = c2.enumerable || false;
              c2.configurable = true;
              "value" in c2 && (c2.writable = true);
              Object.defineProperty(t3, c2.key, c2);
            }
          }
          function _createClass(t3, r3, o3) {
            r3 && _defineProperties(t3.prototype, r3);
            o3 && _defineProperties(t3, o3);
            Object.defineProperty(t3, "prototype", { writable: false });
            return t3;
          }
          var o2 = function() {
            function GlyfTable(t3) {
              var r3 = t3.glyfTable, o3 = t3.isGlyphLocationsLong, l2 = t3.locaTable, u2 = t3.numGlyphs;
              _classCallCheck(this, GlyfTable);
              this.glyphs = [];
              for (var h2 = new DataView(l2.buffer, l2.byteOffset, l2.byteLength), d2 = new DataView(r3.buffer, r3.byteOffset, r3.byteLength), g = o3 ? 4 : 2, m = o3 ? h2.getUint32(0) : 2 * h2.getUint16(0), y = 0, v = 0; v < u2; v++) {
                y += g;
                var k = o3 ? h2.getUint32(y) : 2 * h2.getUint16(y);
                if (k !== m) {
                  var _ = c.parse(m, d2);
                  this.glyphs.push(_);
                  m = k;
                } else
                  this.glyphs.push(new c({}));
              }
            }
            _createClass(GlyfTable, [{ key: "getSize", value: function getSize() {
              return this.glyphs.reduce(function(t3, r3) {
                return t3 + (r3.getSize() + 3 & -4);
              }, 0);
            } }, { key: "write", value: function write() {
              var t3 = this.getSize(), r3 = new DataView(new ArrayBuffer(t3)), o3 = t3 > 131070, c2 = o3 ? 4 : 2, l2 = new DataView(new ArrayBuffer((this.glyphs.length + 1) * c2));
              o3 ? l2.setUint32(0, 0) : l2.setUint16(0, 0);
              var u2, h2 = 0, d2 = 0, g = _createForOfIteratorHelper(this.glyphs);
              try {
                for (g.s(); !(u2 = g.n()).done; ) {
                  h2 = (h2 += u2.value.write(h2, r3)) + 3 & -4;
                  d2 += c2;
                  o3 ? l2.setUint32(d2, h2) : l2.setUint16(d2, h2 >> 1);
                }
              } catch (t4) {
                g.e(t4);
              } finally {
                g.f();
              }
              return { isLocationLong: o3, loca: new Uint8Array(l2.buffer), glyf: new Uint8Array(r3.buffer) };
            } }, { key: "scale", value: function scale(t3) {
              for (var r3 = 0, o3 = this.glyphs.length; r3 < o3; r3++)
                this.glyphs[r3].scale(t3[r3]);
            } }]);
            return GlyfTable;
          }();
          r2.GlyfTable = o2;
          var c = function() {
            function Glyph(t3) {
              var r3 = t3.header, o3 = r3 === void 0 ? null : r3, c2 = t3.simple, l2 = c2 === void 0 ? null : c2, u2 = t3.composites, h2 = u2 === void 0 ? null : u2;
              _classCallCheck(this, Glyph);
              this.header = o3;
              this.simple = l2;
              this.composites = h2;
            }
            _createClass(Glyph, [{ key: "getSize", value: function getSize() {
              if (!this.header)
                return 0;
              var t3 = this.simple ? this.simple.getSize() : this.composites.reduce(function(t4, r3) {
                return t4 + r3.getSize();
              }, 0);
              return this.header.getSize() + t3;
            } }, { key: "write", value: function write(t3, r3) {
              if (!this.header)
                return 0;
              var o3 = t3;
              t3 += this.header.write(t3, r3);
              if (this.simple)
                t3 += this.simple.write(t3, r3);
              else {
                var c2, l2 = _createForOfIteratorHelper(this.composites);
                try {
                  for (l2.s(); !(c2 = l2.n()).done; ) {
                    t3 += c2.value.write(t3, r3);
                  }
                } catch (t4) {
                  l2.e(t4);
                } finally {
                  l2.f();
                }
              }
              return t3 - o3;
            } }, { key: "scale", value: function scale(t3) {
              if (this.header) {
                var r3 = (this.header.xMin + this.header.xMax) / 2;
                this.header.scale(r3, t3);
                if (this.simple)
                  this.simple.scale(r3, t3);
                else {
                  var o3, c2 = _createForOfIteratorHelper(this.composites);
                  try {
                    for (c2.s(); !(o3 = c2.n()).done; ) {
                      o3.value.scale(r3, t3);
                    }
                  } catch (t4) {
                    c2.e(t4);
                  } finally {
                    c2.f();
                  }
                }
              }
            } }], [{ key: "parse", value: function parse(t3, r3) {
              var o3 = _slicedToArray(l.parse(t3, r3), 2), c2 = o3[0], u2 = o3[1];
              t3 += c2;
              if (u2.numberOfContours < 0) {
                for (var g = []; ; ) {
                  var m = _slicedToArray(d.parse(t3, r3), 2), y = m[0], v = m[1];
                  t3 += y;
                  g.push(v);
                  if (!(32 & v.flags))
                    break;
                }
                return new Glyph({ header: u2, composites: g });
              }
              return new Glyph({ header: u2, simple: h.parse(t3, r3, u2.numberOfContours) });
            } }]);
            return Glyph;
          }(), l = function() {
            function GlyphHeader(t3) {
              var r3 = t3.numberOfContours, o3 = t3.xMin, c2 = t3.yMin, l2 = t3.xMax, u2 = t3.yMax;
              _classCallCheck(this, GlyphHeader);
              this.numberOfContours = r3;
              this.xMin = o3;
              this.yMin = c2;
              this.xMax = l2;
              this.yMax = u2;
            }
            _createClass(GlyphHeader, [{ key: "getSize", value: function getSize() {
              return 10;
            } }, { key: "write", value: function write(t3, r3) {
              r3.setInt16(t3, this.numberOfContours);
              r3.setInt16(t3 + 2, this.xMin);
              r3.setInt16(t3 + 4, this.yMin);
              r3.setInt16(t3 + 6, this.xMax);
              r3.setInt16(t3 + 8, this.yMax);
              return 10;
            } }, { key: "scale", value: function scale(t3, r3) {
              this.xMin = Math.round(t3 + (this.xMin - t3) * r3);
              this.xMax = Math.round(t3 + (this.xMax - t3) * r3);
            } }], [{ key: "parse", value: function parse(t3, r3) {
              return [10, new GlyphHeader({ numberOfContours: r3.getInt16(t3), xMin: r3.getInt16(t3 + 2), yMin: r3.getInt16(t3 + 4), xMax: r3.getInt16(t3 + 6), yMax: r3.getInt16(t3 + 8) })];
            } }]);
            return GlyphHeader;
          }(), u = _createClass(function Contour(t3) {
            var r3 = t3.flags, o3 = t3.xCoordinates, c2 = t3.yCoordinates;
            _classCallCheck(this, Contour);
            this.xCoordinates = o3;
            this.yCoordinates = c2;
            this.flags = r3;
          }), h = function() {
            function SimpleGlyph(t3) {
              var r3 = t3.contours, o3 = t3.instructions;
              _classCallCheck(this, SimpleGlyph);
              this.contours = r3;
              this.instructions = o3;
            }
            _createClass(SimpleGlyph, [{ key: "getSize", value: function getSize() {
              var t3, r3 = 2 * this.contours.length + 2 + this.instructions.length, o3 = 0, c2 = 0, l2 = _createForOfIteratorHelper(this.contours);
              try {
                for (l2.s(); !(t3 = l2.n()).done; ) {
                  var u2 = t3.value;
                  r3 += u2.flags.length;
                  for (var h2 = 0, d2 = u2.xCoordinates.length; h2 < d2; h2++) {
                    var g = u2.xCoordinates[h2], m = u2.yCoordinates[h2], y = Math.abs(g - o3);
                    y > 255 ? r3 += 2 : y > 0 && (r3 += 1);
                    o3 = g;
                    (y = Math.abs(m - c2)) > 255 ? r3 += 2 : y > 0 && (r3 += 1);
                    c2 = m;
                  }
                }
              } catch (t4) {
                l2.e(t4);
              } finally {
                l2.f();
              }
              return r3;
            } }, { key: "write", value: function write(t3, r3) {
              var o3, c2 = t3, l2 = [], u2 = [], h2 = [], d2 = 0, g = 0, m = _createForOfIteratorHelper(this.contours);
              try {
                for (m.s(); !(o3 = m.n()).done; ) {
                  for (var y = o3.value, v = 0, k = y.xCoordinates.length; v < k; v++) {
                    var _ = y.flags[v], w = y.xCoordinates[v], S = w - d2;
                    if (S === 0) {
                      _ |= 16;
                      l2.push(0);
                    } else {
                      var C = Math.abs(S);
                      if (C <= 255) {
                        _ |= S >= 0 ? 18 : 2;
                        l2.push(C);
                      } else
                        l2.push(S);
                    }
                    d2 = w;
                    var x = y.yCoordinates[v];
                    if ((S = x - g) === 0) {
                      _ |= 32;
                      u2.push(0);
                    } else {
                      var O = Math.abs(S);
                      if (O <= 255) {
                        _ |= S >= 0 ? 36 : 4;
                        u2.push(O);
                      } else
                        u2.push(S);
                    }
                    g = x;
                    h2.push(_);
                  }
                  r3.setUint16(t3, l2.length - 1);
                  t3 += 2;
                }
              } catch (t4) {
                m.e(t4);
              } finally {
                m.f();
              }
              r3.setUint16(t3, this.instructions.length);
              t3 += 2;
              if (this.instructions.length) {
                new Uint8Array(r3.buffer, 0, r3.buffer.byteLength).set(this.instructions, t3);
                t3 += this.instructions.length;
              }
              for (var T = 0, E = h2; T < E.length; T++) {
                var M = E[T];
                r3.setUint8(t3++, M);
              }
              for (var R = 0, D = l2.length; R < D; R++) {
                var j = l2[R], L = h2[R];
                if (2 & L)
                  r3.setUint8(t3++, j);
                else if (!(16 & L)) {
                  r3.setInt16(t3, j);
                  t3 += 2;
                }
              }
              for (var N = 0, U = u2.length; N < U; N++) {
                var H = u2[N], $ = h2[N];
                if (4 & $)
                  r3.setUint8(t3++, H);
                else if (!(32 & $)) {
                  r3.setInt16(t3, H);
                  t3 += 2;
                }
              }
              return t3 - c2;
            } }, { key: "scale", value: function scale(t3, r3) {
              var o3, c2 = _createForOfIteratorHelper(this.contours);
              try {
                for (c2.s(); !(o3 = c2.n()).done; ) {
                  var l2 = o3.value;
                  if (l2.xCoordinates.length !== 0)
                    for (var u2 = 0, h2 = l2.xCoordinates.length; u2 < h2; u2++)
                      l2.xCoordinates[u2] = Math.round(t3 + (l2.xCoordinates[u2] - t3) * r3);
                }
              } catch (t4) {
                c2.e(t4);
              } finally {
                c2.f();
              }
            } }], [{ key: "parse", value: function parse(t3, r3, o3) {
              for (var c2 = [], l2 = 0; l2 < o3; l2++) {
                var h2 = r3.getUint16(t3);
                t3 += 2;
                c2.push(h2);
              }
              var d2 = c2[o3 - 1] + 1, g = r3.getUint16(t3);
              t3 += 2;
              var m = new Uint8Array(r3).slice(t3, t3 + g);
              t3 += g;
              for (var y = [], v = 0; v < d2; t3++, v++) {
                var k = r3.getUint8(t3);
                y.push(k);
                if (8 & k) {
                  var _ = r3.getUint8(++t3);
                  k ^= 8;
                  for (var w = 0; w < _; w++)
                    y.push(k);
                  v += _;
                }
              }
              for (var S = [], C = [], x = [], O = [], T = [], E = 0, M = 0, R = 0; R < d2; R++) {
                var D = y[R];
                if (2 & D) {
                  var j = r3.getUint8(t3++);
                  M += 16 & D ? j : -j;
                  C.push(M);
                } else if (16 & D)
                  C.push(M);
                else {
                  M += r3.getInt16(t3);
                  t3 += 2;
                  C.push(M);
                }
                if (c2[E] === R) {
                  E++;
                  S.push(C);
                  C = [];
                }
              }
              M = 0;
              E = 0;
              for (var L = 0; L < d2; L++) {
                var N = y[L];
                if (4 & N) {
                  var U = r3.getUint8(t3++);
                  M += 32 & N ? U : -U;
                  x.push(M);
                } else if (32 & N)
                  x.push(M);
                else {
                  M += r3.getInt16(t3);
                  t3 += 2;
                  x.push(M);
                }
                O.push(1 & N | 64 & N);
                if (c2[E] === L) {
                  C = S[E];
                  E++;
                  T.push(new u({ flags: O, xCoordinates: C, yCoordinates: x }));
                  x = [];
                  O = [];
                }
              }
              return new SimpleGlyph({ contours: T, instructions: m });
            } }]);
            return SimpleGlyph;
          }(), d = function() {
            function CompositeGlyph(t3) {
              var r3 = t3.flags, o3 = t3.glyphIndex, c2 = t3.argument1, l2 = t3.argument2, u2 = t3.transf, h2 = t3.instructions;
              _classCallCheck(this, CompositeGlyph);
              this.flags = r3;
              this.glyphIndex = o3;
              this.argument1 = c2;
              this.argument2 = l2;
              this.transf = u2;
              this.instructions = h2;
            }
            _createClass(CompositeGlyph, [{ key: "getSize", value: function getSize() {
              var t3 = 4 + 2 * this.transf.length;
              256 & this.flags && (t3 += 2 + this.instructions.length);
              t3 += 2;
              2 & this.flags ? this.argument1 >= -128 && this.argument1 <= 127 && this.argument2 >= -128 && this.argument2 <= 127 || (t3 += 2) : this.argument1 >= 0 && this.argument1 <= 255 && this.argument2 >= 0 && this.argument2 <= 255 || (t3 += 2);
              return t3;
            } }, { key: "write", value: function write(t3, r3) {
              var o3 = t3;
              2 & this.flags ? this.argument1 >= -128 && this.argument1 <= 127 && this.argument2 >= -128 && this.argument2 <= 127 || (this.flags |= 1) : this.argument1 >= 0 && this.argument1 <= 255 && this.argument2 >= 0 && this.argument2 <= 255 || (this.flags |= 1);
              r3.setUint16(t3, this.flags);
              r3.setUint16(t3 + 2, this.glyphIndex);
              t3 += 4;
              if (1 & this.flags) {
                if (2 & this.flags) {
                  r3.setInt16(t3, this.argument1);
                  r3.setInt16(t3 + 2, this.argument2);
                } else {
                  r3.setUint16(t3, this.argument1);
                  r3.setUint16(t3 + 2, this.argument2);
                }
                t3 += 4;
              } else {
                r3.setUint8(t3, this.argument1);
                r3.setUint8(t3 + 1, this.argument2);
                t3 += 2;
              }
              if (256 & this.flags) {
                r3.setUint16(t3, this.instructions.length);
                t3 += 2;
                if (this.instructions.length) {
                  new Uint8Array(r3.buffer, 0, r3.buffer.byteLength).set(this.instructions, t3);
                  t3 += this.instructions.length;
                }
              }
              return t3 - o3;
            } }, { key: "scale", value: function scale(t3, r3) {
            } }], [{ key: "parse", value: function parse(t3, r3) {
              var o3, c2, l2 = t3, u2 = [], h2 = r3.getUint16(t3), d2 = r3.getUint16(t3 + 2);
              t3 += 4;
              if (1 & h2) {
                if (2 & h2) {
                  o3 = r3.getInt16(t3);
                  c2 = r3.getInt16(t3 + 2);
                } else {
                  o3 = r3.getUint16(t3);
                  c2 = r3.getUint16(t3 + 2);
                }
                t3 += 4;
                h2 ^= 1;
              } else {
                if (2 & h2) {
                  o3 = r3.getInt8(t3);
                  c2 = r3.getInt8(t3 + 1);
                } else {
                  o3 = r3.getUint8(t3);
                  c2 = r3.getUint8(t3 + 1);
                }
                t3 += 2;
              }
              if (8 & h2) {
                u2.push(r3.getUint16(t3));
                t3 += 2;
              } else if (64 & h2) {
                u2.push(r3.getUint16(t3), r3.getUint16(t3 + 2));
                t3 += 4;
              } else if (128 & h2) {
                u2.push(r3.getUint16(t3), r3.getUint16(t3 + 2), r3.getUint16(t3 + 4), r3.getUint16(t3 + 6));
                t3 += 8;
              }
              var g = null;
              if (256 & h2) {
                var m = r3.getUint16(t3);
                t3 += 2;
                g = new Uint8Array(r3).slice(t3, t3 + m);
                t3 += m;
              }
              return [t3 - l2, new CompositeGlyph({ flags: h2, glyphIndex: d2, argument1: o3, argument2: c2, transf: u2, instructions: g })];
            } }]);
            return CompositeGlyph;
          }();
        }, (t2, r2, o2) => {
          "use strict";
          Object.defineProperty(r2, "__esModule", { value: true });
          r2.OpenTypeFileBuilder = void 0;
          var c = o2(161), l = o2(4);
          function _defineProperties(t3, r3) {
            for (var o3 = 0; o3 < r3.length; o3++) {
              var c2 = r3[o3];
              c2.enumerable = c2.enumerable || false;
              c2.configurable = true;
              "value" in c2 && (c2.writable = true);
              Object.defineProperty(t3, c2.key, c2);
            }
          }
          function writeInt16(t3, r3, o3) {
            t3[r3] = o3 >> 8 & 255;
            t3[r3 + 1] = 255 & o3;
          }
          function writeInt32(t3, r3, o3) {
            t3[r3] = o3 >> 24 & 255;
            t3[r3 + 1] = o3 >> 16 & 255;
            t3[r3 + 2] = o3 >> 8 & 255;
            t3[r3 + 3] = 255 & o3;
          }
          function writeData(t3, r3, o3) {
            if (o3 instanceof Uint8Array)
              t3.set(o3, r3);
            else if (typeof o3 == "string")
              for (var c2 = 0, l2 = o3.length; c2 < l2; c2++)
                t3[r3++] = 255 & o3.charCodeAt(c2);
            else
              for (var u2 = 0, h = o3.length; u2 < h; u2++)
                t3[r3++] = 255 & o3[u2];
          }
          var u = function() {
            function OpenTypeFileBuilder(t3) {
              !function _classCallCheck(t4, r3) {
                if (!(t4 instanceof r3))
                  throw new TypeError("Cannot call a class as a function");
              }(this, OpenTypeFileBuilder);
              this.sfnt = t3;
              this.tables = /* @__PURE__ */ Object.create(null);
            }
            !function _createClass(t3, r3, o3) {
              r3 && _defineProperties(t3.prototype, r3);
              o3 && _defineProperties(t3, o3);
              Object.defineProperty(t3, "prototype", { writable: false });
              return t3;
            }(OpenTypeFileBuilder, [{ key: "toArray", value: function toArray() {
              var t3 = this.sfnt, r3 = this.tables, o3 = Object.keys(r3);
              o3.sort();
              var u2, h, d, g, m, y = o3.length, v = 12 + 16 * y, k = [v];
              for (u2 = 0; u2 < y; u2++) {
                v += ((g = r3[o3[u2]]).length + 3 & -4) >>> 0;
                k.push(v);
              }
              var _ = new Uint8Array(v);
              for (u2 = 0; u2 < y; u2++) {
                g = r3[o3[u2]];
                writeData(_, k[u2], g);
              }
              t3 === "true" && (t3 = (0, l.string32)(65536));
              _[0] = 255 & t3.charCodeAt(0);
              _[1] = 255 & t3.charCodeAt(1);
              _[2] = 255 & t3.charCodeAt(2);
              _[3] = 255 & t3.charCodeAt(3);
              writeInt16(_, 4, y);
              var w = OpenTypeFileBuilder.getSearchParams(y, 16);
              writeInt16(_, 6, w.range);
              writeInt16(_, 8, w.entry);
              writeInt16(_, 10, w.rangeShift);
              v = 12;
              for (u2 = 0; u2 < y; u2++) {
                m = o3[u2];
                _[v] = 255 & m.charCodeAt(0);
                _[v + 1] = 255 & m.charCodeAt(1);
                _[v + 2] = 255 & m.charCodeAt(2);
                _[v + 3] = 255 & m.charCodeAt(3);
                var S = 0;
                for (h = k[u2], d = k[u2 + 1]; h < d; h += 4) {
                  S = S + (0, c.readUint32)(_, h) >>> 0;
                }
                writeInt32(_, v + 4, S);
                writeInt32(_, v + 8, k[u2]);
                writeInt32(_, v + 12, r3[m].length);
                v += 16;
              }
              return _;
            } }, { key: "addTable", value: function addTable(t3, r3) {
              if (t3 in this.tables)
                throw new Error("Table " + t3 + " already exists");
              this.tables[t3] = r3;
            } }], [{ key: "getSearchParams", value: function getSearchParams(t3, r3) {
              for (var o3 = 1, c2 = 0; (o3 ^ t3) > o3; ) {
                o3 <<= 1;
                c2++;
              }
              var l2 = o3 * r3;
              return { range: l2, entry: c2, rangeShift: r3 * t3 - l2 };
            } }]);
            return OpenTypeFileBuilder;
          }();
          r2.OpenTypeFileBuilder = u;
        }, (t2, r2, o2) => {
          "use strict";
          Object.defineProperty(r2, "__esModule", { value: true });
          r2.Type1Font = void 0;
          var c = o2(198), l = o2(171), u = o2(161), h = o2(163), d = o2(208), g = o2(4);
          function _defineProperties(t3, r3) {
            for (var o3 = 0; o3 < r3.length; o3++) {
              var c2 = r3[o3];
              c2.enumerable = c2.enumerable || false;
              c2.configurable = true;
              "value" in c2 && (c2.writable = true);
              Object.defineProperty(t3, c2.key, c2);
            }
          }
          function findBlock(t3, r3, o3) {
            for (var c2 = t3.length, l2 = r3.length, h2 = c2 - l2, d2 = o3, g2 = false; d2 < h2; ) {
              for (var m2 = 0; m2 < l2 && t3[d2 + m2] === r3[m2]; )
                m2++;
              if (m2 >= l2) {
                d2 += m2;
                for (; d2 < c2 && (0, u.isWhiteSpace)(t3[d2]); )
                  d2++;
                g2 = true;
                break;
              }
              d2++;
            }
            return { found: g2, length: d2 };
          }
          var m = function() {
            function Type1Font(t3, r3, o3) {
              !function _classCallCheck(t4, r4) {
                if (!(t4 instanceof r4))
                  throw new TypeError("Cannot call a class as a function");
              }(this, Type1Font);
              var c2 = o3.length1, u2 = (o3.length2, r3.peekBytes(6)), m2 = u2[0] === 128 && u2[1] === 1;
              if (m2) {
                r3.skip(6);
                c2 = u2[5] << 24 | u2[4] << 16 | u2[3] << 8 | u2[2];
              }
              var y = function getHeaderBlock(t4, r4) {
                var o4, c3, l2, u3, d2 = [101, 101, 120, 101, 99], m3 = t4.pos;
                try {
                  c3 = (o4 = t4.getBytes(r4)).length;
                } catch (t5) {
                }
                if (c3 === r4 && (l2 = findBlock(o4, d2, r4 - 2 * d2.length)).found && l2.length === r4)
                  return { stream: new h.Stream(o4), length: r4 };
                (0, g.warn)('Invalid "Length1" property in Type1 font -- trying to recover.');
                t4.pos = m3;
                for (; (l2 = findBlock(t4.peekBytes(2048), d2, 0)).length !== 0; ) {
                  t4.pos += l2.length;
                  if (l2.found) {
                    u3 = t4.pos - m3;
                    break;
                  }
                }
                t4.pos = m3;
                if (u3)
                  return { stream: new h.Stream(t4.getBytes(u3)), length: u3 };
                (0, g.warn)('Unable to recover "Length1" property in Type1 font -- using as is.');
                return { stream: new h.Stream(t4.getBytes(r4)), length: r4 };
              }(r3, c2);
              new d.Type1Parser(y.stream, false, l.SEAC_ANALYSIS_ENABLED).extractFontHeader(o3);
              m2 && (u2 = r3.getBytes(6))[5] << 24 | u2[4] << 16 | u2[3] << 8 | u2[2];
              var v = function getEexecBlock(t4, r4) {
                var o4 = t4.getBytes();
                return { stream: new h.Stream(o4), length: o4.length };
              }(r3), k = new d.Type1Parser(v.stream, true, l.SEAC_ANALYSIS_ENABLED).extractFontProgram(o3);
              for (var _ in k.properties)
                o3[_] = k.properties[_];
              var w = k.charstrings, S = this.getType2Charstrings(w), C = this.getType2Subrs(k.subrs);
              this.charstrings = w;
              this.data = this.wrap(t3, S, this.charstrings, C, o3);
              this.seacs = this.getSeacs(k.charstrings);
            }
            !function _createClass(t3, r3, o3) {
              r3 && _defineProperties(t3.prototype, r3);
              o3 && _defineProperties(t3, o3);
              Object.defineProperty(t3, "prototype", { writable: false });
              return t3;
            }(Type1Font, [{ key: "numGlyphs", get: function get() {
              return this.charstrings.length + 1;
            } }, { key: "getCharset", value: function getCharset() {
              for (var t3 = [".notdef"], r3 = this.charstrings, o3 = 0; o3 < r3.length; o3++)
                t3.push(r3[o3].glyphName);
              return t3;
            } }, { key: "getGlyphMapping", value: function getGlyphMapping(t3) {
              var r3 = this.charstrings;
              if (t3.composite) {
                for (var o3 = /* @__PURE__ */ Object.create(null), c2 = 0, u2 = r3.length; c2 < u2; c2++) {
                  o3[t3.cMap.charCodeOf(c2)] = c2 + 1;
                }
                return o3;
              }
              var h2, d2, g2 = [".notdef"];
              for (d2 = 0; d2 < r3.length; d2++)
                g2.push(r3[d2].glyphName);
              var m2 = t3.builtInEncoding;
              if (m2) {
                h2 = /* @__PURE__ */ Object.create(null);
                for (var y in m2)
                  (d2 = g2.indexOf(m2[y])) >= 0 && (h2[y] = d2);
              }
              return (0, l.type1FontGlyphMapping)(t3, h2, g2);
            } }, { key: "hasGlyphId", value: function hasGlyphId(t3) {
              return !(t3 < 0 || t3 >= this.numGlyphs) && (t3 === 0 || this.charstrings[t3 - 1].charstring.length > 0);
            } }, { key: "getSeacs", value: function getSeacs(t3) {
              for (var r3 = [], o3 = 0, c2 = t3.length; o3 < c2; o3++) {
                var l2 = t3[o3];
                l2.seac && (r3[o3 + 1] = l2.seac);
              }
              return r3;
            } }, { key: "getType2Charstrings", value: function getType2Charstrings(t3) {
              for (var r3 = [], o3 = 0, c2 = t3.length; o3 < c2; o3++)
                r3.push(t3[o3].charstring);
              return r3;
            } }, { key: "getType2Subrs", value: function getType2Subrs(t3) {
              var r3 = 0, o3 = t3.length;
              r3 = o3 < 1133 ? 107 : o3 < 33769 ? 1131 : 32768;
              var c2, l2 = [];
              for (c2 = 0; c2 < r3; c2++)
                l2.push([11]);
              for (c2 = 0; c2 < o3; c2++)
                l2.push(t3[c2]);
              return l2;
            } }, { key: "wrap", value: function wrap(t3, r3, o3, l2, u2) {
              var h2 = new c.CFF();
              h2.header = new c.CFFHeader(1, 0, 4, 4);
              h2.names = [t3];
              var d2 = new c.CFFTopDict();
              d2.setByName("version", 391);
              d2.setByName("Notice", 392);
              d2.setByName("FullName", 393);
              d2.setByName("FamilyName", 394);
              d2.setByName("Weight", 395);
              d2.setByName("Encoding", null);
              d2.setByName("FontMatrix", u2.fontMatrix);
              d2.setByName("FontBBox", u2.bbox);
              d2.setByName("charset", null);
              d2.setByName("CharStrings", null);
              d2.setByName("Private", null);
              h2.topDict = d2;
              var g2 = new c.CFFStrings();
              g2.add("Version 0.11");
              g2.add("See original notice");
              g2.add(t3);
              g2.add(t3);
              g2.add("Medium");
              h2.strings = g2;
              h2.globalSubrIndex = new c.CFFIndex();
              var m2, y, v = r3.length, k = [".notdef"];
              for (m2 = 0; m2 < v; m2++) {
                var _ = o3[m2].glyphName;
                c.CFFStandardStrings.indexOf(_) === -1 && g2.add(_);
                k.push(_);
              }
              h2.charset = new c.CFFCharset(false, 0, k);
              var w = new c.CFFIndex();
              w.add([139, 14]);
              for (m2 = 0; m2 < v; m2++)
                w.add(r3[m2]);
              h2.charStrings = w;
              var S = new c.CFFPrivateDict();
              S.setByName("Subrs", null);
              var C = ["BlueValues", "OtherBlues", "FamilyBlues", "FamilyOtherBlues", "StemSnapH", "StemSnapV", "BlueShift", "BlueFuzz", "BlueScale", "LanguageGroup", "ExpansionFactor", "ForceBold", "StdHW", "StdVW"];
              for (m2 = 0, y = C.length; m2 < y; m2++) {
                var x = C[m2];
                if (x in u2.privateData) {
                  var O = u2.privateData[x];
                  if (Array.isArray(O))
                    for (var T = O.length - 1; T > 0; T--)
                      O[T] -= O[T - 1];
                  S.setByName(x, O);
                }
              }
              h2.topDict.privateDict = S;
              var E = new c.CFFIndex();
              for (m2 = 0, y = l2.length; m2 < y; m2++)
                E.add(l2[m2]);
              S.subrsIndex = E;
              return new c.CFFCompiler(h2).compile();
            } }]);
            return Type1Font;
          }();
          r2.Type1Font = m;
        }, (t2, r2, o2) => {
          "use strict";
          Object.defineProperty(r2, "__esModule", { value: true });
          r2.Type1Parser = void 0;
          var c = o2(172), l = o2(161), u = o2(163), h = o2(4);
          function _classCallCheck(t3, r3) {
            if (!(t3 instanceof r3))
              throw new TypeError("Cannot call a class as a function");
          }
          function _defineProperties(t3, r3) {
            for (var o3 = 0; o3 < r3.length; o3++) {
              var c2 = r3[o3];
              c2.enumerable = c2.enumerable || false;
              c2.configurable = true;
              "value" in c2 && (c2.writable = true);
              Object.defineProperty(t3, c2.key, c2);
            }
          }
          function _createClass(t3, r3, o3) {
            r3 && _defineProperties(t3.prototype, r3);
            o3 && _defineProperties(t3, o3);
            Object.defineProperty(t3, "prototype", { writable: false });
            return t3;
          }
          var d = function Type1CharStringClosure() {
            var t3 = [4], r3 = [5], o3 = [6], c2 = [7], l2 = [8], u2 = [12, 35], d2 = [14], g2 = [21], m = [22], y = [30], v = [31];
            return function() {
              function Type1CharString() {
                _classCallCheck(this, Type1CharString);
                this.width = 0;
                this.lsb = 0;
                this.flexing = false;
                this.output = [];
                this.stack = [];
              }
              _createClass(Type1CharString, [{ key: "convert", value: function convert(k, _, w) {
                for (var S, C, x, O = k.length, T = false, E = 0; E < O; E++) {
                  var M = k[E];
                  if (M < 32) {
                    M === 12 && (M = (M << 8) + k[++E]);
                    switch (M) {
                      case 1:
                      case 3:
                      case 9:
                      case 3072:
                      case 3073:
                      case 3074:
                      case 3105:
                        this.stack = [];
                        break;
                      case 4:
                        if (this.flexing) {
                          if (this.stack.length < 1) {
                            T = true;
                            break;
                          }
                          var R = this.stack.pop();
                          this.stack.push(0, R);
                          break;
                        }
                        T = this.executeCommand(1, t3);
                        break;
                      case 5:
                        T = this.executeCommand(2, r3);
                        break;
                      case 6:
                        T = this.executeCommand(1, o3);
                        break;
                      case 7:
                        T = this.executeCommand(1, c2);
                        break;
                      case 8:
                        T = this.executeCommand(6, l2);
                        break;
                      case 10:
                        if (this.stack.length < 1) {
                          T = true;
                          break;
                        }
                        if (!_[x = this.stack.pop()]) {
                          T = true;
                          break;
                        }
                        T = this.convert(_[x], _, w);
                        break;
                      case 11:
                        return T;
                      case 13:
                        if (this.stack.length < 2) {
                          T = true;
                          break;
                        }
                        S = this.stack.pop();
                        C = this.stack.pop();
                        this.lsb = C;
                        this.width = S;
                        this.stack.push(S, C);
                        T = this.executeCommand(2, m);
                        break;
                      case 14:
                        this.output.push(d2[0]);
                        break;
                      case 21:
                        if (this.flexing)
                          break;
                        T = this.executeCommand(2, g2);
                        break;
                      case 22:
                        if (this.flexing) {
                          this.stack.push(0);
                          break;
                        }
                        T = this.executeCommand(1, m);
                        break;
                      case 30:
                        T = this.executeCommand(4, y);
                        break;
                      case 31:
                        T = this.executeCommand(4, v);
                        break;
                      case 3078:
                        if (w) {
                          var D = this.stack[this.stack.length - 5];
                          this.seac = this.stack.splice(-4, 4);
                          this.seac[0] += this.lsb - D;
                          T = this.executeCommand(0, d2);
                        } else
                          T = this.executeCommand(4, d2);
                        break;
                      case 3079:
                        if (this.stack.length < 4) {
                          T = true;
                          break;
                        }
                        this.stack.pop();
                        S = this.stack.pop();
                        var j = this.stack.pop();
                        C = this.stack.pop();
                        this.lsb = C;
                        this.width = S;
                        this.stack.push(S, C, j);
                        T = this.executeCommand(3, g2);
                        break;
                      case 3084:
                        if (this.stack.length < 2) {
                          T = true;
                          break;
                        }
                        var L = this.stack.pop(), N = this.stack.pop();
                        this.stack.push(N / L);
                        break;
                      case 3088:
                        if (this.stack.length < 2) {
                          T = true;
                          break;
                        }
                        x = this.stack.pop();
                        var U = this.stack.pop();
                        if (x === 0 && U === 3) {
                          var H = this.stack.splice(this.stack.length - 17, 17);
                          this.stack.push(H[2] + H[0], H[3] + H[1], H[4], H[5], H[6], H[7], H[8], H[9], H[10], H[11], H[12], H[13], H[14]);
                          T = this.executeCommand(13, u2, true);
                          this.flexing = false;
                          this.stack.push(H[15], H[16]);
                        } else
                          x === 1 && U === 0 && (this.flexing = true);
                        break;
                      case 3089:
                        break;
                      default:
                        (0, h.warn)('Unknown type 1 charstring command of "' + M + '"');
                    }
                    if (T)
                      break;
                  } else {
                    M <= 246 ? M -= 139 : M = M <= 250 ? 256 * (M - 247) + k[++E] + 108 : M <= 254 ? -256 * (M - 251) - k[++E] - 108 : (255 & k[++E]) << 24 | (255 & k[++E]) << 16 | (255 & k[++E]) << 8 | (255 & k[++E]) << 0;
                    this.stack.push(M);
                  }
                }
                return T;
              } }, { key: "executeCommand", value: function executeCommand(t4, r4, o4) {
                var c3 = this.stack.length;
                if (t4 > c3)
                  return true;
                for (var l3 = c3 - t4, u3 = l3; u3 < c3; u3++) {
                  var h2 = this.stack[u3];
                  if (Number.isInteger(h2))
                    this.output.push(28, h2 >> 8 & 255, 255 & h2);
                  else {
                    h2 = 65536 * h2 | 0;
                    this.output.push(255, h2 >> 24 & 255, h2 >> 16 & 255, h2 >> 8 & 255, 255 & h2);
                  }
                }
                this.output.push.apply(this.output, r4);
                o4 ? this.stack.splice(l3, t4) : this.stack.length = 0;
                return false;
              } }]);
              return Type1CharString;
            }();
          }(), g = function Type1ParserClosure() {
            function isHexDigit(t3) {
              return t3 >= 48 && t3 <= 57 || t3 >= 65 && t3 <= 70 || t3 >= 97 && t3 <= 102;
            }
            function decrypt(t3, r3, o3) {
              if (o3 >= t3.length)
                return new Uint8Array(0);
              var c2, l2, u2 = 0 | r3;
              for (c2 = 0; c2 < o3; c2++)
                u2 = 52845 * (t3[c2] + u2) + 22719 & 65535;
              var h2 = t3.length - o3, d2 = new Uint8Array(h2);
              for (c2 = o3, l2 = 0; l2 < h2; c2++, l2++) {
                var g2 = t3[c2];
                d2[l2] = g2 ^ u2 >> 8;
                u2 = 52845 * (g2 + u2) + 22719 & 65535;
              }
              return d2;
            }
            function isSpecial(t3) {
              return t3 === 47 || t3 === 91 || t3 === 93 || t3 === 123 || t3 === 125 || t3 === 40 || t3 === 41;
            }
            return function() {
              function Type1Parser(t3, r3, o3) {
                _classCallCheck(this, Type1Parser);
                if (r3) {
                  var c2 = t3.getBytes(), h2 = !((isHexDigit(c2[0]) || (0, l.isWhiteSpace)(c2[0])) && isHexDigit(c2[1]) && isHexDigit(c2[2]) && isHexDigit(c2[3]) && isHexDigit(c2[4]) && isHexDigit(c2[5]) && isHexDigit(c2[6]) && isHexDigit(c2[7]));
                  t3 = new u.Stream(h2 ? decrypt(c2, 55665, 4) : function decryptAscii(t4, r4, o4) {
                    var c3, l2, u2 = 0 | r4, h3 = t4.length, d2 = new Uint8Array(h3 >>> 1);
                    for (c3 = 0, l2 = 0; c3 < h3; c3++) {
                      var g2 = t4[c3];
                      if (isHexDigit(g2)) {
                        c3++;
                        for (var m = void 0; c3 < h3 && !isHexDigit(m = t4[c3]); )
                          c3++;
                        if (c3 < h3) {
                          var y = parseInt(String.fromCharCode(g2, m), 16);
                          d2[l2++] = y ^ u2 >> 8;
                          u2 = 52845 * (y + u2) + 22719 & 65535;
                        }
                      }
                    }
                    return d2.slice(o4, l2);
                  }(c2, 55665, 4));
                }
                this.seacAnalysisEnabled = !!o3;
                this.stream = t3;
                this.nextChar();
              }
              _createClass(Type1Parser, [{ key: "readNumberArray", value: function readNumberArray() {
                this.getToken();
                for (var t3 = []; ; ) {
                  var r3 = this.getToken();
                  if (r3 === null || r3 === "]" || r3 === "}")
                    break;
                  t3.push(parseFloat(r3 || 0));
                }
                return t3;
              } }, { key: "readNumber", value: function readNumber() {
                var t3 = this.getToken();
                return parseFloat(t3 || 0);
              } }, { key: "readInt", value: function readInt() {
                var t3 = this.getToken();
                return 0 | parseInt(t3 || 0, 10);
              } }, { key: "readBoolean", value: function readBoolean() {
                return this.getToken() === "true" ? 1 : 0;
              } }, { key: "nextChar", value: function nextChar() {
                return this.currentChar = this.stream.getByte();
              } }, { key: "prevChar", value: function prevChar() {
                this.stream.skip(-2);
                return this.currentChar = this.stream.getByte();
              } }, { key: "getToken", value: function getToken() {
                for (var t3 = false, r3 = this.currentChar; ; ) {
                  if (r3 === -1)
                    return null;
                  if (t3)
                    r3 !== 10 && r3 !== 13 || (t3 = false);
                  else if (r3 === 37)
                    t3 = true;
                  else if (!(0, l.isWhiteSpace)(r3))
                    break;
                  r3 = this.nextChar();
                }
                if (isSpecial(r3)) {
                  this.nextChar();
                  return String.fromCharCode(r3);
                }
                var o3 = "";
                do {
                  o3 += String.fromCharCode(r3);
                  r3 = this.nextChar();
                } while (r3 >= 0 && !(0, l.isWhiteSpace)(r3) && !isSpecial(r3));
                return o3;
              } }, { key: "readCharStrings", value: function readCharStrings(t3, r3) {
                return r3 === -1 ? t3 : decrypt(t3, 4330, r3);
              } }, { key: "extractFontProgram", value: function extractFontProgram(t3) {
                var r3 = this.stream, o3 = [], c2 = [], l2 = /* @__PURE__ */ Object.create(null);
                l2.lenIV = 4;
                for (var u2, h2, g2, m, y, v = { subrs: [], charstrings: [], properties: { privateData: l2 } }; (u2 = this.getToken()) !== null; )
                  if (u2 === "/")
                    switch (u2 = this.getToken()) {
                      case "CharStrings":
                        this.getToken();
                        this.getToken();
                        this.getToken();
                        this.getToken();
                        for (; (u2 = this.getToken()) !== null && u2 !== "end"; )
                          if (u2 === "/") {
                            var k = this.getToken();
                            h2 = this.readInt();
                            this.getToken();
                            g2 = h2 > 0 ? r3.getBytes(h2) : new Uint8Array(0);
                            m = v.properties.privateData.lenIV;
                            y = this.readCharStrings(g2, m);
                            this.nextChar();
                            (u2 = this.getToken()) === "noaccess" ? this.getToken() : u2 === "/" && this.prevChar();
                            c2.push({ glyph: k, encoded: y });
                          }
                        break;
                      case "Subrs":
                        this.readInt();
                        this.getToken();
                        for (; this.getToken() === "dup"; ) {
                          var _ = this.readInt();
                          h2 = this.readInt();
                          this.getToken();
                          g2 = h2 > 0 ? r3.getBytes(h2) : new Uint8Array(0);
                          m = v.properties.privateData.lenIV;
                          y = this.readCharStrings(g2, m);
                          this.nextChar();
                          (u2 = this.getToken()) === "noaccess" && this.getToken();
                          o3[_] = y;
                        }
                        break;
                      case "BlueValues":
                      case "OtherBlues":
                      case "FamilyBlues":
                      case "FamilyOtherBlues":
                        var w = this.readNumberArray();
                        w.length > 0 && w.length, 0;
                        break;
                      case "StemSnapH":
                      case "StemSnapV":
                        v.properties.privateData[u2] = this.readNumberArray();
                        break;
                      case "StdHW":
                      case "StdVW":
                        v.properties.privateData[u2] = this.readNumberArray()[0];
                        break;
                      case "BlueShift":
                      case "lenIV":
                      case "BlueFuzz":
                      case "BlueScale":
                      case "LanguageGroup":
                      case "ExpansionFactor":
                        v.properties.privateData[u2] = this.readNumber();
                        break;
                      case "ForceBold":
                        v.properties.privateData[u2] = this.readBoolean();
                    }
                for (var S = 0; S < c2.length; S++) {
                  var C = c2[S].glyph;
                  y = c2[S].encoded;
                  var x = new d(), O = x.convert(y, o3, this.seacAnalysisEnabled), T = x.output;
                  O && (T = [14]);
                  var E = { glyphName: C, charstring: T, width: x.width, lsb: x.lsb, seac: x.seac };
                  C === ".notdef" ? v.charstrings.unshift(E) : v.charstrings.push(E);
                  if (t3.builtInEncoding) {
                    var M = t3.builtInEncoding.indexOf(C);
                    M > -1 && t3.widths[M] === void 0 && M >= t3.firstChar && M <= t3.lastChar && (t3.widths[M] = x.width);
                  }
                }
                return v;
              } }, { key: "extractFontHeader", value: function extractFontHeader(t3) {
                for (var r3; (r3 = this.getToken()) !== null; )
                  if (r3 === "/")
                    switch (r3 = this.getToken()) {
                      case "FontMatrix":
                        var o3 = this.readNumberArray();
                        t3.fontMatrix = o3;
                        break;
                      case "Encoding":
                        var l2 = this.getToken(), u2 = void 0;
                        if (/^\d+$/.test(l2)) {
                          u2 = [];
                          var h2 = 0 | parseInt(l2, 10);
                          this.getToken();
                          for (var d2 = 0; d2 < h2; d2++) {
                            r3 = this.getToken();
                            for (; r3 !== "dup" && r3 !== "def"; )
                              if ((r3 = this.getToken()) === null)
                                return;
                            if (r3 === "def")
                              break;
                            var g2 = this.readInt();
                            this.getToken();
                            var m = this.getToken();
                            u2[g2] = m;
                            this.getToken();
                          }
                        } else
                          u2 = (0, c.getEncoding)(l2);
                        t3.builtInEncoding = u2;
                        break;
                      case "FontBBox":
                        var y = this.readNumberArray();
                        t3.ascent = Math.max(y[3], y[1]);
                        t3.descent = Math.min(y[1], y[3]);
                        t3.ascentScaled = true;
                    }
              } }]);
              return Type1Parser;
            }();
          }();
          r2.Type1Parser = g;
        }, (t2, r2, o2) => {
          "use strict";
          function _typeof(t3) {
            return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t4) {
              return typeof t4;
            } : function(t4) {
              return t4 && typeof Symbol == "function" && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
            }, _typeof(t3);
          }
          Object.defineProperty(r2, "__esModule", { value: true });
          r2.Pattern = void 0;
          r2.getTilingPatternIR = function getTilingPatternIR(t3, r3, o3) {
            var l2 = r3.getArray("Matrix"), u2 = c.Util.normalizeRect(r3.getArray("BBox")), h2 = r3.get("XStep"), d2 = r3.get("YStep"), g2 = r3.get("PaintType"), m2 = r3.get("TilingType");
            if (u2[2] - u2[0] == 0 || u2[3] - u2[1] == 0)
              throw new c.FormatError("Invalid getTilingPatternIR /BBox array: [".concat(u2, "]."));
            return ["TilingPattern", o3, t3, l2, u2, h2, d2, g2, m2];
          };
          var c = o2(4), l = o2(162), u = o2(177), h = o2(161);
          function _slicedToArray(t3, r3) {
            return function _arrayWithHoles(t4) {
              if (Array.isArray(t4))
                return t4;
            }(t3) || function _iterableToArrayLimit(t4, r4) {
              var o3 = t4 == null ? null : typeof Symbol != "undefined" && t4[Symbol.iterator] || t4["@@iterator"];
              if (o3 == null)
                return;
              var c2, l2, u2 = [], h2 = true, d2 = false;
              try {
                for (o3 = o3.call(t4); !(h2 = (c2 = o3.next()).done); h2 = true) {
                  u2.push(c2.value);
                  if (r4 && u2.length === r4)
                    break;
                }
              } catch (t5) {
                d2 = true;
                l2 = t5;
              } finally {
                try {
                  h2 || o3.return == null || o3.return();
                } finally {
                  if (d2)
                    throw l2;
                }
              }
              return u2;
            }(t3, r3) || function _unsupportedIterableToArray(t4, r4) {
              if (!t4)
                return;
              if (typeof t4 == "string")
                return _arrayLikeToArray(t4, r4);
              var o3 = Object.prototype.toString.call(t4).slice(8, -1);
              o3 === "Object" && t4.constructor && (o3 = t4.constructor.name);
              if (o3 === "Map" || o3 === "Set")
                return Array.from(t4);
              if (o3 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(o3))
                return _arrayLikeToArray(t4, r4);
            }(t3, r3) || function _nonIterableRest() {
              throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
            }();
          }
          function _arrayLikeToArray(t3, r3) {
            (r3 == null || r3 > t3.length) && (r3 = t3.length);
            for (var o3 = 0, c2 = new Array(r3); o3 < r3; o3++)
              c2[o3] = t3[o3];
            return c2;
          }
          function _inherits(t3, r3) {
            if (typeof r3 != "function" && r3 !== null)
              throw new TypeError("Super expression must either be null or a function");
            t3.prototype = Object.create(r3 && r3.prototype, { constructor: { value: t3, writable: true, configurable: true } });
            Object.defineProperty(t3, "prototype", { writable: false });
            r3 && _setPrototypeOf(t3, r3);
          }
          function _setPrototypeOf(t3, r3) {
            _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(t4, r4) {
              t4.__proto__ = r4;
              return t4;
            };
            return _setPrototypeOf(t3, r3);
          }
          function _createSuper(t3) {
            var r3 = function _isNativeReflectConstruct() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                }));
                return true;
              } catch (t4) {
                return false;
              }
            }();
            return function _createSuperInternal() {
              var o3, c2 = _getPrototypeOf(t3);
              if (r3) {
                var l2 = _getPrototypeOf(this).constructor;
                o3 = Reflect.construct(c2, arguments, l2);
              } else
                o3 = c2.apply(this, arguments);
              return _possibleConstructorReturn(this, o3);
            };
          }
          function _possibleConstructorReturn(t3, r3) {
            if (r3 && (_typeof(r3) === "object" || typeof r3 == "function"))
              return r3;
            if (r3 !== void 0)
              throw new TypeError("Derived constructors may only return object or undefined");
            return function _assertThisInitialized(t4) {
              if (t4 === void 0)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return t4;
            }(t3);
          }
          function _getPrototypeOf(t3) {
            _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(t4) {
              return t4.__proto__ || Object.getPrototypeOf(t4);
            };
            return _getPrototypeOf(t3);
          }
          function _classCallCheck(t3, r3) {
            if (!(t3 instanceof r3))
              throw new TypeError("Cannot call a class as a function");
          }
          function _defineProperties(t3, r3) {
            for (var o3 = 0; o3 < r3.length; o3++) {
              var c2 = r3[o3];
              c2.enumerable = c2.enumerable || false;
              c2.configurable = true;
              "value" in c2 && (c2.writable = true);
              Object.defineProperty(t3, c2.key, c2);
            }
          }
          function _createClass(t3, r3, o3) {
            r3 && _defineProperties(t3.prototype, r3);
            o3 && _defineProperties(t3, o3);
            Object.defineProperty(t3, "prototype", { writable: false });
            return t3;
          }
          var d = 2, g = 3, m = 4, y = 5, v = 6, k = 7, _ = function() {
            function Pattern() {
              _classCallCheck(this, Pattern);
              (0, c.unreachable)("Cannot initialize Pattern.");
            }
            _createClass(Pattern, null, [{ key: "parseShading", value: function parseShading(t3, r3, o3, u2, _2, w2) {
              var C2 = t3 instanceof l.BaseStream ? t3.dict : t3, x2 = C2.get("ShadingType");
              try {
                switch (x2) {
                  case d:
                  case g:
                    return new S(C2, r3, o3, _2, w2);
                  case m:
                  case y:
                  case v:
                  case k:
                    return new O(t3, r3, o3, _2, w2);
                  default:
                    throw new c.FormatError("Unsupported ShadingType: " + x2);
                }
              } catch (t4) {
                if (t4 instanceof h.MissingDataException)
                  throw t4;
                u2.send("UnsupportedFeature", { featureId: c.UNSUPPORTED_FEATURES.shadingPattern });
                (0, c.warn)(t4);
                return new T();
              }
            } }]);
            return Pattern;
          }();
          r2.Pattern = _;
          var w = function() {
            function BaseShading() {
              _classCallCheck(this, BaseShading);
              this.constructor === BaseShading && (0, c.unreachable)("Cannot initialize BaseShading.");
            }
            _createClass(BaseShading, [{ key: "getIR", value: function getIR() {
              (0, c.unreachable)("Abstract method `getIR` called.");
            } }], [{ key: "SMALL_NUMBER", get: function get() {
              return (0, c.shadow)(this, "SMALL_NUMBER", 1e-6);
            } }]);
            return BaseShading;
          }(), S = function(t3) {
            _inherits(RadialAxialShading, t3);
            var r3 = _createSuper(RadialAxialShading);
            function RadialAxialShading(t4, o3, l2, h2, d2) {
              var m2;
              _classCallCheck(this, RadialAxialShading);
              (m2 = r3.call(this)).coordsArr = t4.getArray("Coords");
              m2.shadingType = t4.get("ShadingType");
              var y2 = u.ColorSpace.parse({ cs: t4.getRaw("CS") || t4.getRaw("ColorSpace"), xref: o3, resources: l2, pdfFunctionFactory: h2, localColorSpaceCache: d2 }), v2 = t4.getArray("BBox");
              Array.isArray(v2) && v2.length === 4 ? m2.bbox = c.Util.normalizeRect(v2) : m2.bbox = null;
              var k2 = 0, _2 = 1;
              if (t4.has("Domain")) {
                var S2 = t4.getArray("Domain");
                k2 = S2[0];
                _2 = S2[1];
              }
              var C2 = false, x2 = false;
              if (t4.has("Extend")) {
                var O2 = t4.getArray("Extend");
                C2 = O2[0];
                x2 = O2[1];
              }
              if (!(m2.shadingType !== g || C2 && x2)) {
                var T2 = _slicedToArray(m2.coordsArr, 6), E = T2[0], M = T2[1], R = T2[2], D = T2[3], j = T2[4], L = T2[5], N = Math.hypot(E - D, M - j);
                R <= L + N && L <= R + N && (0, c.warn)("Unsupported radial gradient.");
              }
              m2.extendStart = C2;
              m2.extendEnd = x2;
              var U = t4.getRaw("Function"), H = h2.createFromArray(U), $ = (_2 - k2) / 10, X = m2.colorStops = [];
              if (k2 >= _2 || $ <= 0) {
                (0, c.info)("Bad shading domain.");
                return _possibleConstructorReturn(m2);
              }
              for (var q, G = new Float32Array(y2.numComps), z = new Float32Array(1), W = 0; W <= 10; W++) {
                z[0] = k2 + W * $;
                H(z, 0, G, 0);
                q = y2.getRgb(G, 0);
                var V = c.Util.makeHexColor(q[0], q[1], q[2]);
                X.push([W / 10, V]);
              }
              var K = "transparent";
              if (t4.has("Background")) {
                q = y2.getRgb(t4.get("Background"), 0);
                K = c.Util.makeHexColor(q[0], q[1], q[2]);
              }
              if (!C2) {
                X.unshift([0, K]);
                X[1][0] += w.SMALL_NUMBER;
              }
              if (!x2) {
                X[X.length - 1][0] -= w.SMALL_NUMBER;
                X.push([1, K]);
              }
              m2.colorStops = X;
              return m2;
            }
            _createClass(RadialAxialShading, [{ key: "getIR", value: function getIR() {
              var t4, r4, o3, l2, u2, h2 = this.coordsArr, m2 = this.shadingType;
              if (m2 === d) {
                r4 = [h2[0], h2[1]];
                o3 = [h2[2], h2[3]];
                l2 = null;
                u2 = null;
                t4 = "axial";
              } else if (m2 === g) {
                r4 = [h2[0], h2[1]];
                o3 = [h2[3], h2[4]];
                l2 = h2[2];
                u2 = h2[5];
                t4 = "radial";
              } else
                (0, c.unreachable)("getPattern type unknown: ".concat(m2));
              return ["RadialAxial", t4, this.bbox, this.colorStops, r4, o3, l2, u2];
            } }]);
            return RadialAxialShading;
          }(w), C = function() {
            function MeshStreamReader(t3, r3) {
              _classCallCheck(this, MeshStreamReader);
              this.stream = t3;
              this.context = r3;
              this.buffer = 0;
              this.bufferLength = 0;
              var o3 = r3.numComps;
              this.tmpCompsBuf = new Float32Array(o3);
              var c2 = r3.colorSpace.numComps;
              this.tmpCsCompsBuf = r3.colorFn ? new Float32Array(c2) : this.tmpCompsBuf;
            }
            _createClass(MeshStreamReader, [{ key: "hasData", get: function get() {
              if (this.stream.end)
                return this.stream.pos < this.stream.end;
              if (this.bufferLength > 0)
                return true;
              var t3 = this.stream.getByte();
              if (t3 < 0)
                return false;
              this.buffer = t3;
              this.bufferLength = 8;
              return true;
            } }, { key: "readBits", value: function readBits(t3) {
              var r3 = this.buffer, o3 = this.bufferLength;
              if (t3 === 32) {
                if (o3 === 0)
                  return (this.stream.getByte() << 24 | this.stream.getByte() << 16 | this.stream.getByte() << 8 | this.stream.getByte()) >>> 0;
                r3 = r3 << 24 | this.stream.getByte() << 16 | this.stream.getByte() << 8 | this.stream.getByte();
                var c2 = this.stream.getByte();
                this.buffer = c2 & (1 << o3) - 1;
                return (r3 << 8 - o3 | (255 & c2) >> o3) >>> 0;
              }
              if (t3 === 8 && o3 === 0)
                return this.stream.getByte();
              for (; o3 < t3; ) {
                r3 = r3 << 8 | this.stream.getByte();
                o3 += 8;
              }
              o3 -= t3;
              this.bufferLength = o3;
              this.buffer = r3 & (1 << o3) - 1;
              return r3 >> o3;
            } }, { key: "align", value: function align() {
              this.buffer = 0;
              this.bufferLength = 0;
            } }, { key: "readFlag", value: function readFlag() {
              return this.readBits(this.context.bitsPerFlag);
            } }, { key: "readCoordinate", value: function readCoordinate() {
              var t3 = this.context.bitsPerCoordinate, r3 = this.readBits(t3), o3 = this.readBits(t3), c2 = this.context.decode, l2 = t3 < 32 ? 1 / ((1 << t3) - 1) : 23283064365386963e-26;
              return [r3 * l2 * (c2[1] - c2[0]) + c2[0], o3 * l2 * (c2[3] - c2[2]) + c2[2]];
            } }, { key: "readComponents", value: function readComponents() {
              for (var t3 = this.context.numComps, r3 = this.context.bitsPerComponent, o3 = r3 < 32 ? 1 / ((1 << r3) - 1) : 23283064365386963e-26, c2 = this.context.decode, l2 = this.tmpCompsBuf, u2 = 0, h2 = 4; u2 < t3; u2++, h2 += 2) {
                var d2 = this.readBits(r3);
                l2[u2] = d2 * o3 * (c2[h2 + 1] - c2[h2]) + c2[h2];
              }
              var g2 = this.tmpCsCompsBuf;
              this.context.colorFn && this.context.colorFn(l2, 0, g2, 0);
              return this.context.colorSpace.getRgb(g2, 0);
            } }]);
            return MeshStreamReader;
          }(), x = function getBClosure() {
            var t3 = [];
            return function(r3) {
              t3[r3] || (t3[r3] = function buildB(t4) {
                for (var r4 = [], o3 = 0; o3 <= t4; o3++) {
                  var c2 = o3 / t4, l2 = 1 - c2;
                  r4.push(new Float32Array([l2 * l2 * l2, 3 * c2 * l2 * l2, 3 * c2 * c2 * l2, c2 * c2 * c2]));
                }
                return r4;
              }(r3));
              return t3[r3];
            };
          }(), O = function(t3) {
            _inherits(MeshShading, t3);
            var r3 = _createSuper(MeshShading);
            function MeshShading(t4, o3, h2, d2, g2) {
              var _2;
              _classCallCheck(this, MeshShading);
              _2 = r3.call(this);
              if (!(t4 instanceof l.BaseStream))
                throw new c.FormatError("Mesh data is not a stream");
              var w2 = t4.dict;
              _2.shadingType = w2.get("ShadingType");
              var S2 = w2.getArray("BBox");
              Array.isArray(S2) && S2.length === 4 ? _2.bbox = c.Util.normalizeRect(S2) : _2.bbox = null;
              var x2 = u.ColorSpace.parse({ cs: w2.getRaw("CS") || w2.getRaw("ColorSpace"), xref: o3, resources: h2, pdfFunctionFactory: d2, localColorSpaceCache: g2 });
              _2.background = w2.has("Background") ? x2.getRgb(w2.get("Background"), 0) : null;
              var O2 = w2.getRaw("Function"), T2 = O2 ? d2.createFromArray(O2) : null;
              _2.coords = [];
              _2.colors = [];
              _2.figures = [];
              var E = { bitsPerCoordinate: w2.get("BitsPerCoordinate"), bitsPerComponent: w2.get("BitsPerComponent"), bitsPerFlag: w2.get("BitsPerFlag"), decode: w2.getArray("Decode"), colorFn: T2, colorSpace: x2, numComps: T2 ? 1 : x2.numComps }, M = new C(t4, E), R = false;
              switch (_2.shadingType) {
                case m:
                  _2._decodeType4Shading(M);
                  break;
                case y:
                  var D = 0 | w2.get("VerticesPerRow");
                  if (D < 2)
                    throw new c.FormatError("Invalid VerticesPerRow");
                  _2._decodeType5Shading(M, D);
                  break;
                case v:
                  _2._decodeType6Shading(M);
                  R = true;
                  break;
                case k:
                  _2._decodeType7Shading(M);
                  R = true;
                  break;
                default:
                  (0, c.unreachable)("Unsupported mesh type.");
              }
              if (R) {
                _2._updateBounds();
                for (var j = 0, L = _2.figures.length; j < L; j++)
                  _2._buildFigureFromPatch(j);
              }
              _2._updateBounds();
              _2._packData();
              return _2;
            }
            _createClass(MeshShading, [{ key: "_decodeType4Shading", value: function _decodeType4Shading(t4) {
              for (var r4 = this.coords, o3 = this.colors, l2 = [], u2 = [], h2 = 0; t4.hasData; ) {
                var d2 = t4.readFlag(), g2 = t4.readCoordinate(), m2 = t4.readComponents();
                if (h2 === 0) {
                  if (!(0 <= d2 && d2 <= 2))
                    throw new c.FormatError("Unknown type4 flag");
                  switch (d2) {
                    case 0:
                      h2 = 3;
                      break;
                    case 1:
                      u2.push(u2[u2.length - 2], u2[u2.length - 1]);
                      h2 = 1;
                      break;
                    case 2:
                      u2.push(u2[u2.length - 3], u2[u2.length - 1]);
                      h2 = 1;
                  }
                  l2.push(d2);
                }
                u2.push(r4.length);
                r4.push(g2);
                o3.push(m2);
                h2--;
                t4.align();
              }
              this.figures.push({ type: "triangles", coords: new Int32Array(u2), colors: new Int32Array(u2) });
            } }, { key: "_decodeType5Shading", value: function _decodeType5Shading(t4, r4) {
              for (var o3 = this.coords, c2 = this.colors, l2 = []; t4.hasData; ) {
                var u2 = t4.readCoordinate(), h2 = t4.readComponents();
                l2.push(o3.length);
                o3.push(u2);
                c2.push(h2);
              }
              this.figures.push({ type: "lattice", coords: new Int32Array(l2), colors: new Int32Array(l2), verticesPerRow: r4 });
            } }, { key: "_decodeType6Shading", value: function _decodeType6Shading(t4) {
              for (var r4 = this.coords, o3 = this.colors, l2 = new Int32Array(16), u2 = new Int32Array(4); t4.hasData; ) {
                var h2 = t4.readFlag();
                if (!(0 <= h2 && h2 <= 3))
                  throw new c.FormatError("Unknown type6 flag");
                for (var d2 = r4.length, g2 = 0, m2 = h2 !== 0 ? 8 : 12; g2 < m2; g2++)
                  r4.push(t4.readCoordinate());
                for (var y2 = o3.length, v2 = 0, k2 = h2 !== 0 ? 2 : 4; v2 < k2; v2++)
                  o3.push(t4.readComponents());
                var _2 = void 0, w2 = void 0, S2 = void 0, C2 = void 0;
                switch (h2) {
                  case 0:
                    l2[12] = d2 + 3;
                    l2[13] = d2 + 4;
                    l2[14] = d2 + 5;
                    l2[15] = d2 + 6;
                    l2[8] = d2 + 2;
                    l2[11] = d2 + 7;
                    l2[4] = d2 + 1;
                    l2[7] = d2 + 8;
                    l2[0] = d2;
                    l2[1] = d2 + 11;
                    l2[2] = d2 + 10;
                    l2[3] = d2 + 9;
                    u2[2] = y2 + 1;
                    u2[3] = y2 + 2;
                    u2[0] = y2;
                    u2[1] = y2 + 3;
                    break;
                  case 1:
                    _2 = l2[12];
                    w2 = l2[13];
                    S2 = l2[14];
                    C2 = l2[15];
                    l2[12] = C2;
                    l2[13] = d2 + 0;
                    l2[14] = d2 + 1;
                    l2[15] = d2 + 2;
                    l2[8] = S2;
                    l2[11] = d2 + 3;
                    l2[4] = w2;
                    l2[7] = d2 + 4;
                    l2[0] = _2;
                    l2[1] = d2 + 7;
                    l2[2] = d2 + 6;
                    l2[3] = d2 + 5;
                    _2 = u2[2];
                    w2 = u2[3];
                    u2[2] = w2;
                    u2[3] = y2;
                    u2[0] = _2;
                    u2[1] = y2 + 1;
                    break;
                  case 2:
                    _2 = l2[15];
                    w2 = l2[11];
                    l2[12] = l2[3];
                    l2[13] = d2 + 0;
                    l2[14] = d2 + 1;
                    l2[15] = d2 + 2;
                    l2[8] = l2[7];
                    l2[11] = d2 + 3;
                    l2[4] = w2;
                    l2[7] = d2 + 4;
                    l2[0] = _2;
                    l2[1] = d2 + 7;
                    l2[2] = d2 + 6;
                    l2[3] = d2 + 5;
                    _2 = u2[3];
                    u2[2] = u2[1];
                    u2[3] = y2;
                    u2[0] = _2;
                    u2[1] = y2 + 1;
                    break;
                  case 3:
                    l2[12] = l2[0];
                    l2[13] = d2 + 0;
                    l2[14] = d2 + 1;
                    l2[15] = d2 + 2;
                    l2[8] = l2[1];
                    l2[11] = d2 + 3;
                    l2[4] = l2[2];
                    l2[7] = d2 + 4;
                    l2[0] = l2[3];
                    l2[1] = d2 + 7;
                    l2[2] = d2 + 6;
                    l2[3] = d2 + 5;
                    u2[2] = u2[0];
                    u2[3] = y2;
                    u2[0] = u2[1];
                    u2[1] = y2 + 1;
                }
                l2[5] = r4.length;
                r4.push([(-4 * r4[l2[0]][0] - r4[l2[15]][0] + 6 * (r4[l2[4]][0] + r4[l2[1]][0]) - 2 * (r4[l2[12]][0] + r4[l2[3]][0]) + 3 * (r4[l2[13]][0] + r4[l2[7]][0])) / 9, (-4 * r4[l2[0]][1] - r4[l2[15]][1] + 6 * (r4[l2[4]][1] + r4[l2[1]][1]) - 2 * (r4[l2[12]][1] + r4[l2[3]][1]) + 3 * (r4[l2[13]][1] + r4[l2[7]][1])) / 9]);
                l2[6] = r4.length;
                r4.push([(-4 * r4[l2[3]][0] - r4[l2[12]][0] + 6 * (r4[l2[2]][0] + r4[l2[7]][0]) - 2 * (r4[l2[0]][0] + r4[l2[15]][0]) + 3 * (r4[l2[4]][0] + r4[l2[14]][0])) / 9, (-4 * r4[l2[3]][1] - r4[l2[12]][1] + 6 * (r4[l2[2]][1] + r4[l2[7]][1]) - 2 * (r4[l2[0]][1] + r4[l2[15]][1]) + 3 * (r4[l2[4]][1] + r4[l2[14]][1])) / 9]);
                l2[9] = r4.length;
                r4.push([(-4 * r4[l2[12]][0] - r4[l2[3]][0] + 6 * (r4[l2[8]][0] + r4[l2[13]][0]) - 2 * (r4[l2[0]][0] + r4[l2[15]][0]) + 3 * (r4[l2[11]][0] + r4[l2[1]][0])) / 9, (-4 * r4[l2[12]][1] - r4[l2[3]][1] + 6 * (r4[l2[8]][1] + r4[l2[13]][1]) - 2 * (r4[l2[0]][1] + r4[l2[15]][1]) + 3 * (r4[l2[11]][1] + r4[l2[1]][1])) / 9]);
                l2[10] = r4.length;
                r4.push([(-4 * r4[l2[15]][0] - r4[l2[0]][0] + 6 * (r4[l2[11]][0] + r4[l2[14]][0]) - 2 * (r4[l2[12]][0] + r4[l2[3]][0]) + 3 * (r4[l2[2]][0] + r4[l2[8]][0])) / 9, (-4 * r4[l2[15]][1] - r4[l2[0]][1] + 6 * (r4[l2[11]][1] + r4[l2[14]][1]) - 2 * (r4[l2[12]][1] + r4[l2[3]][1]) + 3 * (r4[l2[2]][1] + r4[l2[8]][1])) / 9]);
                this.figures.push({ type: "patch", coords: new Int32Array(l2), colors: new Int32Array(u2) });
              }
            } }, { key: "_decodeType7Shading", value: function _decodeType7Shading(t4) {
              for (var r4 = this.coords, o3 = this.colors, l2 = new Int32Array(16), u2 = new Int32Array(4); t4.hasData; ) {
                var h2 = t4.readFlag();
                if (!(0 <= h2 && h2 <= 3))
                  throw new c.FormatError("Unknown type7 flag");
                for (var d2 = r4.length, g2 = 0, m2 = h2 !== 0 ? 12 : 16; g2 < m2; g2++)
                  r4.push(t4.readCoordinate());
                for (var y2 = o3.length, v2 = 0, k2 = h2 !== 0 ? 2 : 4; v2 < k2; v2++)
                  o3.push(t4.readComponents());
                var _2 = void 0, w2 = void 0, S2 = void 0, C2 = void 0;
                switch (h2) {
                  case 0:
                    l2[12] = d2 + 3;
                    l2[13] = d2 + 4;
                    l2[14] = d2 + 5;
                    l2[15] = d2 + 6;
                    l2[8] = d2 + 2;
                    l2[9] = d2 + 13;
                    l2[10] = d2 + 14;
                    l2[11] = d2 + 7;
                    l2[4] = d2 + 1;
                    l2[5] = d2 + 12;
                    l2[6] = d2 + 15;
                    l2[7] = d2 + 8;
                    l2[0] = d2;
                    l2[1] = d2 + 11;
                    l2[2] = d2 + 10;
                    l2[3] = d2 + 9;
                    u2[2] = y2 + 1;
                    u2[3] = y2 + 2;
                    u2[0] = y2;
                    u2[1] = y2 + 3;
                    break;
                  case 1:
                    _2 = l2[12];
                    w2 = l2[13];
                    S2 = l2[14];
                    C2 = l2[15];
                    l2[12] = C2;
                    l2[13] = d2 + 0;
                    l2[14] = d2 + 1;
                    l2[15] = d2 + 2;
                    l2[8] = S2;
                    l2[9] = d2 + 9;
                    l2[10] = d2 + 10;
                    l2[11] = d2 + 3;
                    l2[4] = w2;
                    l2[5] = d2 + 8;
                    l2[6] = d2 + 11;
                    l2[7] = d2 + 4;
                    l2[0] = _2;
                    l2[1] = d2 + 7;
                    l2[2] = d2 + 6;
                    l2[3] = d2 + 5;
                    _2 = u2[2];
                    w2 = u2[3];
                    u2[2] = w2;
                    u2[3] = y2;
                    u2[0] = _2;
                    u2[1] = y2 + 1;
                    break;
                  case 2:
                    _2 = l2[15];
                    w2 = l2[11];
                    l2[12] = l2[3];
                    l2[13] = d2 + 0;
                    l2[14] = d2 + 1;
                    l2[15] = d2 + 2;
                    l2[8] = l2[7];
                    l2[9] = d2 + 9;
                    l2[10] = d2 + 10;
                    l2[11] = d2 + 3;
                    l2[4] = w2;
                    l2[5] = d2 + 8;
                    l2[6] = d2 + 11;
                    l2[7] = d2 + 4;
                    l2[0] = _2;
                    l2[1] = d2 + 7;
                    l2[2] = d2 + 6;
                    l2[3] = d2 + 5;
                    _2 = u2[3];
                    u2[2] = u2[1];
                    u2[3] = y2;
                    u2[0] = _2;
                    u2[1] = y2 + 1;
                    break;
                  case 3:
                    l2[12] = l2[0];
                    l2[13] = d2 + 0;
                    l2[14] = d2 + 1;
                    l2[15] = d2 + 2;
                    l2[8] = l2[1];
                    l2[9] = d2 + 9;
                    l2[10] = d2 + 10;
                    l2[11] = d2 + 3;
                    l2[4] = l2[2];
                    l2[5] = d2 + 8;
                    l2[6] = d2 + 11;
                    l2[7] = d2 + 4;
                    l2[0] = l2[3];
                    l2[1] = d2 + 7;
                    l2[2] = d2 + 6;
                    l2[3] = d2 + 5;
                    u2[2] = u2[0];
                    u2[3] = y2;
                    u2[0] = u2[1];
                    u2[1] = y2 + 1;
                }
                this.figures.push({ type: "patch", coords: new Int32Array(l2), colors: new Int32Array(u2) });
              }
            } }, { key: "_buildFigureFromPatch", value: function _buildFigureFromPatch(t4) {
              var r4 = this.figures[t4];
              (0, c.assert)(r4.type === "patch", "Unexpected patch mesh figure");
              var o3 = this.coords, l2 = this.colors, u2 = r4.coords, h2 = r4.colors, d2 = Math.min(o3[u2[0]][0], o3[u2[3]][0], o3[u2[12]][0], o3[u2[15]][0]), g2 = Math.min(o3[u2[0]][1], o3[u2[3]][1], o3[u2[12]][1], o3[u2[15]][1]), m2 = Math.max(o3[u2[0]][0], o3[u2[3]][0], o3[u2[12]][0], o3[u2[15]][0]), y2 = Math.max(o3[u2[0]][1], o3[u2[3]][1], o3[u2[12]][1], o3[u2[15]][1]), v2 = Math.ceil((m2 - d2) * MeshShading.TRIANGLE_DENSITY / (this.bounds[2] - this.bounds[0]));
              v2 = Math.max(MeshShading.MIN_SPLIT_PATCH_CHUNKS_AMOUNT, Math.min(MeshShading.MAX_SPLIT_PATCH_CHUNKS_AMOUNT, v2));
              var k2 = Math.ceil((y2 - g2) * MeshShading.TRIANGLE_DENSITY / (this.bounds[3] - this.bounds[1]));
              k2 = Math.max(MeshShading.MIN_SPLIT_PATCH_CHUNKS_AMOUNT, Math.min(MeshShading.MAX_SPLIT_PATCH_CHUNKS_AMOUNT, k2));
              for (var _2 = v2 + 1, w2 = new Int32Array((k2 + 1) * _2), S2 = new Int32Array((k2 + 1) * _2), C2 = 0, O2 = new Uint8Array(3), T2 = new Uint8Array(3), E = l2[h2[0]], M = l2[h2[1]], R = l2[h2[2]], D = l2[h2[3]], j = x(k2), L = x(v2), N = 0; N <= k2; N++) {
                O2[0] = (E[0] * (k2 - N) + R[0] * N) / k2 | 0;
                O2[1] = (E[1] * (k2 - N) + R[1] * N) / k2 | 0;
                O2[2] = (E[2] * (k2 - N) + R[2] * N) / k2 | 0;
                T2[0] = (M[0] * (k2 - N) + D[0] * N) / k2 | 0;
                T2[1] = (M[1] * (k2 - N) + D[1] * N) / k2 | 0;
                T2[2] = (M[2] * (k2 - N) + D[2] * N) / k2 | 0;
                for (var U = 0; U <= v2; U++, C2++)
                  if (N !== 0 && N !== k2 || U !== 0 && U !== v2) {
                    for (var H = 0, $ = 0, X = 0, q = 0; q <= 3; q++)
                      for (var G = 0; G <= 3; G++, X++) {
                        var z = j[N][q] * L[U][G];
                        H += o3[u2[X]][0] * z;
                        $ += o3[u2[X]][1] * z;
                      }
                    w2[C2] = o3.length;
                    o3.push([H, $]);
                    S2[C2] = l2.length;
                    var W = new Uint8Array(3);
                    W[0] = (O2[0] * (v2 - U) + T2[0] * U) / v2 | 0;
                    W[1] = (O2[1] * (v2 - U) + T2[1] * U) / v2 | 0;
                    W[2] = (O2[2] * (v2 - U) + T2[2] * U) / v2 | 0;
                    l2.push(W);
                  }
              }
              w2[0] = u2[0];
              S2[0] = h2[0];
              w2[v2] = u2[3];
              S2[v2] = h2[1];
              w2[_2 * k2] = u2[12];
              S2[_2 * k2] = h2[2];
              w2[_2 * k2 + v2] = u2[15];
              S2[_2 * k2 + v2] = h2[3];
              this.figures[t4] = { type: "lattice", coords: w2, colors: S2, verticesPerRow: _2 };
            } }, { key: "_updateBounds", value: function _updateBounds() {
              for (var t4 = this.coords[0][0], r4 = this.coords[0][1], o3 = t4, c2 = r4, l2 = 1, u2 = this.coords.length; l2 < u2; l2++) {
                var h2 = this.coords[l2][0], d2 = this.coords[l2][1];
                t4 = t4 > h2 ? h2 : t4;
                r4 = r4 > d2 ? d2 : r4;
                o3 = o3 < h2 ? h2 : o3;
                c2 = c2 < d2 ? d2 : c2;
              }
              this.bounds = [t4, r4, o3, c2];
            } }, { key: "_packData", value: function _packData() {
              var t4, r4, o3, c2, l2 = this.coords, u2 = new Float32Array(2 * l2.length);
              for (t4 = 0, o3 = 0, r4 = l2.length; t4 < r4; t4++) {
                var h2 = l2[t4];
                u2[o3++] = h2[0];
                u2[o3++] = h2[1];
              }
              this.coords = u2;
              var d2 = this.colors, g2 = new Uint8Array(3 * d2.length);
              for (t4 = 0, o3 = 0, r4 = d2.length; t4 < r4; t4++) {
                var m2 = d2[t4];
                g2[o3++] = m2[0];
                g2[o3++] = m2[1];
                g2[o3++] = m2[2];
              }
              this.colors = g2;
              var y2 = this.figures;
              for (t4 = 0, r4 = y2.length; t4 < r4; t4++) {
                var v2 = y2[t4], k2 = v2.coords, _2 = v2.colors;
                for (o3 = 0, c2 = k2.length; o3 < c2; o3++) {
                  k2[o3] *= 2;
                  _2[o3] *= 3;
                }
              }
            } }, { key: "getIR", value: function getIR() {
              return ["Mesh", this.shadingType, this.coords, this.colors, this.figures, this.bounds, this.bbox, this.background];
            } }], [{ key: "MIN_SPLIT_PATCH_CHUNKS_AMOUNT", get: function get() {
              return (0, c.shadow)(this, "MIN_SPLIT_PATCH_CHUNKS_AMOUNT", 3);
            } }, { key: "MAX_SPLIT_PATCH_CHUNKS_AMOUNT", get: function get() {
              return (0, c.shadow)(this, "MAX_SPLIT_PATCH_CHUNKS_AMOUNT", 20);
            } }, { key: "TRIANGLE_DENSITY", get: function get() {
              return (0, c.shadow)(this, "TRIANGLE_DENSITY", 20);
            } }]);
            return MeshShading;
          }(w), T = function(t3) {
            _inherits(DummyShading, t3);
            var r3 = _createSuper(DummyShading);
            function DummyShading() {
              _classCallCheck(this, DummyShading);
              return r3.apply(this, arguments);
            }
            _createClass(DummyShading, [{ key: "getIR", value: function getIR() {
              return ["Dummy"];
            } }]);
            return DummyShading;
          }(w);
        }, (t2, r2, o2) => {
          "use strict";
          Object.defineProperty(r2, "__esModule", { value: true });
          r2.PostScriptEvaluator = r2.PostScriptCompiler = r2.PDFFunctionFactory = void 0;
          r2.isPDFFunction = function isPDFFunction(t3) {
            var r3;
            if (_typeof(t3) !== "object")
              return false;
            if (t3 instanceof c.Dict)
              r3 = t3;
            else {
              if (!(t3 instanceof h.BaseStream))
                return false;
              r3 = t3.dict;
            }
            return r3.has("FunctionType");
          };
          var c = o2(158), l = o2(4), u = o2(211), h = o2(162), d = o2(212);
          function _inherits(t3, r3) {
            if (typeof r3 != "function" && r3 !== null)
              throw new TypeError("Super expression must either be null or a function");
            t3.prototype = Object.create(r3 && r3.prototype, { constructor: { value: t3, writable: true, configurable: true } });
            Object.defineProperty(t3, "prototype", { writable: false });
            r3 && _setPrototypeOf(t3, r3);
          }
          function _setPrototypeOf(t3, r3) {
            _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(t4, r4) {
              t4.__proto__ = r4;
              return t4;
            };
            return _setPrototypeOf(t3, r3);
          }
          function _createSuper(t3) {
            var r3 = function _isNativeReflectConstruct() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                }));
                return true;
              } catch (t4) {
                return false;
              }
            }();
            return function _createSuperInternal() {
              var o3, c2 = _getPrototypeOf(t3);
              if (r3) {
                var l2 = _getPrototypeOf(this).constructor;
                o3 = Reflect.construct(c2, arguments, l2);
              } else
                o3 = c2.apply(this, arguments);
              return _possibleConstructorReturn(this, o3);
            };
          }
          function _possibleConstructorReturn(t3, r3) {
            if (r3 && (_typeof(r3) === "object" || typeof r3 == "function"))
              return r3;
            if (r3 !== void 0)
              throw new TypeError("Derived constructors may only return object or undefined");
            return function _assertThisInitialized(t4) {
              if (t4 === void 0)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return t4;
            }(t3);
          }
          function _getPrototypeOf(t3) {
            _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(t4) {
              return t4.__proto__ || Object.getPrototypeOf(t4);
            };
            return _getPrototypeOf(t3);
          }
          function _typeof(t3) {
            return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t4) {
              return typeof t4;
            } : function(t4) {
              return t4 && typeof Symbol == "function" && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
            }, _typeof(t3);
          }
          function _classCallCheck(t3, r3) {
            if (!(t3 instanceof r3))
              throw new TypeError("Cannot call a class as a function");
          }
          function _defineProperties(t3, r3) {
            for (var o3 = 0; o3 < r3.length; o3++) {
              var c2 = r3[o3];
              c2.enumerable = c2.enumerable || false;
              c2.configurable = true;
              "value" in c2 && (c2.writable = true);
              Object.defineProperty(t3, c2.key, c2);
            }
          }
          function _createClass(t3, r3, o3) {
            r3 && _defineProperties(t3.prototype, r3);
            o3 && _defineProperties(t3, o3);
            Object.defineProperty(t3, "prototype", { writable: false });
            return t3;
          }
          var g = function() {
            function PDFFunctionFactory(t3) {
              var r3 = t3.xref, o3 = t3.isEvalSupported, c2 = o3 === void 0 || o3;
              _classCallCheck(this, PDFFunctionFactory);
              this.xref = r3;
              this.isEvalSupported = c2 !== false;
            }
            _createClass(PDFFunctionFactory, [{ key: "create", value: function create(t3) {
              var r3 = this.getCached(t3);
              if (r3)
                return r3;
              var o3 = m.parse({ xref: this.xref, isEvalSupported: this.isEvalSupported, fn: t3 instanceof c.Ref ? this.xref.fetch(t3) : t3 });
              this._cache(t3, o3);
              return o3;
            } }, { key: "createFromArray", value: function createFromArray(t3) {
              var r3 = this.getCached(t3);
              if (r3)
                return r3;
              var o3 = m.parseArray({ xref: this.xref, isEvalSupported: this.isEvalSupported, fnObj: t3 instanceof c.Ref ? this.xref.fetch(t3) : t3 });
              this._cache(t3, o3);
              return o3;
            } }, { key: "getCached", value: function getCached(t3) {
              var r3;
              t3 instanceof c.Ref ? r3 = t3 : t3 instanceof c.Dict ? r3 = t3.objId : t3 instanceof h.BaseStream && (r3 = t3.dict && t3.dict.objId);
              if (r3) {
                var o3 = this._localFunctionCache.getByRef(r3);
                if (o3)
                  return o3;
              }
              return null;
            } }, { key: "_cache", value: function _cache(t3, r3) {
              if (!r3)
                throw new Error('PDFFunctionFactory._cache - expected "parsedFunction" argument.');
              var o3;
              t3 instanceof c.Ref ? o3 = t3 : t3 instanceof c.Dict ? o3 = t3.objId : t3 instanceof h.BaseStream && (o3 = t3.dict && t3.dict.objId);
              o3 && this._localFunctionCache.set(null, o3, r3);
            } }, { key: "_localFunctionCache", get: function get() {
              return (0, l.shadow)(this, "_localFunctionCache", new d.LocalFunctionCache());
            } }]);
            return PDFFunctionFactory;
          }();
          r2.PDFFunctionFactory = g;
          function toNumberArray(t3) {
            if (!Array.isArray(t3))
              return null;
            for (var r3 = t3.length, o3 = 0; o3 < r3; o3++)
              if (typeof t3[o3] != "number") {
                for (var c2 = new Array(r3), l2 = 0; l2 < r3; l2++)
                  c2[l2] = +t3[l2];
                return c2;
              }
            return t3;
          }
          var m = function() {
            function PDFFunction() {
              _classCallCheck(this, PDFFunction);
            }
            _createClass(PDFFunction, null, [{ key: "getSampleArray", value: function getSampleArray(t3, r3, o3, c2) {
              var l2, u2, h2 = 1;
              for (l2 = 0, u2 = t3.length; l2 < u2; l2++)
                h2 *= t3[l2];
              h2 *= r3;
              var d2 = new Array(h2), g2 = 0, m2 = 0, y2 = 1 / (Math.pow(2, o3) - 1), v2 = c2.getBytes((h2 * o3 + 7) / 8), k2 = 0;
              for (l2 = 0; l2 < h2; l2++) {
                for (; g2 < o3; ) {
                  m2 <<= 8;
                  m2 |= v2[k2++];
                  g2 += 8;
                }
                g2 -= o3;
                d2[l2] = (m2 >> g2) * y2;
                m2 &= (1 << g2) - 1;
              }
              return d2;
            } }, { key: "parse", value: function parse(t3) {
              var r3 = t3.xref, o3 = t3.isEvalSupported, c2 = t3.fn, u2 = c2.dict || c2;
              switch (u2.get("FunctionType")) {
                case 0:
                  return this.constructSampled({ xref: r3, isEvalSupported: o3, fn: c2, dict: u2 });
                case 1:
                  break;
                case 2:
                  return this.constructInterpolated({ xref: r3, isEvalSupported: o3, dict: u2 });
                case 3:
                  return this.constructStiched({ xref: r3, isEvalSupported: o3, dict: u2 });
                case 4:
                  return this.constructPostScript({ xref: r3, isEvalSupported: o3, fn: c2, dict: u2 });
              }
              throw new l.FormatError("Unknown type of function");
            } }, { key: "parseArray", value: function parseArray(t3) {
              var r3 = t3.xref, o3 = t3.isEvalSupported, c2 = t3.fnObj;
              if (!Array.isArray(c2))
                return this.parse({ xref: r3, isEvalSupported: o3, fn: c2 });
              for (var l2 = [], u2 = 0, h2 = c2.length; u2 < h2; u2++)
                l2.push(this.parse({ xref: r3, isEvalSupported: o3, fn: r3.fetchIfRef(c2[u2]) }));
              return function(t4, r4, o4, c3) {
                for (var u3 = 0, h3 = l2.length; u3 < h3; u3++)
                  l2[u3](t4, r4, o4, c3 + u3);
              };
            } }, { key: "constructSampled", value: function constructSampled(t3) {
              t3.xref, t3.isEvalSupported;
              var r3 = t3.fn, o3 = t3.dict;
              function toMultiArray(t4) {
                for (var r4 = t4.length, o4 = [], c3 = 0, l2 = 0; l2 < r4; l2 += 2)
                  o4[c3++] = [t4[l2], t4[l2 + 1]];
                return o4;
              }
              function interpolate(t4, r4, o4, c3, l2) {
                return c3 + (l2 - c3) / (o4 - r4) * (t4 - r4);
              }
              var c2 = toNumberArray(o3.getArray("Domain")), u2 = toNumberArray(o3.getArray("Range"));
              if (!c2 || !u2)
                throw new l.FormatError("No domain or range");
              var h2 = c2.length / 2, d2 = u2.length / 2;
              c2 = toMultiArray(c2);
              u2 = toMultiArray(u2);
              var g2 = toNumberArray(o3.getArray("Size")), m2 = o3.get("BitsPerSample"), y2 = o3.get("Order") || 1;
              y2 !== 1 && (0, l.info)("No support for cubic spline interpolation: " + y2);
              var v2 = toNumberArray(o3.getArray("Encode"));
              if (v2)
                v2 = toMultiArray(v2);
              else {
                v2 = [];
                for (var k2 = 0; k2 < h2; ++k2)
                  v2.push([0, g2[k2] - 1]);
              }
              var _ = toNumberArray(o3.getArray("Decode"));
              _ = _ ? toMultiArray(_) : u2;
              var w = this.getSampleArray(g2, d2, m2, r3);
              return function constructSampledFn(t4, r4, o4, l2) {
                var m3, y3, k3 = 1 << h2, S = new Float64Array(k3), C = new Uint32Array(k3);
                for (y3 = 0; y3 < k3; y3++)
                  S[y3] = 1;
                var x = d2, O = 1;
                for (m3 = 0; m3 < h2; ++m3) {
                  var T = c2[m3][0], E = c2[m3][1], M = interpolate(Math.min(Math.max(t4[r4 + m3], T), E), T, E, v2[m3][0], v2[m3][1]), R = g2[m3], D = (M = Math.min(Math.max(M, 0), R - 1)) < R - 1 ? Math.floor(M) : M - 1, j = D + 1 - M, L = M - D, N = D * x, U = N + x;
                  for (y3 = 0; y3 < k3; y3++)
                    if (y3 & O) {
                      S[y3] *= L;
                      C[y3] += U;
                    } else {
                      S[y3] *= j;
                      C[y3] += N;
                    }
                  x *= R;
                  O <<= 1;
                }
                for (y3 = 0; y3 < d2; ++y3) {
                  var H = 0;
                  for (m3 = 0; m3 < k3; m3++)
                    H += w[C[m3] + y3] * S[m3];
                  H = interpolate(H, 0, 1, _[y3][0], _[y3][1]);
                  o4[l2 + y3] = Math.min(Math.max(H, u2[y3][0]), u2[y3][1]);
                }
              };
            } }, { key: "constructInterpolated", value: function constructInterpolated(t3) {
              t3.xref, t3.isEvalSupported;
              for (var r3 = t3.dict, o3 = toNumberArray(r3.getArray("C0")) || [0], c2 = toNumberArray(r3.getArray("C1")) || [1], l2 = r3.get("N"), u2 = [], h2 = 0, d2 = o3.length; h2 < d2; ++h2)
                u2.push(c2[h2] - o3[h2]);
              var g2 = u2.length;
              return function constructInterpolatedFn(t4, r4, c3, h3) {
                for (var d3 = l2 === 1 ? t4[r4] : Math.pow(t4[r4], l2), m2 = 0; m2 < g2; ++m2)
                  c3[h3 + m2] = o3[m2] + d3 * u2[m2];
              };
            } }, { key: "constructStiched", value: function constructStiched(t3) {
              var r3 = t3.xref, o3 = t3.isEvalSupported, c2 = t3.dict, u2 = toNumberArray(c2.getArray("Domain"));
              if (!u2)
                throw new l.FormatError("No domain");
              if (u2.length / 2 !== 1)
                throw new l.FormatError("Bad domain for stiched function");
              for (var h2 = c2.get("Functions"), d2 = [], g2 = 0, m2 = h2.length; g2 < m2; ++g2)
                d2.push(this.parse({ xref: r3, isEvalSupported: o3, fn: r3.fetchIfRef(h2[g2]) }));
              var y2 = toNumberArray(c2.getArray("Bounds")), v2 = toNumberArray(c2.getArray("Encode")), k2 = new Float32Array(1);
              return function constructStichedFn(t4, r4, o4, c3) {
                var l2, h3 = function constructStichedFromIRClip(t5, r5, o5) {
                  t5 > o5 ? t5 = o5 : t5 < r5 && (t5 = r5);
                  return t5;
                }(t4[r4], u2[0], u2[1]), g3 = y2.length;
                for (l2 = 0; l2 < g3 && !(h3 < y2[l2]); ++l2)
                  ;
                var m3 = u2[0];
                l2 > 0 && (m3 = y2[l2 - 1]);
                var _ = u2[1];
                l2 < y2.length && (_ = y2[l2]);
                var w = v2[2 * l2], S = v2[2 * l2 + 1];
                k2[0] = m3 === _ ? w : w + (h3 - m3) * (S - w) / (_ - m3);
                d2[l2](k2, 0, o4, c3);
              };
            } }, { key: "constructPostScript", value: function constructPostScript(t3) {
              t3.xref;
              var r3 = t3.isEvalSupported, o3 = t3.fn, c2 = t3.dict, h2 = toNumberArray(c2.getArray("Domain")), d2 = toNumberArray(c2.getArray("Range"));
              if (!h2)
                throw new l.FormatError("No domain.");
              if (!d2)
                throw new l.FormatError("No range.");
              var g2 = new u.PostScriptLexer(o3), m2 = new u.PostScriptParser(g2).parse();
              if (r3 && l.FeatureTest.isEvalSupported) {
                var y2 = new k().compile(m2, h2, d2);
                if (y2)
                  return new Function("src", "srcOffset", "dest", "destOffset", y2);
              }
              (0, l.info)("Unable to compile PS function");
              var _ = d2.length >> 1, w = h2.length >> 1, S = new v(m2), C = /* @__PURE__ */ Object.create(null), x = 8192, O = new Float32Array(w);
              return function constructPostScriptFn(t4, r4, o4, c3) {
                var l2, u2, h3 = "", g3 = O;
                for (l2 = 0; l2 < w; l2++) {
                  u2 = t4[r4 + l2];
                  g3[l2] = u2;
                  h3 += u2 + "_";
                }
                var m3 = C[h3];
                if (m3 === void 0) {
                  var y3 = new Float32Array(_), v2 = S.execute(g3), k2 = v2.length - _;
                  for (l2 = 0; l2 < _; l2++) {
                    u2 = v2[k2 + l2];
                    var T = d2[2 * l2];
                    (u2 < T || u2 > (T = d2[2 * l2 + 1])) && (u2 = T);
                    y3[l2] = u2;
                  }
                  if (x > 0) {
                    x--;
                    C[h3] = y3;
                  }
                  o4.set(y3, c3);
                } else
                  o4.set(m3, c3);
              };
            } }]);
            return PDFFunction;
          }();
          var y = function() {
            function PostScriptStack(t3) {
              _classCallCheck(this, PostScriptStack);
              this.stack = t3 ? Array.prototype.slice.call(t3, 0) : [];
            }
            _createClass(PostScriptStack, [{ key: "push", value: function push(t3) {
              if (this.stack.length >= PostScriptStack.MAX_STACK_SIZE)
                throw new Error("PostScript function stack overflow.");
              this.stack.push(t3);
            } }, { key: "pop", value: function pop() {
              if (this.stack.length <= 0)
                throw new Error("PostScript function stack underflow.");
              return this.stack.pop();
            } }, { key: "copy", value: function copy(t3) {
              if (this.stack.length + t3 >= PostScriptStack.MAX_STACK_SIZE)
                throw new Error("PostScript function stack overflow.");
              for (var r3 = this.stack, o3 = r3.length - t3, c2 = t3 - 1; c2 >= 0; c2--, o3++)
                r3.push(r3[o3]);
            } }, { key: "index", value: function index(t3) {
              this.push(this.stack[this.stack.length - t3 - 1]);
            } }, { key: "roll", value: function roll(t3, r3) {
              for (var o3 = this.stack, c2 = o3.length - t3, l2 = o3.length - 1, u2 = c2 + (r3 - Math.floor(r3 / t3) * t3), h2 = c2, d2 = l2; h2 < d2; h2++, d2--) {
                var g2 = o3[h2];
                o3[h2] = o3[d2];
                o3[d2] = g2;
              }
              for (var m2 = c2, y2 = u2 - 1; m2 < y2; m2++, y2--) {
                var v2 = o3[m2];
                o3[m2] = o3[y2];
                o3[y2] = v2;
              }
              for (var k2 = u2, _ = l2; k2 < _; k2++, _--) {
                var w = o3[k2];
                o3[k2] = o3[_];
                o3[_] = w;
              }
            } }], [{ key: "MAX_STACK_SIZE", get: function get() {
              return (0, l.shadow)(this, "MAX_STACK_SIZE", 100);
            } }]);
            return PostScriptStack;
          }(), v = function() {
            function PostScriptEvaluator(t3) {
              _classCallCheck(this, PostScriptEvaluator);
              this.operators = t3;
            }
            _createClass(PostScriptEvaluator, [{ key: "execute", value: function execute(t3) {
              for (var r3, o3, c2, u2 = new y(t3), h2 = 0, d2 = this.operators, g2 = d2.length; h2 < g2; )
                if (typeof (r3 = d2[h2++]) != "number")
                  switch (r3) {
                    case "jz":
                      c2 = u2.pop();
                      (o3 = u2.pop()) || (h2 = c2);
                      break;
                    case "j":
                      h2 = o3 = u2.pop();
                      break;
                    case "abs":
                      o3 = u2.pop();
                      u2.push(Math.abs(o3));
                      break;
                    case "add":
                      c2 = u2.pop();
                      o3 = u2.pop();
                      u2.push(o3 + c2);
                      break;
                    case "and":
                      c2 = u2.pop();
                      typeof (o3 = u2.pop()) == "boolean" && typeof c2 == "boolean" ? u2.push(o3 && c2) : u2.push(o3 & c2);
                      break;
                    case "atan":
                      o3 = u2.pop();
                      u2.push(Math.atan(o3));
                      break;
                    case "bitshift":
                      c2 = u2.pop();
                      (o3 = u2.pop()) > 0 ? u2.push(o3 << c2) : u2.push(o3 >> c2);
                      break;
                    case "ceiling":
                      o3 = u2.pop();
                      u2.push(Math.ceil(o3));
                      break;
                    case "copy":
                      o3 = u2.pop();
                      u2.copy(o3);
                      break;
                    case "cos":
                      o3 = u2.pop();
                      u2.push(Math.cos(o3));
                      break;
                    case "cvi":
                      o3 = 0 | u2.pop();
                      u2.push(o3);
                      break;
                    case "cvr":
                      break;
                    case "div":
                      c2 = u2.pop();
                      o3 = u2.pop();
                      u2.push(o3 / c2);
                      break;
                    case "dup":
                      u2.copy(1);
                      break;
                    case "eq":
                      c2 = u2.pop();
                      o3 = u2.pop();
                      u2.push(o3 === c2);
                      break;
                    case "exch":
                      u2.roll(2, 1);
                      break;
                    case "exp":
                      c2 = u2.pop();
                      o3 = u2.pop();
                      u2.push(Math.pow(o3, c2));
                      break;
                    case "false":
                      u2.push(false);
                      break;
                    case "floor":
                      o3 = u2.pop();
                      u2.push(Math.floor(o3));
                      break;
                    case "ge":
                      c2 = u2.pop();
                      o3 = u2.pop();
                      u2.push(o3 >= c2);
                      break;
                    case "gt":
                      c2 = u2.pop();
                      o3 = u2.pop();
                      u2.push(o3 > c2);
                      break;
                    case "idiv":
                      c2 = u2.pop();
                      o3 = u2.pop();
                      u2.push(o3 / c2 | 0);
                      break;
                    case "index":
                      o3 = u2.pop();
                      u2.index(o3);
                      break;
                    case "le":
                      c2 = u2.pop();
                      o3 = u2.pop();
                      u2.push(o3 <= c2);
                      break;
                    case "ln":
                      o3 = u2.pop();
                      u2.push(Math.log(o3));
                      break;
                    case "log":
                      o3 = u2.pop();
                      u2.push(Math.log(o3) / Math.LN10);
                      break;
                    case "lt":
                      c2 = u2.pop();
                      o3 = u2.pop();
                      u2.push(o3 < c2);
                      break;
                    case "mod":
                      c2 = u2.pop();
                      o3 = u2.pop();
                      u2.push(o3 % c2);
                      break;
                    case "mul":
                      c2 = u2.pop();
                      o3 = u2.pop();
                      u2.push(o3 * c2);
                      break;
                    case "ne":
                      c2 = u2.pop();
                      o3 = u2.pop();
                      u2.push(o3 !== c2);
                      break;
                    case "neg":
                      o3 = u2.pop();
                      u2.push(-o3);
                      break;
                    case "not":
                      typeof (o3 = u2.pop()) == "boolean" ? u2.push(!o3) : u2.push(~o3);
                      break;
                    case "or":
                      c2 = u2.pop();
                      typeof (o3 = u2.pop()) == "boolean" && typeof c2 == "boolean" ? u2.push(o3 || c2) : u2.push(o3 | c2);
                      break;
                    case "pop":
                      u2.pop();
                      break;
                    case "roll":
                      c2 = u2.pop();
                      o3 = u2.pop();
                      u2.roll(o3, c2);
                      break;
                    case "round":
                      o3 = u2.pop();
                      u2.push(Math.round(o3));
                      break;
                    case "sin":
                      o3 = u2.pop();
                      u2.push(Math.sin(o3));
                      break;
                    case "sqrt":
                      o3 = u2.pop();
                      u2.push(Math.sqrt(o3));
                      break;
                    case "sub":
                      c2 = u2.pop();
                      o3 = u2.pop();
                      u2.push(o3 - c2);
                      break;
                    case "true":
                      u2.push(true);
                      break;
                    case "truncate":
                      o3 = (o3 = u2.pop()) < 0 ? Math.ceil(o3) : Math.floor(o3);
                      u2.push(o3);
                      break;
                    case "xor":
                      c2 = u2.pop();
                      typeof (o3 = u2.pop()) == "boolean" && typeof c2 == "boolean" ? u2.push(o3 !== c2) : u2.push(o3 ^ c2);
                      break;
                    default:
                      throw new l.FormatError("Unknown operator ".concat(r3));
                  }
                else
                  u2.push(r3);
              return u2.stack;
            } }]);
            return PostScriptEvaluator;
          }();
          r2.PostScriptEvaluator = v;
          var k = function PostScriptCompilerClosure() {
            var t3 = function() {
              function AstNode(t4) {
                _classCallCheck(this, AstNode);
                this.type = t4;
              }
              _createClass(AstNode, [{ key: "visit", value: function visit(t4) {
                (0, l.unreachable)("abstract method");
              } }]);
              return AstNode;
            }(), r3 = function(t4) {
              _inherits(AstArgument, t4);
              var r4 = _createSuper(AstArgument);
              function AstArgument(t5, o4, c3) {
                var l2;
                _classCallCheck(this, AstArgument);
                (l2 = r4.call(this, "args")).index = t5;
                l2.min = o4;
                l2.max = c3;
                return l2;
              }
              _createClass(AstArgument, [{ key: "visit", value: function visit(t5) {
                t5.visitArgument(this);
              } }]);
              return AstArgument;
            }(t3), o3 = function(t4) {
              _inherits(AstLiteral, t4);
              var r4 = _createSuper(AstLiteral);
              function AstLiteral(t5) {
                var o4;
                _classCallCheck(this, AstLiteral);
                (o4 = r4.call(this, "literal")).number = t5;
                o4.min = t5;
                o4.max = t5;
                return o4;
              }
              _createClass(AstLiteral, [{ key: "visit", value: function visit(t5) {
                t5.visitLiteral(this);
              } }]);
              return AstLiteral;
            }(t3), c2 = function(t4) {
              _inherits(AstBinaryOperation, t4);
              var r4 = _createSuper(AstBinaryOperation);
              function AstBinaryOperation(t5, o4, c3, l2, u3) {
                var h3;
                _classCallCheck(this, AstBinaryOperation);
                (h3 = r4.call(this, "binary")).op = t5;
                h3.arg1 = o4;
                h3.arg2 = c3;
                h3.min = l2;
                h3.max = u3;
                return h3;
              }
              _createClass(AstBinaryOperation, [{ key: "visit", value: function visit(t5) {
                t5.visitBinaryOperation(this);
              } }]);
              return AstBinaryOperation;
            }(t3), u2 = function(t4) {
              _inherits(AstMin, t4);
              var r4 = _createSuper(AstMin);
              function AstMin(t5, o4) {
                var c3;
                _classCallCheck(this, AstMin);
                (c3 = r4.call(this, "max")).arg = t5;
                c3.min = t5.min;
                c3.max = o4;
                return c3;
              }
              _createClass(AstMin, [{ key: "visit", value: function visit(t5) {
                t5.visitMin(this);
              } }]);
              return AstMin;
            }(t3), h2 = function(t4) {
              _inherits(AstVariable, t4);
              var r4 = _createSuper(AstVariable);
              function AstVariable(t5, o4, c3) {
                var l2;
                _classCallCheck(this, AstVariable);
                (l2 = r4.call(this, "var")).index = t5;
                l2.min = o4;
                l2.max = c3;
                return l2;
              }
              _createClass(AstVariable, [{ key: "visit", value: function visit(t5) {
                t5.visitVariable(this);
              } }]);
              return AstVariable;
            }(t3), d2 = function(t4) {
              _inherits(AstVariableDefinition, t4);
              var r4 = _createSuper(AstVariableDefinition);
              function AstVariableDefinition(t5, o4) {
                var c3;
                _classCallCheck(this, AstVariableDefinition);
                (c3 = r4.call(this, "definition")).variable = t5;
                c3.arg = o4;
                return c3;
              }
              _createClass(AstVariableDefinition, [{ key: "visit", value: function visit(t5) {
                t5.visitVariableDefinition(this);
              } }]);
              return AstVariableDefinition;
            }(t3), g2 = function() {
              function ExpressionBuilderVisitor() {
                _classCallCheck(this, ExpressionBuilderVisitor);
                this.parts = [];
              }
              _createClass(ExpressionBuilderVisitor, [{ key: "visitArgument", value: function visitArgument(t4) {
                this.parts.push("Math.max(", t4.min, ", Math.min(", t4.max, ", src[srcOffset + ", t4.index, "]))");
              } }, { key: "visitVariable", value: function visitVariable(t4) {
                this.parts.push("v", t4.index);
              } }, { key: "visitLiteral", value: function visitLiteral(t4) {
                this.parts.push(t4.number);
              } }, { key: "visitBinaryOperation", value: function visitBinaryOperation(t4) {
                this.parts.push("(");
                t4.arg1.visit(this);
                this.parts.push(" ", t4.op, " ");
                t4.arg2.visit(this);
                this.parts.push(")");
              } }, { key: "visitVariableDefinition", value: function visitVariableDefinition(t4) {
                this.parts.push("var ");
                t4.variable.visit(this);
                this.parts.push(" = ");
                t4.arg.visit(this);
                this.parts.push(";");
              } }, { key: "visitMin", value: function visitMin(t4) {
                this.parts.push("Math.min(");
                t4.arg.visit(this);
                this.parts.push(", ", t4.max, ")");
              } }, { key: "toString", value: function toString() {
                return this.parts.join("");
              } }]);
              return ExpressionBuilderVisitor;
            }();
            function buildAddOperation(t4, r4) {
              return r4.type === "literal" && r4.number === 0 ? t4 : t4.type === "literal" && t4.number === 0 ? r4 : r4.type === "literal" && t4.type === "literal" ? new o3(t4.number + r4.number) : new c2("+", t4, r4, t4.min + r4.min, t4.max + r4.max);
            }
            function buildMulOperation(t4, r4) {
              if (r4.type === "literal") {
                if (r4.number === 0)
                  return new o3(0);
                if (r4.number === 1)
                  return t4;
                if (t4.type === "literal")
                  return new o3(t4.number * r4.number);
              }
              if (t4.type === "literal") {
                if (t4.number === 0)
                  return new o3(0);
                if (t4.number === 1)
                  return r4;
              }
              var l2 = Math.min(t4.min * r4.min, t4.min * r4.max, t4.max * r4.min, t4.max * r4.max), u3 = Math.max(t4.min * r4.min, t4.min * r4.max, t4.max * r4.min, t4.max * r4.max);
              return new c2("*", t4, r4, l2, u3);
            }
            function buildSubOperation(t4, r4) {
              if (r4.type === "literal") {
                if (r4.number === 0)
                  return t4;
                if (t4.type === "literal")
                  return new o3(t4.number - r4.number);
              }
              return r4.type === "binary" && r4.op === "-" && t4.type === "literal" && t4.number === 1 && r4.arg1.type === "literal" && r4.arg1.number === 1 ? r4.arg2 : new c2("-", t4, r4, t4.min - r4.max, t4.max - r4.min);
            }
            function buildMinOperation(t4, r4) {
              return t4.min >= r4 ? new o3(r4) : t4.max <= r4 ? t4 : new u2(t4, r4);
            }
            return function() {
              function PostScriptCompiler() {
                _classCallCheck(this, PostScriptCompiler);
              }
              _createClass(PostScriptCompiler, [{ key: "compile", value: function compile(t4, c3, l2) {
                for (var u3, m2, y2, v2, k2, _, w, S, C = [], x = [], O = c3.length >> 1, T = l2.length >> 1, E = 0, M = 0; M < O; M++)
                  C.push(new r3(M, c3[2 * M], c3[2 * M + 1]));
                for (var R = 0, D = t4.length; R < D; R++)
                  if (typeof (S = t4[R]) != "number")
                    switch (S) {
                      case "add":
                        if (C.length < 2)
                          return null;
                        v2 = C.pop();
                        y2 = C.pop();
                        C.push(buildAddOperation(y2, v2));
                        break;
                      case "cvr":
                        if (C.length < 1)
                          return null;
                        break;
                      case "mul":
                        if (C.length < 2)
                          return null;
                        v2 = C.pop();
                        y2 = C.pop();
                        C.push(buildMulOperation(y2, v2));
                        break;
                      case "sub":
                        if (C.length < 2)
                          return null;
                        v2 = C.pop();
                        y2 = C.pop();
                        C.push(buildSubOperation(y2, v2));
                        break;
                      case "exch":
                        if (C.length < 2)
                          return null;
                        k2 = C.pop();
                        _ = C.pop();
                        C.push(k2, _);
                        break;
                      case "pop":
                        if (C.length < 1)
                          return null;
                        C.pop();
                        break;
                      case "index":
                        if (C.length < 1)
                          return null;
                        if ((y2 = C.pop()).type !== "literal")
                          return null;
                        if ((u3 = y2.number) < 0 || !Number.isInteger(u3) || C.length < u3)
                          return null;
                        if ((k2 = C[C.length - u3 - 1]).type === "literal" || k2.type === "var") {
                          C.push(k2);
                          break;
                        }
                        w = new h2(E++, k2.min, k2.max);
                        C[C.length - u3 - 1] = w;
                        C.push(w);
                        x.push(new d2(w, k2));
                        break;
                      case "dup":
                        if (C.length < 1)
                          return null;
                        if (typeof t4[R + 1] == "number" && t4[R + 2] === "gt" && t4[R + 3] === R + 7 && t4[R + 4] === "jz" && t4[R + 5] === "pop" && t4[R + 6] === t4[R + 1]) {
                          y2 = C.pop();
                          C.push(buildMinOperation(y2, t4[R + 1]));
                          R += 6;
                          break;
                        }
                        if ((k2 = C[C.length - 1]).type === "literal" || k2.type === "var") {
                          C.push(k2);
                          break;
                        }
                        w = new h2(E++, k2.min, k2.max);
                        C[C.length - 1] = w;
                        C.push(w);
                        x.push(new d2(w, k2));
                        break;
                      case "roll":
                        if (C.length < 2)
                          return null;
                        v2 = C.pop();
                        y2 = C.pop();
                        if (v2.type !== "literal" || y2.type !== "literal")
                          return null;
                        m2 = v2.number;
                        if ((u3 = y2.number) <= 0 || !Number.isInteger(u3) || !Number.isInteger(m2) || C.length < u3)
                          return null;
                        if ((m2 = (m2 % u3 + u3) % u3) === 0)
                          break;
                        Array.prototype.push.apply(C, C.splice(C.length - u3, u3 - m2));
                        break;
                      default:
                        return null;
                    }
                  else
                    C.push(new o3(S));
                if (C.length !== T)
                  return null;
                for (var j = [], L = 0, N = x; L < N.length; L++) {
                  var U = N[L], H = new g2();
                  U.visit(H);
                  j.push(H.toString());
                }
                for (var $ = 0, X = C.length; $ < X; $++) {
                  var q = C[$], G = new g2();
                  q.visit(G);
                  var z = l2[2 * $], W = l2[2 * $ + 1], V = [G.toString()];
                  if (z > q.min) {
                    V.unshift("Math.max(", z, ", ");
                    V.push(")");
                  }
                  if (W < q.max) {
                    V.unshift("Math.min(", W, ", ");
                    V.push(")");
                  }
                  V.unshift("dest[destOffset + ", $, "] = ");
                  V.push(";");
                  j.push(V.join(""));
                }
                return j.join("\n");
              } }]);
              return PostScriptCompiler;
            }();
          }();
          r2.PostScriptCompiler = k;
        }, (t2, r2, o2) => {
          "use strict";
          Object.defineProperty(r2, "__esModule", { value: true });
          r2.PostScriptParser = r2.PostScriptLexer = void 0;
          var c = o2(4), l = o2(158), u = o2(161);
          function _classCallCheck(t3, r3) {
            if (!(t3 instanceof r3))
              throw new TypeError("Cannot call a class as a function");
          }
          function _defineProperties(t3, r3) {
            for (var o3 = 0; o3 < r3.length; o3++) {
              var c2 = r3[o3];
              c2.enumerable = c2.enumerable || false;
              c2.configurable = true;
              "value" in c2 && (c2.writable = true);
              Object.defineProperty(t3, c2.key, c2);
            }
          }
          function _createClass(t3, r3, o3) {
            r3 && _defineProperties(t3.prototype, r3);
            o3 && _defineProperties(t3, o3);
            Object.defineProperty(t3, "prototype", { writable: false });
            return t3;
          }
          var h = function() {
            function PostScriptParser(t3) {
              _classCallCheck(this, PostScriptParser);
              this.lexer = t3;
              this.operators = [];
              this.token = null;
              this.prev = null;
            }
            _createClass(PostScriptParser, [{ key: "nextToken", value: function nextToken() {
              this.prev = this.token;
              this.token = this.lexer.getToken();
            } }, { key: "accept", value: function accept(t3) {
              if (this.token.type === t3) {
                this.nextToken();
                return true;
              }
              return false;
            } }, { key: "expect", value: function expect(t3) {
              if (this.accept(t3))
                return true;
              throw new c.FormatError("Unexpected symbol: found ".concat(this.token.type, " expected ").concat(t3, "."));
            } }, { key: "parse", value: function parse() {
              this.nextToken();
              this.expect(d.LBRACE);
              this.parseBlock();
              this.expect(d.RBRACE);
              return this.operators;
            } }, { key: "parseBlock", value: function parseBlock() {
              for (; ; )
                if (this.accept(d.NUMBER))
                  this.operators.push(this.prev.value);
                else if (this.accept(d.OPERATOR))
                  this.operators.push(this.prev.value);
                else {
                  if (!this.accept(d.LBRACE))
                    return;
                  this.parseCondition();
                }
            } }, { key: "parseCondition", value: function parseCondition() {
              var t3 = this.operators.length;
              this.operators.push(null, null);
              this.parseBlock();
              this.expect(d.RBRACE);
              if (this.accept(d.IF)) {
                this.operators[t3] = this.operators.length;
                this.operators[t3 + 1] = "jz";
              } else {
                if (!this.accept(d.LBRACE))
                  throw new c.FormatError("PS Function: error parsing conditional.");
                var r3 = this.operators.length;
                this.operators.push(null, null);
                var o3 = this.operators.length;
                this.parseBlock();
                this.expect(d.RBRACE);
                this.expect(d.IFELSE);
                this.operators[r3] = this.operators.length;
                this.operators[r3 + 1] = "j";
                this.operators[t3] = o3;
                this.operators[t3 + 1] = "jz";
              }
            } }]);
            return PostScriptParser;
          }();
          r2.PostScriptParser = h;
          var d = { LBRACE: 0, RBRACE: 1, NUMBER: 2, OPERATOR: 3, IF: 4, IFELSE: 5 }, g = function() {
            function PostScriptToken(t3, r3) {
              _classCallCheck(this, PostScriptToken);
              this.type = t3;
              this.value = r3;
            }
            _createClass(PostScriptToken, null, [{ key: "opCache", get: function get() {
              return (0, c.shadow)(this, "opCache", /* @__PURE__ */ Object.create(null));
            } }, { key: "getOperator", value: function getOperator(t3) {
              var r3 = PostScriptToken.opCache[t3];
              return r3 || (PostScriptToken.opCache[t3] = new PostScriptToken(d.OPERATOR, t3));
            } }, { key: "LBRACE", get: function get() {
              return (0, c.shadow)(this, "LBRACE", new PostScriptToken(d.LBRACE, "{"));
            } }, { key: "RBRACE", get: function get() {
              return (0, c.shadow)(this, "RBRACE", new PostScriptToken(d.RBRACE, "}"));
            } }, { key: "IF", get: function get() {
              return (0, c.shadow)(this, "IF", new PostScriptToken(d.IF, "IF"));
            } }, { key: "IFELSE", get: function get() {
              return (0, c.shadow)(this, "IFELSE", new PostScriptToken(d.IFELSE, "IFELSE"));
            } }]);
            return PostScriptToken;
          }(), m = function() {
            function PostScriptLexer(t3) {
              _classCallCheck(this, PostScriptLexer);
              this.stream = t3;
              this.nextChar();
              this.strBuf = [];
            }
            _createClass(PostScriptLexer, [{ key: "nextChar", value: function nextChar() {
              return this.currentChar = this.stream.getByte();
            } }, { key: "getToken", value: function getToken() {
              for (var t3 = false, r3 = this.currentChar; ; ) {
                if (r3 < 0)
                  return l.EOF;
                if (t3)
                  r3 !== 10 && r3 !== 13 || (t3 = false);
                else if (r3 === 37)
                  t3 = true;
                else if (!(0, u.isWhiteSpace)(r3))
                  break;
                r3 = this.nextChar();
              }
              switch (0 | r3) {
                case 48:
                case 49:
                case 50:
                case 51:
                case 52:
                case 53:
                case 54:
                case 55:
                case 56:
                case 57:
                case 43:
                case 45:
                case 46:
                  return new g(d.NUMBER, this.getNumber());
                case 123:
                  this.nextChar();
                  return g.LBRACE;
                case 125:
                  this.nextChar();
                  return g.RBRACE;
              }
              var o3 = this.strBuf;
              o3.length = 0;
              o3[0] = String.fromCharCode(r3);
              for (; (r3 = this.nextChar()) >= 0 && (r3 >= 65 && r3 <= 90 || r3 >= 97 && r3 <= 122); )
                o3.push(String.fromCharCode(r3));
              var c2 = o3.join("");
              switch (c2.toLowerCase()) {
                case "if":
                  return g.IF;
                case "ifelse":
                  return g.IFELSE;
                default:
                  return g.getOperator(c2);
              }
            } }, { key: "getNumber", value: function getNumber() {
              var t3 = this.currentChar, r3 = this.strBuf;
              r3.length = 0;
              r3[0] = String.fromCharCode(t3);
              for (; (t3 = this.nextChar()) >= 0 && (t3 >= 48 && t3 <= 57 || t3 === 45 || t3 === 46); )
                r3.push(String.fromCharCode(t3));
              var o3 = parseFloat(r3.join(""));
              if (isNaN(o3))
                throw new c.FormatError("Invalid floating point number: ".concat(o3));
              return o3;
            } }]);
            return PostScriptLexer;
          }();
          r2.PostScriptLexer = m;
        }, (t2, r2, o2) => {
          "use strict";
          function _typeof(t3) {
            return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t4) {
              return typeof t4;
            } : function(t4) {
              return t4 && typeof Symbol == "function" && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
            }, _typeof(t3);
          }
          Object.defineProperty(r2, "__esModule", { value: true });
          r2.LocalTilingPatternCache = r2.LocalImageCache = r2.LocalGStateCache = r2.LocalFunctionCache = r2.LocalColorSpaceCache = r2.GlobalImageCache = void 0;
          var c = o2(4), l = o2(158);
          function _createForOfIteratorHelper(t3, r3) {
            var o3 = typeof Symbol != "undefined" && t3[Symbol.iterator] || t3["@@iterator"];
            if (!o3) {
              if (Array.isArray(t3) || (o3 = function _unsupportedIterableToArray(t4, r4) {
                if (!t4)
                  return;
                if (typeof t4 == "string")
                  return _arrayLikeToArray(t4, r4);
                var o4 = Object.prototype.toString.call(t4).slice(8, -1);
                o4 === "Object" && t4.constructor && (o4 = t4.constructor.name);
                if (o4 === "Map" || o4 === "Set")
                  return Array.from(t4);
                if (o4 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(o4))
                  return _arrayLikeToArray(t4, r4);
              }(t3)) || r3 && t3 && typeof t3.length == "number") {
                o3 && (t3 = o3);
                var c2 = 0, l2 = function F() {
                };
                return { s: l2, n: function n() {
                  return c2 >= t3.length ? { done: true } : { done: false, value: t3[c2++] };
                }, e: function e(t4) {
                  throw t4;
                }, f: l2 };
              }
              throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
            }
            var u2, h2 = true, d2 = false;
            return { s: function s() {
              o3 = o3.call(t3);
            }, n: function n() {
              var t4 = o3.next();
              h2 = t4.done;
              return t4;
            }, e: function e(t4) {
              d2 = true;
              u2 = t4;
            }, f: function f() {
              try {
                h2 || o3.return == null || o3.return();
              } finally {
                if (d2)
                  throw u2;
              }
            } };
          }
          function _arrayLikeToArray(t3, r3) {
            (r3 == null || r3 > t3.length) && (r3 = t3.length);
            for (var o3 = 0, c2 = new Array(r3); o3 < r3; o3++)
              c2[o3] = t3[o3];
            return c2;
          }
          function _inherits(t3, r3) {
            if (typeof r3 != "function" && r3 !== null)
              throw new TypeError("Super expression must either be null or a function");
            t3.prototype = Object.create(r3 && r3.prototype, { constructor: { value: t3, writable: true, configurable: true } });
            Object.defineProperty(t3, "prototype", { writable: false });
            r3 && _setPrototypeOf(t3, r3);
          }
          function _setPrototypeOf(t3, r3) {
            _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(t4, r4) {
              t4.__proto__ = r4;
              return t4;
            };
            return _setPrototypeOf(t3, r3);
          }
          function _createSuper(t3) {
            var r3 = function _isNativeReflectConstruct() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                }));
                return true;
              } catch (t4) {
                return false;
              }
            }();
            return function _createSuperInternal() {
              var o3, c2 = _getPrototypeOf(t3);
              if (r3) {
                var l2 = _getPrototypeOf(this).constructor;
                o3 = Reflect.construct(c2, arguments, l2);
              } else
                o3 = c2.apply(this, arguments);
              return _possibleConstructorReturn(this, o3);
            };
          }
          function _possibleConstructorReturn(t3, r3) {
            if (r3 && (_typeof(r3) === "object" || typeof r3 == "function"))
              return r3;
            if (r3 !== void 0)
              throw new TypeError("Derived constructors may only return object or undefined");
            return function _assertThisInitialized(t4) {
              if (t4 === void 0)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return t4;
            }(t3);
          }
          function _getPrototypeOf(t3) {
            _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(t4) {
              return t4.__proto__ || Object.getPrototypeOf(t4);
            };
            return _getPrototypeOf(t3);
          }
          function _classCallCheck(t3, r3) {
            if (!(t3 instanceof r3))
              throw new TypeError("Cannot call a class as a function");
          }
          function _defineProperties(t3, r3) {
            for (var o3 = 0; o3 < r3.length; o3++) {
              var c2 = r3[o3];
              c2.enumerable = c2.enumerable || false;
              c2.configurable = true;
              "value" in c2 && (c2.writable = true);
              Object.defineProperty(t3, c2.key, c2);
            }
          }
          function _createClass(t3, r3, o3) {
            r3 && _defineProperties(t3.prototype, r3);
            o3 && _defineProperties(t3, o3);
            Object.defineProperty(t3, "prototype", { writable: false });
            return t3;
          }
          var u = function() {
            function BaseLocalCache(t3) {
              _classCallCheck(this, BaseLocalCache);
              this.constructor === BaseLocalCache && (0, c.unreachable)("Cannot initialize BaseLocalCache.");
              this._onlyRefs = (t3 && t3.onlyRefs) === true;
              if (!this._onlyRefs) {
                this._nameRefMap = /* @__PURE__ */ new Map();
                this._imageMap = /* @__PURE__ */ new Map();
              }
              this._imageCache = new l.RefSetCache();
            }
            _createClass(BaseLocalCache, [{ key: "getByName", value: function getByName(t3) {
              this._onlyRefs && (0, c.unreachable)("Should not call `getByName` method.");
              var r3 = this._nameRefMap.get(t3);
              return r3 ? this.getByRef(r3) : this._imageMap.get(t3) || null;
            } }, { key: "getByRef", value: function getByRef(t3) {
              return this._imageCache.get(t3) || null;
            } }, { key: "set", value: function set(t3, r3, o3) {
              (0, c.unreachable)("Abstract method `set` called.");
            } }]);
            return BaseLocalCache;
          }(), h = function(t3) {
            _inherits(LocalImageCache, t3);
            var r3 = _createSuper(LocalImageCache);
            function LocalImageCache() {
              _classCallCheck(this, LocalImageCache);
              return r3.apply(this, arguments);
            }
            _createClass(LocalImageCache, [{ key: "set", value: function set(t4) {
              var r4 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null, o3 = arguments.length > 2 ? arguments[2] : void 0;
              if (typeof t4 != "string")
                throw new Error('LocalImageCache.set - expected "name" argument.');
              if (r4) {
                if (this._imageCache.has(r4))
                  return;
                this._nameRefMap.set(t4, r4);
                this._imageCache.put(r4, o3);
              } else
                this._imageMap.has(t4) || this._imageMap.set(t4, o3);
            } }]);
            return LocalImageCache;
          }(u);
          r2.LocalImageCache = h;
          var d = function(t3) {
            _inherits(LocalColorSpaceCache, t3);
            var r3 = _createSuper(LocalColorSpaceCache);
            function LocalColorSpaceCache() {
              _classCallCheck(this, LocalColorSpaceCache);
              return r3.apply(this, arguments);
            }
            _createClass(LocalColorSpaceCache, [{ key: "set", value: function set() {
              var t4 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : null, r4 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null, o3 = arguments.length > 2 ? arguments[2] : void 0;
              if (typeof t4 != "string" && !r4)
                throw new Error('LocalColorSpaceCache.set - expected "name" and/or "ref" argument.');
              if (r4) {
                if (this._imageCache.has(r4))
                  return;
                t4 !== null && this._nameRefMap.set(t4, r4);
                this._imageCache.put(r4, o3);
              } else
                this._imageMap.has(t4) || this._imageMap.set(t4, o3);
            } }]);
            return LocalColorSpaceCache;
          }(u);
          r2.LocalColorSpaceCache = d;
          var g = function(t3) {
            _inherits(LocalFunctionCache, t3);
            var r3 = _createSuper(LocalFunctionCache);
            function LocalFunctionCache(t4) {
              _classCallCheck(this, LocalFunctionCache);
              return r3.call(this, { onlyRefs: true });
            }
            _createClass(LocalFunctionCache, [{ key: "set", value: function set() {
              var t4 = arguments.length > 1 ? arguments[1] : void 0, r4 = arguments.length > 2 ? arguments[2] : void 0;
              if (!t4)
                throw new Error('LocalFunctionCache.set - expected "ref" argument.');
              this._imageCache.has(t4) || this._imageCache.put(t4, r4);
            } }]);
            return LocalFunctionCache;
          }(u);
          r2.LocalFunctionCache = g;
          var m = function(t3) {
            _inherits(LocalGStateCache, t3);
            var r3 = _createSuper(LocalGStateCache);
            function LocalGStateCache() {
              _classCallCheck(this, LocalGStateCache);
              return r3.apply(this, arguments);
            }
            _createClass(LocalGStateCache, [{ key: "set", value: function set(t4) {
              var r4 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null, o3 = arguments.length > 2 ? arguments[2] : void 0;
              if (typeof t4 != "string")
                throw new Error('LocalGStateCache.set - expected "name" argument.');
              if (r4) {
                if (this._imageCache.has(r4))
                  return;
                this._nameRefMap.set(t4, r4);
                this._imageCache.put(r4, o3);
              } else
                this._imageMap.has(t4) || this._imageMap.set(t4, o3);
            } }]);
            return LocalGStateCache;
          }(u);
          r2.LocalGStateCache = m;
          var y = function(t3) {
            _inherits(LocalTilingPatternCache, t3);
            var r3 = _createSuper(LocalTilingPatternCache);
            function LocalTilingPatternCache(t4) {
              _classCallCheck(this, LocalTilingPatternCache);
              return r3.call(this, { onlyRefs: true });
            }
            _createClass(LocalTilingPatternCache, [{ key: "set", value: function set() {
              var t4 = arguments.length > 1 ? arguments[1] : void 0, r4 = arguments.length > 2 ? arguments[2] : void 0;
              if (!t4)
                throw new Error('LocalTilingPatternCache.set - expected "ref" argument.');
              this._imageCache.has(t4) || this._imageCache.put(t4, r4);
            } }]);
            return LocalTilingPatternCache;
          }(u);
          r2.LocalTilingPatternCache = y;
          var v = function() {
            function GlobalImageCache() {
              _classCallCheck(this, GlobalImageCache);
              this._refCache = new l.RefSetCache();
              this._imageCache = new l.RefSetCache();
            }
            _createClass(GlobalImageCache, [{ key: "_byteSize", get: function get() {
              var t3, r3 = 0, o3 = _createForOfIteratorHelper(this._imageCache);
              try {
                for (o3.s(); !(t3 = o3.n()).done; ) {
                  r3 += t3.value.byteSize;
                }
              } catch (t4) {
                o3.e(t4);
              } finally {
                o3.f();
              }
              return r3;
            } }, { key: "_cacheLimitReached", get: function get() {
              return !(this._imageCache.size < GlobalImageCache.MIN_IMAGES_TO_CACHE) && !(this._byteSize < GlobalImageCache.MAX_BYTE_SIZE);
            } }, { key: "shouldCache", value: function shouldCache(t3, r3) {
              var o3 = this._refCache.get(t3);
              return !((o3 ? o3.size + (o3.has(r3) ? 0 : 1) : 1) < GlobalImageCache.NUM_PAGES_THRESHOLD) && !(!this._imageCache.has(t3) && this._cacheLimitReached);
            } }, { key: "addPageIndex", value: function addPageIndex(t3, r3) {
              var o3 = this._refCache.get(t3);
              if (!o3) {
                o3 = /* @__PURE__ */ new Set();
                this._refCache.put(t3, o3);
              }
              o3.add(r3);
            } }, { key: "addByteSize", value: function addByteSize(t3, r3) {
              var o3 = this._imageCache.get(t3);
              o3 && (o3.byteSize || (o3.byteSize = r3));
            } }, { key: "getData", value: function getData(t3, r3) {
              var o3 = this._refCache.get(t3);
              if (!o3)
                return null;
              if (o3.size < GlobalImageCache.NUM_PAGES_THRESHOLD)
                return null;
              var c2 = this._imageCache.get(t3);
              if (!c2)
                return null;
              o3.add(r3);
              return c2;
            } }, { key: "setData", value: function setData(t3, r3) {
              if (!this._refCache.has(t3))
                throw new Error('GlobalImageCache.setData - expected "addPageIndex" to have been called.');
              this._imageCache.has(t3) || (this._cacheLimitReached ? (0, c.warn)("GlobalImageCache.setData - cache limit reached.") : this._imageCache.put(t3, r3));
            } }, { key: "clear", value: function clear() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 && arguments[0];
              t3 || this._refCache.clear();
              this._imageCache.clear();
            } }], [{ key: "NUM_PAGES_THRESHOLD", get: function get() {
              return (0, c.shadow)(this, "NUM_PAGES_THRESHOLD", 2);
            } }, { key: "MIN_IMAGES_TO_CACHE", get: function get() {
              return (0, c.shadow)(this, "MIN_IMAGES_TO_CACHE", 10);
            } }, { key: "MAX_BYTE_SIZE", get: function get() {
              return (0, c.shadow)(this, "MAX_BYTE_SIZE", 4e7);
            } }]);
            return GlobalImageCache;
          }();
          r2.GlobalImageCache = v;
        }, (t2, r2, o2) => {
          "use strict";
          Object.defineProperty(r2, "__esModule", { value: true });
          r2.bidi = function bidi(t3) {
            var r3 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : -1, o3 = arguments.length > 2 && arguments[2] !== void 0 && arguments[2], g = true, m = t3.length;
            if (m === 0 || o3)
              return createBidiText(t3, g, o3);
            h.length = m;
            d.length = m;
            var y, v, k = 0;
            for (y = 0; y < m; ++y) {
              h[y] = t3.charAt(y);
              var _ = t3.charCodeAt(y), w = "L";
              _ <= 255 ? w = l[_] : 1424 <= _ && _ <= 1524 ? w = "R" : 1536 <= _ && _ <= 1791 ? (w = u[255 & _]) || (0, c.warn)("Bidi: invalid Unicode character " + _.toString(16)) : 1792 <= _ && _ <= 2220 && (w = "AL");
              w !== "R" && w !== "AL" && w !== "AN" || k++;
              d[y] = w;
            }
            if (k === 0)
              return createBidiText(t3, g = true);
            if (r3 === -1)
              if (k / m < 0.3 && m > 4) {
                g = true;
                r3 = 0;
              } else {
                g = false;
                r3 = 1;
              }
            var S = [];
            for (y = 0; y < m; ++y)
              S[y] = r3;
            var C, x = isOdd(r3) ? "R" : "L", O = x, T = O, E = O;
            for (y = 0; y < m; ++y)
              d[y] === "NSM" ? d[y] = E : E = d[y];
            E = O;
            for (y = 0; y < m; ++y)
              (C = d[y]) === "EN" ? d[y] = E === "AL" ? "AN" : "EN" : C !== "R" && C !== "L" && C !== "AL" || (E = C);
            for (y = 0; y < m; ++y)
              (C = d[y]) === "AL" && (d[y] = "R");
            for (y = 1; y < m - 1; ++y) {
              d[y] === "ES" && d[y - 1] === "EN" && d[y + 1] === "EN" && (d[y] = "EN");
              d[y] !== "CS" || d[y - 1] !== "EN" && d[y - 1] !== "AN" || d[y + 1] !== d[y - 1] || (d[y] = d[y - 1]);
            }
            for (y = 0; y < m; ++y)
              if (d[y] === "EN") {
                for (var M = y - 1; M >= 0 && d[M] === "ET"; --M)
                  d[M] = "EN";
                for (var R = y + 1; R < m && d[R] === "ET"; ++R)
                  d[R] = "EN";
              }
            for (y = 0; y < m; ++y)
              (C = d[y]) !== "WS" && C !== "ES" && C !== "ET" && C !== "CS" || (d[y] = "ON");
            E = O;
            for (y = 0; y < m; ++y)
              (C = d[y]) === "EN" ? d[y] = E === "L" ? "L" : "EN" : C !== "R" && C !== "L" || (E = C);
            for (y = 0; y < m; ++y)
              if (d[y] === "ON") {
                var D = findUnequal(d, y + 1, "ON"), j = O;
                y > 0 && (j = d[y - 1]);
                var L = T;
                D + 1 < m && (L = d[D + 1]);
                j !== "L" && (j = "R");
                L !== "L" && (L = "R");
                j === L && setValues(d, y, D, j);
                y = D - 1;
              }
            for (y = 0; y < m; ++y)
              d[y] === "ON" && (d[y] = x);
            for (y = 0; y < m; ++y) {
              C = d[y];
              isEven(S[y]) ? C === "R" ? S[y] += 1 : C !== "AN" && C !== "EN" || (S[y] += 2) : C !== "L" && C !== "AN" && C !== "EN" || (S[y] += 1);
            }
            var N, U = -1, H = 99;
            for (y = 0, v = S.length; y < v; ++y) {
              N = S[y];
              U < N && (U = N);
              H > N && isOdd(N) && (H = N);
            }
            for (N = U; N >= H; --N) {
              var $ = -1;
              for (y = 0, v = S.length; y < v; ++y)
                if (S[y] < N) {
                  if ($ >= 0) {
                    reverseValues(h, $, y);
                    $ = -1;
                  }
                } else
                  $ < 0 && ($ = y);
              $ >= 0 && reverseValues(h, $, S.length);
            }
            for (y = 0, v = h.length; y < v; ++y) {
              var X = h[y];
              X !== "<" && X !== ">" || (h[y] = "");
            }
            return createBidiText(h.join(""), g);
          };
          var c = o2(4), l = ["BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "S", "B", "S", "WS", "B", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "B", "B", "B", "S", "WS", "ON", "ON", "ET", "ET", "ET", "ON", "ON", "ON", "ON", "ON", "ES", "CS", "ES", "CS", "CS", "EN", "EN", "EN", "EN", "EN", "EN", "EN", "EN", "EN", "EN", "CS", "ON", "ON", "ON", "ON", "ON", "ON", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "ON", "ON", "ON", "ON", "ON", "ON", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "ON", "ON", "ON", "ON", "BN", "BN", "BN", "BN", "BN", "BN", "B", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "CS", "ON", "ET", "ET", "ET", "ET", "ON", "ON", "ON", "ON", "L", "ON", "ON", "BN", "ON", "ON", "ET", "ET", "EN", "EN", "ON", "L", "ON", "ON", "ON", "EN", "L", "ON", "ON", "ON", "ON", "ON", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "ON", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "ON", "L", "L", "L", "L", "L", "L", "L", "L"], u = ["AN", "AN", "AN", "AN", "AN", "AN", "ON", "ON", "AL", "ET", "ET", "AL", "CS", "AL", "ON", "ON", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "AL", "AL", "", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "AN", "AN", "AN", "AN", "AN", "AN", "AN", "AN", "AN", "AN", "ET", "AN", "AN", "AL", "AL", "AL", "NSM", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "AN", "ON", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "AL", "AL", "NSM", "NSM", "ON", "NSM", "NSM", "NSM", "NSM", "AL", "AL", "EN", "EN", "EN", "EN", "EN", "EN", "EN", "EN", "EN", "EN", "AL", "AL", "AL", "AL", "AL", "AL"];
          function isOdd(t3) {
            return (1 & t3) != 0;
          }
          function isEven(t3) {
            return (1 & t3) == 0;
          }
          function findUnequal(t3, r3, o3) {
            var c2, l2;
            for (c2 = r3, l2 = t3.length; c2 < l2; ++c2)
              if (t3[c2] !== o3)
                return c2;
            return c2;
          }
          function setValues(t3, r3, o3, c2) {
            for (var l2 = r3; l2 < o3; ++l2)
              t3[l2] = c2;
          }
          function reverseValues(t3, r3, o3) {
            for (var c2 = r3, l2 = o3 - 1; c2 < l2; ++c2, --l2) {
              var u2 = t3[c2];
              t3[c2] = t3[l2];
              t3[l2] = u2;
            }
          }
          function createBidiText(t3, r3) {
            var o3 = arguments.length > 2 && arguments[2] !== void 0 && arguments[2], c2 = "ltr";
            o3 ? c2 = "ttb" : r3 || (c2 = "rtl");
            return { str: t3, dir: c2 };
          }
          var h = [], d = [];
        }, (t2, r2, o2) => {
          "use strict";
          Object.defineProperty(r2, "__esModule", { value: true });
          r2.MurmurHash3_64 = void 0;
          var c = o2(4);
          function _defineProperties(t3, r3) {
            for (var o3 = 0; o3 < r3.length; o3++) {
              var c2 = r3[o3];
              c2.enumerable = c2.enumerable || false;
              c2.configurable = true;
              "value" in c2 && (c2.writable = true);
              Object.defineProperty(t3, c2.key, c2);
            }
          }
          var l = 3285377520, u = 4294901760, h = 65535, d = function() {
            function MurmurHash3_64(t3) {
              !function _classCallCheck(t4, r3) {
                if (!(t4 instanceof r3))
                  throw new TypeError("Cannot call a class as a function");
              }(this, MurmurHash3_64);
              this.h1 = t3 ? 4294967295 & t3 : l;
              this.h2 = t3 ? 4294967295 & t3 : l;
            }
            !function _createClass(t3, r3, o3) {
              r3 && _defineProperties(t3.prototype, r3);
              o3 && _defineProperties(t3, o3);
              Object.defineProperty(t3, "prototype", { writable: false });
              return t3;
            }(MurmurHash3_64, [{ key: "update", value: function update(t3) {
              var r3, o3;
              if (typeof t3 == "string") {
                r3 = new Uint8Array(2 * t3.length);
                o3 = 0;
                for (var l2 = 0, d2 = t3.length; l2 < d2; l2++) {
                  var g = t3.charCodeAt(l2);
                  if (g <= 255)
                    r3[o3++] = g;
                  else {
                    r3[o3++] = g >>> 8;
                    r3[o3++] = 255 & g;
                  }
                }
              } else {
                if (!(0, c.isArrayBuffer)(t3))
                  throw new Error("Wrong data format in MurmurHash3_64_update. Input must be a string or array.");
                o3 = (r3 = t3.slice()).byteLength;
              }
              for (var m = o3 >> 2, y = o3 - 4 * m, v = new Uint32Array(r3.buffer, 0, m), k = 0, _ = 0, w = this.h1, S = this.h2, C = 3432918353, x = 461845907, O = 11601, T = 13715, E = 0; E < m; E++)
                1 & E ? w = 5 * (w = (w ^= k = (k = (k = (k = v[E]) * C & u | k * O & h) << 15 | k >>> 17) * x & u | k * T & h) << 13 | w >>> 19) + 3864292196 : S = 5 * (S = (S ^= _ = (_ = (_ = (_ = v[E]) * C & u | _ * O & h) << 15 | _ >>> 17) * x & u | _ * T & h) << 13 | S >>> 19) + 3864292196;
              k = 0;
              switch (y) {
                case 3:
                  k ^= r3[4 * m + 2] << 16;
                case 2:
                  k ^= r3[4 * m + 1] << 8;
                case 1:
                  k = (k = (k = (k ^= r3[4 * m]) * C & u | k * O & h) << 15 | k >>> 17) * x & u | k * T & h;
                  1 & m ? w ^= k : S ^= k;
              }
              this.h1 = w;
              this.h2 = S;
            } }, { key: "hexdigest", value: function hexdigest() {
              var t3 = this.h1, r3 = this.h2;
              t3 = 3981806797 * (t3 ^= r3 >>> 1) & u | 36045 * t3 & h;
              t3 = 444984403 * (t3 ^= (r3 = 4283543511 * r3 & u | (2950163797 * (r3 << 16 | t3 >>> 16) & u) >>> 16) >>> 1) & u | 60499 * t3 & h;
              var o3 = ((t3 ^= (r3 = 3301882366 * r3 & u | (3120437893 * (r3 << 16 | t3 >>> 16) & u) >>> 16) >>> 1) >>> 0).toString(16), c2 = (r3 >>> 0).toString(16);
              return o3.padStart(8, "0") + c2.padStart(8, "0");
            } }]);
            return MurmurHash3_64;
          }();
          r2.MurmurHash3_64 = d;
        }, (t2, r2, o2) => {
          "use strict";
          function _typeof(t3) {
            return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t4) {
              return typeof t4;
            } : function(t4) {
              return t4 && typeof Symbol == "function" && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
            }, _typeof(t3);
          }
          Object.defineProperty(r2, "__esModule", { value: true });
          r2.OperatorList = void 0;
          var c = o2(4);
          function _createForOfIteratorHelper(t3, r3) {
            var o3 = typeof Symbol != "undefined" && t3[Symbol.iterator] || t3["@@iterator"];
            if (!o3) {
              if (Array.isArray(t3) || (o3 = function _unsupportedIterableToArray(t4, r4) {
                if (!t4)
                  return;
                if (typeof t4 == "string")
                  return _arrayLikeToArray(t4, r4);
                var o4 = Object.prototype.toString.call(t4).slice(8, -1);
                o4 === "Object" && t4.constructor && (o4 = t4.constructor.name);
                if (o4 === "Map" || o4 === "Set")
                  return Array.from(t4);
                if (o4 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(o4))
                  return _arrayLikeToArray(t4, r4);
              }(t3)) || r3 && t3 && typeof t3.length == "number") {
                o3 && (t3 = o3);
                var c2 = 0, l2 = function F() {
                };
                return { s: l2, n: function n() {
                  return c2 >= t3.length ? { done: true } : { done: false, value: t3[c2++] };
                }, e: function e(t4) {
                  throw t4;
                }, f: l2 };
              }
              throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
            }
            var u2, h2 = true, d2 = false;
            return { s: function s() {
              o3 = o3.call(t3);
            }, n: function n() {
              var t4 = o3.next();
              h2 = t4.done;
              return t4;
            }, e: function e(t4) {
              d2 = true;
              u2 = t4;
            }, f: function f() {
              try {
                h2 || o3.return == null || o3.return();
              } finally {
                if (d2)
                  throw u2;
              }
            } };
          }
          function _arrayLikeToArray(t3, r3) {
            (r3 == null || r3 > t3.length) && (r3 = t3.length);
            for (var o3 = 0, c2 = new Array(r3); o3 < r3; o3++)
              c2[o3] = t3[o3];
            return c2;
          }
          function _setPrototypeOf(t3, r3) {
            _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(t4, r4) {
              t4.__proto__ = r4;
              return t4;
            };
            return _setPrototypeOf(t3, r3);
          }
          function _createSuper(t3) {
            var r3 = function _isNativeReflectConstruct() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                }));
                return true;
              } catch (t4) {
                return false;
              }
            }();
            return function _createSuperInternal() {
              var o3, c2 = _getPrototypeOf(t3);
              if (r3) {
                var l2 = _getPrototypeOf(this).constructor;
                o3 = Reflect.construct(c2, arguments, l2);
              } else
                o3 = c2.apply(this, arguments);
              return _possibleConstructorReturn(this, o3);
            };
          }
          function _possibleConstructorReturn(t3, r3) {
            if (r3 && (_typeof(r3) === "object" || typeof r3 == "function"))
              return r3;
            if (r3 !== void 0)
              throw new TypeError("Derived constructors may only return object or undefined");
            return function _assertThisInitialized(t4) {
              if (t4 === void 0)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return t4;
            }(t3);
          }
          function _getPrototypeOf(t3) {
            _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(t4) {
              return t4.__proto__ || Object.getPrototypeOf(t4);
            };
            return _getPrototypeOf(t3);
          }
          function _classCallCheck(t3, r3) {
            if (!(t3 instanceof r3))
              throw new TypeError("Cannot call a class as a function");
          }
          function _defineProperties(t3, r3) {
            for (var o3 = 0; o3 < r3.length; o3++) {
              var c2 = r3[o3];
              c2.enumerable = c2.enumerable || false;
              c2.configurable = true;
              "value" in c2 && (c2.writable = true);
              Object.defineProperty(t3, c2.key, c2);
            }
          }
          function _createClass(t3, r3, o3) {
            r3 && _defineProperties(t3.prototype, r3);
            o3 && _defineProperties(t3, o3);
            Object.defineProperty(t3, "prototype", { writable: false });
            return t3;
          }
          function addState(t3, r3, o3, c2, l2) {
            for (var u2 = t3, h2 = 0, d2 = r3.length - 1; h2 < d2; h2++) {
              var g = r3[h2];
              u2 = u2[g] || (u2[g] = []);
            }
            u2[r3[r3.length - 1]] = { checkFn: o3, iterateFn: c2, processFn: l2 };
          }
          var l = [];
          addState(l, [c.OPS.save, c.OPS.transform, c.OPS.paintInlineImageXObject, c.OPS.restore], null, function iterateInlineImageGroup(t3, r3) {
            var o3 = t3.fnArray, l2 = (r3 - (t3.iCurr - 3)) % 4;
            switch (l2) {
              case 0:
                return o3[r3] === c.OPS.save;
              case 1:
                return o3[r3] === c.OPS.transform;
              case 2:
                return o3[r3] === c.OPS.paintInlineImageXObject;
              case 3:
                return o3[r3] === c.OPS.restore;
            }
            throw new Error("iterateInlineImageGroup - invalid pos: ".concat(l2));
          }, function foundInlineImageGroup(t3, r3) {
            var o3 = t3.fnArray, l2 = t3.argsArray, u2 = t3.iCurr, h2 = u2 - 3, d2 = u2 - 2, g = u2 - 1, m = Math.min(Math.floor((r3 - h2) / 4), 200);
            if (m < 10)
              return r3 - (r3 - h2) % 4;
            for (var y = 0, v = [], k = 0, _ = 1, w = 1, S = 0; S < m; S++) {
              var C = l2[d2 + (S << 2)], x = l2[g + (S << 2)][0];
              if (_ + x.width > 1e3) {
                y = Math.max(y, _);
                w += k + 2;
                _ = 0;
                k = 0;
              }
              v.push({ transform: C, x: _, y: w, w: x.width, h: x.height });
              _ += x.width + 2;
              k = Math.max(k, x.height);
            }
            for (var O = Math.max(y, _) + 1, T = w + k + 1, E = new Uint8Array(O * T * 4), M = O << 2, R = 0; R < m; R++) {
              var D = l2[g + (R << 2)][0].data, j = v[R].w << 2, L = 0, N = v[R].x + v[R].y * O << 2;
              E.set(D.subarray(0, j), N - M);
              for (var U = 0, H = v[R].h; U < H; U++) {
                E.set(D.subarray(L, L + j), N);
                L += j;
                N += M;
              }
              E.set(D.subarray(L - j, L), N);
              for (; N >= 0; ) {
                D[N - 4] = D[N];
                D[N - 3] = D[N + 1];
                D[N - 2] = D[N + 2];
                D[N - 1] = D[N + 3];
                D[N + j] = D[N + j - 4];
                D[N + j + 1] = D[N + j - 3];
                D[N + j + 2] = D[N + j - 2];
                D[N + j + 3] = D[N + j - 1];
                N -= M;
              }
            }
            o3.splice(h2, 4 * m, c.OPS.paintInlineImageXObjectGroup);
            l2.splice(h2, 4 * m, [{ width: O, height: T, kind: c.ImageKind.RGBA_32BPP, data: E }, v]);
            return h2 + 1;
          });
          addState(l, [c.OPS.save, c.OPS.transform, c.OPS.paintImageMaskXObject, c.OPS.restore], null, function iterateImageMaskGroup(t3, r3) {
            var o3 = t3.fnArray, l2 = (r3 - (t3.iCurr - 3)) % 4;
            switch (l2) {
              case 0:
                return o3[r3] === c.OPS.save;
              case 1:
                return o3[r3] === c.OPS.transform;
              case 2:
                return o3[r3] === c.OPS.paintImageMaskXObject;
              case 3:
                return o3[r3] === c.OPS.restore;
            }
            throw new Error("iterateImageMaskGroup - invalid pos: ".concat(l2));
          }, function foundImageMaskGroup(t3, r3) {
            var o3 = t3.fnArray, l2 = t3.argsArray, u2 = t3.iCurr, h2 = u2 - 3, d2 = u2 - 2, g = u2 - 1, m = Math.floor((r3 - h2) / 4);
            if (m < 10)
              return r3 - (r3 - h2) % 4;
            var y, v, k = false, _ = l2[g][0], w = l2[d2][0], S = l2[d2][1], C = l2[d2][2], x = l2[d2][3];
            if (S === C) {
              k = true;
              y = d2 + 4;
              for (var O = g + 4, T = 1; T < m; T++, y += 4, O += 4) {
                v = l2[y];
                if (l2[O][0] !== _ || v[0] !== w || v[1] !== S || v[2] !== C || v[3] !== x) {
                  T < 10 ? k = false : m = T;
                  break;
                }
              }
            }
            if (k) {
              m = Math.min(m, 1e3);
              var E = new Float32Array(2 * m);
              y = d2;
              for (var M = 0; M < m; M++, y += 4) {
                v = l2[y];
                E[M << 1] = v[4];
                E[1 + (M << 1)] = v[5];
              }
              o3.splice(h2, 4 * m, c.OPS.paintImageMaskXObjectRepeat);
              l2.splice(h2, 4 * m, [_, w, S, C, x, E]);
            } else {
              m = Math.min(m, 100);
              for (var R = [], D = 0; D < m; D++) {
                v = l2[d2 + (D << 2)];
                var j = l2[g + (D << 2)][0];
                R.push({ data: j.data, width: j.width, height: j.height, interpolate: j.interpolate, count: j.count, transform: v });
              }
              o3.splice(h2, 4 * m, c.OPS.paintImageMaskXObjectGroup);
              l2.splice(h2, 4 * m, [R]);
            }
            return h2 + 1;
          });
          addState(l, [c.OPS.save, c.OPS.transform, c.OPS.paintImageXObject, c.OPS.restore], function(t3) {
            var r3 = t3.argsArray, o3 = t3.iCurr - 2;
            return r3[o3][1] === 0 && r3[o3][2] === 0;
          }, function iterateImageGroup(t3, r3) {
            var o3 = t3.fnArray, l2 = t3.argsArray, u2 = (r3 - (t3.iCurr - 3)) % 4;
            switch (u2) {
              case 0:
                return o3[r3] === c.OPS.save;
              case 1:
                if (o3[r3] !== c.OPS.transform)
                  return false;
                var h2 = t3.iCurr - 2, d2 = l2[h2][0], g = l2[h2][3];
                return l2[r3][0] === d2 && l2[r3][1] === 0 && l2[r3][2] === 0 && l2[r3][3] === g;
              case 2:
                if (o3[r3] !== c.OPS.paintImageXObject)
                  return false;
                var m = l2[t3.iCurr - 1][0];
                return l2[r3][0] === m;
              case 3:
                return o3[r3] === c.OPS.restore;
            }
            throw new Error("iterateImageGroup - invalid pos: ".concat(u2));
          }, function(t3, r3) {
            var o3 = t3.fnArray, l2 = t3.argsArray, u2 = t3.iCurr, h2 = u2 - 3, d2 = u2 - 2, g = l2[u2 - 1][0], m = l2[d2][0], y = l2[d2][3], v = Math.min(Math.floor((r3 - h2) / 4), 1e3);
            if (v < 3)
              return r3 - (r3 - h2) % 4;
            for (var k = new Float32Array(2 * v), _ = d2, w = 0; w < v; w++, _ += 4) {
              var S = l2[_];
              k[w << 1] = S[4];
              k[1 + (w << 1)] = S[5];
            }
            var C = [g, m, y, k];
            o3.splice(h2, 4 * v, c.OPS.paintImageXObjectRepeat);
            l2.splice(h2, 4 * v, C);
            return h2 + 1;
          });
          addState(l, [c.OPS.beginText, c.OPS.setFont, c.OPS.setTextMatrix, c.OPS.showText, c.OPS.endText], null, function iterateShowTextGroup(t3, r3) {
            var o3 = t3.fnArray, l2 = t3.argsArray, u2 = (r3 - (t3.iCurr - 4)) % 5;
            switch (u2) {
              case 0:
                return o3[r3] === c.OPS.beginText;
              case 1:
                return o3[r3] === c.OPS.setFont;
              case 2:
                return o3[r3] === c.OPS.setTextMatrix;
              case 3:
                if (o3[r3] !== c.OPS.showText)
                  return false;
                var h2 = t3.iCurr - 3, d2 = l2[h2][0], g = l2[h2][1];
                return l2[r3][0] === d2 && l2[r3][1] === g;
              case 4:
                return o3[r3] === c.OPS.endText;
            }
            throw new Error("iterateShowTextGroup - invalid pos: ".concat(u2));
          }, function(t3, r3) {
            var o3 = t3.fnArray, c2 = t3.argsArray, l2 = t3.iCurr, u2 = l2 - 4, h2 = l2 - 3, d2 = l2 - 2, g = l2 - 1, m = l2, y = c2[h2][0], v = c2[h2][1], k = Math.min(Math.floor((r3 - u2) / 5), 1e3);
            if (k < 3)
              return r3 - (r3 - u2) % 5;
            var _ = u2;
            if (u2 >= 4 && o3[u2 - 4] === o3[h2] && o3[u2 - 3] === o3[d2] && o3[u2 - 2] === o3[g] && o3[u2 - 1] === o3[m] && c2[u2 - 4][0] === y && c2[u2 - 4][1] === v) {
              k++;
              _ -= 5;
            }
            for (var w = _ + 4, S = 1; S < k; S++) {
              o3.splice(w, 3);
              c2.splice(w, 3);
              w += 2;
            }
            return w + 1;
          });
          var u = function() {
            function NullOptimizer(t3) {
              _classCallCheck(this, NullOptimizer);
              this.queue = t3;
            }
            _createClass(NullOptimizer, [{ key: "_optimize", value: function _optimize() {
            } }, { key: "push", value: function push(t3, r3) {
              this.queue.fnArray.push(t3);
              this.queue.argsArray.push(r3);
              this._optimize();
            } }, { key: "flush", value: function flush() {
            } }, { key: "reset", value: function reset() {
            } }]);
            return NullOptimizer;
          }(), h = function(t3) {
            !function _inherits(t4, r4) {
              if (typeof r4 != "function" && r4 !== null)
                throw new TypeError("Super expression must either be null or a function");
              t4.prototype = Object.create(r4 && r4.prototype, { constructor: { value: t4, writable: true, configurable: true } });
              Object.defineProperty(t4, "prototype", { writable: false });
              r4 && _setPrototypeOf(t4, r4);
            }(QueueOptimizer, t3);
            var r3 = _createSuper(QueueOptimizer);
            function QueueOptimizer(t4) {
              var o3;
              _classCallCheck(this, QueueOptimizer);
              (o3 = r3.call(this, t4)).state = null;
              o3.context = { iCurr: 0, fnArray: t4.fnArray, argsArray: t4.argsArray };
              o3.match = null;
              o3.lastProcessed = 0;
              return o3;
            }
            _createClass(QueueOptimizer, [{ key: "_optimize", value: function _optimize() {
              var t4 = this.queue.fnArray, r4 = this.lastProcessed, o3 = t4.length, c2 = this.state, u2 = this.match;
              if (c2 || u2 || r4 + 1 !== o3 || l[t4[r4]]) {
                for (var h2 = this.context; r4 < o3; ) {
                  if (u2) {
                    if ((0, u2.iterateFn)(h2, r4)) {
                      r4++;
                      continue;
                    }
                    r4 = (0, u2.processFn)(h2, r4 + 1);
                    u2 = null;
                    c2 = null;
                    if (r4 >= (o3 = t4.length))
                      break;
                  }
                  if ((c2 = (c2 || l)[t4[r4]]) && !Array.isArray(c2)) {
                    h2.iCurr = r4;
                    r4++;
                    if (!c2.checkFn || (0, c2.checkFn)(h2)) {
                      u2 = c2;
                      c2 = null;
                    } else
                      c2 = null;
                  } else
                    r4++;
                }
                this.state = c2;
                this.match = u2;
                this.lastProcessed = r4;
              } else
                this.lastProcessed = o3;
            } }, { key: "flush", value: function flush() {
              for (; this.match; ) {
                var t4 = this.queue.fnArray.length;
                this.lastProcessed = (0, this.match.processFn)(this.context, t4);
                this.match = null;
                this.state = null;
                this._optimize();
              }
            } }, { key: "reset", value: function reset() {
              this.state = null;
              this.match = null;
              this.lastProcessed = 0;
            } }]);
            return QueueOptimizer;
          }(u), d = function() {
            function OperatorList() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 0, r3 = arguments.length > 1 ? arguments[1] : void 0;
              _classCallCheck(this, OperatorList);
              this._streamSink = r3;
              this.fnArray = [];
              this.argsArray = [];
              !r3 || t3 & c.RenderingIntentFlag.OPLIST ? this.optimizer = new u(this) : this.optimizer = new h(this);
              this.dependencies = /* @__PURE__ */ new Set();
              this._totalLength = 0;
              this.weight = 0;
              this._resolved = r3 ? null : Promise.resolve();
            }
            _createClass(OperatorList, [{ key: "length", get: function get() {
              return this.argsArray.length;
            } }, { key: "ready", get: function get() {
              return this._resolved || this._streamSink.ready;
            } }, { key: "totalLength", get: function get() {
              return this._totalLength + this.length;
            } }, { key: "addOp", value: function addOp(t3, r3) {
              this.optimizer.push(t3, r3);
              this.weight++;
              this._streamSink && (this.weight >= OperatorList.CHUNK_SIZE || this.weight >= OperatorList.CHUNK_SIZE_ABOUT && (t3 === c.OPS.restore || t3 === c.OPS.endText)) && this.flush();
            } }, { key: "addImageOps", value: function addImageOps(t3, r3, o3) {
              o3 !== void 0 && this.addOp(c.OPS.beginMarkedContentProps, ["OC", o3]);
              this.addOp(t3, r3);
              o3 !== void 0 && this.addOp(c.OPS.endMarkedContent, []);
            } }, { key: "addDependency", value: function addDependency(t3) {
              if (!this.dependencies.has(t3)) {
                this.dependencies.add(t3);
                this.addOp(c.OPS.dependency, [t3]);
              }
            } }, { key: "addDependencies", value: function addDependencies(t3) {
              var r3, o3 = _createForOfIteratorHelper(t3);
              try {
                for (o3.s(); !(r3 = o3.n()).done; ) {
                  var c2 = r3.value;
                  this.addDependency(c2);
                }
              } catch (t4) {
                o3.e(t4);
              } finally {
                o3.f();
              }
            } }, { key: "addOpList", value: function addOpList(t3) {
              if (t3 instanceof OperatorList) {
                var r3, o3 = _createForOfIteratorHelper(t3.dependencies);
                try {
                  for (o3.s(); !(r3 = o3.n()).done; ) {
                    var l2 = r3.value;
                    this.dependencies.add(l2);
                  }
                } catch (t4) {
                  o3.e(t4);
                } finally {
                  o3.f();
                }
                for (var u2 = 0, h2 = t3.length; u2 < h2; u2++)
                  this.addOp(t3.fnArray[u2], t3.argsArray[u2]);
              } else
                (0, c.warn)('addOpList - ignoring invalid "opList" parameter.');
            } }, { key: "getIR", value: function getIR() {
              return { fnArray: this.fnArray, argsArray: this.argsArray, length: this.length };
            } }, { key: "_transfers", get: function get() {
              for (var t3 = [], r3 = this.fnArray, o3 = this.argsArray, l2 = this.length, u2 = 0; u2 < l2; u2++)
                switch (r3[u2]) {
                  case c.OPS.paintInlineImageXObject:
                  case c.OPS.paintInlineImageXObjectGroup:
                  case c.OPS.paintImageMaskXObject:
                    var h2 = o3[u2][0];
                    !h2.cached && h2.data && h2.data.buffer instanceof ArrayBuffer && t3.push(h2.data.buffer);
                }
              return t3;
            } }, { key: "flush", value: function flush() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 && arguments[0];
              this.optimizer.flush();
              var r3 = this.length;
              this._totalLength += r3;
              this._streamSink.enqueue({ fnArray: this.fnArray, argsArray: this.argsArray, lastChunk: t3, length: r3 }, 1, this._transfers);
              this.dependencies.clear();
              this.fnArray.length = 0;
              this.argsArray.length = 0;
              this.weight = 0;
              this.optimizer.reset();
            } }], [{ key: "CHUNK_SIZE", get: function get() {
              return (0, c.shadow)(this, "CHUNK_SIZE", 1e3);
            } }, { key: "CHUNK_SIZE_ABOUT", get: function get() {
              return (0, c.shadow)(this, "CHUNK_SIZE_ABOUT", this.CHUNK_SIZE - 5);
            } }]);
            return OperatorList;
          }();
          r2.OperatorList = d;
        }, (t2, r2, o2) => {
          "use strict";
          Object.defineProperty(r2, "__esModule", { value: true });
          r2.PDFImage = void 0;
          var c = function _interopRequireDefault(t3) {
            return t3 && t3.__esModule ? t3 : { default: t3 };
          }(o2(2)), l = o2(4), u = o2(217), h = o2(162), d = o2(177), g = o2(182), m = o2(190), y = o2(193), v = o2(158);
          function asyncGeneratorStep(t3, r3, o3, c2, l2, u2, h2) {
            try {
              var d2 = t3[u2](h2), g2 = d2.value;
            } catch (t4) {
              o3(t4);
              return;
            }
            d2.done ? r3(g2) : Promise.resolve(g2).then(c2, l2);
          }
          function _defineProperties(t3, r3) {
            for (var o3 = 0; o3 < r3.length; o3++) {
              var c2 = r3[o3];
              c2.enumerable = c2.enumerable || false;
              c2.configurable = true;
              "value" in c2 && (c2.writable = true);
              Object.defineProperty(t3, c2.key, c2);
            }
          }
          function decodeAndClamp(t3, r3, o3, c2) {
            (t3 = r3 + t3 * o3) < 0 ? t3 = 0 : t3 > c2 && (t3 = c2);
            return t3;
          }
          function resizeImageMask(t3, r3, o3, c2, l2, u2) {
            var h2, d2 = l2 * u2;
            h2 = r3 <= 8 ? new Uint8Array(d2) : r3 <= 16 ? new Uint16Array(d2) : new Uint32Array(d2);
            var g2, m2, y2, v2, k2 = o3 / l2, _ = c2 / u2, w = 0, S = new Uint16Array(l2), C = o3;
            for (g2 = 0; g2 < l2; g2++)
              S[g2] = Math.floor(g2 * k2);
            for (g2 = 0; g2 < u2; g2++) {
              y2 = Math.floor(g2 * _) * C;
              for (m2 = 0; m2 < l2; m2++) {
                v2 = y2 + S[m2];
                h2[w++] = t3[v2];
              }
            }
            return h2;
          }
          var k = function() {
            function PDFImage(t4) {
              var r3 = t4.xref, o3 = t4.res, c2 = t4.image, u2 = t4.isInline, g2 = u2 !== void 0 && u2, m2 = t4.smask, k2 = m2 === void 0 ? null : m2, _ = t4.mask, w = _ === void 0 ? null : _, S = t4.isMask, C = S !== void 0 && S, x = t4.pdfFunctionFactory, O = t4.localColorSpaceCache;
              !function _classCallCheck(t5, r4) {
                if (!(t5 instanceof r4))
                  throw new TypeError("Cannot call a class as a function");
              }(this, PDFImage);
              this.image = c2;
              var T = c2.dict, E = T.get("F", "Filter");
              if (E instanceof v.Name)
                switch (E.name) {
                  case "JPXDecode":
                    var M = new y.JpxImage();
                    M.parseImageProperties(c2.stream);
                    c2.stream.reset();
                    c2.width = M.width;
                    c2.height = M.height;
                    c2.bitsPerComponent = M.bitsPerComponent;
                    c2.numComps = M.componentsCount;
                    break;
                  case "JBIG2Decode":
                    c2.bitsPerComponent = 1;
                    c2.numComps = 1;
                }
              var R = T.get("W", "Width"), D = T.get("H", "Height");
              if (Number.isInteger(c2.width) && c2.width > 0 && Number.isInteger(c2.height) && c2.height > 0 && (c2.width !== R || c2.height !== D)) {
                (0, l.warn)("PDFImage - using the Width/Height of the image data, rather than the image dictionary.");
                R = c2.width;
                D = c2.height;
              }
              if (R < 1 || D < 1)
                throw new l.FormatError("Invalid image width: ".concat(R, " or height: ").concat(D));
              this.width = R;
              this.height = D;
              this.interpolate = T.get("I", "Interpolate");
              this.imageMask = T.get("IM", "ImageMask") || false;
              this.matte = T.get("Matte") || false;
              var j = c2.bitsPerComponent;
              if (!j && !(j = T.get("BPC", "BitsPerComponent"))) {
                if (!this.imageMask)
                  throw new l.FormatError("Bits per component missing in image: ".concat(this.imageMask));
                j = 1;
              }
              this.bpc = j;
              if (!this.imageMask) {
                var L = T.getRaw("CS") || T.getRaw("ColorSpace");
                if (!L) {
                  (0, l.info)("JPX images (which do not require color spaces)");
                  switch (c2.numComps) {
                    case 1:
                      L = v.Name.get("DeviceGray");
                      break;
                    case 3:
                      L = v.Name.get("DeviceRGB");
                      break;
                    case 4:
                      L = v.Name.get("DeviceCMYK");
                      break;
                    default:
                      throw new Error("JPX images with ".concat(c2.numComps, " color components not supported."));
                  }
                }
                this.colorSpace = d.ColorSpace.parse({ cs: L, xref: r3, resources: g2 ? o3 : null, pdfFunctionFactory: x, localColorSpaceCache: O });
                this.numComps = this.colorSpace.numComps;
              }
              this.decode = T.getArray("D", "Decode");
              this.needsDecode = false;
              if (this.decode && (this.colorSpace && !this.colorSpace.isDefaultDecode(this.decode, j) || C && !d.ColorSpace.isDefaultDecode(this.decode, 1))) {
                this.needsDecode = true;
                var N = (1 << j) - 1;
                this.decodeCoefficients = [];
                this.decodeAddends = [];
                for (var U = this.colorSpace && this.colorSpace.name === "Indexed", H = 0, $ = 0; H < this.decode.length; H += 2, ++$) {
                  var X = this.decode[H], q = this.decode[H + 1];
                  this.decodeCoefficients[$] = U ? (q - X) / N : q - X;
                  this.decodeAddends[$] = U ? X : N * X;
                }
              }
              if (k2)
                this.smask = new PDFImage({ xref: r3, res: o3, image: k2, isInline: g2, pdfFunctionFactory: x, localColorSpaceCache: O });
              else if (w)
                if (w instanceof h.BaseStream) {
                  w.dict.get("IM", "ImageMask") ? this.mask = new PDFImage({ xref: r3, res: o3, image: w, isInline: g2, isMask: true, pdfFunctionFactory: x, localColorSpaceCache: O }) : (0, l.warn)("Ignoring /Mask in image without /ImageMask.");
                } else
                  this.mask = w;
            }
            !function _createClass(t4, r3, o3) {
              r3 && _defineProperties(t4.prototype, r3);
              o3 && _defineProperties(t4, o3);
              Object.defineProperty(t4, "prototype", { writable: false });
              return t4;
            }(PDFImage, [{ key: "drawWidth", get: function get() {
              return Math.max(this.width, this.smask && this.smask.width || 0, this.mask && this.mask.width || 0);
            } }, { key: "drawHeight", get: function get() {
              return Math.max(this.height, this.smask && this.smask.height || 0, this.mask && this.mask.height || 0);
            } }, { key: "decodeBuffer", value: function decodeBuffer(t4) {
              var r3, o3, c2 = this.bpc, l2 = this.numComps, u2 = this.decodeAddends, h2 = this.decodeCoefficients, d2 = (1 << c2) - 1;
              if (c2 !== 1) {
                var g2 = 0;
                for (r3 = 0, o3 = this.width * this.height; r3 < o3; r3++)
                  for (var m2 = 0; m2 < l2; m2++) {
                    t4[g2] = decodeAndClamp(t4[g2], u2[m2], h2[m2], d2);
                    g2++;
                  }
              } else
                for (r3 = 0, o3 = t4.length; r3 < o3; r3++)
                  t4[r3] = +!t4[r3];
            } }, { key: "getComponents", value: function getComponents(t4) {
              var r3 = this.bpc;
              if (r3 === 8)
                return t4;
              var o3, c2 = this.width, l2 = this.height, u2 = this.numComps, h2 = c2 * l2 * u2, d2 = 0;
              o3 = r3 <= 8 ? new Uint8Array(h2) : r3 <= 16 ? new Uint16Array(h2) : new Uint32Array(h2);
              var g2, m2, y2 = c2 * u2, v2 = (1 << r3) - 1, k2 = 0;
              if (r3 === 1)
                for (var _, w, S, C = 0; C < l2; C++) {
                  w = k2 + (-8 & y2);
                  S = k2 + y2;
                  for (; k2 < w; ) {
                    m2 = t4[d2++];
                    o3[k2] = m2 >> 7 & 1;
                    o3[k2 + 1] = m2 >> 6 & 1;
                    o3[k2 + 2] = m2 >> 5 & 1;
                    o3[k2 + 3] = m2 >> 4 & 1;
                    o3[k2 + 4] = m2 >> 3 & 1;
                    o3[k2 + 5] = m2 >> 2 & 1;
                    o3[k2 + 6] = m2 >> 1 & 1;
                    o3[k2 + 7] = 1 & m2;
                    k2 += 8;
                  }
                  if (k2 < S) {
                    m2 = t4[d2++];
                    _ = 128;
                    for (; k2 < S; ) {
                      o3[k2++] = +!!(m2 & _);
                      _ >>= 1;
                    }
                  }
                }
              else {
                var x = 0;
                m2 = 0;
                for (k2 = 0, g2 = h2; k2 < g2; ++k2) {
                  if (k2 % y2 == 0) {
                    m2 = 0;
                    x = 0;
                  }
                  for (; x < r3; ) {
                    m2 = m2 << 8 | t4[d2++];
                    x += 8;
                  }
                  var O = x - r3, T = m2 >> O;
                  T < 0 ? T = 0 : T > v2 && (T = v2);
                  o3[k2] = T;
                  m2 &= (1 << O) - 1;
                  x = O;
                }
              }
              return o3;
            } }, { key: "fillOpacity", value: function fillOpacity(t4, r3, o3, c2, u2) {
              var h2, d2, g2, m2, y2, v2, k2 = this.smask, _ = this.mask;
              if (k2) {
                d2 = k2.width;
                g2 = k2.height;
                h2 = new Uint8ClampedArray(d2 * g2);
                k2.fillGrayBuffer(h2);
                d2 === r3 && g2 === o3 || (h2 = resizeImageMask(h2, k2.bpc, d2, g2, r3, o3));
              } else if (_)
                if (_ instanceof PDFImage) {
                  d2 = _.width;
                  g2 = _.height;
                  h2 = new Uint8ClampedArray(d2 * g2);
                  _.numComps = 1;
                  _.fillGrayBuffer(h2);
                  for (m2 = 0, y2 = d2 * g2; m2 < y2; ++m2)
                    h2[m2] = 255 - h2[m2];
                  d2 === r3 && g2 === o3 || (h2 = resizeImageMask(h2, _.bpc, d2, g2, r3, o3));
                } else {
                  if (!Array.isArray(_))
                    throw new l.FormatError("Unknown mask format.");
                  h2 = new Uint8ClampedArray(r3 * o3);
                  var w = this.numComps;
                  for (m2 = 0, y2 = r3 * o3; m2 < y2; ++m2) {
                    var S = 0, C = m2 * w;
                    for (v2 = 0; v2 < w; ++v2) {
                      var x = u2[C + v2], O = 2 * v2;
                      if (x < _[O] || x > _[O + 1]) {
                        S = 255;
                        break;
                      }
                    }
                    h2[m2] = S;
                  }
                }
              if (h2)
                for (m2 = 0, v2 = 3, y2 = r3 * c2; m2 < y2; ++m2, v2 += 4)
                  t4[v2] = h2[m2];
              else
                for (m2 = 0, v2 = 3, y2 = r3 * c2; m2 < y2; ++m2, v2 += 4)
                  t4[v2] = 255;
            } }, { key: "undoPreblend", value: function undoPreblend(t4, r3, o3) {
              var c2 = this.smask && this.smask.matte;
              if (c2)
                for (var l2 = this.colorSpace.getRgb(c2, 0), u2 = l2[0], h2 = l2[1], d2 = l2[2], g2 = r3 * o3 * 4, m2 = 0; m2 < g2; m2 += 4) {
                  var y2 = t4[m2 + 3];
                  if (y2 !== 0) {
                    var v2 = 255 / y2;
                    t4[m2] = (t4[m2] - u2) * v2 + u2;
                    t4[m2 + 1] = (t4[m2 + 1] - h2) * v2 + h2;
                    t4[m2 + 2] = (t4[m2 + 2] - d2) * v2 + d2;
                  } else {
                    t4[m2] = 255;
                    t4[m2 + 1] = 255;
                    t4[m2 + 2] = 255;
                  }
                }
            } }, { key: "createImageData", value: function createImageData() {
              var t4 = arguments.length > 0 && arguments[0] !== void 0 && arguments[0], r3 = this.drawWidth, o3 = this.drawHeight, c2 = { width: r3, height: o3, interpolate: this.interpolate, kind: 0, data: null }, u2 = this.numComps, h2 = this.width, d2 = this.height, g2 = this.bpc, y2 = h2 * u2 * g2 + 7 >> 3;
              if (!t4) {
                var v2;
                this.colorSpace.name === "DeviceGray" && g2 === 1 ? v2 = l.ImageKind.GRAYSCALE_1BPP : this.colorSpace.name !== "DeviceRGB" || g2 !== 8 || this.needsDecode || (v2 = l.ImageKind.RGB_24BPP);
                if (v2 && !this.smask && !this.mask && r3 === h2 && o3 === d2) {
                  c2.kind = v2;
                  c2.data = this.getImageBytes(d2 * y2, {});
                  if (this.needsDecode) {
                    (0, l.assert)(v2 === l.ImageKind.GRAYSCALE_1BPP, "PDFImage.createImageData: The image must be grayscale.");
                    for (var k2 = c2.data, _ = 0, w = k2.length; _ < w; _++)
                      k2[_] ^= 255;
                  }
                  return c2;
                }
                if (this.image instanceof m.JpegStream && !this.smask && !this.mask) {
                  var S = d2 * y2;
                  switch (this.colorSpace.name) {
                    case "DeviceGray":
                      S *= 3;
                    case "DeviceRGB":
                    case "DeviceCMYK":
                      c2.kind = l.ImageKind.RGB_24BPP;
                      c2.data = this.getImageBytes(S, { drawWidth: r3, drawHeight: o3, forceRGB: true });
                      return c2;
                  }
                }
              }
              var C, x, O = this.getImageBytes(d2 * y2, { internal: true }), T = 0 | O.length / y2 * o3 / d2, E = this.getComponents(O);
              if (t4 || this.smask || this.mask) {
                c2.kind = l.ImageKind.RGBA_32BPP;
                c2.data = new Uint8ClampedArray(r3 * o3 * 4);
                C = 1;
                x = true;
                this.fillOpacity(c2.data, r3, o3, T, E);
              } else {
                c2.kind = l.ImageKind.RGB_24BPP;
                c2.data = new Uint8ClampedArray(r3 * o3 * 3);
                C = 0;
                x = false;
              }
              this.needsDecode && this.decodeBuffer(E);
              this.colorSpace.fillRgb(c2.data, h2, d2, r3, o3, T, g2, E, C);
              x && this.undoPreblend(c2.data, r3, T);
              return c2;
            } }, { key: "fillGrayBuffer", value: function fillGrayBuffer(t4) {
              var r3 = this.numComps;
              if (r3 !== 1)
                throw new l.FormatError("Reading gray scale from a color image: ".concat(r3));
              var o3, c2, u2 = this.width, h2 = this.height, d2 = this.bpc, g2 = u2 * r3 * d2 + 7 >> 3, m2 = this.getImageBytes(h2 * g2, { internal: true }), y2 = this.getComponents(m2);
              if (d2 !== 1) {
                this.needsDecode && this.decodeBuffer(y2);
                c2 = u2 * h2;
                var v2 = 255 / ((1 << d2) - 1);
                for (o3 = 0; o3 < c2; ++o3)
                  t4[o3] = v2 * y2[o3];
              } else {
                c2 = u2 * h2;
                if (this.needsDecode)
                  for (o3 = 0; o3 < c2; ++o3)
                    t4[o3] = y2[o3] - 1 & 255;
                else
                  for (o3 = 0; o3 < c2; ++o3)
                    t4[o3] = 255 & -y2[o3];
              }
            } }, { key: "getImageBytes", value: function getImageBytes(t4, r3) {
              var o3 = r3.drawWidth, c2 = r3.drawHeight, u2 = r3.forceRGB, h2 = u2 !== void 0 && u2, d2 = r3.internal, m2 = d2 !== void 0 && d2;
              this.image.reset();
              this.image.drawWidth = o3 || this.width;
              this.image.drawHeight = c2 || this.height;
              this.image.forceRGB = !!h2;
              var y2 = this.image.getBytes(t4);
              if (m2 || this.image instanceof g.DecodeStream)
                return y2;
              (0, l.assert)(y2 instanceof Uint8Array, 'PDFImage.getImageBytes: Unsupported "imageBytes" type.');
              return new Uint8Array(y2);
            } }], [{ key: "buildImage", value: (t3 = function _asyncToGenerator(t4) {
              return function() {
                var r3 = this, o3 = arguments;
                return new Promise(function(c2, l2) {
                  var u2 = t4.apply(r3, o3);
                  function _next(t5) {
                    asyncGeneratorStep(u2, c2, l2, _next, _throw, "next", t5);
                  }
                  function _throw(t5) {
                    asyncGeneratorStep(u2, c2, l2, _next, _throw, "throw", t5);
                  }
                  _next(void 0);
                });
              };
            }(c.default.mark(function _callee(t4) {
              var r3, o3, u2, d2, g2, m2, y2, v2, k2, _, w, S;
              return c.default.wrap(function _callee$(c2) {
                for (; ; )
                  switch (c2.prev = c2.next) {
                    case 0:
                      r3 = t4.xref, o3 = t4.res, u2 = t4.image, d2 = t4.isInline, g2 = d2 !== void 0 && d2, m2 = t4.pdfFunctionFactory, y2 = t4.localColorSpaceCache;
                      v2 = u2;
                      k2 = null;
                      _ = null;
                      w = u2.dict.get("SMask");
                      S = u2.dict.get("Mask");
                      w ? w instanceof h.BaseStream ? k2 = w : (0, l.warn)("Unsupported /SMask format.") : S && (S instanceof h.BaseStream || Array.isArray(S) ? _ = S : (0, l.warn)("Unsupported /Mask format."));
                      return c2.abrupt("return", new PDFImage({ xref: r3, res: o3, image: v2, isInline: g2, smask: k2, mask: _, pdfFunctionFactory: m2, localColorSpaceCache: y2 }));
                    case 8:
                    case "end":
                      return c2.stop();
                  }
              }, _callee);
            })), function buildImage(r3) {
              return t3.apply(this, arguments);
            }) }, { key: "createRawMask", value: function createRawMask(t4) {
              var r3, o3, c2 = t4.imgArray, l2 = t4.width, u2 = t4.height, h2 = t4.imageIsFromDecodeStream, d2 = t4.inverseDecode, g2 = t4.interpolate, m2 = (l2 + 7 >> 3) * u2, y2 = c2.byteLength;
              if (!h2 || d2 && !(m2 === y2))
                if (d2) {
                  (r3 = new Uint8Array(m2)).set(c2);
                  r3.fill(255, y2);
                } else
                  r3 = new Uint8Array(c2);
              else
                r3 = c2;
              if (d2)
                for (o3 = 0; o3 < y2; o3++)
                  r3[o3] ^= 255;
              return { data: r3, width: l2, height: u2, interpolate: g2 };
            } }, { key: "createMask", value: function createMask(t4) {
              var r3 = t4.imgArray, o3 = t4.width, c2 = t4.height, h2 = t4.imageIsFromDecodeStream, d2 = t4.inverseDecode, g2 = t4.interpolate, m2 = o3 === 1 && c2 === 1 && d2 === (r3.length === 0 || !!(128 & r3[0]));
              if (m2)
                return { isSingleOpaquePixel: m2 };
              if (l.FeatureTest.isOffscreenCanvasSupported) {
                var y2 = new OffscreenCanvas(o3, c2), v2 = y2.getContext("2d"), k2 = v2.createImageData(o3, c2);
                (0, u.applyMaskImageData)({ src: r3, dest: k2.data, width: o3, height: c2, inverseDecode: d2 });
                v2.putImageData(k2, 0, 0);
                return { data: null, width: o3, height: c2, interpolate: g2, bitmap: y2.transferToImageBitmap() };
              }
              return this.createRawMask({ imgArray: r3, width: o3, height: c2, inverseDecode: d2, imageIsFromDecodeStream: h2, interpolate: g2 });
            } }]);
            var t3;
            return PDFImage;
          }();
          r2.PDFImage = k;
        }, (t2, r2, o2) => {
          "use strict";
          Object.defineProperty(r2, "__esModule", { value: true });
          r2.applyMaskImageData = function applyMaskImageData(t3) {
            var r3 = t3.src, o3 = t3.srcPos, l = o3 === void 0 ? 0 : o3, u = t3.dest, h = t3.destPos, d = h === void 0 ? 0 : h, g = t3.width, m = t3.height, y = t3.inverseDecode, v = y !== void 0 && y, k = c.FeatureTest.isLittleEndian ? 4278190080 : 255, _ = function _slicedToArray(t4, r4) {
              return function _arrayWithHoles(t5) {
                if (Array.isArray(t5))
                  return t5;
              }(t4) || function _iterableToArrayLimit(t5, r5) {
                var o4 = t5 == null ? null : typeof Symbol != "undefined" && t5[Symbol.iterator] || t5["@@iterator"];
                if (o4 == null)
                  return;
                var c2, l2, u2 = [], h2 = true, d2 = false;
                try {
                  for (o4 = o4.call(t5); !(h2 = (c2 = o4.next()).done); h2 = true) {
                    u2.push(c2.value);
                    if (r5 && u2.length === r5)
                      break;
                  }
                } catch (t6) {
                  d2 = true;
                  l2 = t6;
                } finally {
                  try {
                    h2 || o4.return == null || o4.return();
                  } finally {
                    if (d2)
                      throw l2;
                  }
                }
                return u2;
              }(t4, r4) || function _unsupportedIterableToArray(t5, r5) {
                if (!t5)
                  return;
                if (typeof t5 == "string")
                  return _arrayLikeToArray(t5, r5);
                var o4 = Object.prototype.toString.call(t5).slice(8, -1);
                o4 === "Object" && t5.constructor && (o4 = t5.constructor.name);
                if (o4 === "Map" || o4 === "Set")
                  return Array.from(t5);
                if (o4 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(o4))
                  return _arrayLikeToArray(t5, r5);
              }(t4, r4) || function _nonIterableRest() {
                throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
              }();
            }(v ? [0, k] : [k, 0], 2), w = _[0], S = _[1], C = g >> 3, x = 7 & g, O = r3.length;
            u = new Uint32Array(u.buffer);
            for (var T = 0; T < m; T++) {
              for (var E = l + C; l < E; l++) {
                var M = l < O ? r3[l] : 255;
                u[d++] = 128 & M ? S : w;
                u[d++] = 64 & M ? S : w;
                u[d++] = 32 & M ? S : w;
                u[d++] = 16 & M ? S : w;
                u[d++] = 8 & M ? S : w;
                u[d++] = 4 & M ? S : w;
                u[d++] = 2 & M ? S : w;
                u[d++] = 1 & M ? S : w;
              }
              if (x !== 0)
                for (var R = l < O ? r3[l++] : 255, D = 0; D < x; D++)
                  u[d++] = R & 1 << 7 - D ? S : w;
            }
            return { srcPos: l, destPos: d };
          };
          var c = o2(4);
          function _arrayLikeToArray(t3, r3) {
            (r3 == null || r3 > t3.length) && (r3 = t3.length);
            for (var o3 = 0, c2 = new Array(r3); o3 < r3; o3++)
              c2[o3] = t3[o3];
            return c2;
          }
        }, (t2, r2, o2) => {
          "use strict";
          Object.defineProperty(r2, "__esModule", { value: true });
          r2.Catalog = void 0;
          var c = function _interopRequireDefault(t3) {
            return t3 && t3.__esModule ? t3 : { default: t3 };
          }(o2(2)), l = o2(161), u = o2(4), h = o2(158), d = o2(219), g = o2(162), m = o2(220), y = o2(177), v = o2(221), k = o2(212), _ = o2(222), w = o2(224);
          function _typeof(t3) {
            return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t4) {
              return typeof t4;
            } : function(t4) {
              return t4 && typeof Symbol == "function" && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
            }, _typeof(t3);
          }
          function asyncGeneratorStep(t3, r3, o3, c2, l2, u2, h2) {
            try {
              var d2 = t3[u2](h2), g2 = d2.value;
            } catch (t4) {
              o3(t4);
              return;
            }
            d2.done ? r3(g2) : Promise.resolve(g2).then(c2, l2);
          }
          function _asyncToGenerator(t3) {
            return function() {
              var r3 = this, o3 = arguments;
              return new Promise(function(c2, l2) {
                var u2 = t3.apply(r3, o3);
                function _next(t4) {
                  asyncGeneratorStep(u2, c2, l2, _next, _throw, "next", t4);
                }
                function _throw(t4) {
                  asyncGeneratorStep(u2, c2, l2, _next, _throw, "throw", t4);
                }
                _next(void 0);
              });
            };
          }
          function _toConsumableArray(t3) {
            return function _arrayWithoutHoles(t4) {
              if (Array.isArray(t4))
                return _arrayLikeToArray(t4);
            }(t3) || function _iterableToArray(t4) {
              if (typeof Symbol != "undefined" && t4[Symbol.iterator] != null || t4["@@iterator"] != null)
                return Array.from(t4);
            }(t3) || _unsupportedIterableToArray(t3) || function _nonIterableSpread() {
              throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
            }();
          }
          function _slicedToArray(t3, r3) {
            return function _arrayWithHoles(t4) {
              if (Array.isArray(t4))
                return t4;
            }(t3) || function _iterableToArrayLimit(t4, r4) {
              var o3 = t4 == null ? null : typeof Symbol != "undefined" && t4[Symbol.iterator] || t4["@@iterator"];
              if (o3 == null)
                return;
              var c2, l2, u2 = [], h2 = true, d2 = false;
              try {
                for (o3 = o3.call(t4); !(h2 = (c2 = o3.next()).done); h2 = true) {
                  u2.push(c2.value);
                  if (r4 && u2.length === r4)
                    break;
                }
              } catch (t5) {
                d2 = true;
                l2 = t5;
              } finally {
                try {
                  h2 || o3.return == null || o3.return();
                } finally {
                  if (d2)
                    throw l2;
                }
              }
              return u2;
            }(t3, r3) || _unsupportedIterableToArray(t3, r3) || function _nonIterableRest() {
              throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
            }();
          }
          function _createForOfIteratorHelper(t3, r3) {
            var o3 = typeof Symbol != "undefined" && t3[Symbol.iterator] || t3["@@iterator"];
            if (!o3) {
              if (Array.isArray(t3) || (o3 = _unsupportedIterableToArray(t3)) || r3 && t3 && typeof t3.length == "number") {
                o3 && (t3 = o3);
                var c2 = 0, l2 = function F() {
                };
                return { s: l2, n: function n() {
                  return c2 >= t3.length ? { done: true } : { done: false, value: t3[c2++] };
                }, e: function e(t4) {
                  throw t4;
                }, f: l2 };
              }
              throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
            }
            var u2, h2 = true, d2 = false;
            return { s: function s() {
              o3 = o3.call(t3);
            }, n: function n() {
              var t4 = o3.next();
              h2 = t4.done;
              return t4;
            }, e: function e(t4) {
              d2 = true;
              u2 = t4;
            }, f: function f() {
              try {
                h2 || o3.return == null || o3.return();
              } finally {
                if (d2)
                  throw u2;
              }
            } };
          }
          function _unsupportedIterableToArray(t3, r3) {
            if (t3) {
              if (typeof t3 == "string")
                return _arrayLikeToArray(t3, r3);
              var o3 = Object.prototype.toString.call(t3).slice(8, -1);
              o3 === "Object" && t3.constructor && (o3 = t3.constructor.name);
              return o3 === "Map" || o3 === "Set" ? Array.from(t3) : o3 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(o3) ? _arrayLikeToArray(t3, r3) : void 0;
            }
          }
          function _arrayLikeToArray(t3, r3) {
            (r3 == null || r3 > t3.length) && (r3 = t3.length);
            for (var o3 = 0, c2 = new Array(r3); o3 < r3; o3++)
              c2[o3] = t3[o3];
            return c2;
          }
          function _defineProperties(t3, r3) {
            for (var o3 = 0; o3 < r3.length; o3++) {
              var c2 = r3[o3];
              c2.enumerable = c2.enumerable || false;
              c2.configurable = true;
              "value" in c2 && (c2.writable = true);
              Object.defineProperty(t3, c2.key, c2);
            }
          }
          function fetchDestination(t3) {
            t3 instanceof h.Dict && (t3 = t3.get("D"));
            return Array.isArray(t3) ? t3 : null;
          }
          var S = function() {
            function Catalog(t4, r4) {
              !function _classCallCheck(t5, r5) {
                if (!(t5 instanceof r5))
                  throw new TypeError("Cannot call a class as a function");
              }(this, Catalog);
              this.pdfManager = t4;
              this.xref = r4;
              this._catDict = r4.getCatalogObj();
              if (!(this._catDict instanceof h.Dict))
                throw new u.FormatError("Catalog object is not a dictionary.");
              this.toplevelPagesDict;
              this._actualNumPages = null;
              this.fontCache = new h.RefSetCache();
              this.builtInCMapCache = /* @__PURE__ */ new Map();
              this.standardFontDataCache = /* @__PURE__ */ new Map();
              this.globalImageCache = new k.GlobalImageCache();
              this.pageKidsCountCache = new h.RefSetCache();
              this.pageIndexCache = new h.RefSetCache();
              this.nonBlendModesSet = new h.RefSet();
            }
            !function _createClass(t4, r4, o4) {
              r4 && _defineProperties(t4.prototype, r4);
              o4 && _defineProperties(t4, o4);
              Object.defineProperty(t4, "prototype", { writable: false });
              return t4;
            }(Catalog, [{ key: "version", get: function get() {
              var t4 = this._catDict.get("Version");
              return (0, u.shadow)(this, "version", t4 instanceof h.Name ? t4.name : null);
            } }, { key: "lang", get: function get() {
              var t4 = this._catDict.get("Lang");
              return (0, u.shadow)(this, "lang", typeof t4 == "string" ? (0, u.stringToPDFString)(t4) : null);
            } }, { key: "needsRendering", get: function get() {
              var t4 = this._catDict.get("NeedsRendering");
              return (0, u.shadow)(this, "needsRendering", typeof t4 == "boolean" && t4);
            } }, { key: "collection", get: function get() {
              var t4 = null;
              try {
                var r4 = this._catDict.get("Collection");
                r4 instanceof h.Dict && r4.size > 0 && (t4 = r4);
              } catch (t5) {
                if (t5 instanceof l.MissingDataException)
                  throw t5;
                (0, u.info)("Cannot fetch Collection entry; assuming no collection is present.");
              }
              return (0, u.shadow)(this, "collection", t4);
            } }, { key: "acroForm", get: function get() {
              var t4 = null;
              try {
                var r4 = this._catDict.get("AcroForm");
                r4 instanceof h.Dict && r4.size > 0 && (t4 = r4);
              } catch (t5) {
                if (t5 instanceof l.MissingDataException)
                  throw t5;
                (0, u.info)("Cannot fetch AcroForm entry; assuming no forms are present.");
              }
              return (0, u.shadow)(this, "acroForm", t4);
            } }, { key: "acroFormRef", get: function get() {
              var t4 = this._catDict.getRaw("AcroForm");
              return (0, u.shadow)(this, "acroFormRef", t4 instanceof h.Ref ? t4 : null);
            } }, { key: "metadata", get: function get() {
              var t4 = this._catDict.getRaw("Metadata");
              if (!(t4 instanceof h.Ref))
                return (0, u.shadow)(this, "metadata", null);
              var r4 = null;
              try {
                var o4 = !(this.xref.encrypt && this.xref.encrypt.encryptMetadata), c2 = this.xref.fetch(t4, o4);
                if (c2 instanceof g.BaseStream && c2.dict instanceof h.Dict) {
                  var d2 = c2.dict.get("Type"), m2 = c2.dict.get("Subtype");
                  if ((0, h.isName)(d2, "Metadata") && (0, h.isName)(m2, "XML")) {
                    var y2 = (0, u.stringToUTF8String)(c2.getString());
                    y2 && (r4 = new _.MetadataParser(y2).serializable);
                  }
                }
              } catch (t5) {
                if (t5 instanceof l.MissingDataException)
                  throw t5;
                (0, u.info)('Skipping invalid Metadata: "'.concat(t5, '".'));
              }
              return (0, u.shadow)(this, "metadata", r4);
            } }, { key: "markInfo", get: function get() {
              var t4 = null;
              try {
                t4 = this._readMarkInfo();
              } catch (t5) {
                if (t5 instanceof l.MissingDataException)
                  throw t5;
                (0, u.warn)("Unable to read mark info.");
              }
              return (0, u.shadow)(this, "markInfo", t4);
            } }, { key: "_readMarkInfo", value: function _readMarkInfo() {
              var t4 = this._catDict.get("MarkInfo");
              if (!(t4 instanceof h.Dict))
                return null;
              var r4 = { Marked: false, UserProperties: false, Suspects: false };
              for (var o4 in r4) {
                var c2 = t4.get(o4);
                typeof c2 == "boolean" && (r4[o4] = c2);
              }
              return r4;
            } }, { key: "structTreeRoot", get: function get() {
              var t4 = null;
              try {
                t4 = this._readStructTreeRoot();
              } catch (t5) {
                if (t5 instanceof l.MissingDataException)
                  throw t5;
                (0, u.warn)("Unable read to structTreeRoot info.");
              }
              return (0, u.shadow)(this, "structTreeRoot", t4);
            } }, { key: "_readStructTreeRoot", value: function _readStructTreeRoot() {
              var t4 = this._catDict.get("StructTreeRoot");
              if (!(t4 instanceof h.Dict))
                return null;
              var r4 = new w.StructTreeRoot(t4);
              r4.init();
              return r4;
            } }, { key: "toplevelPagesDict", get: function get() {
              var t4 = this._catDict.get("Pages");
              if (!(t4 instanceof h.Dict))
                throw new u.FormatError("Invalid top-level pages dictionary.");
              return (0, u.shadow)(this, "toplevelPagesDict", t4);
            } }, { key: "documentOutline", get: function get() {
              var t4 = null;
              try {
                t4 = this._readDocumentOutline();
              } catch (t5) {
                if (t5 instanceof l.MissingDataException)
                  throw t5;
                (0, u.warn)("Unable to read document outline.");
              }
              return (0, u.shadow)(this, "documentOutline", t4);
            } }, { key: "_readDocumentOutline", value: function _readDocumentOutline() {
              var t4 = this._catDict.get("Outlines");
              if (!(t4 instanceof h.Dict))
                return null;
              if (!((t4 = t4.getRaw("First")) instanceof h.Ref))
                return null;
              var r4 = { items: [] }, o4 = [{ obj: t4, parent: r4 }], c2 = new h.RefSet();
              c2.put(t4);
              for (var l2 = this.xref, d2 = new Uint8ClampedArray(3); o4.length > 0; ) {
                var g2 = o4.shift(), m2 = l2.fetchIfRef(g2.obj);
                if (m2 !== null) {
                  if (!m2.has("Title"))
                    throw new u.FormatError("Invalid outline item encountered.");
                  var v2 = { url: null, dest: null };
                  Catalog.parseDestDictionary({ destDict: m2, resultObj: v2, docBaseUrl: this.pdfManager.docBaseUrl });
                  var k2 = m2.get("Title"), _2 = m2.get("F") || 0, w2 = m2.getArray("C"), S3 = m2.get("Count"), C = d2;
                  !Array.isArray(w2) || w2.length !== 3 || w2[0] === 0 && w2[1] === 0 && w2[2] === 0 || (C = y.ColorSpace.singletons.rgb.getRgb(w2, 0));
                  var x = { dest: v2.dest, url: v2.url, unsafeUrl: v2.unsafeUrl, newWindow: v2.newWindow, title: (0, u.stringToPDFString)(k2), color: C, count: Number.isInteger(S3) ? S3 : void 0, bold: !!(2 & _2), italic: !!(1 & _2), items: [] };
                  g2.parent.items.push(x);
                  if ((t4 = m2.getRaw("First")) instanceof h.Ref && !c2.has(t4)) {
                    o4.push({ obj: t4, parent: x });
                    c2.put(t4);
                  }
                  if ((t4 = m2.getRaw("Next")) instanceof h.Ref && !c2.has(t4)) {
                    o4.push({ obj: t4, parent: g2.parent });
                    c2.put(t4);
                  }
                }
              }
              return r4.items.length > 0 ? r4.items : null;
            } }, { key: "permissions", get: function get() {
              var t4 = null;
              try {
                t4 = this._readPermissions();
              } catch (t5) {
                if (t5 instanceof l.MissingDataException)
                  throw t5;
                (0, u.warn)("Unable to read permissions.");
              }
              return (0, u.shadow)(this, "permissions", t4);
            } }, { key: "_readPermissions", value: function _readPermissions() {
              var t4 = this.xref.trailer.get("Encrypt");
              if (!(t4 instanceof h.Dict))
                return null;
              var r4 = t4.get("P");
              if (typeof r4 != "number")
                return null;
              r4 += Math.pow(2, 32);
              var o4 = [];
              for (var c2 in u.PermissionFlag) {
                var l2 = u.PermissionFlag[c2];
                r4 & l2 && o4.push(l2);
              }
              return o4;
            } }, { key: "optionalContentConfig", get: function get() {
              var t4 = null;
              try {
                var r4 = this._catDict.get("OCProperties");
                if (!r4)
                  return (0, u.shadow)(this, "optionalContentConfig", null);
                var o4 = r4.get("D");
                if (!o4)
                  return (0, u.shadow)(this, "optionalContentConfig", null);
                var c2 = r4.get("OCGs");
                if (!Array.isArray(c2))
                  return (0, u.shadow)(this, "optionalContentConfig", null);
                var d2, g2 = [], m2 = [], y2 = _createForOfIteratorHelper(c2);
                try {
                  for (y2.s(); !(d2 = y2.n()).done; ) {
                    var v2 = d2.value;
                    if (v2 instanceof h.Ref) {
                      m2.push(v2);
                      var k2 = this.xref.fetchIfRef(v2);
                      g2.push({ id: v2.toString(), name: typeof k2.get("Name") == "string" ? (0, u.stringToPDFString)(k2.get("Name")) : null, intent: typeof k2.get("Intent") == "string" ? (0, u.stringToPDFString)(k2.get("Intent")) : null });
                    }
                  }
                } catch (t5) {
                  y2.e(t5);
                } finally {
                  y2.f();
                }
                (t4 = this._readOptionalContentConfig(o4, m2)).groups = g2;
              } catch (t5) {
                if (t5 instanceof l.MissingDataException)
                  throw t5;
                (0, u.warn)("Unable to read optional content config: ".concat(t5));
              }
              return (0, u.shadow)(this, "optionalContentConfig", t4);
            } }, { key: "_readOptionalContentConfig", value: function _readOptionalContentConfig(t4, r4) {
              function parseOnOff(t5) {
                var o5 = [];
                if (Array.isArray(t5)) {
                  var c3, l3 = _createForOfIteratorHelper(t5);
                  try {
                    for (l3.s(); !(c3 = l3.n()).done; ) {
                      var u2 = c3.value;
                      u2 instanceof h.Ref && (r4.includes(u2) && o5.push(u2.toString()));
                    }
                  } catch (t6) {
                    l3.e(t6);
                  } finally {
                    l3.f();
                  }
                }
                return o5;
              }
              function parseOrder(t5) {
                var o5 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;
                if (!Array.isArray(t5))
                  return null;
                var l3, u2 = [], d2 = _createForOfIteratorHelper(t5);
                try {
                  for (d2.s(); !(l3 = d2.n()).done; ) {
                    var g2 = l3.value;
                    if (g2 instanceof h.Ref && r4.includes(g2)) {
                      c2.put(g2);
                      u2.push(g2.toString());
                    } else {
                      var m2 = parseNestedOrder(g2, o5);
                      m2 && u2.push(m2);
                    }
                  }
                } catch (t6) {
                  d2.e(t6);
                } finally {
                  d2.f();
                }
                if (o5 > 0)
                  return u2;
                var y2, v2 = [], k2 = _createForOfIteratorHelper(r4);
                try {
                  for (k2.s(); !(y2 = k2.n()).done; ) {
                    var _2 = y2.value;
                    c2.has(_2) || v2.push(_2.toString());
                  }
                } catch (t6) {
                  k2.e(t6);
                } finally {
                  k2.f();
                }
                v2.length && u2.push({ name: null, order: v2 });
                return u2;
              }
              function parseNestedOrder(t5, r5) {
                if (++r5 > l2) {
                  (0, u.warn)("parseNestedOrder - reached MAX_NESTED_LEVELS.");
                  return null;
                }
                var c3 = o4.fetchIfRef(t5);
                if (!Array.isArray(c3))
                  return null;
                var h2 = o4.fetchIfRef(c3[0]);
                if (typeof h2 != "string")
                  return null;
                var d2 = parseOrder(c3.slice(1), r5);
                return d2 && d2.length ? { name: (0, u.stringToPDFString)(h2), order: d2 } : null;
              }
              var o4 = this.xref, c2 = new h.RefSet(), l2 = 10;
              return { name: typeof t4.get("Name") == "string" ? (0, u.stringToPDFString)(t4.get("Name")) : null, creator: typeof t4.get("Creator") == "string" ? (0, u.stringToPDFString)(t4.get("Creator")) : null, baseState: t4.get("BaseState") instanceof h.Name ? t4.get("BaseState").name : null, on: parseOnOff(t4.get("ON")), off: parseOnOff(t4.get("OFF")), order: parseOrder(t4.get("Order")), groups: null };
            } }, { key: "setActualNumPages", value: function setActualNumPages() {
              var t4 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : null;
              this._actualNumPages = t4;
            } }, { key: "hasActualNumPages", get: function get() {
              return this._actualNumPages !== null;
            } }, { key: "_pagesCount", get: function get() {
              var t4 = this.toplevelPagesDict.get("Count");
              if (!Number.isInteger(t4))
                throw new u.FormatError("Page count in top-level pages dictionary is not an integer.");
              return (0, u.shadow)(this, "_pagesCount", t4);
            } }, { key: "numPages", get: function get() {
              return this.hasActualNumPages ? this._actualNumPages : this._pagesCount;
            } }, { key: "destinations", get: function get() {
              var t4 = this._readDests(), r4 = /* @__PURE__ */ Object.create(null);
              if (t4 instanceof d.NameTree) {
                var o4, c2 = _createForOfIteratorHelper(t4.getAll());
                try {
                  for (c2.s(); !(o4 = c2.n()).done; ) {
                    var l2 = _slicedToArray(o4.value, 2), g2 = l2[0], m2 = fetchDestination(l2[1]);
                    m2 && (r4[(0, u.stringToPDFString)(g2)] = m2);
                  }
                } catch (t5) {
                  c2.e(t5);
                } finally {
                  c2.f();
                }
              } else
                t4 instanceof h.Dict && t4.forEach(function(t5, o5) {
                  var c3 = fetchDestination(o5);
                  c3 && (r4[t5] = c3);
                });
              return (0, u.shadow)(this, "destinations", r4);
            } }, { key: "getDestination", value: function getDestination(t4) {
              var r4 = this._readDests();
              if (r4 instanceof d.NameTree) {
                var o4 = fetchDestination(r4.get(t4));
                if (o4)
                  return o4;
                var c2 = this.destinations[t4];
                if (c2) {
                  (0, u.warn)('Found "'.concat(t4, '" at an incorrect position in the NameTree.'));
                  return c2;
                }
              } else if (r4 instanceof h.Dict) {
                var l2 = fetchDestination(r4.get(t4));
                if (l2)
                  return l2;
              }
              return null;
            } }, { key: "_readDests", value: function _readDests() {
              var t4 = this._catDict.get("Names");
              return t4 && t4.has("Dests") ? new d.NameTree(t4.getRaw("Dests"), this.xref) : this._catDict.has("Dests") ? this._catDict.get("Dests") : void 0;
            } }, { key: "pageLabels", get: function get() {
              var t4 = null;
              try {
                t4 = this._readPageLabels();
              } catch (t5) {
                if (t5 instanceof l.MissingDataException)
                  throw t5;
                (0, u.warn)("Unable to read page labels.");
              }
              return (0, u.shadow)(this, "pageLabels", t4);
            } }, { key: "_readPageLabels", value: function _readPageLabels() {
              var t4 = this._catDict.getRaw("PageLabels");
              if (!t4)
                return null;
              for (var r4 = new Array(this.numPages), o4 = null, c2 = "", g2 = new d.NumberTree(t4, this.xref).getAll(), m2 = "", y2 = 1, v2 = 0, k2 = this.numPages; v2 < k2; v2++) {
                var _2 = g2.get(v2);
                if (_2 !== void 0) {
                  if (!(_2 instanceof h.Dict))
                    throw new u.FormatError("PageLabel is not a dictionary.");
                  if (_2.has("Type") && !(0, h.isName)(_2.get("Type"), "PageLabel"))
                    throw new u.FormatError("Invalid type in PageLabel dictionary.");
                  if (_2.has("S")) {
                    var w2 = _2.get("S");
                    if (!(w2 instanceof h.Name))
                      throw new u.FormatError("Invalid style in PageLabel dictionary.");
                    o4 = w2.name;
                  } else
                    o4 = null;
                  if (_2.has("P")) {
                    var S3 = _2.get("P");
                    if (typeof S3 != "string")
                      throw new u.FormatError("Invalid prefix in PageLabel dictionary.");
                    c2 = (0, u.stringToPDFString)(S3);
                  } else
                    c2 = "";
                  if (_2.has("St")) {
                    var C = _2.get("St");
                    if (!(Number.isInteger(C) && C >= 1))
                      throw new u.FormatError("Invalid start in PageLabel dictionary.");
                    y2 = C;
                  } else
                    y2 = 1;
                }
                switch (o4) {
                  case "D":
                    m2 = y2;
                    break;
                  case "R":
                  case "r":
                    m2 = (0, l.toRomanNumerals)(y2, o4 === "r");
                    break;
                  case "A":
                  case "a":
                    var x = o4 === "a" ? 97 : 65, O = y2 - 1;
                    m2 = String.fromCharCode(x + O % 26).repeat(Math.floor(O / 26) + 1);
                    break;
                  default:
                    if (o4)
                      throw new u.FormatError('Invalid style "'.concat(o4, '" in PageLabel dictionary.'));
                    m2 = "";
                }
                r4[v2] = c2 + m2;
                y2++;
              }
              return r4;
            } }, { key: "pageLayout", get: function get() {
              var t4 = this._catDict.get("PageLayout"), r4 = "";
              if (t4 instanceof h.Name)
                switch (t4.name) {
                  case "SinglePage":
                  case "OneColumn":
                  case "TwoColumnLeft":
                  case "TwoColumnRight":
                  case "TwoPageLeft":
                  case "TwoPageRight":
                    r4 = t4.name;
                }
              return (0, u.shadow)(this, "pageLayout", r4);
            } }, { key: "pageMode", get: function get() {
              var t4 = this._catDict.get("PageMode"), r4 = "UseNone";
              if (t4 instanceof h.Name)
                switch (t4.name) {
                  case "UseNone":
                  case "UseOutlines":
                  case "UseThumbs":
                  case "FullScreen":
                  case "UseOC":
                  case "UseAttachments":
                    r4 = t4.name;
                }
              return (0, u.shadow)(this, "pageMode", r4);
            } }, { key: "viewerPreferences", get: function get() {
              var t4 = this, r4 = this._catDict.get("ViewerPreferences");
              if (!(r4 instanceof h.Dict))
                return (0, u.shadow)(this, "viewerPreferences", null);
              var o4, c2 = null, l2 = _createForOfIteratorHelper(r4.getKeys());
              try {
                for (l2.s(); !(o4 = l2.n()).done; ) {
                  var d2 = o4.value, g2 = r4.get(d2), m2 = void 0;
                  switch (d2) {
                    case "HideToolbar":
                    case "HideMenubar":
                    case "HideWindowUI":
                    case "FitWindow":
                    case "CenterWindow":
                    case "DisplayDocTitle":
                    case "PickTrayByPDFSize":
                      typeof g2 == "boolean" && (m2 = g2);
                      break;
                    case "NonFullScreenPageMode":
                      if (g2 instanceof h.Name)
                        switch (g2.name) {
                          case "UseNone":
                          case "UseOutlines":
                          case "UseThumbs":
                          case "UseOC":
                            m2 = g2.name;
                            break;
                          default:
                            m2 = "UseNone";
                        }
                      break;
                    case "Direction":
                      if (g2 instanceof h.Name)
                        switch (g2.name) {
                          case "L2R":
                          case "R2L":
                            m2 = g2.name;
                            break;
                          default:
                            m2 = "L2R";
                        }
                      break;
                    case "ViewArea":
                    case "ViewClip":
                    case "PrintArea":
                    case "PrintClip":
                      if (g2 instanceof h.Name)
                        switch (g2.name) {
                          case "MediaBox":
                          case "CropBox":
                          case "BleedBox":
                          case "TrimBox":
                          case "ArtBox":
                            m2 = g2.name;
                            break;
                          default:
                            m2 = "CropBox";
                        }
                      break;
                    case "PrintScaling":
                      if (g2 instanceof h.Name)
                        switch (g2.name) {
                          case "None":
                          case "AppDefault":
                            m2 = g2.name;
                            break;
                          default:
                            m2 = "AppDefault";
                        }
                      break;
                    case "Duplex":
                      if (g2 instanceof h.Name)
                        switch (g2.name) {
                          case "Simplex":
                          case "DuplexFlipShortEdge":
                          case "DuplexFlipLongEdge":
                            m2 = g2.name;
                            break;
                          default:
                            m2 = "None";
                        }
                      break;
                    case "PrintPageRange":
                      if (Array.isArray(g2) && g2.length % 2 == 0) {
                        g2.every(function(r5, o5, c3) {
                          return Number.isInteger(r5) && r5 > 0 && (o5 === 0 || r5 >= c3[o5 - 1]) && r5 <= t4.numPages;
                        }) && (m2 = g2);
                      }
                      break;
                    case "NumCopies":
                      Number.isInteger(g2) && g2 > 0 && (m2 = g2);
                      break;
                    default:
                      (0, u.warn)("Ignoring non-standard key in ViewerPreferences: ".concat(d2, "."));
                      continue;
                  }
                  if (m2 !== void 0) {
                    c2 || (c2 = /* @__PURE__ */ Object.create(null));
                    c2[d2] = m2;
                  } else
                    (0, u.warn)('Bad value, for key "'.concat(d2, '", in ViewerPreferences: ').concat(g2, "."));
                }
              } catch (t5) {
                l2.e(t5);
              } finally {
                l2.f();
              }
              return (0, u.shadow)(this, "viewerPreferences", c2);
            } }, { key: "openAction", get: function get() {
              var t4 = this._catDict.get("OpenAction"), r4 = /* @__PURE__ */ Object.create(null);
              if (t4 instanceof h.Dict) {
                var o4 = new h.Dict(this.xref);
                o4.set("A", t4);
                var c2 = { url: null, dest: null, action: null };
                Catalog.parseDestDictionary({ destDict: o4, resultObj: c2 });
                Array.isArray(c2.dest) ? r4.dest = c2.dest : c2.action && (r4.action = c2.action);
              } else
                Array.isArray(t4) && (r4.dest = t4);
              return (0, u.shadow)(this, "openAction", (0, u.objectSize)(r4) > 0 ? r4 : null);
            } }, { key: "attachments", get: function get() {
              var t4 = this._catDict.get("Names"), r4 = null;
              if (t4 instanceof h.Dict && t4.has("EmbeddedFiles")) {
                var o4, c2 = _createForOfIteratorHelper(new d.NameTree(t4.getRaw("EmbeddedFiles"), this.xref).getAll());
                try {
                  for (c2.s(); !(o4 = c2.n()).done; ) {
                    var l2 = _slicedToArray(o4.value, 2), g2 = l2[0], m2 = l2[1], y2 = new v.FileSpec(m2, this.xref);
                    r4 || (r4 = /* @__PURE__ */ Object.create(null));
                    r4[(0, u.stringToPDFString)(g2)] = y2.serializable;
                  }
                } catch (t5) {
                  c2.e(t5);
                } finally {
                  c2.f();
                }
              }
              return (0, u.shadow)(this, "attachments", r4);
            } }, { key: "xfaImages", get: function get() {
              var t4 = this._catDict.get("Names"), r4 = null;
              if (t4 instanceof h.Dict && t4.has("XFAImages")) {
                var o4, c2 = _createForOfIteratorHelper(new d.NameTree(t4.getRaw("XFAImages"), this.xref).getAll());
                try {
                  for (c2.s(); !(o4 = c2.n()).done; ) {
                    var l2 = _slicedToArray(o4.value, 2), g2 = l2[0], m2 = l2[1];
                    r4 || (r4 = new h.Dict(this.xref));
                    r4.set((0, u.stringToPDFString)(g2), m2);
                  }
                } catch (t5) {
                  c2.e(t5);
                } finally {
                  c2.f();
                }
              }
              return (0, u.shadow)(this, "xfaImages", r4);
            } }, { key: "_collectJavaScript", value: function _collectJavaScript() {
              var t4 = this._catDict.get("Names"), r4 = null;
              function appendIfJavaScriptDict(t5, o5) {
                if (o5 instanceof h.Dict && (0, h.isName)(o5.get("S"), "JavaScript")) {
                  var c3 = o5.get("JS");
                  if (c3 instanceof g.BaseStream)
                    c3 = c3.getString();
                  else if (typeof c3 != "string")
                    return;
                  r4 === null && (r4 = /* @__PURE__ */ new Map());
                  r4.set(t5, (0, u.stringToPDFString)(c3));
                }
              }
              if (t4 instanceof h.Dict && t4.has("JavaScript")) {
                var o4, c2 = _createForOfIteratorHelper(new d.NameTree(t4.getRaw("JavaScript"), this.xref).getAll());
                try {
                  for (c2.s(); !(o4 = c2.n()).done; ) {
                    var l2 = _slicedToArray(o4.value, 2), m2 = l2[0], y2 = l2[1];
                    appendIfJavaScriptDict((0, u.stringToPDFString)(m2), y2);
                  }
                } catch (t5) {
                  c2.e(t5);
                } finally {
                  c2.f();
                }
              }
              var v2 = this._catDict.get("OpenAction");
              v2 && appendIfJavaScriptDict("OpenAction", v2);
              return r4;
            } }, { key: "javaScript", get: function get() {
              var t4 = this._collectJavaScript();
              return (0, u.shadow)(this, "javaScript", t4 ? _toConsumableArray(t4.values()) : null);
            } }, { key: "jsActions", get: function get() {
              var t4 = this._collectJavaScript(), r4 = (0, l.collectActions)(this.xref, this._catDict, u.DocumentActionEventType);
              if (t4) {
                r4 || (r4 = /* @__PURE__ */ Object.create(null));
                var o4, c2 = _createForOfIteratorHelper(t4);
                try {
                  for (c2.s(); !(o4 = c2.n()).done; ) {
                    var h2 = _slicedToArray(o4.value, 2), d2 = h2[0], g2 = h2[1];
                    d2 in r4 ? r4[d2].push(g2) : r4[d2] = [g2];
                  }
                } catch (t5) {
                  c2.e(t5);
                } finally {
                  c2.f();
                }
              }
              return (0, u.shadow)(this, "jsActions", r4);
            } }, { key: "fontFallback", value: (S2 = _asyncToGenerator(c.default.mark(function _callee(t4, r4) {
              var o4, l2, u2, h2;
              return c.default.wrap(function _callee$(c2) {
                for (; ; )
                  switch (c2.prev = c2.next) {
                    case 0:
                      c2.next = 2;
                      return Promise.all(this.fontCache);
                    case 2:
                      o4 = c2.sent;
                      l2 = _createForOfIteratorHelper(o4);
                      c2.prev = 4;
                      l2.s();
                    case 6:
                      if ((u2 = l2.n()).done) {
                        c2.next = 13;
                        break;
                      }
                      if ((h2 = u2.value).loadedName !== t4) {
                        c2.next = 11;
                        break;
                      }
                      h2.fallback(r4);
                      return c2.abrupt("return");
                    case 11:
                      c2.next = 6;
                      break;
                    case 13:
                      c2.next = 18;
                      break;
                    case 15:
                      c2.prev = 15;
                      c2.t0 = c2.catch(4);
                      l2.e(c2.t0);
                    case 18:
                      c2.prev = 18;
                      l2.f();
                      return c2.finish(18);
                    case 21:
                    case "end":
                      return c2.stop();
                  }
              }, _callee, this, [[4, 15, 18, 21]]);
            })), function fontFallback(t4, r4) {
              return S2.apply(this, arguments);
            }) }, { key: "cleanup", value: (o3 = _asyncToGenerator(c.default.mark(function _callee2() {
              var t4, r4, o4, l2, u2 = arguments;
              return c.default.wrap(function _callee2$(c2) {
                for (; ; )
                  switch (c2.prev = c2.next) {
                    case 0:
                      t4 = u2.length > 0 && u2[0] !== void 0 && u2[0];
                      (0, m.clearGlobalCaches)();
                      this.globalImageCache.clear(t4);
                      this.pageKidsCountCache.clear();
                      this.pageIndexCache.clear();
                      this.nonBlendModesSet.clear();
                      c2.next = 8;
                      return Promise.all(this.fontCache);
                    case 8:
                      r4 = c2.sent;
                      o4 = _createForOfIteratorHelper(r4);
                      try {
                        for (o4.s(); !(l2 = o4.n()).done; )
                          delete l2.value.dict.cacheKey;
                      } catch (t5) {
                        o4.e(t5);
                      } finally {
                        o4.f();
                      }
                      this.fontCache.clear();
                      this.builtInCMapCache.clear();
                      this.standardFontDataCache.clear();
                    case 14:
                    case "end":
                      return c2.stop();
                  }
              }, _callee2, this);
            })), function cleanup() {
              return o3.apply(this, arguments);
            }) }, { key: "getPageDict", value: (r3 = _asyncToGenerator(c.default.mark(function _callee3(t4) {
              var r4, o4, l2, d2, g2, m2, y2, v2, k2, _2, w2, S3, C, x, O, T;
              return c.default.wrap(function _callee3$(c2) {
                for (; ; )
                  switch (c2.prev = c2.next) {
                    case 0:
                      r4 = [this.toplevelPagesDict];
                      o4 = new h.RefSet();
                      (l2 = this._catDict.getRaw("Pages")) instanceof h.Ref && o4.put(l2);
                      d2 = this.xref, g2 = this.pageKidsCountCache, m2 = this.pageIndexCache;
                      y2 = 0;
                    case 6:
                      if (!r4.length) {
                        c2.next = 67;
                        break;
                      }
                      if (!((v2 = r4.pop()) instanceof h.Ref)) {
                        c2.next = 34;
                        break;
                      }
                      if (!((k2 = g2.get(v2)) >= 0 && y2 + k2 <= t4)) {
                        c2.next = 13;
                        break;
                      }
                      y2 += k2;
                      return c2.abrupt("continue", 6);
                    case 13:
                      if (!o4.has(v2)) {
                        c2.next = 15;
                        break;
                      }
                      throw new u.FormatError("Pages tree contains circular reference.");
                    case 15:
                      o4.put(v2);
                      c2.next = 18;
                      return d2.fetchAsync(v2);
                    case 18:
                      if (!((_2 = c2.sent) instanceof h.Dict)) {
                        c2.next = 32;
                        break;
                      }
                      if (!((w2 = _2.getRaw("Type")) instanceof h.Ref)) {
                        c2.next = 25;
                        break;
                      }
                      c2.next = 24;
                      return d2.fetchAsync(w2);
                    case 24:
                      w2 = c2.sent;
                    case 25:
                      if (!(0, h.isName)(w2, "Page") && _2.has("Kids")) {
                        c2.next = 32;
                        break;
                      }
                      g2.has(v2) || g2.put(v2, 1);
                      m2.has(v2) || m2.put(v2, y2);
                      if (y2 !== t4) {
                        c2.next = 30;
                        break;
                      }
                      return c2.abrupt("return", [_2, v2]);
                    case 30:
                      y2++;
                      return c2.abrupt("continue", 6);
                    case 32:
                      r4.push(_2);
                      return c2.abrupt("continue", 6);
                    case 34:
                      if (v2 instanceof h.Dict) {
                        c2.next = 36;
                        break;
                      }
                      throw new u.FormatError("Page dictionary kid reference points to wrong type of object.");
                    case 36:
                      S3 = v2.objId;
                      if (!((C = v2.getRaw("Count")) instanceof h.Ref)) {
                        c2.next = 42;
                        break;
                      }
                      c2.next = 41;
                      return d2.fetchAsync(C);
                    case 41:
                      C = c2.sent;
                    case 42:
                      if (!(Number.isInteger(C) && C >= 0)) {
                        c2.next = 47;
                        break;
                      }
                      S3 && !g2.has(S3) && g2.put(S3, C);
                      if (!(y2 + C <= t4)) {
                        c2.next = 47;
                        break;
                      }
                      y2 += C;
                      return c2.abrupt("continue", 6);
                    case 47:
                      if (!((x = v2.getRaw("Kids")) instanceof h.Ref)) {
                        c2.next = 52;
                        break;
                      }
                      c2.next = 51;
                      return d2.fetchAsync(x);
                    case 51:
                      x = c2.sent;
                    case 52:
                      if (Array.isArray(x)) {
                        c2.next = 64;
                        break;
                      }
                      if (!((O = v2.getRaw("Type")) instanceof h.Ref)) {
                        c2.next = 58;
                        break;
                      }
                      c2.next = 57;
                      return d2.fetchAsync(O);
                    case 57:
                      O = c2.sent;
                    case 58:
                      if (!(0, h.isName)(O, "Page") && v2.has("Kids")) {
                        c2.next = 63;
                        break;
                      }
                      if (y2 !== t4) {
                        c2.next = 61;
                        break;
                      }
                      return c2.abrupt("return", [v2, null]);
                    case 61:
                      y2++;
                      return c2.abrupt("continue", 6);
                    case 63:
                      throw new u.FormatError("Page dictionary kids object is not an array.");
                    case 64:
                      for (T = x.length - 1; T >= 0; T--)
                        r4.push(x[T]);
                      c2.next = 6;
                      break;
                    case 67:
                      throw new Error("Page index ".concat(t4, " not found."));
                    case 68:
                    case "end":
                      return c2.stop();
                  }
              }, _callee3, this);
            })), function getPageDict(t4) {
              return r3.apply(this, arguments);
            }) }, { key: "getAllPageDicts", value: (t3 = _asyncToGenerator(c.default.mark(function _callee4() {
              var t4, r4, o4, d2, g2, m2, y2, v2, k2, _2, w2, S3, C, x, O, T, E, M = arguments;
              return c.default.wrap(function _callee4$(c2) {
                for (; ; )
                  switch (c2.prev = c2.next) {
                    case 0:
                      _2 = function _addPageError(r5) {
                        if (r5 instanceof l.XRefEntryException && !t4)
                          throw r5;
                        g2.set(v2++, [r5, null]);
                      };
                      k2 = function _addPageDict(t5, r5) {
                        r5 && !y2.has(r5) && y2.put(r5, v2);
                        g2.set(v2++, [t5, r5]);
                      };
                      t4 = M.length > 0 && M[0] !== void 0 && M[0];
                      r4 = [{ currentNode: this.toplevelPagesDict, posInKids: 0 }];
                      o4 = new h.RefSet();
                      (d2 = this._catDict.getRaw("Pages")) instanceof h.Ref && o4.put(d2);
                      g2 = /* @__PURE__ */ new Map(), m2 = this.xref, y2 = this.pageIndexCache;
                      v2 = 0;
                    case 9:
                      if (!(r4.length > 0)) {
                        c2.next = 69;
                        break;
                      }
                      w2 = r4[r4.length - 1];
                      S3 = w2.currentNode, C = w2.posInKids;
                      if (!((x = S3.getRaw("Kids")) instanceof h.Ref)) {
                        c2.next = 24;
                        break;
                      }
                      c2.prev = 14;
                      c2.next = 17;
                      return m2.fetchAsync(x);
                    case 17:
                      x = c2.sent;
                      c2.next = 24;
                      break;
                    case 20:
                      c2.prev = 20;
                      c2.t0 = c2.catch(14);
                      _2(c2.t0);
                      return c2.abrupt("break", 69);
                    case 24:
                      if (Array.isArray(x)) {
                        c2.next = 27;
                        break;
                      }
                      _2(new u.FormatError("Page dictionary kids object is not an array."));
                      return c2.abrupt("break", 69);
                    case 27:
                      if (!(C >= x.length)) {
                        c2.next = 30;
                        break;
                      }
                      r4.pop();
                      return c2.abrupt("continue", 9);
                    case 30:
                      O = x[C];
                      T = void 0;
                      if (!(O instanceof h.Ref)) {
                        c2.next = 49;
                        break;
                      }
                      if (!o4.has(O)) {
                        c2.next = 36;
                        break;
                      }
                      _2(new u.FormatError("Pages tree contains circular reference."));
                      return c2.abrupt("break", 69);
                    case 36:
                      o4.put(O);
                      c2.prev = 37;
                      c2.next = 40;
                      return m2.fetchAsync(O);
                    case 40:
                      T = c2.sent;
                      c2.next = 47;
                      break;
                    case 43:
                      c2.prev = 43;
                      c2.t1 = c2.catch(37);
                      _2(c2.t1);
                      return c2.abrupt("break", 69);
                    case 47:
                      c2.next = 50;
                      break;
                    case 49:
                      T = O;
                    case 50:
                      if (T instanceof h.Dict) {
                        c2.next = 53;
                        break;
                      }
                      _2(new u.FormatError("Page dictionary kid reference points to wrong type of object."));
                      return c2.abrupt("break", 69);
                    case 53:
                      if (!((E = T.getRaw("Type")) instanceof h.Ref)) {
                        c2.next = 65;
                        break;
                      }
                      c2.prev = 55;
                      c2.next = 58;
                      return m2.fetchAsync(E);
                    case 58:
                      E = c2.sent;
                      c2.next = 65;
                      break;
                    case 61:
                      c2.prev = 61;
                      c2.t2 = c2.catch(55);
                      _2(c2.t2);
                      return c2.abrupt("break", 69);
                    case 65:
                      (0, h.isName)(E, "Page") || !T.has("Kids") ? k2(T, O instanceof h.Ref ? O : null) : r4.push({ currentNode: T, posInKids: 0 });
                      w2.posInKids++;
                      c2.next = 9;
                      break;
                    case 69:
                      return c2.abrupt("return", g2);
                    case 70:
                    case "end":
                      return c2.stop();
                  }
              }, _callee4, this, [[14, 20], [37, 43], [55, 61]]);
            })), function getAllPageDicts() {
              return t3.apply(this, arguments);
            }) }, { key: "getPageIndex", value: function getPageIndex(t4) {
              var r4 = this, o4 = this.pageIndexCache.get(t4);
              if (o4 !== void 0)
                return Promise.resolve(o4);
              var c2 = this.xref;
              var l2 = 0;
              return function next(o5) {
                return function pagesBeforeRef(r5) {
                  var o6, l3 = 0;
                  return c2.fetchAsync(r5).then(function(c3) {
                    if ((0, h.isRefsEqual)(r5, t4) && !(0, h.isDict)(c3, "Page") && !(c3 instanceof h.Dict && !c3.has("Type") && c3.has("Contents")))
                      throw new u.FormatError("The reference does not point to a /Page dictionary.");
                    if (!c3)
                      return null;
                    if (!(c3 instanceof h.Dict))
                      throw new u.FormatError("Node must be a dictionary.");
                    o6 = c3.getRaw("Parent");
                    return c3.getAsync("Parent");
                  }).then(function(t5) {
                    if (!t5)
                      return null;
                    if (!(t5 instanceof h.Dict))
                      throw new u.FormatError("Parent must be a dictionary.");
                    return t5.getAsync("Kids");
                  }).then(function(t5) {
                    if (!t5)
                      return null;
                    for (var d2 = [], g2 = false, m2 = 0, y2 = t5.length; m2 < y2; m2++) {
                      var v2 = t5[m2];
                      if (!(v2 instanceof h.Ref))
                        throw new u.FormatError("Kid must be a reference.");
                      if ((0, h.isRefsEqual)(v2, r5)) {
                        g2 = true;
                        break;
                      }
                      d2.push(c2.fetchAsync(v2).then(function(t6) {
                        if (!(t6 instanceof h.Dict))
                          throw new u.FormatError("Kid node must be a dictionary.");
                        t6.has("Count") ? l3 += t6.get("Count") : l3++;
                      }));
                    }
                    if (!g2)
                      throw new u.FormatError("Kid reference not found in parent's kids.");
                    return Promise.all(d2).then(function() {
                      return [l3, o6];
                    });
                  });
                }(o5).then(function(o6) {
                  if (!o6) {
                    r4.pageIndexCache.put(t4, l2);
                    return l2;
                  }
                  var c3 = _slicedToArray(o6, 2), u2 = c3[0], h2 = c3[1];
                  l2 += u2;
                  return next(h2);
                });
              }(t4);
            } }, { key: "baseUrl", get: function get() {
              var t4 = this._catDict.get("URI");
              if (t4 instanceof h.Dict) {
                var r4 = t4.get("Base");
                if (typeof r4 == "string") {
                  var o4 = (0, u.createValidAbsoluteUrl)(r4, null, { tryConvertEncoding: true });
                  if (o4)
                    return (0, u.shadow)(this, "baseUrl", o4.href);
                }
              }
              return (0, u.shadow)(this, "baseUrl", null);
            } }], [{ key: "parseDestDictionary", value: function parseDestDictionary(t4) {
              var r4 = t4.destDict;
              if (r4 instanceof h.Dict) {
                var o4 = t4.resultObj;
                if (_typeof(o4) === "object") {
                  var c2, d2, m2 = t4.docBaseUrl || null, y2 = r4.get("A");
                  y2 instanceof h.Dict || (r4.has("Dest") ? y2 = r4.get("Dest") : (y2 = r4.get("AA")) instanceof h.Dict && (y2.has("D") ? y2 = y2.get("D") : y2.has("U") && (y2 = y2.get("U"))));
                  if (y2 instanceof h.Dict) {
                    var v2 = y2.get("S");
                    if (!(v2 instanceof h.Name)) {
                      (0, u.warn)("parseDestDictionary: Invalid type in Action dictionary.");
                      return;
                    }
                    var k2 = v2.name;
                    switch (k2) {
                      case "ResetForm":
                        var _2, w2 = y2.get("Flags"), S3 = (1 & (typeof w2 == "number" ? w2 : 0)) == 0, C = [], x = [], O = _createForOfIteratorHelper(y2.get("Fields") || []);
                        try {
                          for (O.s(); !(_2 = O.n()).done; ) {
                            var T = _2.value;
                            T instanceof h.Ref ? x.push(T.toString()) : typeof T == "string" && C.push((0, u.stringToPDFString)(T));
                          }
                        } catch (t5) {
                          O.e(t5);
                        } finally {
                          O.f();
                        }
                        o4.resetForm = { fields: C, refs: x, include: S3 };
                        break;
                      case "URI":
                        (c2 = y2.get("URI")) instanceof h.Name && (c2 = "/" + c2.name);
                        break;
                      case "GoTo":
                        d2 = y2.get("D");
                        break;
                      case "Launch":
                      case "GoToR":
                        var E = y2.get("F");
                        E instanceof h.Dict ? c2 = E.get("F") || null : typeof E == "string" && (c2 = E);
                        var M = y2.get("D");
                        if (M) {
                          M instanceof h.Name && (M = M.name);
                          if (typeof c2 == "string") {
                            var R = c2.split("#")[0];
                            typeof M == "string" ? c2 = R + "#" + M : Array.isArray(M) && (c2 = R + "#" + JSON.stringify(M));
                          }
                        }
                        var D = y2.get("NewWindow");
                        typeof D == "boolean" && (o4.newWindow = D);
                        break;
                      case "Named":
                        var j = y2.get("N");
                        j instanceof h.Name && (o4.action = j.name);
                        break;
                      case "JavaScript":
                        var L, N = y2.get("JS");
                        N instanceof g.BaseStream ? L = N.getString() : typeof N == "string" && (L = N);
                        var U = L && (0, l.recoverJsURL)((0, u.stringToPDFString)(L));
                        if (U) {
                          c2 = U.url;
                          o4.newWindow = U.newWindow;
                          break;
                        }
                      default:
                        if (k2 === "JavaScript" || k2 === "SubmitForm")
                          break;
                        (0, u.warn)('parseDestDictionary - unsupported action: "'.concat(k2, '".'));
                    }
                  } else
                    r4.has("Dest") && (d2 = r4.get("Dest"));
                  if (typeof c2 == "string") {
                    var H = (0, u.createValidAbsoluteUrl)(c2, m2, { addDefaultProtocol: true, tryConvertEncoding: true });
                    H && (o4.url = H.href);
                    o4.unsafeUrl = c2;
                  }
                  if (d2) {
                    d2 instanceof h.Name && (d2 = d2.name);
                    typeof d2 == "string" ? o4.dest = (0, u.stringToPDFString)(d2) : Array.isArray(d2) && (o4.dest = d2);
                  }
                } else
                  (0, u.warn)("parseDestDictionary: `resultObj` must be an object.");
              } else
                (0, u.warn)("parseDestDictionary: `destDict` must be a dictionary.");
            } }]);
            var t3, r3, o3, S2;
            return Catalog;
          }();
          r2.Catalog = S;
        }, (t2, r2, o2) => {
          "use strict";
          function _typeof(t3) {
            return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t4) {
              return typeof t4;
            } : function(t4) {
              return t4 && typeof Symbol == "function" && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
            }, _typeof(t3);
          }
          Object.defineProperty(r2, "__esModule", { value: true });
          r2.NumberTree = r2.NameTree = void 0;
          var c = o2(158), l = o2(4);
          function _inherits(t3, r3) {
            if (typeof r3 != "function" && r3 !== null)
              throw new TypeError("Super expression must either be null or a function");
            t3.prototype = Object.create(r3 && r3.prototype, { constructor: { value: t3, writable: true, configurable: true } });
            Object.defineProperty(t3, "prototype", { writable: false });
            r3 && _setPrototypeOf(t3, r3);
          }
          function _setPrototypeOf(t3, r3) {
            _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(t4, r4) {
              t4.__proto__ = r4;
              return t4;
            };
            return _setPrototypeOf(t3, r3);
          }
          function _createSuper(t3) {
            var r3 = function _isNativeReflectConstruct() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                }));
                return true;
              } catch (t4) {
                return false;
              }
            }();
            return function _createSuperInternal() {
              var o3, c2 = _getPrototypeOf(t3);
              if (r3) {
                var l2 = _getPrototypeOf(this).constructor;
                o3 = Reflect.construct(c2, arguments, l2);
              } else
                o3 = c2.apply(this, arguments);
              return _possibleConstructorReturn(this, o3);
            };
          }
          function _possibleConstructorReturn(t3, r3) {
            if (r3 && (_typeof(r3) === "object" || typeof r3 == "function"))
              return r3;
            if (r3 !== void 0)
              throw new TypeError("Derived constructors may only return object or undefined");
            return function _assertThisInitialized(t4) {
              if (t4 === void 0)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return t4;
            }(t3);
          }
          function _getPrototypeOf(t3) {
            _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(t4) {
              return t4.__proto__ || Object.getPrototypeOf(t4);
            };
            return _getPrototypeOf(t3);
          }
          function _createForOfIteratorHelper(t3, r3) {
            var o3 = typeof Symbol != "undefined" && t3[Symbol.iterator] || t3["@@iterator"];
            if (!o3) {
              if (Array.isArray(t3) || (o3 = function _unsupportedIterableToArray(t4, r4) {
                if (!t4)
                  return;
                if (typeof t4 == "string")
                  return _arrayLikeToArray(t4, r4);
                var o4 = Object.prototype.toString.call(t4).slice(8, -1);
                o4 === "Object" && t4.constructor && (o4 = t4.constructor.name);
                if (o4 === "Map" || o4 === "Set")
                  return Array.from(t4);
                if (o4 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(o4))
                  return _arrayLikeToArray(t4, r4);
              }(t3)) || r3 && t3 && typeof t3.length == "number") {
                o3 && (t3 = o3);
                var c2 = 0, l2 = function F() {
                };
                return { s: l2, n: function n() {
                  return c2 >= t3.length ? { done: true } : { done: false, value: t3[c2++] };
                }, e: function e(t4) {
                  throw t4;
                }, f: l2 };
              }
              throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
            }
            var u2, h2 = true, d2 = false;
            return { s: function s() {
              o3 = o3.call(t3);
            }, n: function n() {
              var t4 = o3.next();
              h2 = t4.done;
              return t4;
            }, e: function e(t4) {
              d2 = true;
              u2 = t4;
            }, f: function f() {
              try {
                h2 || o3.return == null || o3.return();
              } finally {
                if (d2)
                  throw u2;
              }
            } };
          }
          function _arrayLikeToArray(t3, r3) {
            (r3 == null || r3 > t3.length) && (r3 = t3.length);
            for (var o3 = 0, c2 = new Array(r3); o3 < r3; o3++)
              c2[o3] = t3[o3];
            return c2;
          }
          function _classCallCheck(t3, r3) {
            if (!(t3 instanceof r3))
              throw new TypeError("Cannot call a class as a function");
          }
          function _defineProperties(t3, r3) {
            for (var o3 = 0; o3 < r3.length; o3++) {
              var c2 = r3[o3];
              c2.enumerable = c2.enumerable || false;
              c2.configurable = true;
              "value" in c2 && (c2.writable = true);
              Object.defineProperty(t3, c2.key, c2);
            }
          }
          function _createClass(t3, r3, o3) {
            r3 && _defineProperties(t3.prototype, r3);
            o3 && _defineProperties(t3, o3);
            Object.defineProperty(t3, "prototype", { writable: false });
            return t3;
          }
          var u = function() {
            function NameOrNumberTree(t3, r3, o3) {
              _classCallCheck(this, NameOrNumberTree);
              this.constructor === NameOrNumberTree && (0, l.unreachable)("Cannot initialize NameOrNumberTree.");
              this.root = t3;
              this.xref = r3;
              this._type = o3;
            }
            _createClass(NameOrNumberTree, [{ key: "getAll", value: function getAll() {
              var t3 = /* @__PURE__ */ new Map();
              if (!this.root)
                return t3;
              var r3 = this.xref, o3 = new c.RefSet();
              o3.put(this.root);
              for (var u2 = [this.root]; u2.length > 0; ) {
                var h2 = r3.fetchIfRef(u2.shift());
                if (h2 instanceof c.Dict)
                  if (h2.has("Kids")) {
                    var d2 = h2.get("Kids");
                    if (!Array.isArray(d2))
                      continue;
                    var g, m = _createForOfIteratorHelper(d2);
                    try {
                      for (m.s(); !(g = m.n()).done; ) {
                        var y = g.value;
                        if (o3.has(y))
                          throw new l.FormatError('Duplicate entry in "'.concat(this._type, '" tree.'));
                        u2.push(y);
                        o3.put(y);
                      }
                    } catch (t4) {
                      m.e(t4);
                    } finally {
                      m.f();
                    }
                  } else {
                    var v = h2.get(this._type);
                    if (Array.isArray(v))
                      for (var k = 0, _ = v.length; k < _; k += 2)
                        t3.set(r3.fetchIfRef(v[k]), r3.fetchIfRef(v[k + 1]));
                  }
              }
              return t3;
            } }, { key: "get", value: function get(t3) {
              if (!this.root)
                return null;
              for (var r3 = this.xref, o3 = r3.fetchIfRef(this.root), c2 = 0; o3.has("Kids"); ) {
                if (++c2 > 10) {
                  (0, l.warn)('Search depth limit reached for "'.concat(this._type, '" tree.'));
                  return null;
                }
                var u2 = o3.get("Kids");
                if (!Array.isArray(u2))
                  return null;
                for (var h2 = 0, d2 = u2.length - 1; h2 <= d2; ) {
                  var g = h2 + d2 >> 1, m = r3.fetchIfRef(u2[g]), y = m.get("Limits");
                  if (t3 < r3.fetchIfRef(y[0]))
                    d2 = g - 1;
                  else {
                    if (!(t3 > r3.fetchIfRef(y[1]))) {
                      o3 = m;
                      break;
                    }
                    h2 = g + 1;
                  }
                }
                if (h2 > d2)
                  return null;
              }
              var v = o3.get(this._type);
              if (Array.isArray(v))
                for (var k = 0, _ = v.length - 2; k <= _; ) {
                  var w = k + _ >> 1, S = w + (1 & w), C = r3.fetchIfRef(v[S]);
                  if (t3 < C)
                    _ = S - 2;
                  else {
                    if (!(t3 > C))
                      return r3.fetchIfRef(v[S + 1]);
                    k = S + 2;
                  }
                }
              return null;
            } }]);
            return NameOrNumberTree;
          }(), h = function(t3) {
            _inherits(NameTree, t3);
            var r3 = _createSuper(NameTree);
            function NameTree(t4, o3) {
              _classCallCheck(this, NameTree);
              return r3.call(this, t4, o3, "Names");
            }
            return _createClass(NameTree);
          }(u);
          r2.NameTree = h;
          var d = function(t3) {
            _inherits(NumberTree, t3);
            var r3 = _createSuper(NumberTree);
            function NumberTree(t4, o3) {
              _classCallCheck(this, NumberTree);
              return r3.call(this, t4, o3, "Nums");
            }
            return _createClass(NumberTree);
          }(u);
          r2.NumberTree = d;
        }, (t2, r2, o2) => {
          "use strict";
          Object.defineProperty(r2, "__esModule", { value: true });
          r2.clearGlobalCaches = function clearGlobalCaches() {
            (0, c.clearPrimitiveCaches)();
            (0, l.clearUnicodeCaches)();
          };
          var c = o2(158), l = o2(174);
        }, (t2, r2, o2) => {
          "use strict";
          Object.defineProperty(r2, "__esModule", { value: true });
          r2.FileSpec = void 0;
          var c = o2(4), l = o2(162), u = o2(158);
          function _defineProperties(t3, r3) {
            for (var o3 = 0; o3 < r3.length; o3++) {
              var c2 = r3[o3];
              c2.enumerable = c2.enumerable || false;
              c2.configurable = true;
              "value" in c2 && (c2.writable = true);
              Object.defineProperty(t3, c2.key, c2);
            }
          }
          function pickPlatformItem(t3) {
            return t3.has("UF") ? t3.get("UF") : t3.has("F") ? t3.get("F") : t3.has("Unix") ? t3.get("Unix") : t3.has("Mac") ? t3.get("Mac") : t3.has("DOS") ? t3.get("DOS") : null;
          }
          var h = function() {
            function FileSpec(t3, r3) {
              !function _classCallCheck(t4, r4) {
                if (!(t4 instanceof r4))
                  throw new TypeError("Cannot call a class as a function");
              }(this, FileSpec);
              if (t3 instanceof u.Dict) {
                this.xref = r3;
                this.root = t3;
                t3.has("FS") && (this.fs = t3.get("FS"));
                this.description = t3.has("Desc") ? (0, c.stringToPDFString)(t3.get("Desc")) : "";
                t3.has("RF") && (0, c.warn)("Related file specifications are not supported");
                this.contentAvailable = true;
                if (!t3.has("EF")) {
                  this.contentAvailable = false;
                  (0, c.warn)("Non-embedded file specifications are not supported");
                }
              }
            }
            !function _createClass(t3, r3, o3) {
              r3 && _defineProperties(t3.prototype, r3);
              o3 && _defineProperties(t3, o3);
              Object.defineProperty(t3, "prototype", { writable: false });
              return t3;
            }(FileSpec, [{ key: "filename", get: function get() {
              if (!this._filename && this.root) {
                var t3 = pickPlatformItem(this.root) || "unnamed";
                this._filename = (0, c.stringToPDFString)(t3).replace(/\\\\/g, "\\").replace(/\\\//g, "/").replace(/\\/g, "/");
              }
              return this._filename;
            } }, { key: "content", get: function get() {
              if (!this.contentAvailable)
                return null;
              !this.contentRef && this.root && (this.contentRef = pickPlatformItem(this.root.get("EF")));
              var t3 = null;
              if (this.contentRef) {
                var r3 = this.xref.fetchIfRef(this.contentRef);
                r3 instanceof l.BaseStream ? t3 = r3.getBytes() : (0, c.warn)("Embedded file specification points to non-existing/invalid content");
              } else
                (0, c.warn)("Embedded file specification does not have a content");
              return t3;
            } }, { key: "serializable", get: function get() {
              return { filename: this.filename, content: this.content };
            } }]);
            return FileSpec;
          }();
          r2.FileSpec = h;
        }, (t2, r2, o2) => {
          "use strict";
          Object.defineProperty(r2, "__esModule", { value: true });
          r2.MetadataParser = void 0;
          var c = o2(223);
          function _createForOfIteratorHelper(t3, r3) {
            var o3 = typeof Symbol != "undefined" && t3[Symbol.iterator] || t3["@@iterator"];
            if (!o3) {
              if (Array.isArray(t3) || (o3 = _unsupportedIterableToArray(t3)) || r3 && t3 && typeof t3.length == "number") {
                o3 && (t3 = o3);
                var c2 = 0, l2 = function F() {
                };
                return { s: l2, n: function n() {
                  return c2 >= t3.length ? { done: true } : { done: false, value: t3[c2++] };
                }, e: function e(t4) {
                  throw t4;
                }, f: l2 };
              }
              throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
            }
            var u, h = true, d = false;
            return { s: function s() {
              o3 = o3.call(t3);
            }, n: function n() {
              var t4 = o3.next();
              h = t4.done;
              return t4;
            }, e: function e(t4) {
              d = true;
              u = t4;
            }, f: function f() {
              try {
                h || o3.return == null || o3.return();
              } finally {
                if (d)
                  throw u;
              }
            } };
          }
          function _slicedToArray(t3, r3) {
            return function _arrayWithHoles(t4) {
              if (Array.isArray(t4))
                return t4;
            }(t3) || function _iterableToArrayLimit(t4, r4) {
              var o3 = t4 == null ? null : typeof Symbol != "undefined" && t4[Symbol.iterator] || t4["@@iterator"];
              if (o3 == null)
                return;
              var c2, l2, u = [], h = true, d = false;
              try {
                for (o3 = o3.call(t4); !(h = (c2 = o3.next()).done); h = true) {
                  u.push(c2.value);
                  if (r4 && u.length === r4)
                    break;
                }
              } catch (t5) {
                d = true;
                l2 = t5;
              } finally {
                try {
                  h || o3.return == null || o3.return();
                } finally {
                  if (d)
                    throw l2;
                }
              }
              return u;
            }(t3, r3) || _unsupportedIterableToArray(t3, r3) || function _nonIterableRest() {
              throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
            }();
          }
          function _unsupportedIterableToArray(t3, r3) {
            if (t3) {
              if (typeof t3 == "string")
                return _arrayLikeToArray(t3, r3);
              var o3 = Object.prototype.toString.call(t3).slice(8, -1);
              o3 === "Object" && t3.constructor && (o3 = t3.constructor.name);
              return o3 === "Map" || o3 === "Set" ? Array.from(t3) : o3 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(o3) ? _arrayLikeToArray(t3, r3) : void 0;
            }
          }
          function _arrayLikeToArray(t3, r3) {
            (r3 == null || r3 > t3.length) && (r3 = t3.length);
            for (var o3 = 0, c2 = new Array(r3); o3 < r3; o3++)
              c2[o3] = t3[o3];
            return c2;
          }
          function _defineProperties(t3, r3) {
            for (var o3 = 0; o3 < r3.length; o3++) {
              var c2 = r3[o3];
              c2.enumerable = c2.enumerable || false;
              c2.configurable = true;
              "value" in c2 && (c2.writable = true);
              Object.defineProperty(t3, c2.key, c2);
            }
          }
          var l = function() {
            function MetadataParser(t3) {
              !function _classCallCheck(t4, r4) {
                if (!(t4 instanceof r4))
                  throw new TypeError("Cannot call a class as a function");
              }(this, MetadataParser);
              t3 = this._repair(t3);
              var r3 = new c.SimpleXMLParser({ lowerCaseName: true }).parseFromString(t3);
              this._metadataMap = /* @__PURE__ */ new Map();
              this._data = t3;
              r3 && this._parse(r3);
            }
            !function _createClass(t3, r3, o3) {
              r3 && _defineProperties(t3.prototype, r3);
              o3 && _defineProperties(t3, o3);
              Object.defineProperty(t3, "prototype", { writable: false });
              return t3;
            }(MetadataParser, [{ key: "_repair", value: function _repair(t3) {
              return t3.replace(/^[^<]+/, "").replace(/>\\376\\377([^<]+)/g, function(t4, r3) {
                for (var o3 = r3.replace(/\\([0-3])([0-7])([0-7])/g, function(t5, r4, o4, c3) {
                  return String.fromCharCode(64 * r4 + 8 * o4 + 1 * c3);
                }).replace(/&(amp|apos|gt|lt|quot);/g, function(t5, r4) {
                  switch (r4) {
                    case "amp":
                      return "&";
                    case "apos":
                      return "'";
                    case "gt":
                      return ">";
                    case "lt":
                      return "<";
                    case "quot":
                      return '"';
                  }
                  throw new Error("_repair: ".concat(r4, " isn't defined."));
                }), c2 = [], l2 = 0, u = o3.length; l2 < u; l2 += 2) {
                  var h = 256 * o3.charCodeAt(l2) + o3.charCodeAt(l2 + 1);
                  h >= 32 && h < 127 && h !== 60 && h !== 62 && h !== 38 ? c2.push(String.fromCharCode(h)) : c2.push("&#x" + (65536 + h).toString(16).substring(1) + ";");
                }
                return ">" + c2.join("");
              });
            } }, { key: "_getSequence", value: function _getSequence(t3) {
              var r3 = t3.nodeName;
              return r3 !== "rdf:bag" && r3 !== "rdf:seq" && r3 !== "rdf:alt" ? null : t3.childNodes.filter(function(t4) {
                return t4.nodeName === "rdf:li";
              });
            } }, { key: "_parseArray", value: function _parseArray(t3) {
              if (t3.hasChildNodes()) {
                var r3 = _slicedToArray(t3.childNodes, 1)[0], o3 = this._getSequence(r3) || [];
                this._metadataMap.set(t3.nodeName, o3.map(function(t4) {
                  return t4.textContent.trim();
                }));
              }
            } }, { key: "_parse", value: function _parse(t3) {
              var r3 = t3.documentElement;
              if (r3.nodeName !== "rdf:rdf") {
                r3 = r3.firstChild;
                for (; r3 && r3.nodeName !== "rdf:rdf"; )
                  r3 = r3.nextSibling;
              }
              if (r3 && r3.nodeName === "rdf:rdf" && r3.hasChildNodes()) {
                var o3, c2 = _createForOfIteratorHelper(r3.childNodes);
                try {
                  for (c2.s(); !(o3 = c2.n()).done; ) {
                    var l2 = o3.value;
                    if (l2.nodeName === "rdf:description") {
                      var u, h = _createForOfIteratorHelper(l2.childNodes);
                      try {
                        for (h.s(); !(u = h.n()).done; ) {
                          var d = u.value, g = d.nodeName;
                          switch (g) {
                            case "#text":
                              continue;
                            case "dc:creator":
                            case "dc:subject":
                              this._parseArray(d);
                              continue;
                          }
                          this._metadataMap.set(g, d.textContent.trim());
                        }
                      } catch (t4) {
                        h.e(t4);
                      } finally {
                        h.f();
                      }
                    }
                  }
                } catch (t4) {
                  c2.e(t4);
                } finally {
                  c2.f();
                }
              }
            } }, { key: "serializable", get: function get() {
              return { parsedData: this._metadataMap, rawData: this._data };
            } }]);
            return MetadataParser;
          }();
          r2.MetadataParser = l;
        }, (t2, r2, o2) => {
          "use strict";
          function _typeof(t3) {
            return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t4) {
              return typeof t4;
            } : function(t4) {
              return t4 && typeof Symbol == "function" && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
            }, _typeof(t3);
          }
          Object.defineProperty(r2, "__esModule", { value: true });
          r2.XMLParserErrorCode = r2.XMLParserBase = r2.SimpleXMLParser = r2.SimpleDOMNode = void 0;
          var c = o2(161);
          function _setPrototypeOf(t3, r3) {
            _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(t4, r4) {
              t4.__proto__ = r4;
              return t4;
            };
            return _setPrototypeOf(t3, r3);
          }
          function _createSuper(t3) {
            var r3 = function _isNativeReflectConstruct() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                }));
                return true;
              } catch (t4) {
                return false;
              }
            }();
            return function _createSuperInternal() {
              var o3, c2 = _getPrototypeOf(t3);
              if (r3) {
                var l2 = _getPrototypeOf(this).constructor;
                o3 = Reflect.construct(c2, arguments, l2);
              } else
                o3 = c2.apply(this, arguments);
              return _possibleConstructorReturn(this, o3);
            };
          }
          function _possibleConstructorReturn(t3, r3) {
            if (r3 && (_typeof(r3) === "object" || typeof r3 == "function"))
              return r3;
            if (r3 !== void 0)
              throw new TypeError("Derived constructors may only return object or undefined");
            return function _assertThisInitialized(t4) {
              if (t4 === void 0)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return t4;
            }(t3);
          }
          function _getPrototypeOf(t3) {
            _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(t4) {
              return t4.__proto__ || Object.getPrototypeOf(t4);
            };
            return _getPrototypeOf(t3);
          }
          function _createForOfIteratorHelper(t3, r3) {
            var o3 = typeof Symbol != "undefined" && t3[Symbol.iterator] || t3["@@iterator"];
            if (!o3) {
              if (Array.isArray(t3) || (o3 = _unsupportedIterableToArray(t3)) || r3 && t3 && typeof t3.length == "number") {
                o3 && (t3 = o3);
                var c2 = 0, l2 = function F() {
                };
                return { s: l2, n: function n() {
                  return c2 >= t3.length ? { done: true } : { done: false, value: t3[c2++] };
                }, e: function e(t4) {
                  throw t4;
                }, f: l2 };
              }
              throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
            }
            var u2, h2 = true, d2 = false;
            return { s: function s() {
              o3 = o3.call(t3);
            }, n: function n() {
              var t4 = o3.next();
              h2 = t4.done;
              return t4;
            }, e: function e(t4) {
              d2 = true;
              u2 = t4;
            }, f: function f() {
              try {
                h2 || o3.return == null || o3.return();
              } finally {
                if (d2)
                  throw u2;
              }
            } };
          }
          function _slicedToArray(t3, r3) {
            return function _arrayWithHoles(t4) {
              if (Array.isArray(t4))
                return t4;
            }(t3) || function _iterableToArrayLimit(t4, r4) {
              var o3 = t4 == null ? null : typeof Symbol != "undefined" && t4[Symbol.iterator] || t4["@@iterator"];
              if (o3 == null)
                return;
              var c2, l2, u2 = [], h2 = true, d2 = false;
              try {
                for (o3 = o3.call(t4); !(h2 = (c2 = o3.next()).done); h2 = true) {
                  u2.push(c2.value);
                  if (r4 && u2.length === r4)
                    break;
                }
              } catch (t5) {
                d2 = true;
                l2 = t5;
              } finally {
                try {
                  h2 || o3.return == null || o3.return();
                } finally {
                  if (d2)
                    throw l2;
                }
              }
              return u2;
            }(t3, r3) || _unsupportedIterableToArray(t3, r3) || function _nonIterableRest() {
              throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
            }();
          }
          function _unsupportedIterableToArray(t3, r3) {
            if (t3) {
              if (typeof t3 == "string")
                return _arrayLikeToArray(t3, r3);
              var o3 = Object.prototype.toString.call(t3).slice(8, -1);
              o3 === "Object" && t3.constructor && (o3 = t3.constructor.name);
              return o3 === "Map" || o3 === "Set" ? Array.from(t3) : o3 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(o3) ? _arrayLikeToArray(t3, r3) : void 0;
            }
          }
          function _arrayLikeToArray(t3, r3) {
            (r3 == null || r3 > t3.length) && (r3 = t3.length);
            for (var o3 = 0, c2 = new Array(r3); o3 < r3; o3++)
              c2[o3] = t3[o3];
            return c2;
          }
          function _classCallCheck(t3, r3) {
            if (!(t3 instanceof r3))
              throw new TypeError("Cannot call a class as a function");
          }
          function _defineProperties(t3, r3) {
            for (var o3 = 0; o3 < r3.length; o3++) {
              var c2 = r3[o3];
              c2.enumerable = c2.enumerable || false;
              c2.configurable = true;
              "value" in c2 && (c2.writable = true);
              Object.defineProperty(t3, c2.key, c2);
            }
          }
          function _createClass(t3, r3, o3) {
            r3 && _defineProperties(t3.prototype, r3);
            o3 && _defineProperties(t3, o3);
            Object.defineProperty(t3, "prototype", { writable: false });
            return t3;
          }
          var l = { NoError: 0, EndOfDocument: -1, UnterminatedCdat: -2, UnterminatedXmlDeclaration: -3, UnterminatedDoctypeDeclaration: -4, UnterminatedComment: -5, MalformedElement: -6, OutOfMemory: -7, UnterminatedAttributeValue: -8, UnterminatedElement: -9, ElementNeverBegun: -10 };
          r2.XMLParserErrorCode = l;
          function isWhitespace(t3, r3) {
            var o3 = t3[r3];
            return o3 === " " || o3 === "\n" || o3 === "\r" || o3 === "	";
          }
          var u = function() {
            function XMLParserBase() {
              _classCallCheck(this, XMLParserBase);
            }
            _createClass(XMLParserBase, [{ key: "_resolveEntities", value: function _resolveEntities(t3) {
              var r3 = this;
              return t3.replace(/&([^;]+);/g, function(t4, o3) {
                if (o3.substring(0, 2) === "#x")
                  return String.fromCodePoint(parseInt(o3.substring(2), 16));
                if (o3.substring(0, 1) === "#")
                  return String.fromCodePoint(parseInt(o3.substring(1), 10));
                switch (o3) {
                  case "lt":
                    return "<";
                  case "gt":
                    return ">";
                  case "amp":
                    return "&";
                  case "quot":
                    return '"';
                  case "apos":
                    return "'";
                }
                return r3.onResolveEntity(o3);
              });
            } }, { key: "_parseContent", value: function _parseContent(t3, r3) {
              var o3 = [], c2 = r3;
              function skipWs() {
                for (; c2 < t3.length && isWhitespace(t3, c2); )
                  ++c2;
              }
              for (; c2 < t3.length && !isWhitespace(t3, c2) && t3[c2] !== ">" && t3[c2] !== "/"; )
                ++c2;
              var l2 = t3.substring(r3, c2);
              skipWs();
              for (; c2 < t3.length && t3[c2] !== ">" && t3[c2] !== "/" && t3[c2] !== "?"; ) {
                skipWs();
                for (var u2, h2 = ""; c2 < t3.length && !isWhitespace(t3, c2) && t3[c2] !== "="; ) {
                  h2 += t3[c2];
                  ++c2;
                }
                skipWs();
                if (t3[c2] !== "=")
                  return null;
                ++c2;
                skipWs();
                var d2 = t3[c2];
                if (d2 !== '"' && d2 !== "'")
                  return null;
                var g = t3.indexOf(d2, ++c2);
                if (g < 0)
                  return null;
                u2 = t3.substring(c2, g);
                o3.push({ name: h2, value: this._resolveEntities(u2) });
                c2 = g + 1;
                skipWs();
              }
              return { name: l2, attributes: o3, parsed: c2 - r3 };
            } }, { key: "_parseProcessingInstruction", value: function _parseProcessingInstruction(t3, r3) {
              var o3 = r3;
              for (; o3 < t3.length && !isWhitespace(t3, o3) && t3[o3] !== ">" && t3[o3] !== "?" && t3[o3] !== "/"; )
                ++o3;
              var c2 = t3.substring(r3, o3);
              !function skipWs() {
                for (; o3 < t3.length && isWhitespace(t3, o3); )
                  ++o3;
              }();
              for (var l2 = o3; o3 < t3.length && (t3[o3] !== "?" || t3[o3 + 1] !== ">"); )
                ++o3;
              return { name: c2, value: t3.substring(l2, o3), parsed: o3 - r3 };
            } }, { key: "parseXml", value: function parseXml(t3) {
              for (var r3 = 0; r3 < t3.length; ) {
                var o3 = r3;
                if (t3[r3] === "<") {
                  var c2 = void 0;
                  switch (t3[++o3]) {
                    case "/":
                      ++o3;
                      if ((c2 = t3.indexOf(">", o3)) < 0) {
                        this.onError(l.UnterminatedElement);
                        return;
                      }
                      this.onEndElement(t3.substring(o3, c2));
                      o3 = c2 + 1;
                      break;
                    case "?":
                      ++o3;
                      var u2 = this._parseProcessingInstruction(t3, o3);
                      if (t3.substring(o3 + u2.parsed, o3 + u2.parsed + 2) !== "?>") {
                        this.onError(l.UnterminatedXmlDeclaration);
                        return;
                      }
                      this.onPi(u2.name, u2.value);
                      o3 += u2.parsed + 2;
                      break;
                    case "!":
                      if (t3.substring(o3 + 1, o3 + 3) === "--") {
                        if ((c2 = t3.indexOf("-->", o3 + 3)) < 0) {
                          this.onError(l.UnterminatedComment);
                          return;
                        }
                        this.onComment(t3.substring(o3 + 3, c2));
                        o3 = c2 + 3;
                      } else if (t3.substring(o3 + 1, o3 + 8) === "[CDATA[") {
                        if ((c2 = t3.indexOf("]]>", o3 + 8)) < 0) {
                          this.onError(l.UnterminatedCdat);
                          return;
                        }
                        this.onCdata(t3.substring(o3 + 8, c2));
                        o3 = c2 + 3;
                      } else {
                        if (t3.substring(o3 + 1, o3 + 8) !== "DOCTYPE") {
                          this.onError(l.MalformedElement);
                          return;
                        }
                        var h2 = t3.indexOf("[", o3 + 8), d2 = false;
                        if ((c2 = t3.indexOf(">", o3 + 8)) < 0) {
                          this.onError(l.UnterminatedDoctypeDeclaration);
                          return;
                        }
                        if (h2 > 0 && c2 > h2) {
                          if ((c2 = t3.indexOf("]>", o3 + 8)) < 0) {
                            this.onError(l.UnterminatedDoctypeDeclaration);
                            return;
                          }
                          d2 = true;
                        }
                        var g = t3.substring(o3 + 8, c2 + (d2 ? 1 : 0));
                        this.onDoctype(g);
                        o3 = c2 + (d2 ? 2 : 1);
                      }
                      break;
                    default:
                      var m = this._parseContent(t3, o3);
                      if (m === null) {
                        this.onError(l.MalformedElement);
                        return;
                      }
                      var y = false;
                      if (t3.substring(o3 + m.parsed, o3 + m.parsed + 2) === "/>")
                        y = true;
                      else if (t3.substring(o3 + m.parsed, o3 + m.parsed + 1) !== ">") {
                        this.onError(l.UnterminatedElement);
                        return;
                      }
                      this.onBeginElement(m.name, m.attributes, y);
                      o3 += m.parsed + (y ? 2 : 1);
                  }
                } else {
                  for (; o3 < t3.length && t3[o3] !== "<"; )
                    o3++;
                  var v = t3.substring(r3, o3);
                  this.onText(this._resolveEntities(v));
                }
                r3 = o3;
              }
            } }, { key: "onResolveEntity", value: function onResolveEntity(t3) {
              return "&".concat(t3, ";");
            } }, { key: "onPi", value: function onPi(t3, r3) {
            } }, { key: "onComment", value: function onComment(t3) {
            } }, { key: "onCdata", value: function onCdata(t3) {
            } }, { key: "onDoctype", value: function onDoctype(t3) {
            } }, { key: "onText", value: function onText(t3) {
            } }, { key: "onBeginElement", value: function onBeginElement(t3, r3, o3) {
            } }, { key: "onEndElement", value: function onEndElement(t3) {
            } }, { key: "onError", value: function onError(t3) {
            } }]);
            return XMLParserBase;
          }();
          r2.XMLParserBase = u;
          var h = function() {
            function SimpleDOMNode(t3, r3) {
              _classCallCheck(this, SimpleDOMNode);
              this.nodeName = t3;
              this.nodeValue = r3;
              Object.defineProperty(this, "parentNode", { value: null, writable: true });
            }
            _createClass(SimpleDOMNode, [{ key: "firstChild", get: function get() {
              return this.childNodes && this.childNodes[0];
            } }, { key: "nextSibling", get: function get() {
              var t3 = this.parentNode.childNodes;
              if (t3) {
                var r3 = t3.indexOf(this);
                if (r3 !== -1)
                  return t3[r3 + 1];
              }
            } }, { key: "textContent", get: function get() {
              return this.childNodes ? this.childNodes.map(function(t3) {
                return t3.textContent;
              }).join("") : this.nodeValue || "";
            } }, { key: "children", get: function get() {
              return this.childNodes || [];
            } }, { key: "hasChildNodes", value: function hasChildNodes() {
              return this.childNodes && this.childNodes.length > 0;
            } }, { key: "searchNode", value: function searchNode(t3, r3) {
              if (r3 >= t3.length)
                return this;
              for (var o3 = t3[r3], c2 = [], l2 = this; ; ) {
                if (o3.name === l2.nodeName) {
                  if (o3.pos !== 0) {
                    if (c2.length === 0)
                      return null;
                    var u2, h2 = 0, d2 = _createForOfIteratorHelper(_slicedToArray(c2.pop(), 1)[0].childNodes);
                    try {
                      for (d2.s(); !(u2 = d2.n()).done; ) {
                        var g = u2.value;
                        if (o3.name === g.nodeName) {
                          if (h2 === o3.pos)
                            return g.searchNode(t3, r3 + 1);
                          h2++;
                        }
                      }
                    } catch (t4) {
                      d2.e(t4);
                    } finally {
                      d2.f();
                    }
                    return l2.searchNode(t3, r3 + 1);
                  }
                  var m = l2.searchNode(t3, r3 + 1);
                  if (m !== null)
                    return m;
                }
                if (l2.childNodes && l2.childNodes.length !== 0) {
                  c2.push([l2, 0]);
                  l2 = l2.childNodes[0];
                } else {
                  if (c2.length === 0)
                    return null;
                  for (; c2.length !== 0; ) {
                    var y = _slicedToArray(c2.pop(), 2), v = y[0], k = y[1] + 1;
                    if (k < v.childNodes.length) {
                      c2.push([v, k]);
                      l2 = v.childNodes[k];
                      break;
                    }
                  }
                  if (c2.length === 0)
                    return null;
                }
              }
            } }, { key: "dump", value: function dump(t3) {
              if (this.nodeName !== "#text") {
                t3.push("<".concat(this.nodeName));
                if (this.attributes) {
                  var r3, o3 = _createForOfIteratorHelper(this.attributes);
                  try {
                    for (o3.s(); !(r3 = o3.n()).done; ) {
                      var l2 = r3.value;
                      t3.push(" ".concat(l2.name, '="').concat((0, c.encodeToXmlString)(l2.value), '"'));
                    }
                  } catch (t4) {
                    o3.e(t4);
                  } finally {
                    o3.f();
                  }
                }
                if (this.hasChildNodes()) {
                  t3.push(">");
                  var u2, h2 = _createForOfIteratorHelper(this.childNodes);
                  try {
                    for (h2.s(); !(u2 = h2.n()).done; ) {
                      u2.value.dump(t3);
                    }
                  } catch (t4) {
                    h2.e(t4);
                  } finally {
                    h2.f();
                  }
                  t3.push("</".concat(this.nodeName, ">"));
                } else
                  this.nodeValue ? t3.push(">".concat((0, c.encodeToXmlString)(this.nodeValue), "</").concat(this.nodeName, ">")) : t3.push("/>");
              } else
                t3.push((0, c.encodeToXmlString)(this.nodeValue));
            } }]);
            return SimpleDOMNode;
          }();
          r2.SimpleDOMNode = h;
          var d = function(t3) {
            !function _inherits(t4, r4) {
              if (typeof r4 != "function" && r4 !== null)
                throw new TypeError("Super expression must either be null or a function");
              t4.prototype = Object.create(r4 && r4.prototype, { constructor: { value: t4, writable: true, configurable: true } });
              Object.defineProperty(t4, "prototype", { writable: false });
              r4 && _setPrototypeOf(t4, r4);
            }(SimpleXMLParser, t3);
            var r3 = _createSuper(SimpleXMLParser);
            function SimpleXMLParser(t4) {
              var o3, c2 = t4.hasAttributes, u2 = c2 !== void 0 && c2, h2 = t4.lowerCaseName, d2 = h2 !== void 0 && h2;
              _classCallCheck(this, SimpleXMLParser);
              (o3 = r3.call(this))._currentFragment = null;
              o3._stack = null;
              o3._errorCode = l.NoError;
              o3._hasAttributes = u2;
              o3._lowerCaseName = d2;
              return o3;
            }
            _createClass(SimpleXMLParser, [{ key: "parseFromString", value: function parseFromString(t4) {
              this._currentFragment = [];
              this._stack = [];
              this._errorCode = l.NoError;
              this.parseXml(t4);
              if (this._errorCode === l.NoError) {
                var r4 = _slicedToArray(this._currentFragment, 1)[0];
                if (r4)
                  return { documentElement: r4 };
              }
            } }, { key: "onText", value: function onText(t4) {
              if (!function isWhitespaceString(t5) {
                for (var r5 = 0, o3 = t5.length; r5 < o3; r5++)
                  if (!isWhitespace(t5, r5))
                    return false;
                return true;
              }(t4)) {
                var r4 = new h("#text", t4);
                this._currentFragment.push(r4);
              }
            } }, { key: "onCdata", value: function onCdata(t4) {
              var r4 = new h("#text", t4);
              this._currentFragment.push(r4);
            } }, { key: "onBeginElement", value: function onBeginElement(t4, r4, o3) {
              this._lowerCaseName && (t4 = t4.toLowerCase());
              var c2 = new h(t4);
              c2.childNodes = [];
              this._hasAttributes && (c2.attributes = r4);
              this._currentFragment.push(c2);
              if (!o3) {
                this._stack.push(this._currentFragment);
                this._currentFragment = c2.childNodes;
              }
            } }, { key: "onEndElement", value: function onEndElement(t4) {
              this._currentFragment = this._stack.pop() || [];
              var r4 = this._currentFragment[this._currentFragment.length - 1];
              if (!r4)
                return null;
              for (var o3 = 0, c2 = r4.childNodes.length; o3 < c2; o3++)
                r4.childNodes[o3].parentNode = r4;
              return r4;
            } }, { key: "onError", value: function onError(t4) {
              this._errorCode = t4;
            } }]);
            return SimpleXMLParser;
          }(u);
          r2.SimpleXMLParser = d;
        }, (t2, r2, o2) => {
          "use strict";
          Object.defineProperty(r2, "__esModule", { value: true });
          r2.StructTreeRoot = r2.StructTreePage = void 0;
          var c = o2(158), l = o2(4), u = o2(219);
          function _createForOfIteratorHelper(t3, r3) {
            var o3 = typeof Symbol != "undefined" && t3[Symbol.iterator] || t3["@@iterator"];
            if (!o3) {
              if (Array.isArray(t3) || (o3 = function _unsupportedIterableToArray(t4, r4) {
                if (!t4)
                  return;
                if (typeof t4 == "string")
                  return _arrayLikeToArray(t4, r4);
                var o4 = Object.prototype.toString.call(t4).slice(8, -1);
                o4 === "Object" && t4.constructor && (o4 = t4.constructor.name);
                if (o4 === "Map" || o4 === "Set")
                  return Array.from(t4);
                if (o4 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(o4))
                  return _arrayLikeToArray(t4, r4);
              }(t3)) || r3 && t3 && typeof t3.length == "number") {
                o3 && (t3 = o3);
                var c2 = 0, l2 = function F() {
                };
                return { s: l2, n: function n() {
                  return c2 >= t3.length ? { done: true } : { done: false, value: t3[c2++] };
                }, e: function e(t4) {
                  throw t4;
                }, f: l2 };
              }
              throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
            }
            var u2, h2 = true, d2 = false;
            return { s: function s() {
              o3 = o3.call(t3);
            }, n: function n() {
              var t4 = o3.next();
              h2 = t4.done;
              return t4;
            }, e: function e(t4) {
              d2 = true;
              u2 = t4;
            }, f: function f() {
              try {
                h2 || o3.return == null || o3.return();
              } finally {
                if (d2)
                  throw u2;
              }
            } };
          }
          function _arrayLikeToArray(t3, r3) {
            (r3 == null || r3 > t3.length) && (r3 = t3.length);
            for (var o3 = 0, c2 = new Array(r3); o3 < r3; o3++)
              c2[o3] = t3[o3];
            return c2;
          }
          function _classCallCheck(t3, r3) {
            if (!(t3 instanceof r3))
              throw new TypeError("Cannot call a class as a function");
          }
          function _defineProperties(t3, r3) {
            for (var o3 = 0; o3 < r3.length; o3++) {
              var c2 = r3[o3];
              c2.enumerable = c2.enumerable || false;
              c2.configurable = true;
              "value" in c2 && (c2.writable = true);
              Object.defineProperty(t3, c2.key, c2);
            }
          }
          function _createClass(t3, r3, o3) {
            r3 && _defineProperties(t3.prototype, r3);
            o3 && _defineProperties(t3, o3);
            Object.defineProperty(t3, "prototype", { writable: false });
            return t3;
          }
          var h = "PAGE_CONTENT", d = "STREAM_CONTENT", g = "OBJECT", m = "ELEMENT", y = function() {
            function StructTreeRoot(t3) {
              _classCallCheck(this, StructTreeRoot);
              this.dict = t3;
              this.roleMap = /* @__PURE__ */ new Map();
            }
            _createClass(StructTreeRoot, [{ key: "init", value: function init() {
              this.readRoleMap();
            } }, { key: "readRoleMap", value: function readRoleMap() {
              var t3 = this, r3 = this.dict.get("RoleMap");
              r3 instanceof c.Dict && r3.forEach(function(r4, o3) {
                o3 instanceof c.Name && t3.roleMap.set(r4, o3.name);
              });
            } }]);
            return StructTreeRoot;
          }();
          r2.StructTreeRoot = y;
          var v = function() {
            function StructElementNode(t3, r3) {
              _classCallCheck(this, StructElementNode);
              this.tree = t3;
              this.dict = r3;
              this.kids = [];
              this.parseKids();
            }
            _createClass(StructElementNode, [{ key: "role", get: function get() {
              var t3 = this.dict.get("S"), r3 = t3 instanceof c.Name ? t3.name : "", o3 = this.tree.root;
              return o3.roleMap.has(r3) ? o3.roleMap.get(r3) : r3;
            } }, { key: "parseKids", value: function parseKids() {
              var t3 = null, r3 = this.dict.getRaw("Pg");
              r3 instanceof c.Ref && (t3 = r3.toString());
              var o3 = this.dict.get("K");
              if (Array.isArray(o3)) {
                var l2, u2 = _createForOfIteratorHelper(o3);
                try {
                  for (u2.s(); !(l2 = u2.n()).done; ) {
                    var h2 = l2.value, d2 = this.parseKid(t3, h2);
                    d2 && this.kids.push(d2);
                  }
                } catch (t4) {
                  u2.e(t4);
                } finally {
                  u2.f();
                }
              } else {
                var g2 = this.parseKid(t3, o3);
                g2 && this.kids.push(g2);
              }
            } }, { key: "parseKid", value: function parseKid(t3, r3) {
              if (Number.isInteger(r3))
                return this.tree.pageDict.objId !== t3 ? null : new k({ type: h, mcid: r3, pageObjId: t3 });
              var o3 = null;
              r3 instanceof c.Ref ? o3 = this.dict.xref.fetch(r3) : r3 instanceof c.Dict && (o3 = r3);
              if (!o3)
                return null;
              var l2 = o3.getRaw("Pg");
              l2 instanceof c.Ref && (t3 = l2.toString());
              var u2 = o3.get("Type") instanceof c.Name ? o3.get("Type").name : null;
              return u2 === "MCR" ? this.tree.pageDict.objId !== t3 ? null : new k({ type: d, refObjId: o3.getRaw("Stm") instanceof c.Ref ? o3.getRaw("Stm").toString() : null, pageObjId: t3, mcid: o3.get("MCID") }) : u2 === "OBJR" ? this.tree.pageDict.objId !== t3 ? null : new k({ type: g, refObjId: o3.getRaw("Obj") instanceof c.Ref ? o3.getRaw("Obj").toString() : null, pageObjId: t3 }) : new k({ type: m, dict: o3 });
            } }]);
            return StructElementNode;
          }(), k = _createClass(function StructElement(t3) {
            var r3 = t3.type, o3 = t3.dict, c2 = o3 === void 0 ? null : o3, l2 = t3.mcid, u2 = l2 === void 0 ? null : l2, h2 = t3.pageObjId, d2 = h2 === void 0 ? null : h2, g2 = t3.refObjId, m2 = g2 === void 0 ? null : g2;
            _classCallCheck(this, StructElement);
            this.type = r3;
            this.dict = c2;
            this.mcid = u2;
            this.pageObjId = d2;
            this.refObjId = m2;
            this.parentNode = null;
          }), _ = function() {
            function StructTreePage(t3, r3) {
              _classCallCheck(this, StructTreePage);
              this.root = t3;
              this.rootDict = t3 ? t3.dict : null;
              this.pageDict = r3;
              this.nodes = [];
            }
            _createClass(StructTreePage, [{ key: "parse", value: function parse() {
              if (this.root && this.rootDict) {
                var t3 = this.rootDict.get("ParentTree");
                if (t3) {
                  var r3 = this.pageDict.get("StructParents");
                  if (Number.isInteger(r3)) {
                    var o3 = new u.NumberTree(t3, this.rootDict.xref).get(r3);
                    if (Array.isArray(o3)) {
                      var l2, h2 = /* @__PURE__ */ new Map(), d2 = _createForOfIteratorHelper(o3);
                      try {
                        for (d2.s(); !(l2 = d2.n()).done; ) {
                          var g2 = l2.value;
                          g2 instanceof c.Ref && this.addNode(this.rootDict.xref.fetch(g2), h2);
                        }
                      } catch (t4) {
                        d2.e(t4);
                      } finally {
                        d2.f();
                      }
                    }
                  }
                }
              }
            } }, { key: "addNode", value: function addNode(t3, r3) {
              var o3 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 0;
              if (o3 > 40) {
                (0, l.warn)("StructTree MAX_DEPTH reached.");
                return null;
              }
              if (r3.has(t3))
                return r3.get(t3);
              var u2 = new v(this, t3);
              r3.set(t3, u2);
              var h2 = t3.get("P");
              if (!h2 || (0, c.isName)(h2.get("Type"), "StructTreeRoot")) {
                this.addTopLevelNode(t3, u2) || r3.delete(t3);
                return u2;
              }
              var d2 = this.addNode(h2, r3, o3 + 1);
              if (!d2)
                return u2;
              var g2, y2 = false, k2 = _createForOfIteratorHelper(d2.kids);
              try {
                for (k2.s(); !(g2 = k2.n()).done; ) {
                  var _2 = g2.value;
                  if (_2.type === m && _2.dict === t3) {
                    _2.parentNode = u2;
                    y2 = true;
                  }
                }
              } catch (t4) {
                k2.e(t4);
              } finally {
                k2.f();
              }
              y2 || r3.delete(t3);
              return u2;
            } }, { key: "addTopLevelNode", value: function addTopLevelNode(t3, r3) {
              var o3 = this.rootDict.get("K");
              if (!o3)
                return false;
              if (o3 instanceof c.Dict) {
                if (o3.objId !== t3.objId)
                  return false;
                this.nodes[0] = r3;
                return true;
              }
              if (!Array.isArray(o3))
                return true;
              for (var l2 = false, u2 = 0; u2 < o3.length; u2++) {
                var h2 = o3[u2];
                if (h2 && h2.toString() === t3.objId) {
                  this.nodes[u2] = r3;
                  l2 = true;
                }
              }
              return l2;
            } }, { key: "serializable", get: function get() {
              function nodeToSerializable(t4, r4) {
                var o4 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 0;
                if (o4 > 40)
                  (0, l.warn)("StructTree too deep to be fully serialized.");
                else {
                  var c3 = /* @__PURE__ */ Object.create(null);
                  c3.role = t4.role;
                  c3.children = [];
                  r4.children.push(c3);
                  var u2 = t4.dict.get("Alt");
                  typeof u2 == "string" && (c3.alt = (0, l.stringToPDFString)(u2));
                  var y2 = t4.dict.get("Lang");
                  typeof y2 == "string" && (c3.lang = (0, l.stringToPDFString)(y2));
                  var v2, k2 = _createForOfIteratorHelper(t4.kids);
                  try {
                    for (k2.s(); !(v2 = k2.n()).done; ) {
                      var _2 = v2.value, w = _2.type === m ? _2.parentNode : null;
                      w ? nodeToSerializable(w, c3, o4 + 1) : _2.type === h || _2.type === d ? c3.children.push({ type: "content", id: "page".concat(_2.pageObjId, "_mcid").concat(_2.mcid) }) : _2.type === g && c3.children.push({ type: "object", id: _2.refObjId });
                    }
                  } catch (t5) {
                    k2.e(t5);
                  } finally {
                    k2.f();
                  }
                }
              }
              var t3 = /* @__PURE__ */ Object.create(null);
              t3.children = [];
              t3.role = "Root";
              var r3, o3 = _createForOfIteratorHelper(this.nodes);
              try {
                for (o3.s(); !(r3 = o3.n()).done; ) {
                  var c2 = r3.value;
                  c2 && nodeToSerializable(c2, t3);
                }
              } catch (t4) {
                o3.e(t4);
              } finally {
                o3.f();
              }
              return t3;
            } }]);
            return StructTreePage;
          }();
          r2.StructTreePage = _;
        }, (t2, r2, o2) => {
          "use strict";
          Object.defineProperty(r2, "__esModule", { value: true });
          r2.ObjectLoader = void 0;
          var c = function _interopRequireDefault(t3) {
            return t3 && t3.__esModule ? t3 : { default: t3 };
          }(o2(2)), l = o2(158), u = o2(162), h = o2(161), d = o2(4);
          function asyncGeneratorStep(t3, r3, o3, c2, l2, u2, h2) {
            try {
              var d2 = t3[u2](h2), g2 = d2.value;
            } catch (t4) {
              o3(t4);
              return;
            }
            d2.done ? r3(g2) : Promise.resolve(g2).then(c2, l2);
          }
          function _asyncToGenerator(t3) {
            return function() {
              var r3 = this, o3 = arguments;
              return new Promise(function(c2, l2) {
                var u2 = t3.apply(r3, o3);
                function _next(t4) {
                  asyncGeneratorStep(u2, c2, l2, _next, _throw, "next", t4);
                }
                function _throw(t4) {
                  asyncGeneratorStep(u2, c2, l2, _next, _throw, "throw", t4);
                }
                _next(void 0);
              });
            };
          }
          function _defineProperties(t3, r3) {
            for (var o3 = 0; o3 < r3.length; o3++) {
              var c2 = r3[o3];
              c2.enumerable = c2.enumerable || false;
              c2.configurable = true;
              "value" in c2 && (c2.writable = true);
              Object.defineProperty(t3, c2.key, c2);
            }
          }
          function _createForOfIteratorHelper(t3, r3) {
            var o3 = typeof Symbol != "undefined" && t3[Symbol.iterator] || t3["@@iterator"];
            if (!o3) {
              if (Array.isArray(t3) || (o3 = function _unsupportedIterableToArray(t4, r4) {
                if (!t4)
                  return;
                if (typeof t4 == "string")
                  return _arrayLikeToArray(t4, r4);
                var o4 = Object.prototype.toString.call(t4).slice(8, -1);
                o4 === "Object" && t4.constructor && (o4 = t4.constructor.name);
                if (o4 === "Map" || o4 === "Set")
                  return Array.from(t4);
                if (o4 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(o4))
                  return _arrayLikeToArray(t4, r4);
              }(t3)) || r3 && t3 && typeof t3.length == "number") {
                o3 && (t3 = o3);
                var c2 = 0, l2 = function F() {
                };
                return { s: l2, n: function n() {
                  return c2 >= t3.length ? { done: true } : { done: false, value: t3[c2++] };
                }, e: function e(t4) {
                  throw t4;
                }, f: l2 };
              }
              throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
            }
            var u2, h2 = true, d2 = false;
            return { s: function s() {
              o3 = o3.call(t3);
            }, n: function n() {
              var t4 = o3.next();
              h2 = t4.done;
              return t4;
            }, e: function e(t4) {
              d2 = true;
              u2 = t4;
            }, f: function f() {
              try {
                h2 || o3.return == null || o3.return();
              } finally {
                if (d2)
                  throw u2;
              }
            } };
          }
          function _arrayLikeToArray(t3, r3) {
            (r3 == null || r3 > t3.length) && (r3 = t3.length);
            for (var o3 = 0, c2 = new Array(r3); o3 < r3; o3++)
              c2[o3] = t3[o3];
            return c2;
          }
          function addChildren(t3, r3) {
            if (t3 instanceof l.Dict)
              t3 = t3.getRawValues();
            else if (t3 instanceof u.BaseStream)
              t3 = t3.dict.getRawValues();
            else if (!Array.isArray(t3))
              return;
            var o3, c2, h2 = _createForOfIteratorHelper(t3);
            try {
              for (h2.s(); !(o3 = h2.n()).done; ) {
                var d2 = o3.value;
                ((c2 = d2) instanceof l.Ref || c2 instanceof l.Dict || c2 instanceof u.BaseStream || Array.isArray(c2)) && r3.push(d2);
              }
            } catch (t4) {
              h2.e(t4);
            } finally {
              h2.f();
            }
          }
          var g = function() {
            function ObjectLoader(t4, r4, o3) {
              !function _classCallCheck(t5, r5) {
                if (!(t5 instanceof r5))
                  throw new TypeError("Cannot call a class as a function");
              }(this, ObjectLoader);
              this.dict = t4;
              this.keys = r4;
              this.xref = o3;
              this.refSet = null;
            }
            !function _createClass(t4, r4, o3) {
              r4 && _defineProperties(t4.prototype, r4);
              o3 && _defineProperties(t4, o3);
              Object.defineProperty(t4, "prototype", { writable: false });
              return t4;
            }(ObjectLoader, [{ key: "load", value: (r3 = _asyncToGenerator(c.default.mark(function _callee() {
              var t4, r4, o3, u2, h2, d2;
              return c.default.wrap(function _callee$(c2) {
                for (; ; )
                  switch (c2.prev = c2.next) {
                    case 0:
                      if (!this.xref.stream.isDataLoaded) {
                        c2.next = 2;
                        break;
                      }
                      return c2.abrupt("return", void 0);
                    case 2:
                      t4 = this.keys, r4 = this.dict;
                      this.refSet = new l.RefSet();
                      o3 = [];
                      for (u2 = 0, h2 = t4.length; u2 < h2; u2++)
                        (d2 = r4.getRaw(t4[u2])) !== void 0 && o3.push(d2);
                      return c2.abrupt("return", this._walk(o3));
                    case 7:
                    case "end":
                      return c2.stop();
                  }
              }, _callee, this);
            })), function load() {
              return r3.apply(this, arguments);
            }) }, { key: "_walk", value: (t3 = _asyncToGenerator(c.default.mark(function _callee2(t4) {
              var r4, o3, g2, m, y, v, k, _, w, S, C, x;
              return c.default.wrap(function _callee2$(c2) {
                for (; ; )
                  switch (c2.prev = c2.next) {
                    case 0:
                      r4 = [];
                      o3 = [];
                    case 2:
                      if (!t4.length) {
                        c2.next = 48;
                        break;
                      }
                      if (!((g2 = t4.pop()) instanceof l.Ref)) {
                        c2.next = 21;
                        break;
                      }
                      if (!this.refSet.has(g2)) {
                        c2.next = 7;
                        break;
                      }
                      return c2.abrupt("continue", 2);
                    case 7:
                      c2.prev = 7;
                      this.refSet.put(g2);
                      g2 = this.xref.fetch(g2);
                      c2.next = 21;
                      break;
                    case 12:
                      c2.prev = 12;
                      c2.t0 = c2.catch(7);
                      if (c2.t0 instanceof h.MissingDataException) {
                        c2.next = 19;
                        break;
                      }
                      (0, d.warn)('ObjectLoader._walk - requesting all data: "'.concat(c2.t0, '".'));
                      this.refSet = null;
                      m = this.xref.stream.manager;
                      return c2.abrupt("return", m.requestAllChunks());
                    case 19:
                      r4.push(g2);
                      o3.push({ begin: c2.t0.begin, end: c2.t0.end });
                    case 21:
                      if (!(g2 instanceof u.BaseStream)) {
                        c2.next = 45;
                        break;
                      }
                      if (!(y = g2.getBaseStreams())) {
                        c2.next = 45;
                        break;
                      }
                      v = false;
                      k = _createForOfIteratorHelper(y);
                      c2.prev = 26;
                      k.s();
                    case 28:
                      if ((_ = k.n()).done) {
                        c2.next = 36;
                        break;
                      }
                      if (!(w = _.value).isDataLoaded) {
                        c2.next = 32;
                        break;
                      }
                      return c2.abrupt("continue", 34);
                    case 32:
                      v = true;
                      o3.push({ begin: w.start, end: w.end });
                    case 34:
                      c2.next = 28;
                      break;
                    case 36:
                      c2.next = 41;
                      break;
                    case 38:
                      c2.prev = 38;
                      c2.t1 = c2.catch(26);
                      k.e(c2.t1);
                    case 41:
                      c2.prev = 41;
                      k.f();
                      return c2.finish(41);
                    case 44:
                      v && r4.push(g2);
                    case 45:
                      addChildren(g2, t4);
                      c2.next = 2;
                      break;
                    case 48:
                      if (!o3.length) {
                        c2.next = 54;
                        break;
                      }
                      c2.next = 51;
                      return this.xref.stream.manager.requestRanges(o3);
                    case 51:
                      S = _createForOfIteratorHelper(r4);
                      try {
                        for (S.s(); !(C = S.n()).done; )
                          (x = C.value) instanceof l.Ref && this.refSet.remove(x);
                      } catch (t5) {
                        S.e(t5);
                      } finally {
                        S.f();
                      }
                      return c2.abrupt("return", this._walk(r4));
                    case 54:
                      this.refSet = null;
                      return c2.abrupt("return", void 0);
                    case 56:
                    case "end":
                      return c2.stop();
                  }
              }, _callee2, this, [[7, 12], [26, 38, 41, 44]]);
            })), function _walk(r4) {
              return t3.apply(this, arguments);
            }) }]);
            var t3, r3;
            return ObjectLoader;
          }();
          r2.ObjectLoader = g;
        }, (t2, r2, o2) => {
          "use strict";
          Object.defineProperty(r2, "__esModule", { value: true });
          r2.incrementalUpdate = function incrementalUpdate(t3) {
            var r3 = t3.originalData, o3 = t3.xrefInfo, d2 = t3.newRefs, m = t3.xref, y = m === void 0 ? null : m, v = t3.hasXfa, k = v !== void 0 && v, _ = t3.xfaDatasetsRef, w = _ === void 0 ? null : _, S = t3.hasXfaDatasetsEntry, C = S !== void 0 && S, x = t3.acroFormRef, O = x === void 0 ? null : x, T = t3.acroForm, E = T === void 0 ? null : T, M = t3.xfaData, R = M === void 0 ? null : M;
            k && function updateXFA(t4) {
              var r4 = t4.xfaData, o4 = t4.xfaDatasetsRef, l2 = t4.hasXfaDatasetsEntry, d3 = t4.acroFormRef, g2 = t4.acroForm, m2 = t4.newRefs, y2 = t4.xref;
              t4.xrefInfo;
              if (y2 === null)
                return;
              if (!l2) {
                if (!d3) {
                  (0, c.warn)("XFA - Cannot save it");
                  return;
                }
                var v2 = g2.get("XFA"), k2 = v2.slice();
                k2.splice(2, 0, "datasets");
                k2.splice(3, 0, o4);
                g2.set("XFA", k2);
                var _2 = y2.encrypt, w2 = null;
                _2 && (w2 = _2.createCipherTransform(d3.num, d3.gen));
                var S2 = ["".concat(d3.num, " ").concat(d3.gen, " obj\n")];
                writeDict(g2, S2, w2);
                S2.push("\n");
                g2.set("XFA", v2);
                m2.push({ ref: d3, data: S2.join("") });
              }
              if (r4 === null) {
                r4 = function writeXFADataForAcroform(t5, r5) {
                  var o5, l3 = new h.SimpleXMLParser({ hasAttributes: true }).parseFromString(t5), d4 = _createForOfIteratorHelper(r5);
                  try {
                    for (d4.s(); !(o5 = d4.n()).done; ) {
                      var g3 = o5.value.xfa;
                      if (g3) {
                        var m3 = g3.path, y3 = g3.value;
                        if (m3) {
                          var v3 = l3.documentElement.searchNode((0, u.parseXFAPath)(m3), 0);
                          v3 ? Array.isArray(y3) ? v3.childNodes = y3.map(function(t6) {
                            return new h.SimpleDOMNode("value", t6);
                          }) : v3.childNodes = [new h.SimpleDOMNode("#text", y3)] : (0, c.warn)("Node not found for path: ".concat(m3));
                        }
                      }
                    }
                  } catch (t6) {
                    d4.e(t6);
                  } finally {
                    d4.f();
                  }
                  var k3 = [];
                  l3.documentElement.dump(k3);
                  return k3.join("");
                }(y2.fetchIfRef(o4).getString(), m2);
              }
              var C2 = y2.encrypt;
              if (C2) {
                r4 = C2.createCipherTransform(o4.num, o4.gen).encryptString(r4);
              }
              var x2 = "".concat(o4.num, " ").concat(o4.gen, " obj\n") + "<< /Type /EmbeddedFile /Length ".concat(r4.length, ">>\nstream\n") + r4 + "\nendstream\nendobj\n";
              m2.push({ ref: o4, data: x2 });
            }({ xfaData: R, xfaDatasetsRef: w, hasXfaDatasetsEntry: C, acroFormRef: O, acroForm: E, newRefs: d2, xref: y, xrefInfo: o3 });
            var D, j, L = new l.Dict(null), N = o3.newRef, U = r3[r3.length - 1];
            if (U === 10 || U === 13) {
              D = [];
              j = r3.length;
            } else {
              D = ["\n"];
              j = r3.length + 1;
            }
            L.set("Size", N.num + 1);
            L.set("Prev", o3.startXRef);
            L.set("Type", l.Name.get("XRef"));
            o3.rootRef !== null && L.set("Root", o3.rootRef);
            o3.infoRef !== null && L.set("Info", o3.infoRef);
            o3.encryptRef !== null && L.set("Encrypt", o3.encryptRef);
            d2.push({ ref: N, data: "" });
            d2 = d2.sort(function(t4, r4) {
              return t4.ref.num - r4.ref.num;
            });
            var H, $ = [[0, 1, 65535]], X = [0, 1], q = 0, G = _createForOfIteratorHelper(d2);
            try {
              for (G.s(); !(H = G.n()).done; ) {
                var z = H.value, W = z.ref, V = z.data;
                q = Math.max(q, j);
                $.push([1, j, Math.min(W.gen, 65535)]);
                j += V.length;
                X.push(W.num, 1);
                D.push(V);
              }
            } catch (t4) {
              G.e(t4);
            } finally {
              G.f();
            }
            L.set("Index", X);
            if (Array.isArray(o3.fileIds) && o3.fileIds.length > 0) {
              var K = function computeMD5(t4, r4) {
                for (var o4 = Math.floor(Date.now() / 1e3), l2 = r4.filename || "", u2 = [o4.toString(), l2, t4.toString()], h2 = u2.reduce(function(t5, r5) {
                  return t5 + r5.length;
                }, 0), d3 = 0, m2 = Object.values(r4.info); d3 < m2.length; d3++) {
                  var y2 = m2[d3];
                  u2.push(y2);
                  h2 += y2.length;
                }
                for (var v2 = new Uint8Array(h2), k2 = 0, _2 = 0, w2 = u2; _2 < w2.length; _2++) {
                  var S2 = w2[_2];
                  writeString(S2, k2, v2);
                  k2 += S2.length;
                }
                return (0, c.bytesToString)((0, g.calculateMD5)(v2));
              }(j, o3);
              L.set("ID", [o3.fileIds[0], K]);
            }
            var Y = [1, Math.ceil(Math.log2(q) / 8), 2], J = (Y[0] + Y[1] + Y[2]) * $.length;
            L.set("W", Y);
            L.set("Length", J);
            D.push("".concat(N.num, " ").concat(N.gen, " obj\n"));
            writeDict(L, D, null);
            D.push(" stream\n");
            var Z = D.reduce(function(t4, r4) {
              return t4 + r4.length;
            }, 0), Q = "\nendstream\nendobj\nstartxref\n".concat(j, "\n%%EOF\n"), ee = new Uint8Array(r3.length + Z + J + Q.length);
            ee.set(r3);
            var te, re = r3.length, ae = _createForOfIteratorHelper(D);
            try {
              for (ae.s(); !(te = ae.n()).done; ) {
                var ne = te.value;
                writeString(ne, re, ee);
                re += ne.length;
              }
            } catch (t4) {
              ae.e(t4);
            } finally {
              ae.f();
            }
            for (var ie = 0, oe = $; ie < oe.length; ie++) {
              var se = (fe = oe[ie], he = 3, function _arrayWithHoles(t4) {
                if (Array.isArray(t4))
                  return t4;
              }(fe) || function _iterableToArrayLimit(t4, r4) {
                var o4 = t4 == null ? null : typeof Symbol != "undefined" && t4[Symbol.iterator] || t4["@@iterator"];
                if (o4 == null)
                  return;
                var c2, l2, u2 = [], h2 = true, d3 = false;
                try {
                  for (o4 = o4.call(t4); !(h2 = (c2 = o4.next()).done); h2 = true) {
                    u2.push(c2.value);
                    if (r4 && u2.length === r4)
                      break;
                  }
                } catch (t5) {
                  d3 = true;
                  l2 = t5;
                } finally {
                  try {
                    h2 || o4.return == null || o4.return();
                  } finally {
                    if (d3)
                      throw l2;
                  }
                }
                return u2;
              }(fe, he) || _unsupportedIterableToArray(fe, he) || function _nonIterableRest() {
                throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
              }()), ce = se[0], le = se[1], ue = se[2];
              re = writeInt(ce, Y[0], re, ee);
              re = writeInt(le, Y[1], re, ee);
              re = writeInt(ue, Y[2], re, ee);
            }
            var fe, he;
            writeString(Q, re, ee);
            return ee;
          };
          r2.writeDict = writeDict;
          var c = o2(4), l = o2(158), u = o2(161), h = o2(223), d = o2(162), g = o2(227);
          function _typeof(t3) {
            return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t4) {
              return typeof t4;
            } : function(t4) {
              return t4 && typeof Symbol == "function" && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
            }, _typeof(t3);
          }
          function _createForOfIteratorHelper(t3, r3) {
            var o3 = typeof Symbol != "undefined" && t3[Symbol.iterator] || t3["@@iterator"];
            if (!o3) {
              if (Array.isArray(t3) || (o3 = _unsupportedIterableToArray(t3)) || r3 && t3 && typeof t3.length == "number") {
                o3 && (t3 = o3);
                var c2 = 0, l2 = function F() {
                };
                return { s: l2, n: function n() {
                  return c2 >= t3.length ? { done: true } : { done: false, value: t3[c2++] };
                }, e: function e(t4) {
                  throw t4;
                }, f: l2 };
              }
              throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
            }
            var u2, h2 = true, d2 = false;
            return { s: function s() {
              o3 = o3.call(t3);
            }, n: function n() {
              var t4 = o3.next();
              h2 = t4.done;
              return t4;
            }, e: function e(t4) {
              d2 = true;
              u2 = t4;
            }, f: function f() {
              try {
                h2 || o3.return == null || o3.return();
              } finally {
                if (d2)
                  throw u2;
              }
            } };
          }
          function _unsupportedIterableToArray(t3, r3) {
            if (t3) {
              if (typeof t3 == "string")
                return _arrayLikeToArray(t3, r3);
              var o3 = Object.prototype.toString.call(t3).slice(8, -1);
              o3 === "Object" && t3.constructor && (o3 = t3.constructor.name);
              return o3 === "Map" || o3 === "Set" ? Array.from(t3) : o3 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(o3) ? _arrayLikeToArray(t3, r3) : void 0;
            }
          }
          function _arrayLikeToArray(t3, r3) {
            (r3 == null || r3 > t3.length) && (r3 = t3.length);
            for (var o3 = 0, c2 = new Array(r3); o3 < r3; o3++)
              c2[o3] = t3[o3];
            return c2;
          }
          function writeDict(t3, r3, o3) {
            r3.push("<<");
            var c2, l2 = _createForOfIteratorHelper(t3.getKeys());
            try {
              for (l2.s(); !(c2 = l2.n()).done; ) {
                var h2 = c2.value;
                r3.push(" /".concat((0, u.escapePDFName)(h2), " "));
                writeValue(t3.getRaw(h2), r3, o3);
              }
            } catch (t4) {
              l2.e(t4);
            } finally {
              l2.f();
            }
            r3.push(">>");
          }
          function writeValue(t3, r3, o3) {
            if (t3 instanceof l.Name)
              r3.push("/".concat((0, u.escapePDFName)(t3.name)));
            else if (t3 instanceof l.Ref)
              r3.push("".concat(t3.num, " ").concat(t3.gen, " R"));
            else if (Array.isArray(t3))
              !function writeArray(t4, r4, o4) {
                r4.push("[");
                var c2, l2 = true, u2 = _createForOfIteratorHelper(t4);
                try {
                  for (u2.s(); !(c2 = u2.n()).done; ) {
                    var h2 = c2.value;
                    l2 ? l2 = false : r4.push(" ");
                    writeValue(h2, r4, o4);
                  }
                } catch (t5) {
                  u2.e(t5);
                } finally {
                  u2.f();
                }
                r4.push("]");
              }(t3, r3, o3);
            else if (typeof t3 == "string") {
              o3 !== null && (t3 = o3.encryptString(t3));
              r3.push("(".concat((0, c.escapeString)(t3), ")"));
            } else
              typeof t3 == "number" ? r3.push(function numberToString(t4) {
                if (Number.isInteger(t4))
                  return t4.toString();
                var r4 = Math.round(100 * t4);
                return r4 % 100 == 0 ? (r4 / 100).toString() : r4 % 10 == 0 ? t4.toFixed(1) : t4.toFixed(2);
              }(t3)) : typeof t3 == "boolean" ? r3.push(t3.toString()) : t3 instanceof l.Dict ? writeDict(t3, r3, o3) : t3 instanceof d.BaseStream ? function writeStream(t4, r4, o4) {
                writeDict(t4.dict, r4, o4);
                r4.push(" stream\n");
                var c2 = t4.getString();
                o4 !== null && (c2 = o4.encryptString(c2));
                r4.push(c2, "\nendstream\n");
              }(t3, r3, o3) : t3 === null ? r3.push("null") : (0, c.warn)("Unhandled value in writer: ".concat(_typeof(t3), ", please file a bug."));
          }
          function writeInt(t3, r3, o3, c2) {
            for (var l2 = r3 + o3 - 1; l2 > o3 - 1; l2--) {
              c2[l2] = 255 & t3;
              t3 >>= 8;
            }
            return o3 + r3;
          }
          function writeString(t3, r3, o3) {
            for (var c2 = 0, l2 = t3.length; c2 < l2; c2++)
              o3[r3 + c2] = 255 & t3.charCodeAt(c2);
          }
        }, (t2, r2, o2) => {
          "use strict";
          function _typeof(t3) {
            return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t4) {
              return typeof t4;
            } : function(t4) {
              return t4 && typeof Symbol == "function" && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
            }, _typeof(t3);
          }
          Object.defineProperty(r2, "__esModule", { value: true });
          r2.calculateSHA256 = r2.calculateMD5 = r2.PDF20 = r2.PDF17 = r2.CipherTransformFactory = r2.ARCFourCipher = r2.AES256Cipher = r2.AES128Cipher = void 0;
          r2.calculateSHA384 = calculateSHA384;
          r2.calculateSHA512 = void 0;
          var c = o2(4), l = o2(158), u = o2(228);
          function _inherits(t3, r3) {
            if (typeof r3 != "function" && r3 !== null)
              throw new TypeError("Super expression must either be null or a function");
            t3.prototype = Object.create(r3 && r3.prototype, { constructor: { value: t3, writable: true, configurable: true } });
            Object.defineProperty(t3, "prototype", { writable: false });
            r3 && _setPrototypeOf(t3, r3);
          }
          function _setPrototypeOf(t3, r3) {
            _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(t4, r4) {
              t4.__proto__ = r4;
              return t4;
            };
            return _setPrototypeOf(t3, r3);
          }
          function _createSuper(t3) {
            var r3 = function _isNativeReflectConstruct() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                }));
                return true;
              } catch (t4) {
                return false;
              }
            }();
            return function _createSuperInternal() {
              var o3, c2 = _getPrototypeOf(t3);
              if (r3) {
                var l2 = _getPrototypeOf(this).constructor;
                o3 = Reflect.construct(c2, arguments, l2);
              } else
                o3 = c2.apply(this, arguments);
              return _possibleConstructorReturn(this, o3);
            };
          }
          function _possibleConstructorReturn(t3, r3) {
            if (r3 && (_typeof(r3) === "object" || typeof r3 == "function"))
              return r3;
            if (r3 !== void 0)
              throw new TypeError("Derived constructors may only return object or undefined");
            return function _assertThisInitialized(t4) {
              if (t4 === void 0)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return t4;
            }(t3);
          }
          function _getPrototypeOf(t3) {
            _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(t4) {
              return t4.__proto__ || Object.getPrototypeOf(t4);
            };
            return _getPrototypeOf(t3);
          }
          function _classCallCheck(t3, r3) {
            if (!(t3 instanceof r3))
              throw new TypeError("Cannot call a class as a function");
          }
          function _defineProperties(t3, r3) {
            for (var o3 = 0; o3 < r3.length; o3++) {
              var c2 = r3[o3];
              c2.enumerable = c2.enumerable || false;
              c2.configurable = true;
              "value" in c2 && (c2.writable = true);
              Object.defineProperty(t3, c2.key, c2);
            }
          }
          function _createClass(t3, r3, o3) {
            r3 && _defineProperties(t3.prototype, r3);
            o3 && _defineProperties(t3, o3);
            Object.defineProperty(t3, "prototype", { writable: false });
            return t3;
          }
          var h = function() {
            function ARCFourCipher(t3) {
              _classCallCheck(this, ARCFourCipher);
              this.a = 0;
              this.b = 0;
              for (var r3 = new Uint8Array(256), o3 = t3.length, c2 = 0; c2 < 256; ++c2)
                r3[c2] = c2;
              for (var l2 = 0, u2 = 0; l2 < 256; ++l2) {
                var h2 = r3[l2];
                u2 = u2 + h2 + t3[l2 % o3] & 255;
                r3[l2] = r3[u2];
                r3[u2] = h2;
              }
              this.s = r3;
            }
            _createClass(ARCFourCipher, [{ key: "encryptBlock", value: function encryptBlock(t3) {
              for (var r3 = this.a, o3 = this.b, c2 = this.s, l2 = t3.length, u2 = new Uint8Array(l2), h2 = 0; h2 < l2; ++h2) {
                var d2 = c2[r3 = r3 + 1 & 255], g2 = c2[o3 = o3 + d2 & 255];
                c2[r3] = g2;
                c2[o3] = d2;
                u2[h2] = t3[h2] ^ c2[d2 + g2 & 255];
              }
              this.a = r3;
              this.b = o3;
              return u2;
            } }, { key: "decryptBlock", value: function decryptBlock(t3) {
              return this.encryptBlock(t3);
            } }, { key: "encrypt", value: function encrypt(t3) {
              return this.encryptBlock(t3);
            } }]);
            return ARCFourCipher;
          }();
          r2.ARCFourCipher = h;
          var d = function calculateMD5Closure() {
            var t3 = new Uint8Array([7, 12, 17, 22, 7, 12, 17, 22, 7, 12, 17, 22, 7, 12, 17, 22, 5, 9, 14, 20, 5, 9, 14, 20, 5, 9, 14, 20, 5, 9, 14, 20, 4, 11, 16, 23, 4, 11, 16, 23, 4, 11, 16, 23, 4, 11, 16, 23, 6, 10, 15, 21, 6, 10, 15, 21, 6, 10, 15, 21, 6, 10, 15, 21]), r3 = new Int32Array([-680876936, -389564586, 606105819, -1044525330, -176418897, 1200080426, -1473231341, -45705983, 1770035416, -1958414417, -42063, -1990404162, 1804603682, -40341101, -1502002290, 1236535329, -165796510, -1069501632, 643717713, -373897302, -701558691, 38016083, -660478335, -405537848, 568446438, -1019803690, -187363961, 1163531501, -1444681467, -51403784, 1735328473, -1926607734, -378558, -2022574463, 1839030562, -35309556, -1530992060, 1272893353, -155497632, -1094730640, 681279174, -358537222, -722521979, 76029189, -640364487, -421815835, 530742520, -995338651, -198630844, 1126891415, -1416354905, -57434055, 1700485571, -1894986606, -1051523, -2054922799, 1873313359, -30611744, -1560198380, 1309151649, -145523070, -1120210379, 718787259, -343485551]);
            return function hash(o3, c2, l2) {
              var u2, h2, d2 = 1732584193, g2 = -271733879, m2 = -1732584194, y2 = 271733878, v2 = l2 + 72 & -64, k2 = new Uint8Array(v2);
              for (u2 = 0; u2 < l2; ++u2)
                k2[u2] = o3[c2++];
              k2[u2++] = 128;
              for (var _2 = v2 - 8; u2 < _2; )
                k2[u2++] = 0;
              k2[u2++] = l2 << 3 & 255;
              k2[u2++] = l2 >> 5 & 255;
              k2[u2++] = l2 >> 13 & 255;
              k2[u2++] = l2 >> 21 & 255;
              k2[u2++] = l2 >>> 29 & 255;
              k2[u2++] = 0;
              k2[u2++] = 0;
              k2[u2++] = 0;
              var w2 = new Int32Array(16);
              for (u2 = 0; u2 < v2; ) {
                for (h2 = 0; h2 < 16; ++h2, u2 += 4)
                  w2[h2] = k2[u2] | k2[u2 + 1] << 8 | k2[u2 + 2] << 16 | k2[u2 + 3] << 24;
                var S2 = d2, C2 = g2, x2 = m2, O2 = y2, T = void 0, E = void 0;
                for (h2 = 0; h2 < 64; ++h2) {
                  if (h2 < 16) {
                    T = C2 & x2 | ~C2 & O2;
                    E = h2;
                  } else if (h2 < 32) {
                    T = O2 & C2 | ~O2 & x2;
                    E = 5 * h2 + 1 & 15;
                  } else if (h2 < 48) {
                    T = C2 ^ x2 ^ O2;
                    E = 3 * h2 + 5 & 15;
                  } else {
                    T = x2 ^ (C2 | ~O2);
                    E = 7 * h2 & 15;
                  }
                  var M = O2, R = S2 + T + r3[h2] + w2[E] | 0, D = t3[h2];
                  O2 = x2;
                  x2 = C2;
                  C2 = C2 + (R << D | R >>> 32 - D) | 0;
                  S2 = M;
                }
                d2 = d2 + S2 | 0;
                g2 = g2 + C2 | 0;
                m2 = m2 + x2 | 0;
                y2 = y2 + O2 | 0;
              }
              return new Uint8Array([255 & d2, d2 >> 8 & 255, d2 >> 16 & 255, d2 >>> 24 & 255, 255 & g2, g2 >> 8 & 255, g2 >> 16 & 255, g2 >>> 24 & 255, 255 & m2, m2 >> 8 & 255, m2 >> 16 & 255, m2 >>> 24 & 255, 255 & y2, y2 >> 8 & 255, y2 >> 16 & 255, y2 >>> 24 & 255]);
            };
          }();
          r2.calculateMD5 = d;
          var g = function() {
            function Word64(t3, r3) {
              _classCallCheck(this, Word64);
              this.high = 0 | t3;
              this.low = 0 | r3;
            }
            _createClass(Word64, [{ key: "and", value: function and(t3) {
              this.high &= t3.high;
              this.low &= t3.low;
            } }, { key: "xor", value: function xor(t3) {
              this.high ^= t3.high;
              this.low ^= t3.low;
            } }, { key: "or", value: function or(t3) {
              this.high |= t3.high;
              this.low |= t3.low;
            } }, { key: "shiftRight", value: function shiftRight(t3) {
              if (t3 >= 32) {
                this.low = this.high >>> t3 - 32 | 0;
                this.high = 0;
              } else {
                this.low = this.low >>> t3 | this.high << 32 - t3;
                this.high = this.high >>> t3 | 0;
              }
            } }, { key: "shiftLeft", value: function shiftLeft(t3) {
              if (t3 >= 32) {
                this.high = this.low << t3 - 32;
                this.low = 0;
              } else {
                this.high = this.high << t3 | this.low >>> 32 - t3;
                this.low <<= t3;
              }
            } }, { key: "rotateRight", value: function rotateRight(t3) {
              var r3, o3;
              if (32 & t3) {
                o3 = this.low;
                r3 = this.high;
              } else {
                r3 = this.low;
                o3 = this.high;
              }
              t3 &= 31;
              this.low = r3 >>> t3 | o3 << 32 - t3;
              this.high = o3 >>> t3 | r3 << 32 - t3;
            } }, { key: "not", value: function not() {
              this.high = ~this.high;
              this.low = ~this.low;
            } }, { key: "add", value: function add(t3) {
              var r3 = (this.low >>> 0) + (t3.low >>> 0), o3 = (this.high >>> 0) + (t3.high >>> 0);
              r3 > 4294967295 && (o3 += 1);
              this.low = 0 | r3;
              this.high = 0 | o3;
            } }, { key: "copyTo", value: function copyTo(t3, r3) {
              t3[r3] = this.high >>> 24 & 255;
              t3[r3 + 1] = this.high >> 16 & 255;
              t3[r3 + 2] = this.high >> 8 & 255;
              t3[r3 + 3] = 255 & this.high;
              t3[r3 + 4] = this.low >>> 24 & 255;
              t3[r3 + 5] = this.low >> 16 & 255;
              t3[r3 + 6] = this.low >> 8 & 255;
              t3[r3 + 7] = 255 & this.low;
            } }, { key: "assign", value: function assign(t3) {
              this.high = t3.high;
              this.low = t3.low;
            } }]);
            return Word64;
          }(), m = function calculateSHA256Closure() {
            function rotr(t4, r3) {
              return t4 >>> r3 | t4 << 32 - r3;
            }
            function ch(t4, r3, o3) {
              return t4 & r3 ^ ~t4 & o3;
            }
            function maj(t4, r3, o3) {
              return t4 & r3 ^ t4 & o3 ^ r3 & o3;
            }
            function sigma(t4) {
              return rotr(t4, 2) ^ rotr(t4, 13) ^ rotr(t4, 22);
            }
            function sigmaPrime(t4) {
              return rotr(t4, 6) ^ rotr(t4, 11) ^ rotr(t4, 25);
            }
            function littleSigma(t4) {
              return rotr(t4, 7) ^ rotr(t4, 18) ^ t4 >>> 3;
            }
            var t3 = [1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993, 2453635748, 2870763221, 3624381080, 310598401, 607225278, 1426881987, 1925078388, 2162078206, 2614888103, 3248222580, 3835390401, 4022224774, 264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986, 2554220882, 2821834349, 2952996808, 3210313671, 3336571891, 3584528711, 113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700, 1986661051, 2177026350, 2456956037, 2730485921, 2820302411, 3259730800, 3345764771, 3516065817, 3600352804, 4094571909, 275423344, 430227734, 506948616, 659060556, 883997877, 958139571, 1322822218, 1537002063, 1747873779, 1955562222, 2024104815, 2227730452, 2361852424, 2428436474, 2756734187, 3204031479, 3329325298];
            return function hash(r3, o3, c2) {
              var l2, u2, h2 = 1779033703, d2 = 3144134277, g2 = 1013904242, m2 = 2773480762, y2 = 1359893119, v2 = 2600822924, k2 = 528734635, _2 = 1541459225, w2 = 64 * Math.ceil((c2 + 9) / 64), S2 = new Uint8Array(w2);
              for (l2 = 0; l2 < c2; ++l2)
                S2[l2] = r3[o3++];
              S2[l2++] = 128;
              for (var C2 = w2 - 8; l2 < C2; )
                S2[l2++] = 0;
              S2[l2++] = 0;
              S2[l2++] = 0;
              S2[l2++] = 0;
              S2[l2++] = c2 >>> 29 & 255;
              S2[l2++] = c2 >> 21 & 255;
              S2[l2++] = c2 >> 13 & 255;
              S2[l2++] = c2 >> 5 & 255;
              S2[l2++] = c2 << 3 & 255;
              var x2, O2 = new Uint32Array(64);
              for (l2 = 0; l2 < w2; ) {
                for (u2 = 0; u2 < 16; ++u2) {
                  O2[u2] = S2[l2] << 24 | S2[l2 + 1] << 16 | S2[l2 + 2] << 8 | S2[l2 + 3];
                  l2 += 4;
                }
                for (u2 = 16; u2 < 64; ++u2)
                  O2[u2] = (rotr(x2 = O2[u2 - 2], 17) ^ rotr(x2, 19) ^ x2 >>> 10) + O2[u2 - 7] + littleSigma(O2[u2 - 15]) + O2[u2 - 16] | 0;
                var T = h2, E = d2, M = g2, R = m2, D = y2, j = v2, L = k2, N = _2, U = void 0, H = void 0;
                for (u2 = 0; u2 < 64; ++u2) {
                  U = N + sigmaPrime(D) + ch(D, j, L) + t3[u2] + O2[u2];
                  H = sigma(T) + maj(T, E, M);
                  N = L;
                  L = j;
                  j = D;
                  D = R + U | 0;
                  R = M;
                  M = E;
                  E = T;
                  T = U + H | 0;
                }
                h2 = h2 + T | 0;
                d2 = d2 + E | 0;
                g2 = g2 + M | 0;
                m2 = m2 + R | 0;
                y2 = y2 + D | 0;
                v2 = v2 + j | 0;
                k2 = k2 + L | 0;
                _2 = _2 + N | 0;
              }
              return new Uint8Array([h2 >> 24 & 255, h2 >> 16 & 255, h2 >> 8 & 255, 255 & h2, d2 >> 24 & 255, d2 >> 16 & 255, d2 >> 8 & 255, 255 & d2, g2 >> 24 & 255, g2 >> 16 & 255, g2 >> 8 & 255, 255 & g2, m2 >> 24 & 255, m2 >> 16 & 255, m2 >> 8 & 255, 255 & m2, y2 >> 24 & 255, y2 >> 16 & 255, y2 >> 8 & 255, 255 & y2, v2 >> 24 & 255, v2 >> 16 & 255, v2 >> 8 & 255, 255 & v2, k2 >> 24 & 255, k2 >> 16 & 255, k2 >> 8 & 255, 255 & k2, _2 >> 24 & 255, _2 >> 16 & 255, _2 >> 8 & 255, 255 & _2]);
            };
          }();
          r2.calculateSHA256 = m;
          var y = function calculateSHA512Closure() {
            function ch(t4, r3, o3, c2, l2) {
              t4.assign(r3);
              t4.and(o3);
              l2.assign(r3);
              l2.not();
              l2.and(c2);
              t4.xor(l2);
            }
            function maj(t4, r3, o3, c2, l2) {
              t4.assign(r3);
              t4.and(o3);
              l2.assign(r3);
              l2.and(c2);
              t4.xor(l2);
              l2.assign(o3);
              l2.and(c2);
              t4.xor(l2);
            }
            function sigma(t4, r3, o3) {
              t4.assign(r3);
              t4.rotateRight(28);
              o3.assign(r3);
              o3.rotateRight(34);
              t4.xor(o3);
              o3.assign(r3);
              o3.rotateRight(39);
              t4.xor(o3);
            }
            function sigmaPrime(t4, r3, o3) {
              t4.assign(r3);
              t4.rotateRight(14);
              o3.assign(r3);
              o3.rotateRight(18);
              t4.xor(o3);
              o3.assign(r3);
              o3.rotateRight(41);
              t4.xor(o3);
            }
            function littleSigma(t4, r3, o3) {
              t4.assign(r3);
              t4.rotateRight(1);
              o3.assign(r3);
              o3.rotateRight(8);
              t4.xor(o3);
              o3.assign(r3);
              o3.shiftRight(7);
              t4.xor(o3);
            }
            function littleSigmaPrime(t4, r3, o3) {
              t4.assign(r3);
              t4.rotateRight(19);
              o3.assign(r3);
              o3.rotateRight(61);
              t4.xor(o3);
              o3.assign(r3);
              o3.shiftRight(6);
              t4.xor(o3);
            }
            var t3 = [new g(1116352408, 3609767458), new g(1899447441, 602891725), new g(3049323471, 3964484399), new g(3921009573, 2173295548), new g(961987163, 4081628472), new g(1508970993, 3053834265), new g(2453635748, 2937671579), new g(2870763221, 3664609560), new g(3624381080, 2734883394), new g(310598401, 1164996542), new g(607225278, 1323610764), new g(1426881987, 3590304994), new g(1925078388, 4068182383), new g(2162078206, 991336113), new g(2614888103, 633803317), new g(3248222580, 3479774868), new g(3835390401, 2666613458), new g(4022224774, 944711139), new g(264347078, 2341262773), new g(604807628, 2007800933), new g(770255983, 1495990901), new g(1249150122, 1856431235), new g(1555081692, 3175218132), new g(1996064986, 2198950837), new g(2554220882, 3999719339), new g(2821834349, 766784016), new g(2952996808, 2566594879), new g(3210313671, 3203337956), new g(3336571891, 1034457026), new g(3584528711, 2466948901), new g(113926993, 3758326383), new g(338241895, 168717936), new g(666307205, 1188179964), new g(773529912, 1546045734), new g(1294757372, 1522805485), new g(1396182291, 2643833823), new g(1695183700, 2343527390), new g(1986661051, 1014477480), new g(2177026350, 1206759142), new g(2456956037, 344077627), new g(2730485921, 1290863460), new g(2820302411, 3158454273), new g(3259730800, 3505952657), new g(3345764771, 106217008), new g(3516065817, 3606008344), new g(3600352804, 1432725776), new g(4094571909, 1467031594), new g(275423344, 851169720), new g(430227734, 3100823752), new g(506948616, 1363258195), new g(659060556, 3750685593), new g(883997877, 3785050280), new g(958139571, 3318307427), new g(1322822218, 3812723403), new g(1537002063, 2003034995), new g(1747873779, 3602036899), new g(1955562222, 1575990012), new g(2024104815, 1125592928), new g(2227730452, 2716904306), new g(2361852424, 442776044), new g(2428436474, 593698344), new g(2756734187, 3733110249), new g(3204031479, 2999351573), new g(3329325298, 3815920427), new g(3391569614, 3928383900), new g(3515267271, 566280711), new g(3940187606, 3454069534), new g(4118630271, 4000239992), new g(116418474, 1914138554), new g(174292421, 2731055270), new g(289380356, 3203993006), new g(460393269, 320620315), new g(685471733, 587496836), new g(852142971, 1086792851), new g(1017036298, 365543100), new g(1126000580, 2618297676), new g(1288033470, 3409855158), new g(1501505948, 4234509866), new g(1607167915, 987167468), new g(1816402316, 1246189591)];
            return function hash(r3, o3, c2) {
              var l2, u2, h2, d2, m2, y2, v2, k2, _2 = arguments.length > 3 && arguments[3] !== void 0 && arguments[3];
              if (_2) {
                l2 = new g(3418070365, 3238371032);
                u2 = new g(1654270250, 914150663);
                h2 = new g(2438529370, 812702999);
                d2 = new g(355462360, 4144912697);
                m2 = new g(1731405415, 4290775857);
                y2 = new g(2394180231, 1750603025);
                v2 = new g(3675008525, 1694076839);
                k2 = new g(1203062813, 3204075428);
              } else {
                l2 = new g(1779033703, 4089235720);
                u2 = new g(3144134277, 2227873595);
                h2 = new g(1013904242, 4271175723);
                d2 = new g(2773480762, 1595750129);
                m2 = new g(1359893119, 2917565137);
                y2 = new g(2600822924, 725511199);
                v2 = new g(528734635, 4215389547);
                k2 = new g(1541459225, 327033209);
              }
              var w2, S2, C2 = 128 * Math.ceil((c2 + 17) / 128), x2 = new Uint8Array(C2);
              for (w2 = 0; w2 < c2; ++w2)
                x2[w2] = r3[o3++];
              x2[w2++] = 128;
              for (var O2 = C2 - 16; w2 < O2; )
                x2[w2++] = 0;
              x2[w2++] = 0;
              x2[w2++] = 0;
              x2[w2++] = 0;
              x2[w2++] = 0;
              x2[w2++] = 0;
              x2[w2++] = 0;
              x2[w2++] = 0;
              x2[w2++] = 0;
              x2[w2++] = 0;
              x2[w2++] = 0;
              x2[w2++] = 0;
              x2[w2++] = c2 >>> 29 & 255;
              x2[w2++] = c2 >> 21 & 255;
              x2[w2++] = c2 >> 13 & 255;
              x2[w2++] = c2 >> 5 & 255;
              x2[w2++] = c2 << 3 & 255;
              var T = new Array(80);
              for (w2 = 0; w2 < 80; w2++)
                T[w2] = new g(0, 0);
              var E, M, R = new g(0, 0), D = new g(0, 0), j = new g(0, 0), L = new g(0, 0), N = new g(0, 0), U = new g(0, 0), H = new g(0, 0), $ = new g(0, 0), X = new g(0, 0), q = new g(0, 0), G = new g(0, 0), z = new g(0, 0);
              for (w2 = 0; w2 < C2; ) {
                for (S2 = 0; S2 < 16; ++S2) {
                  T[S2].high = x2[w2] << 24 | x2[w2 + 1] << 16 | x2[w2 + 2] << 8 | x2[w2 + 3];
                  T[S2].low = x2[w2 + 4] << 24 | x2[w2 + 5] << 16 | x2[w2 + 6] << 8 | x2[w2 + 7];
                  w2 += 8;
                }
                for (S2 = 16; S2 < 80; ++S2) {
                  littleSigmaPrime(E = T[S2], T[S2 - 2], z);
                  E.add(T[S2 - 7]);
                  littleSigma(G, T[S2 - 15], z);
                  E.add(G);
                  E.add(T[S2 - 16]);
                }
                R.assign(l2);
                D.assign(u2);
                j.assign(h2);
                L.assign(d2);
                N.assign(m2);
                U.assign(y2);
                H.assign(v2);
                $.assign(k2);
                for (S2 = 0; S2 < 80; ++S2) {
                  X.assign($);
                  sigmaPrime(G, N, z);
                  X.add(G);
                  ch(G, N, U, H, z);
                  X.add(G);
                  X.add(t3[S2]);
                  X.add(T[S2]);
                  sigma(q, R, z);
                  maj(G, R, D, j, z);
                  q.add(G);
                  E = $;
                  $ = H;
                  H = U;
                  U = N;
                  L.add(X);
                  N = L;
                  L = j;
                  j = D;
                  D = R;
                  E.assign(X);
                  E.add(q);
                  R = E;
                }
                l2.add(R);
                u2.add(D);
                h2.add(j);
                d2.add(L);
                m2.add(N);
                y2.add(U);
                v2.add(H);
                k2.add($);
              }
              if (_2) {
                M = new Uint8Array(48);
                l2.copyTo(M, 0);
                u2.copyTo(M, 8);
                h2.copyTo(M, 16);
                d2.copyTo(M, 24);
                m2.copyTo(M, 32);
                y2.copyTo(M, 40);
              } else {
                M = new Uint8Array(64);
                l2.copyTo(M, 0);
                u2.copyTo(M, 8);
                h2.copyTo(M, 16);
                d2.copyTo(M, 24);
                m2.copyTo(M, 32);
                y2.copyTo(M, 40);
                v2.copyTo(M, 48);
                k2.copyTo(M, 56);
              }
              return M;
            };
          }();
          r2.calculateSHA512 = y;
          function calculateSHA384(t3, r3, o3) {
            return y(t3, r3, o3, true);
          }
          var v = function() {
            function NullCipher() {
              _classCallCheck(this, NullCipher);
            }
            _createClass(NullCipher, [{ key: "decryptBlock", value: function decryptBlock(t3) {
              return t3;
            } }, { key: "encrypt", value: function encrypt(t3) {
              return t3;
            } }]);
            return NullCipher;
          }(), k = function() {
            function AESBaseCipher() {
              _classCallCheck(this, AESBaseCipher);
              this.constructor === AESBaseCipher && (0, c.unreachable)("Cannot initialize AESBaseCipher.");
              this._s = new Uint8Array([99, 124, 119, 123, 242, 107, 111, 197, 48, 1, 103, 43, 254, 215, 171, 118, 202, 130, 201, 125, 250, 89, 71, 240, 173, 212, 162, 175, 156, 164, 114, 192, 183, 253, 147, 38, 54, 63, 247, 204, 52, 165, 229, 241, 113, 216, 49, 21, 4, 199, 35, 195, 24, 150, 5, 154, 7, 18, 128, 226, 235, 39, 178, 117, 9, 131, 44, 26, 27, 110, 90, 160, 82, 59, 214, 179, 41, 227, 47, 132, 83, 209, 0, 237, 32, 252, 177, 91, 106, 203, 190, 57, 74, 76, 88, 207, 208, 239, 170, 251, 67, 77, 51, 133, 69, 249, 2, 127, 80, 60, 159, 168, 81, 163, 64, 143, 146, 157, 56, 245, 188, 182, 218, 33, 16, 255, 243, 210, 205, 12, 19, 236, 95, 151, 68, 23, 196, 167, 126, 61, 100, 93, 25, 115, 96, 129, 79, 220, 34, 42, 144, 136, 70, 238, 184, 20, 222, 94, 11, 219, 224, 50, 58, 10, 73, 6, 36, 92, 194, 211, 172, 98, 145, 149, 228, 121, 231, 200, 55, 109, 141, 213, 78, 169, 108, 86, 244, 234, 101, 122, 174, 8, 186, 120, 37, 46, 28, 166, 180, 198, 232, 221, 116, 31, 75, 189, 139, 138, 112, 62, 181, 102, 72, 3, 246, 14, 97, 53, 87, 185, 134, 193, 29, 158, 225, 248, 152, 17, 105, 217, 142, 148, 155, 30, 135, 233, 206, 85, 40, 223, 140, 161, 137, 13, 191, 230, 66, 104, 65, 153, 45, 15, 176, 84, 187, 22]);
              this._inv_s = new Uint8Array([82, 9, 106, 213, 48, 54, 165, 56, 191, 64, 163, 158, 129, 243, 215, 251, 124, 227, 57, 130, 155, 47, 255, 135, 52, 142, 67, 68, 196, 222, 233, 203, 84, 123, 148, 50, 166, 194, 35, 61, 238, 76, 149, 11, 66, 250, 195, 78, 8, 46, 161, 102, 40, 217, 36, 178, 118, 91, 162, 73, 109, 139, 209, 37, 114, 248, 246, 100, 134, 104, 152, 22, 212, 164, 92, 204, 93, 101, 182, 146, 108, 112, 72, 80, 253, 237, 185, 218, 94, 21, 70, 87, 167, 141, 157, 132, 144, 216, 171, 0, 140, 188, 211, 10, 247, 228, 88, 5, 184, 179, 69, 6, 208, 44, 30, 143, 202, 63, 15, 2, 193, 175, 189, 3, 1, 19, 138, 107, 58, 145, 17, 65, 79, 103, 220, 234, 151, 242, 207, 206, 240, 180, 230, 115, 150, 172, 116, 34, 231, 173, 53, 133, 226, 249, 55, 232, 28, 117, 223, 110, 71, 241, 26, 113, 29, 41, 197, 137, 111, 183, 98, 14, 170, 24, 190, 27, 252, 86, 62, 75, 198, 210, 121, 32, 154, 219, 192, 254, 120, 205, 90, 244, 31, 221, 168, 51, 136, 7, 199, 49, 177, 18, 16, 89, 39, 128, 236, 95, 96, 81, 127, 169, 25, 181, 74, 13, 45, 229, 122, 159, 147, 201, 156, 239, 160, 224, 59, 77, 174, 42, 245, 176, 200, 235, 187, 60, 131, 83, 153, 97, 23, 43, 4, 126, 186, 119, 214, 38, 225, 105, 20, 99, 85, 33, 12, 125]);
              this._mix = new Uint32Array([0, 235474187, 470948374, 303765277, 941896748, 908933415, 607530554, 708780849, 1883793496, 2118214995, 1817866830, 1649639237, 1215061108, 1181045119, 1417561698, 1517767529, 3767586992, 4003061179, 4236429990, 4069246893, 3635733660, 3602770327, 3299278474, 3400528769, 2430122216, 2664543715, 2362090238, 2193862645, 2835123396, 2801107407, 3035535058, 3135740889, 3678124923, 3576870512, 3341394285, 3374361702, 3810496343, 3977675356, 4279080257, 4043610186, 2876494627, 2776292904, 3076639029, 3110650942, 2472011535, 2640243204, 2403728665, 2169303058, 1001089995, 899835584, 666464733, 699432150, 59727847, 226906860, 530400753, 294930682, 1273168787, 1172967064, 1475418501, 1509430414, 1942435775, 2110667444, 1876241833, 1641816226, 2910219766, 2743034109, 2976151520, 3211623147, 2505202138, 2606453969, 2302690252, 2269728455, 3711829422, 3543599269, 3240894392, 3475313331, 3843699074, 3943906441, 4178062228, 4144047775, 1306967366, 1139781709, 1374988112, 1610459739, 1975683434, 2076935265, 1775276924, 1742315127, 1034867998, 866637845, 566021896, 800440835, 92987698, 193195065, 429456164, 395441711, 1984812685, 2017778566, 1784663195, 1683407248, 1315562145, 1080094634, 1383856311, 1551037884, 101039829, 135050206, 437757123, 337553864, 1042385657, 807962610, 573804783, 742039012, 2531067453, 2564033334, 2328828971, 2227573024, 2935566865, 2700099354, 3001755655, 3168937228, 3868552805, 3902563182, 4203181171, 4102977912, 3736164937, 3501741890, 3265478751, 3433712980, 1106041591, 1340463100, 1576976609, 1408749034, 2043211483, 2009195472, 1708848333, 1809054150, 832877231, 1068351396, 766945465, 599762354, 159417987, 126454664, 361929877, 463180190, 2709260871, 2943682380, 3178106961, 3009879386, 2572697195, 2538681184, 2236228733, 2336434550, 3509871135, 3745345300, 3441850377, 3274667266, 3910161971, 3877198648, 4110568485, 4211818798, 2597806476, 2497604743, 2261089178, 2295101073, 2733856160, 2902087851, 3202437046, 2968011453, 3936291284, 3835036895, 4136440770, 4169408201, 3535486456, 3702665459, 3467192302, 3231722213, 2051518780, 1951317047, 1716890410, 1750902305, 1113818384, 1282050075, 1584504582, 1350078989, 168810852, 67556463, 371049330, 404016761, 841739592, 1008918595, 775550814, 540080725, 3969562369, 3801332234, 4035489047, 4269907996, 3569255213, 3669462566, 3366754619, 3332740144, 2631065433, 2463879762, 2160117071, 2395588676, 2767645557, 2868897406, 3102011747, 3069049960, 202008497, 33778362, 270040487, 504459436, 875451293, 975658646, 675039627, 641025152, 2084704233, 1917518562, 1615861247, 1851332852, 1147550661, 1248802510, 1484005843, 1451044056, 933301370, 967311729, 733156972, 632953703, 260388950, 25965917, 328671808, 496906059, 1206477858, 1239443753, 1543208500, 1441952575, 2144161806, 1908694277, 1675577880, 1842759443, 3610369226, 3644379585, 3408119516, 3307916247, 4011190502, 3776767469, 4077384432, 4245618683, 2809771154, 2842737049, 3144396420, 3043140495, 2673705150, 2438237621, 2203032232, 2370213795]);
              this._mixCol = new Uint8Array(256);
              for (var t3 = 0; t3 < 256; t3++)
                this._mixCol[t3] = t3 < 128 ? t3 << 1 : t3 << 1 ^ 27;
              this.buffer = new Uint8Array(16);
              this.bufferPosition = 0;
            }
            _createClass(AESBaseCipher, [{ key: "_expandKey", value: function _expandKey(t3) {
              (0, c.unreachable)("Cannot call `_expandKey` on the base class");
            } }, { key: "_decrypt", value: function _decrypt(t3, r3) {
              var o3, c2, l2, u2 = new Uint8Array(16);
              u2.set(t3);
              for (var h2 = 0, d2 = this._keySize; h2 < 16; ++h2, ++d2)
                u2[h2] ^= r3[d2];
              for (var g2 = this._cyclesOfRepetition - 1; g2 >= 1; --g2) {
                o3 = u2[13];
                u2[13] = u2[9];
                u2[9] = u2[5];
                u2[5] = u2[1];
                u2[1] = o3;
                o3 = u2[14];
                c2 = u2[10];
                u2[14] = u2[6];
                u2[10] = u2[2];
                u2[6] = o3;
                u2[2] = c2;
                o3 = u2[15];
                c2 = u2[11];
                l2 = u2[7];
                u2[15] = u2[3];
                u2[11] = o3;
                u2[7] = c2;
                u2[3] = l2;
                for (var m2 = 0; m2 < 16; ++m2)
                  u2[m2] = this._inv_s[u2[m2]];
                for (var y2 = 0, v2 = 16 * g2; y2 < 16; ++y2, ++v2)
                  u2[y2] ^= r3[v2];
                for (var k2 = 0; k2 < 16; k2 += 4) {
                  var _2 = this._mix[u2[k2]], w2 = this._mix[u2[k2 + 1]], S2 = this._mix[u2[k2 + 2]], C2 = this._mix[u2[k2 + 3]];
                  o3 = _2 ^ w2 >>> 8 ^ w2 << 24 ^ S2 >>> 16 ^ S2 << 16 ^ C2 >>> 24 ^ C2 << 8;
                  u2[k2] = o3 >>> 24 & 255;
                  u2[k2 + 1] = o3 >> 16 & 255;
                  u2[k2 + 2] = o3 >> 8 & 255;
                  u2[k2 + 3] = 255 & o3;
                }
              }
              o3 = u2[13];
              u2[13] = u2[9];
              u2[9] = u2[5];
              u2[5] = u2[1];
              u2[1] = o3;
              o3 = u2[14];
              c2 = u2[10];
              u2[14] = u2[6];
              u2[10] = u2[2];
              u2[6] = o3;
              u2[2] = c2;
              o3 = u2[15];
              c2 = u2[11];
              l2 = u2[7];
              u2[15] = u2[3];
              u2[11] = o3;
              u2[7] = c2;
              u2[3] = l2;
              for (var x2 = 0; x2 < 16; ++x2) {
                u2[x2] = this._inv_s[u2[x2]];
                u2[x2] ^= r3[x2];
              }
              return u2;
            } }, { key: "_encrypt", value: function _encrypt(t3, r3) {
              var o3, c2, l2, u2 = this._s, h2 = new Uint8Array(16);
              h2.set(t3);
              for (var d2 = 0; d2 < 16; ++d2)
                h2[d2] ^= r3[d2];
              for (var g2 = 1; g2 < this._cyclesOfRepetition; g2++) {
                for (var m2 = 0; m2 < 16; ++m2)
                  h2[m2] = u2[h2[m2]];
                l2 = h2[1];
                h2[1] = h2[5];
                h2[5] = h2[9];
                h2[9] = h2[13];
                h2[13] = l2;
                l2 = h2[2];
                c2 = h2[6];
                h2[2] = h2[10];
                h2[6] = h2[14];
                h2[10] = l2;
                h2[14] = c2;
                l2 = h2[3];
                c2 = h2[7];
                o3 = h2[11];
                h2[3] = h2[15];
                h2[7] = l2;
                h2[11] = c2;
                h2[15] = o3;
                for (var y2 = 0; y2 < 16; y2 += 4) {
                  var v2 = h2[y2 + 0], k2 = h2[y2 + 1], _2 = h2[y2 + 2], w2 = h2[y2 + 3];
                  o3 = v2 ^ k2 ^ _2 ^ w2;
                  h2[y2 + 0] ^= o3 ^ this._mixCol[v2 ^ k2];
                  h2[y2 + 1] ^= o3 ^ this._mixCol[k2 ^ _2];
                  h2[y2 + 2] ^= o3 ^ this._mixCol[_2 ^ w2];
                  h2[y2 + 3] ^= o3 ^ this._mixCol[w2 ^ v2];
                }
                for (var S2 = 0, C2 = 16 * g2; S2 < 16; ++S2, ++C2)
                  h2[S2] ^= r3[C2];
              }
              for (var x2 = 0; x2 < 16; ++x2)
                h2[x2] = u2[h2[x2]];
              l2 = h2[1];
              h2[1] = h2[5];
              h2[5] = h2[9];
              h2[9] = h2[13];
              h2[13] = l2;
              l2 = h2[2];
              c2 = h2[6];
              h2[2] = h2[10];
              h2[6] = h2[14];
              h2[10] = l2;
              h2[14] = c2;
              l2 = h2[3];
              c2 = h2[7];
              o3 = h2[11];
              h2[3] = h2[15];
              h2[7] = l2;
              h2[11] = c2;
              h2[15] = o3;
              for (var O2 = 0, T = this._keySize; O2 < 16; ++O2, ++T)
                h2[O2] ^= r3[T];
              return h2;
            } }, { key: "_decryptBlock2", value: function _decryptBlock2(t3, r3) {
              for (var o3 = t3.length, c2 = this.buffer, l2 = this.bufferPosition, u2 = [], h2 = this.iv, d2 = 0; d2 < o3; ++d2) {
                c2[l2] = t3[d2];
                if (!(++l2 < 16)) {
                  for (var g2 = this._decrypt(c2, this._key), m2 = 0; m2 < 16; ++m2)
                    g2[m2] ^= h2[m2];
                  h2 = c2;
                  u2.push(g2);
                  c2 = new Uint8Array(16);
                  l2 = 0;
                }
              }
              this.buffer = c2;
              this.bufferLength = l2;
              this.iv = h2;
              if (u2.length === 0)
                return new Uint8Array(0);
              var y2 = 16 * u2.length;
              if (r3) {
                var v2 = u2[u2.length - 1], k2 = v2[15];
                if (k2 <= 16) {
                  for (var _2 = 15, w2 = 16 - k2; _2 >= w2; --_2)
                    if (v2[_2] !== k2) {
                      k2 = 0;
                      break;
                    }
                  y2 -= k2;
                  u2[u2.length - 1] = v2.subarray(0, 16 - k2);
                }
              }
              for (var S2 = new Uint8Array(y2), C2 = 0, x2 = 0, O2 = u2.length; C2 < O2; ++C2, x2 += 16)
                S2.set(u2[C2], x2);
              return S2;
            } }, { key: "decryptBlock", value: function decryptBlock(t3, r3) {
              var o3 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null, c2 = t3.length, l2 = this.buffer, u2 = this.bufferPosition;
              if (o3)
                this.iv = o3;
              else {
                for (var h2 = 0; u2 < 16 && h2 < c2; ++h2, ++u2)
                  l2[u2] = t3[h2];
                if (u2 < 16) {
                  this.bufferLength = u2;
                  return new Uint8Array(0);
                }
                this.iv = l2;
                t3 = t3.subarray(16);
              }
              this.buffer = new Uint8Array(16);
              this.bufferLength = 0;
              this.decryptBlock = this._decryptBlock2;
              return this.decryptBlock(t3, r3);
            } }, { key: "encrypt", value: function encrypt(t3, r3) {
              var o3 = t3.length, c2 = this.buffer, l2 = this.bufferPosition, u2 = [];
              r3 || (r3 = new Uint8Array(16));
              for (var h2 = 0; h2 < o3; ++h2) {
                c2[l2] = t3[h2];
                if (!(++l2 < 16)) {
                  for (var d2 = 0; d2 < 16; ++d2)
                    c2[d2] ^= r3[d2];
                  var g2 = this._encrypt(c2, this._key);
                  r3 = g2;
                  u2.push(g2);
                  c2 = new Uint8Array(16);
                  l2 = 0;
                }
              }
              this.buffer = c2;
              this.bufferLength = l2;
              this.iv = r3;
              if (u2.length === 0)
                return new Uint8Array(0);
              for (var m2 = 16 * u2.length, y2 = new Uint8Array(m2), v2 = 0, k2 = 0, _2 = u2.length; v2 < _2; ++v2, k2 += 16)
                y2.set(u2[v2], k2);
              return y2;
            } }]);
            return AESBaseCipher;
          }(), _ = function(t3) {
            _inherits(AES128Cipher, t3);
            var r3 = _createSuper(AES128Cipher);
            function AES128Cipher(t4) {
              var o3;
              _classCallCheck(this, AES128Cipher);
              (o3 = r3.call(this))._cyclesOfRepetition = 10;
              o3._keySize = 160;
              o3._rcon = new Uint8Array([141, 1, 2, 4, 8, 16, 32, 64, 128, 27, 54, 108, 216, 171, 77, 154, 47, 94, 188, 99, 198, 151, 53, 106, 212, 179, 125, 250, 239, 197, 145, 57, 114, 228, 211, 189, 97, 194, 159, 37, 74, 148, 51, 102, 204, 131, 29, 58, 116, 232, 203, 141, 1, 2, 4, 8, 16, 32, 64, 128, 27, 54, 108, 216, 171, 77, 154, 47, 94, 188, 99, 198, 151, 53, 106, 212, 179, 125, 250, 239, 197, 145, 57, 114, 228, 211, 189, 97, 194, 159, 37, 74, 148, 51, 102, 204, 131, 29, 58, 116, 232, 203, 141, 1, 2, 4, 8, 16, 32, 64, 128, 27, 54, 108, 216, 171, 77, 154, 47, 94, 188, 99, 198, 151, 53, 106, 212, 179, 125, 250, 239, 197, 145, 57, 114, 228, 211, 189, 97, 194, 159, 37, 74, 148, 51, 102, 204, 131, 29, 58, 116, 232, 203, 141, 1, 2, 4, 8, 16, 32, 64, 128, 27, 54, 108, 216, 171, 77, 154, 47, 94, 188, 99, 198, 151, 53, 106, 212, 179, 125, 250, 239, 197, 145, 57, 114, 228, 211, 189, 97, 194, 159, 37, 74, 148, 51, 102, 204, 131, 29, 58, 116, 232, 203, 141, 1, 2, 4, 8, 16, 32, 64, 128, 27, 54, 108, 216, 171, 77, 154, 47, 94, 188, 99, 198, 151, 53, 106, 212, 179, 125, 250, 239, 197, 145, 57, 114, 228, 211, 189, 97, 194, 159, 37, 74, 148, 51, 102, 204, 131, 29, 58, 116, 232, 203, 141]);
              o3._key = o3._expandKey(t4);
              return o3;
            }
            _createClass(AES128Cipher, [{ key: "_expandKey", value: function _expandKey(t4) {
              var r4 = this._s, o3 = this._rcon, c2 = new Uint8Array(176);
              c2.set(t4);
              for (var l2 = 16, u2 = 1; l2 < 176; ++u2) {
                var h2 = c2[l2 - 3], d2 = c2[l2 - 2], g2 = c2[l2 - 1], m2 = c2[l2 - 4];
                h2 = r4[h2];
                d2 = r4[d2];
                g2 = r4[g2];
                m2 = r4[m2];
                h2 ^= o3[u2];
                for (var y2 = 0; y2 < 4; ++y2) {
                  c2[l2] = h2 ^= c2[l2 - 16];
                  c2[++l2] = d2 ^= c2[l2 - 16];
                  c2[++l2] = g2 ^= c2[l2 - 16];
                  c2[++l2] = m2 ^= c2[l2 - 16];
                  l2++;
                }
              }
              return c2;
            } }]);
            return AES128Cipher;
          }(k);
          r2.AES128Cipher = _;
          var w = function(t3) {
            _inherits(AES256Cipher, t3);
            var r3 = _createSuper(AES256Cipher);
            function AES256Cipher(t4) {
              var o3;
              _classCallCheck(this, AES256Cipher);
              (o3 = r3.call(this))._cyclesOfRepetition = 14;
              o3._keySize = 224;
              o3._key = o3._expandKey(t4);
              return o3;
            }
            _createClass(AES256Cipher, [{ key: "_expandKey", value: function _expandKey(t4) {
              var r4 = this._s, o3 = new Uint8Array(240);
              o3.set(t4);
              for (var c2, l2, u2, h2, d2 = 1, g2 = 32, m2 = 1; g2 < 240; ++m2) {
                if (g2 % 32 == 16) {
                  c2 = r4[c2];
                  l2 = r4[l2];
                  u2 = r4[u2];
                  h2 = r4[h2];
                } else if (g2 % 32 == 0) {
                  c2 = o3[g2 - 3];
                  l2 = o3[g2 - 2];
                  u2 = o3[g2 - 1];
                  h2 = o3[g2 - 4];
                  c2 = r4[c2];
                  l2 = r4[l2];
                  u2 = r4[u2];
                  h2 = r4[h2];
                  c2 ^= d2;
                  (d2 <<= 1) >= 256 && (d2 = 255 & (27 ^ d2));
                }
                for (var y2 = 0; y2 < 4; ++y2) {
                  o3[g2] = c2 ^= o3[g2 - 32];
                  o3[++g2] = l2 ^= o3[g2 - 32];
                  o3[++g2] = u2 ^= o3[g2 - 32];
                  o3[++g2] = h2 ^= o3[g2 - 32];
                  g2++;
                }
              }
              return o3;
            } }]);
            return AES256Cipher;
          }(k);
          r2.AES256Cipher = w;
          var S = function() {
            function PDF17() {
              _classCallCheck(this, PDF17);
            }
            _createClass(PDF17, [{ key: "checkOwnerPassword", value: function checkOwnerPassword(t3, r3, o3, l2) {
              var u2 = new Uint8Array(t3.length + 56);
              u2.set(t3, 0);
              u2.set(r3, t3.length);
              u2.set(o3, t3.length + r3.length);
              var h2 = m(u2, 0, u2.length);
              return (0, c.isArrayEqual)(h2, l2);
            } }, { key: "checkUserPassword", value: function checkUserPassword(t3, r3, o3) {
              var l2 = new Uint8Array(t3.length + 8);
              l2.set(t3, 0);
              l2.set(r3, t3.length);
              var u2 = m(l2, 0, l2.length);
              return (0, c.isArrayEqual)(u2, o3);
            } }, { key: "getOwnerKey", value: function getOwnerKey(t3, r3, o3, c2) {
              var l2 = new Uint8Array(t3.length + 56);
              l2.set(t3, 0);
              l2.set(r3, t3.length);
              l2.set(o3, t3.length + r3.length);
              var u2 = m(l2, 0, l2.length);
              return new w(u2).decryptBlock(c2, false, new Uint8Array(16));
            } }, { key: "getUserKey", value: function getUserKey(t3, r3, o3) {
              var c2 = new Uint8Array(t3.length + 8);
              c2.set(t3, 0);
              c2.set(r3, t3.length);
              var l2 = m(c2, 0, c2.length);
              return new w(l2).decryptBlock(o3, false, new Uint8Array(16));
            } }]);
            return PDF17;
          }();
          r2.PDF17 = S;
          var C = function PDF20Closure() {
            function calculatePDF20Hash(t3, r3, o3) {
              for (var c2 = m(r3, 0, r3.length).subarray(0, 32), l2 = [0], u2 = 0; u2 < 64 || l2[l2.length - 1] > u2 - 32; ) {
                var h2 = t3.length + c2.length + o3.length, d2 = new Uint8Array(h2), g2 = 0;
                d2.set(t3, g2);
                g2 += t3.length;
                d2.set(c2, g2);
                g2 += c2.length;
                d2.set(o3, g2);
                for (var v2 = new Uint8Array(64 * h2), k2 = 0, w2 = 0; k2 < 64; k2++, w2 += h2)
                  v2.set(d2, w2);
                l2 = new _(c2.subarray(0, 16)).encrypt(v2, c2.subarray(16, 32));
                for (var S2 = 0, C2 = 0; C2 < 16; C2++) {
                  S2 *= 1;
                  S2 %= 3;
                  S2 += (l2[C2] >>> 0) % 3;
                  S2 %= 3;
                }
                S2 === 0 ? c2 = m(l2, 0, l2.length) : S2 === 1 ? c2 = calculateSHA384(l2, 0, l2.length) : S2 === 2 && (c2 = y(l2, 0, l2.length));
                u2++;
              }
              return c2.subarray(0, 32);
            }
            return function() {
              function PDF20() {
                _classCallCheck(this, PDF20);
              }
              _createClass(PDF20, [{ key: "hash", value: function hash(t3, r3, o3) {
                return calculatePDF20Hash(t3, r3, o3);
              } }, { key: "checkOwnerPassword", value: function checkOwnerPassword(t3, r3, o3, l2) {
                var u2 = new Uint8Array(t3.length + 56);
                u2.set(t3, 0);
                u2.set(r3, t3.length);
                u2.set(o3, t3.length + r3.length);
                var h2 = calculatePDF20Hash(t3, u2, o3);
                return (0, c.isArrayEqual)(h2, l2);
              } }, { key: "checkUserPassword", value: function checkUserPassword(t3, r3, o3) {
                var l2 = new Uint8Array(t3.length + 8);
                l2.set(t3, 0);
                l2.set(r3, t3.length);
                var u2 = calculatePDF20Hash(t3, l2, []);
                return (0, c.isArrayEqual)(u2, o3);
              } }, { key: "getOwnerKey", value: function getOwnerKey(t3, r3, o3, c2) {
                var l2 = new Uint8Array(t3.length + 56);
                l2.set(t3, 0);
                l2.set(r3, t3.length);
                l2.set(o3, t3.length + r3.length);
                var u2 = calculatePDF20Hash(t3, l2, o3);
                return new w(u2).decryptBlock(c2, false, new Uint8Array(16));
              } }, { key: "getUserKey", value: function getUserKey(t3, r3, o3) {
                var c2 = new Uint8Array(t3.length + 8);
                c2.set(t3, 0);
                c2.set(r3, t3.length);
                var l2 = calculatePDF20Hash(t3, c2, []);
                return new w(l2).decryptBlock(o3, false, new Uint8Array(16));
              } }]);
              return PDF20;
            }();
          }();
          r2.PDF20 = C;
          var x = function() {
            function CipherTransform(t3, r3) {
              _classCallCheck(this, CipherTransform);
              this.StringCipherConstructor = t3;
              this.StreamCipherConstructor = r3;
            }
            _createClass(CipherTransform, [{ key: "createStream", value: function createStream(t3, r3) {
              var o3 = new this.StreamCipherConstructor();
              return new u.DecryptStream(t3, r3, function cipherTransformDecryptStream(t4, r4) {
                return o3.decryptBlock(t4, r4);
              });
            } }, { key: "decryptString", value: function decryptString(t3) {
              var r3 = new this.StringCipherConstructor(), o3 = (0, c.stringToBytes)(t3);
              o3 = r3.decryptBlock(o3, true);
              return (0, c.bytesToString)(o3);
            } }, { key: "encryptString", value: function encryptString(t3) {
              var r3 = new this.StringCipherConstructor();
              if (r3 instanceof k) {
                var o3 = 16 - t3.length % 16;
                t3 += String.fromCharCode(o3).repeat(o3);
                var l2 = new Uint8Array(16);
                if (typeof crypto != "undefined")
                  crypto.getRandomValues(l2);
                else
                  for (var u2 = 0; u2 < 16; u2++)
                    l2[u2] = Math.floor(256 * Math.random());
                var h2 = (0, c.stringToBytes)(t3);
                h2 = r3.encrypt(h2, l2);
                var d2 = new Uint8Array(16 + h2.length);
                d2.set(l2);
                d2.set(h2, 16);
                return (0, c.bytesToString)(d2);
              }
              var g2 = (0, c.stringToBytes)(t3);
              g2 = r3.encrypt(g2);
              return (0, c.bytesToString)(g2);
            } }]);
            return CipherTransform;
          }(), O = function CipherTransformFactoryClosure() {
            var t3 = new Uint8Array([40, 191, 78, 94, 78, 117, 138, 65, 100, 0, 78, 86, 255, 250, 1, 8, 46, 46, 0, 182, 208, 104, 62, 128, 47, 12, 169, 254, 100, 83, 105, 122]);
            function prepareKeyData(r4, o3, c2, l2, u2, g2, m2, y2) {
              var v2, k2, _2 = 40 + c2.length + r4.length, w2 = new Uint8Array(_2), S2 = 0;
              if (o3) {
                k2 = Math.min(32, o3.length);
                for (; S2 < k2; ++S2)
                  w2[S2] = o3[S2];
              }
              v2 = 0;
              for (; S2 < 32; )
                w2[S2++] = t3[v2++];
              for (v2 = 0, k2 = c2.length; v2 < k2; ++v2)
                w2[S2++] = c2[v2];
              w2[S2++] = 255 & u2;
              w2[S2++] = u2 >> 8 & 255;
              w2[S2++] = u2 >> 16 & 255;
              w2[S2++] = u2 >>> 24 & 255;
              for (v2 = 0, k2 = r4.length; v2 < k2; ++v2)
                w2[S2++] = r4[v2];
              if (g2 >= 4 && !y2) {
                w2[S2++] = 255;
                w2[S2++] = 255;
                w2[S2++] = 255;
                w2[S2++] = 255;
              }
              var C2 = d(w2, 0, S2), x2 = m2 >> 3;
              if (g2 >= 3)
                for (v2 = 0; v2 < 50; ++v2)
                  C2 = d(C2, 0, x2);
              var O2, T = C2.subarray(0, x2);
              if (g2 >= 3) {
                for (S2 = 0; S2 < 32; ++S2)
                  w2[S2] = t3[S2];
                for (v2 = 0, k2 = r4.length; v2 < k2; ++v2)
                  w2[S2++] = r4[v2];
                O2 = new h(T).encryptBlock(d(w2, 0, S2));
                k2 = T.length;
                var E = new Uint8Array(k2);
                for (v2 = 1; v2 <= 19; ++v2) {
                  for (var M = 0; M < k2; ++M)
                    E[M] = T[M] ^ v2;
                  O2 = new h(E).encryptBlock(O2);
                }
                for (v2 = 0, k2 = O2.length; v2 < k2; ++v2)
                  if (l2[v2] !== O2[v2])
                    return null;
              } else
                for (v2 = 0, k2 = (O2 = new h(T).encryptBlock(t3)).length; v2 < k2; ++v2)
                  if (l2[v2] !== O2[v2])
                    return null;
              return T;
            }
            var r3 = l.Name.get("Identity");
            function buildObjectKey(t4, r4, o3) {
              var c2, l2 = arguments.length > 3 && arguments[3] !== void 0 && arguments[3], u2 = new Uint8Array(o3.length + 9), h2 = o3.length;
              for (c2 = 0; c2 < h2; ++c2)
                u2[c2] = o3[c2];
              u2[c2++] = 255 & t4;
              u2[c2++] = t4 >> 8 & 255;
              u2[c2++] = t4 >> 16 & 255;
              u2[c2++] = 255 & r4;
              u2[c2++] = r4 >> 8 & 255;
              if (l2) {
                u2[c2++] = 115;
                u2[c2++] = 65;
                u2[c2++] = 108;
                u2[c2++] = 84;
              }
              var g2 = d(u2, 0, c2);
              return g2.subarray(0, Math.min(o3.length + 5, 16));
            }
            function buildCipherConstructor(t4, r4, o3, u2, d2) {
              if (!(r4 instanceof l.Name))
                throw new c.FormatError("Invalid crypt filter name.");
              var g2, m2 = t4.get(r4.name);
              m2 != null && (g2 = m2.get("CFM"));
              if (!g2 || g2.name === "None")
                return function cipherTransformFactoryBuildCipherConstructorNone() {
                  return new v();
                };
              if (g2.name === "V2")
                return function cipherTransformFactoryBuildCipherConstructorV2() {
                  return new h(buildObjectKey(o3, u2, d2, false));
                };
              if (g2.name === "AESV2")
                return function cipherTransformFactoryBuildCipherConstructorAESV2() {
                  return new _(buildObjectKey(o3, u2, d2, true));
                };
              if (g2.name === "AESV3")
                return function cipherTransformFactoryBuildCipherConstructorAESV3() {
                  return new w(d2);
                };
              throw new c.FormatError("Unknown crypto method");
            }
            return function() {
              function CipherTransformFactory(o3, u2, g2) {
                _classCallCheck(this, CipherTransformFactory);
                var m2 = o3.get("Filter");
                if (!(0, l.isName)(m2, "Standard"))
                  throw new c.FormatError("unknown encryption method");
                this.filterName = m2.name;
                this.dict = o3;
                var y2 = o3.get("V");
                if (!Number.isInteger(y2) || y2 !== 1 && y2 !== 2 && y2 !== 4 && y2 !== 5)
                  throw new c.FormatError("unsupported encryption algorithm");
                this.algorithm = y2;
                var v2 = o3.get("Length");
                if (!v2)
                  if (y2 <= 3)
                    v2 = 40;
                  else {
                    var k2 = o3.get("CF"), _2 = o3.get("StmF");
                    if (k2 instanceof l.Dict && _2 instanceof l.Name) {
                      k2.suppressEncryption = true;
                      var w2 = k2.get(_2.name);
                      (v2 = w2 && w2.get("Length") || 128) < 40 && (v2 <<= 3);
                    }
                  }
                if (!Number.isInteger(v2) || v2 < 40 || v2 % 8 != 0)
                  throw new c.FormatError("invalid key length");
                var x2 = (0, c.stringToBytes)(o3.get("O")).subarray(0, 32), O2 = (0, c.stringToBytes)(o3.get("U")).subarray(0, 32), T = o3.get("P"), E = o3.get("R"), M = (y2 === 4 || y2 === 5) && o3.get("EncryptMetadata") !== false;
                this.encryptMetadata = M;
                var R, D, j = (0, c.stringToBytes)(u2);
                if (g2) {
                  if (E === 6)
                    try {
                      g2 = (0, c.utf8StringToString)(g2);
                    } catch (t4) {
                      (0, c.warn)("CipherTransformFactory: Unable to convert UTF8 encoded password.");
                    }
                  R = (0, c.stringToBytes)(g2);
                }
                if (y2 !== 5)
                  D = prepareKeyData(j, R, x2, O2, T, E, v2, M);
                else {
                  var L = (0, c.stringToBytes)(o3.get("O")).subarray(32, 40), N = (0, c.stringToBytes)(o3.get("O")).subarray(40, 48), U = (0, c.stringToBytes)(o3.get("U")).subarray(0, 48), H = (0, c.stringToBytes)(o3.get("U")).subarray(32, 40), $ = (0, c.stringToBytes)(o3.get("U")).subarray(40, 48), X = (0, c.stringToBytes)(o3.get("OE")), q = (0, c.stringToBytes)(o3.get("UE"));
                  (0, c.stringToBytes)(o3.get("Perms"));
                  D = function createEncryptionKey20(t4, r4, o4, c2, l2, u3, h2, d2, g3, m3, y3, v3) {
                    if (r4) {
                      var k3 = Math.min(127, r4.length);
                      r4 = r4.subarray(0, k3);
                    } else
                      r4 = [];
                    var _3;
                    return (_3 = t4 === 6 ? new C() : new S()).checkUserPassword(r4, d2, h2) ? _3.getUserKey(r4, g3, y3) : r4.length && _3.checkOwnerPassword(r4, c2, u3, o4) ? _3.getOwnerKey(r4, l2, u3, m3) : null;
                  }(E, R, x2, L, N, U, O2, H, $, X, q);
                }
                if (!D && !g2)
                  throw new c.PasswordException("No password given", c.PasswordResponses.NEED_PASSWORD);
                if (!D && g2) {
                  var G = function decodeUserPassword(r4, o4, c2, l2) {
                    for (var u3 = new Uint8Array(32), g3 = 0, m3 = Math.min(32, r4.length); g3 < m3; ++g3)
                      u3[g3] = r4[g3];
                    for (var y3 = 0; g3 < 32; )
                      u3[g3++] = t3[y3++];
                    var v3, k3 = d(u3, 0, g3), _3 = l2 >> 3;
                    if (c2 >= 3)
                      for (y3 = 0; y3 < 50; ++y3)
                        k3 = d(k3, 0, k3.length);
                    if (c2 >= 3) {
                      v3 = o4;
                      var w3 = new Uint8Array(_3);
                      for (y3 = 19; y3 >= 0; y3--) {
                        for (var S2 = 0; S2 < _3; ++S2)
                          w3[S2] = k3[S2] ^ y3;
                        v3 = new h(w3).encryptBlock(v3);
                      }
                    } else
                      v3 = new h(k3.subarray(0, _3)).encryptBlock(o4);
                    return v3;
                  }(R, x2, E, v2);
                  D = prepareKeyData(j, G, x2, O2, T, E, v2, M);
                }
                if (!D)
                  throw new c.PasswordException("Incorrect Password", c.PasswordResponses.INCORRECT_PASSWORD);
                this.encryptionKey = D;
                if (y2 >= 4) {
                  var z = o3.get("CF");
                  z instanceof l.Dict && (z.suppressEncryption = true);
                  this.cf = z;
                  this.stmf = o3.get("StmF") || r3;
                  this.strf = o3.get("StrF") || r3;
                  this.eff = o3.get("EFF") || this.stmf;
                }
              }
              _createClass(CipherTransformFactory, [{ key: "createCipherTransform", value: function createCipherTransform(t4, r4) {
                if (this.algorithm === 4 || this.algorithm === 5)
                  return new x(buildCipherConstructor(this.cf, this.stmf, t4, r4, this.encryptionKey), buildCipherConstructor(this.cf, this.strf, t4, r4, this.encryptionKey));
                var o3 = buildObjectKey(t4, r4, this.encryptionKey, false), c2 = function buildCipherCipherConstructor() {
                  return new h(o3);
                };
                return new x(c2, c2);
              } }]);
              return CipherTransformFactory;
            }();
          }();
          r2.CipherTransformFactory = O;
        }, (t2, r2, o2) => {
          "use strict";
          function _typeof(t3) {
            return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t4) {
              return typeof t4;
            } : function(t4) {
              return t4 && typeof Symbol == "function" && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
            }, _typeof(t3);
          }
          Object.defineProperty(r2, "__esModule", { value: true });
          r2.DecryptStream = void 0;
          var c = o2(182);
          function _defineProperties(t3, r3) {
            for (var o3 = 0; o3 < r3.length; o3++) {
              var c2 = r3[o3];
              c2.enumerable = c2.enumerable || false;
              c2.configurable = true;
              "value" in c2 && (c2.writable = true);
              Object.defineProperty(t3, c2.key, c2);
            }
          }
          function _setPrototypeOf(t3, r3) {
            _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(t4, r4) {
              t4.__proto__ = r4;
              return t4;
            };
            return _setPrototypeOf(t3, r3);
          }
          function _createSuper(t3) {
            var r3 = function _isNativeReflectConstruct() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                }));
                return true;
              } catch (t4) {
                return false;
              }
            }();
            return function _createSuperInternal() {
              var o3, c2 = _getPrototypeOf(t3);
              if (r3) {
                var l2 = _getPrototypeOf(this).constructor;
                o3 = Reflect.construct(c2, arguments, l2);
              } else
                o3 = c2.apply(this, arguments);
              return _possibleConstructorReturn(this, o3);
            };
          }
          function _possibleConstructorReturn(t3, r3) {
            if (r3 && (_typeof(r3) === "object" || typeof r3 == "function"))
              return r3;
            if (r3 !== void 0)
              throw new TypeError("Derived constructors may only return object or undefined");
            return function _assertThisInitialized(t4) {
              if (t4 === void 0)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return t4;
            }(t3);
          }
          function _getPrototypeOf(t3) {
            _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(t4) {
              return t4.__proto__ || Object.getPrototypeOf(t4);
            };
            return _getPrototypeOf(t3);
          }
          var l = function(t3) {
            !function _inherits(t4, r4) {
              if (typeof r4 != "function" && r4 !== null)
                throw new TypeError("Super expression must either be null or a function");
              t4.prototype = Object.create(r4 && r4.prototype, { constructor: { value: t4, writable: true, configurable: true } });
              Object.defineProperty(t4, "prototype", { writable: false });
              r4 && _setPrototypeOf(t4, r4);
            }(DecryptStream, t3);
            var r3 = _createSuper(DecryptStream);
            function DecryptStream(t4, o3, c2) {
              var l2;
              !function _classCallCheck(t5, r4) {
                if (!(t5 instanceof r4))
                  throw new TypeError("Cannot call a class as a function");
              }(this, DecryptStream);
              (l2 = r3.call(this, o3)).str = t4;
              l2.dict = t4.dict;
              l2.decrypt = c2;
              l2.nextChunk = null;
              l2.initialized = false;
              return l2;
            }
            !function _createClass(t4, r4, o3) {
              r4 && _defineProperties(t4.prototype, r4);
              o3 && _defineProperties(t4, o3);
              Object.defineProperty(t4, "prototype", { writable: false });
              return t4;
            }(DecryptStream, [{ key: "readBlock", value: function readBlock() {
              var t4;
              if (this.initialized)
                t4 = this.nextChunk;
              else {
                t4 = this.str.getBytes(512);
                this.initialized = true;
              }
              if (t4 && t4.length !== 0) {
                this.nextChunk = this.str.getBytes(512);
                var r4 = this.nextChunk && this.nextChunk.length > 0;
                t4 = (0, this.decrypt)(t4, !r4);
                for (var o3 = this.bufferLength, c2 = t4.length, l2 = this.ensureBuffer(o3 + c2), u = 0; u < c2; u++)
                  l2[o3++] = t4[u];
                this.bufferLength = o3;
              } else
                this.eof = true;
            } }]);
            return DecryptStream;
          }(c.DecodeStream);
          r2.DecryptStream = l;
        }, (t2, r2, o2) => {
          "use strict";
          Object.defineProperty(r2, "__esModule", { value: true });
          r2.XFAFactory = void 0;
          var c = function _interopRequireDefault(t3) {
            return t3 && t3.__esModule ? t3 : { default: t3 };
          }(o2(2)), l = o2(230), u = o2(234), h = o2(240), d = o2(238), g = o2(231), m = o2(4), y = o2(241), v = o2(251);
          function _createForOfIteratorHelper(t3, r3) {
            var o3 = typeof Symbol != "undefined" && t3[Symbol.iterator] || t3["@@iterator"];
            if (!o3) {
              if (Array.isArray(t3) || (o3 = function _unsupportedIterableToArray(t4, r4) {
                if (!t4)
                  return;
                if (typeof t4 == "string")
                  return _arrayLikeToArray(t4, r4);
                var o4 = Object.prototype.toString.call(t4).slice(8, -1);
                o4 === "Object" && t4.constructor && (o4 = t4.constructor.name);
                if (o4 === "Map" || o4 === "Set")
                  return Array.from(t4);
                if (o4 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(o4))
                  return _arrayLikeToArray(t4, r4);
              }(t3)) || r3 && t3 && typeof t3.length == "number") {
                o3 && (t3 = o3);
                var c2 = 0, l2 = function F() {
                };
                return { s: l2, n: function n() {
                  return c2 >= t3.length ? { done: true } : { done: false, value: t3[c2++] };
                }, e: function e(t4) {
                  throw t4;
                }, f: l2 };
              }
              throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
            }
            var u2, h2 = true, d2 = false;
            return { s: function s() {
              o3 = o3.call(t3);
            }, n: function n() {
              var t4 = o3.next();
              h2 = t4.done;
              return t4;
            }, e: function e(t4) {
              d2 = true;
              u2 = t4;
            }, f: function f() {
              try {
                h2 || o3.return == null || o3.return();
              } finally {
                if (d2)
                  throw u2;
              }
            } };
          }
          function _arrayLikeToArray(t3, r3) {
            (r3 == null || r3 > t3.length) && (r3 = t3.length);
            for (var o3 = 0, c2 = new Array(r3); o3 < r3; o3++)
              c2[o3] = t3[o3];
            return c2;
          }
          function asyncGeneratorStep(t3, r3, o3, c2, l2, u2, h2) {
            try {
              var d2 = t3[u2](h2), g2 = d2.value;
            } catch (t4) {
              o3(t4);
              return;
            }
            d2.done ? r3(g2) : Promise.resolve(g2).then(c2, l2);
          }
          function _asyncToGenerator(t3) {
            return function() {
              var r3 = this, o3 = arguments;
              return new Promise(function(c2, l2) {
                var u2 = t3.apply(r3, o3);
                function _next(t4) {
                  asyncGeneratorStep(u2, c2, l2, _next, _throw, "next", t4);
                }
                function _throw(t4) {
                  asyncGeneratorStep(u2, c2, l2, _next, _throw, "throw", t4);
                }
                _next(void 0);
              });
            };
          }
          function _defineProperties(t3, r3) {
            for (var o3 = 0; o3 < r3.length; o3++) {
              var c2 = r3[o3];
              c2.enumerable = c2.enumerable || false;
              c2.configurable = true;
              "value" in c2 && (c2.writable = true);
              Object.defineProperty(t3, c2.key, c2);
            }
          }
          var k = function() {
            function XFAFactory(t4) {
              !function _classCallCheck(t5, r5) {
                if (!(t5 instanceof r5))
                  throw new TypeError("Cannot call a class as a function");
              }(this, XFAFactory);
              try {
                this.root = new y.XFAParser().parse(XFAFactory._createDocument(t4));
                var r4 = new u.Binder(this.root);
                this.form = r4.bind();
                this.dataHandler = new h.DataHandler(this.root, r4.getData());
                this.form[l.$globalData].template = this.form;
              } catch (t5) {
                (0, m.warn)("XFA - an error occurred during parsing and binding: ".concat(t5));
              }
            }
            !function _createClass(t4, r4, o4) {
              r4 && _defineProperties(t4.prototype, r4);
              o4 && _defineProperties(t4, o4);
              Object.defineProperty(t4, "prototype", { writable: false });
              return t4;
            }(XFAFactory, [{ key: "isValid", value: function isValid() {
              return this.root && this.form;
            } }, { key: "_createPagesHelper", value: function _createPagesHelper() {
              var t4 = this.form[l.$toPages]();
              return new Promise(function(r4, o4) {
                setTimeout(function nextIteration() {
                  try {
                    var c2 = t4.next();
                    c2.done ? r4(c2.value) : setTimeout(nextIteration, 0);
                  } catch (t5) {
                    o4(t5);
                  }
                }, 0);
              });
            } }, { key: "_createPages", value: (o3 = _asyncToGenerator(c.default.mark(function _callee() {
              return c.default.wrap(function _callee$(t4) {
                for (; ; )
                  switch (t4.prev = t4.next) {
                    case 0:
                      t4.prev = 0;
                      t4.next = 3;
                      return this._createPagesHelper();
                    case 3:
                      this.pages = t4.sent;
                      this.dims = this.pages.children.map(function(t5) {
                        var r4 = t5.attributes.style, o4 = r4.width, c2 = r4.height;
                        return [0, 0, parseInt(o4), parseInt(c2)];
                      });
                      t4.next = 10;
                      break;
                    case 7:
                      t4.prev = 7;
                      t4.t0 = t4.catch(0);
                      (0, m.warn)("XFA - an error occurred during layout: ".concat(t4.t0));
                    case 10:
                    case "end":
                      return t4.stop();
                  }
              }, _callee, this, [[0, 7]]);
            })), function _createPages() {
              return o3.apply(this, arguments);
            }) }, { key: "getBoundingBox", value: function getBoundingBox(t4) {
              return this.dims[t4];
            } }, { key: "getNumPages", value: (r3 = _asyncToGenerator(c.default.mark(function _callee2() {
              return c.default.wrap(function _callee2$(t4) {
                for (; ; )
                  switch (t4.prev = t4.next) {
                    case 0:
                      if (this.pages) {
                        t4.next = 3;
                        break;
                      }
                      t4.next = 3;
                      return this._createPages();
                    case 3:
                      return t4.abrupt("return", this.dims.length);
                    case 4:
                    case "end":
                      return t4.stop();
                  }
              }, _callee2, this);
            })), function getNumPages() {
              return r3.apply(this, arguments);
            }) }, { key: "setImages", value: function setImages(t4) {
              this.form[l.$globalData].images = t4;
            } }, { key: "setFonts", value: function setFonts(t4) {
              this.form[l.$globalData].fontFinder = new d.FontFinder(t4);
              var r4, o4 = [], c2 = _createForOfIteratorHelper(this.form[l.$globalData].usedTypefaces);
              try {
                for (c2.s(); !(r4 = c2.n()).done; ) {
                  var u2 = r4.value;
                  u2 = (0, g.stripQuotes)(u2);
                  this.form[l.$globalData].fontFinder.find(u2) || o4.push(u2);
                }
              } catch (t5) {
                c2.e(t5);
              } finally {
                c2.f();
              }
              return o4.length > 0 ? o4 : null;
            } }, { key: "appendFonts", value: function appendFonts(t4, r4) {
              this.form[l.$globalData].fontFinder.add(t4, r4);
            } }, { key: "getPages", value: (t3 = _asyncToGenerator(c.default.mark(function _callee3() {
              var t4;
              return c.default.wrap(function _callee3$(r4) {
                for (; ; )
                  switch (r4.prev = r4.next) {
                    case 0:
                      if (this.pages) {
                        r4.next = 3;
                        break;
                      }
                      r4.next = 3;
                      return this._createPages();
                    case 3:
                      t4 = this.pages;
                      this.pages = null;
                      return r4.abrupt("return", t4);
                    case 6:
                    case "end":
                      return r4.stop();
                  }
              }, _callee3, this);
            })), function getPages() {
              return t3.apply(this, arguments);
            }) }, { key: "serializeData", value: function serializeData(t4) {
              return this.dataHandler.serialize(t4);
            } }], [{ key: "_createDocument", value: function _createDocument(t4) {
              return t4["/xdp:xdp"] ? Object.values(t4).join("") : t4["xdp:xdp"];
            } }, { key: "getRichTextAsHtml", value: function getRichTextAsHtml(t4) {
              if (!t4 || typeof t4 != "string")
                return null;
              try {
                var r4 = new y.XFAParser(v.XhtmlNamespace, true).parse(t4);
                if (!["body", "xhtml"].includes(r4[l.$nodeName])) {
                  var o4 = v.XhtmlNamespace.body({});
                  o4[l.$appendChild](r4);
                  r4 = o4;
                }
                var c2 = r4[l.$toHTML]();
                if (!c2.success)
                  return null;
                var u2 = c2.html, h2 = u2.attributes;
                if (h2) {
                  h2.class && (h2.class = h2.class.filter(function(t5) {
                    return !t5.startsWith("xfa");
                  }));
                  h2.dir = "auto";
                }
                return { html: u2, str: r4[l.$text]() };
              } catch (t5) {
                (0, m.warn)("XFA - an error occurred during parsing of rich text: ".concat(t5));
              }
              return null;
            } }]);
            var t3, r3, o3;
            return XFAFactory;
          }();
          r2.XFAFactory = k;
        }, (t2, r2, o2) => {
          "use strict";
          Object.defineProperty(r2, "__esModule", { value: true });
          r2.XmlObject = r2.XFAObjectArray = r2.XFAObject = r2.XFAAttribute = r2.StringObject = r2.OptionObject = r2.Option10 = r2.Option01 = r2.IntegerObject = r2.ContentObject = r2.$uid = r2.$toStyle = r2.$toString = r2.$toPages = r2.$toHTML = r2.$text = r2.$tabIndex = r2.$setValue = r2.$setSetAttributes = r2.$setId = r2.$searchNode = r2.$root = r2.$resolvePrototypes = r2.$removeChild = r2.$pushPara = r2.$pushGlyphs = r2.$popPara = r2.$onText = r2.$onChildCheck = r2.$onChild = r2.$nsAttributes = r2.$nodeName = r2.$namespaceId = r2.$isUsable = r2.$isTransparent = r2.$isThereMoreWidth = r2.$isSplittable = r2.$isNsAgnostic = r2.$isDescendent = r2.$isDataValue = r2.$isCDATAXml = r2.$isBindable = r2.$insertAt = r2.$indexOf = r2.$ids = r2.$hasSettableValue = r2.$globalData = r2.$getTemplateRoot = r2.$getSubformParent = r2.$getRealChildrenByNameIt = r2.$getParent = r2.$getNextPage = r2.$getExtra = r2.$getDataValue = r2.$getContainedChildren = r2.$getChildrenByNameIt = r2.$getChildrenByName = r2.$getChildrenByClass = r2.$getChildren = r2.$getAvailableSpace = r2.$getAttributes = r2.$getAttributeIt = r2.$flushHTML = r2.$finalize = r2.$extra = r2.$dump = r2.$data = r2.$content = r2.$consumed = r2.$clone = r2.$cleanup = r2.$cleanPage = r2.$clean = r2.$childrenToHTML = r2.$appendChild = r2.$addHTML = r2.$acceptWhitespace = void 0;
          var c = function _interopRequireDefault(t3) {
            return t3 && t3.__esModule ? t3 : { default: t3 };
          }(o2(2)), l = o2(231), u = o2(4), h = o2(161), d = o2(232), g = o2(233);
          function _get() {
            _get = typeof Reflect != "undefined" && Reflect.get ? Reflect.get : function _get2(t3, r3, o3) {
              var c2 = _superPropBase(t3, r3);
              if (c2) {
                var l2 = Object.getOwnPropertyDescriptor(c2, r3);
                return l2.get ? l2.get.call(arguments.length < 3 ? t3 : o3) : l2.value;
              }
            };
            return _get.apply(this, arguments);
          }
          function _superPropBase(t3, r3) {
            for (; !Object.prototype.hasOwnProperty.call(t3, r3) && (t3 = _getPrototypeOf(t3)) !== null; )
              ;
            return t3;
          }
          function _slicedToArray(t3, r3) {
            return function _arrayWithHoles(t4) {
              if (Array.isArray(t4))
                return t4;
            }(t3) || function _iterableToArrayLimit(t4, r4) {
              var o3 = t4 == null ? null : typeof Symbol != "undefined" && t4[Symbol.iterator] || t4["@@iterator"];
              if (o3 == null)
                return;
              var c2, l2, u2 = [], h2 = true, d2 = false;
              try {
                for (o3 = o3.call(t4); !(h2 = (c2 = o3.next()).done); h2 = true) {
                  u2.push(c2.value);
                  if (r4 && u2.length === r4)
                    break;
                }
              } catch (t5) {
                d2 = true;
                l2 = t5;
              } finally {
                try {
                  h2 || o3.return == null || o3.return();
                } finally {
                  if (d2)
                    throw l2;
                }
              }
              return u2;
            }(t3, r3) || _unsupportedIterableToArray(t3, r3) || function _nonIterableRest() {
              throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
            }();
          }
          function _inherits(t3, r3) {
            if (typeof r3 != "function" && r3 !== null)
              throw new TypeError("Super expression must either be null or a function");
            t3.prototype = Object.create(r3 && r3.prototype, { constructor: { value: t3, writable: true, configurable: true } });
            Object.defineProperty(t3, "prototype", { writable: false });
            r3 && _setPrototypeOf(t3, r3);
          }
          function _setPrototypeOf(t3, r3) {
            _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(t4, r4) {
              t4.__proto__ = r4;
              return t4;
            };
            return _setPrototypeOf(t3, r3);
          }
          function _createSuper(t3) {
            var r3 = function _isNativeReflectConstruct() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                }));
                return true;
              } catch (t4) {
                return false;
              }
            }();
            return function _createSuperInternal() {
              var o3, c2 = _getPrototypeOf(t3);
              if (r3) {
                var l2 = _getPrototypeOf(this).constructor;
                o3 = Reflect.construct(c2, arguments, l2);
              } else
                o3 = c2.apply(this, arguments);
              return _possibleConstructorReturn(this, o3);
            };
          }
          function _possibleConstructorReturn(t3, r3) {
            if (r3 && (_typeof(r3) === "object" || typeof r3 == "function"))
              return r3;
            if (r3 !== void 0)
              throw new TypeError("Derived constructors may only return object or undefined");
            return _assertThisInitialized(t3);
          }
          function _assertThisInitialized(t3) {
            if (t3 === void 0)
              throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return t3;
          }
          function _getPrototypeOf(t3) {
            _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(t4) {
              return t4.__proto__ || Object.getPrototypeOf(t4);
            };
            return _getPrototypeOf(t3);
          }
          function _typeof(t3) {
            return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t4) {
              return typeof t4;
            } : function(t4) {
              return t4 && typeof Symbol == "function" && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
            }, _typeof(t3);
          }
          function _toConsumableArray(t3) {
            return function _arrayWithoutHoles(t4) {
              if (Array.isArray(t4))
                return _arrayLikeToArray(t4);
            }(t3) || function _iterableToArray(t4) {
              if (typeof Symbol != "undefined" && t4[Symbol.iterator] != null || t4["@@iterator"] != null)
                return Array.from(t4);
            }(t3) || _unsupportedIterableToArray(t3) || function _nonIterableSpread() {
              throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
            }();
          }
          function _createForOfIteratorHelper(t3, r3) {
            var o3 = typeof Symbol != "undefined" && t3[Symbol.iterator] || t3["@@iterator"];
            if (!o3) {
              if (Array.isArray(t3) || (o3 = _unsupportedIterableToArray(t3)) || r3 && t3 && typeof t3.length == "number") {
                o3 && (t3 = o3);
                var c2 = 0, l2 = function F() {
                };
                return { s: l2, n: function n() {
                  return c2 >= t3.length ? { done: true } : { done: false, value: t3[c2++] };
                }, e: function e(t4) {
                  throw t4;
                }, f: l2 };
              }
              throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
            }
            var u2, h2 = true, d2 = false;
            return { s: function s() {
              o3 = o3.call(t3);
            }, n: function n() {
              var t4 = o3.next();
              h2 = t4.done;
              return t4;
            }, e: function e(t4) {
              d2 = true;
              u2 = t4;
            }, f: function f() {
              try {
                h2 || o3.return == null || o3.return();
              } finally {
                if (d2)
                  throw u2;
              }
            } };
          }
          function _unsupportedIterableToArray(t3, r3) {
            if (t3) {
              if (typeof t3 == "string")
                return _arrayLikeToArray(t3, r3);
              var o3 = Object.prototype.toString.call(t3).slice(8, -1);
              o3 === "Object" && t3.constructor && (o3 = t3.constructor.name);
              return o3 === "Map" || o3 === "Set" ? Array.from(t3) : o3 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(o3) ? _arrayLikeToArray(t3, r3) : void 0;
            }
          }
          function _arrayLikeToArray(t3, r3) {
            (r3 == null || r3 > t3.length) && (r3 = t3.length);
            for (var o3 = 0, c2 = new Array(r3); o3 < r3; o3++)
              c2[o3] = t3[o3];
            return c2;
          }
          function _classCallCheck(t3, r3) {
            if (!(t3 instanceof r3))
              throw new TypeError("Cannot call a class as a function");
          }
          function _defineProperties(t3, r3) {
            for (var o3 = 0; o3 < r3.length; o3++) {
              var c2 = r3[o3];
              c2.enumerable = c2.enumerable || false;
              c2.configurable = true;
              "value" in c2 && (c2.writable = true);
              Object.defineProperty(t3, c2.key, c2);
            }
          }
          function _createClass(t3, r3, o3) {
            r3 && _defineProperties(t3.prototype, r3);
            o3 && _defineProperties(t3, o3);
            Object.defineProperty(t3, "prototype", { writable: false });
            return t3;
          }
          var m = Symbol();
          r2.$acceptWhitespace = m;
          var y = Symbol();
          r2.$addHTML = y;
          var v = Symbol();
          r2.$appendChild = v;
          var k = Symbol();
          r2.$childrenToHTML = k;
          var _ = Symbol();
          r2.$clean = _;
          var w = Symbol();
          r2.$cleanPage = w;
          var S = Symbol();
          r2.$cleanup = S;
          var C = Symbol();
          r2.$clone = C;
          var x = Symbol();
          r2.$consumed = x;
          var O = Symbol("content");
          r2.$content = O;
          var T = Symbol("data");
          r2.$data = T;
          var E = Symbol();
          r2.$dump = E;
          var M = Symbol("extra");
          r2.$extra = M;
          var R = Symbol();
          r2.$finalize = R;
          var D = Symbol();
          r2.$flushHTML = D;
          var j = Symbol();
          r2.$getAttributeIt = j;
          var L = Symbol();
          r2.$getAttributes = L;
          var N = Symbol();
          r2.$getAvailableSpace = N;
          var U = Symbol();
          r2.$getChildrenByClass = U;
          var H = Symbol();
          r2.$getChildrenByName = H;
          var $ = Symbol();
          r2.$getChildrenByNameIt = $;
          var X = Symbol();
          r2.$getDataValue = X;
          var q = Symbol();
          r2.$getExtra = q;
          var G = Symbol();
          r2.$getRealChildrenByNameIt = G;
          var z = Symbol();
          r2.$getChildren = z;
          var W = Symbol();
          r2.$getContainedChildren = W;
          var V = Symbol();
          r2.$getNextPage = V;
          var K = Symbol();
          r2.$getSubformParent = K;
          var Y = Symbol();
          r2.$getParent = Y;
          var J = Symbol();
          r2.$getTemplateRoot = J;
          var Z = Symbol();
          r2.$globalData = Z;
          var Q = Symbol();
          r2.$hasSettableValue = Q;
          var ee = Symbol();
          r2.$ids = ee;
          var te = Symbol();
          r2.$indexOf = te;
          var re = Symbol();
          r2.$insertAt = re;
          var ae = Symbol();
          r2.$isCDATAXml = ae;
          var ne = Symbol();
          r2.$isBindable = ne;
          var ie = Symbol();
          r2.$isDataValue = ie;
          var oe = Symbol();
          r2.$isDescendent = oe;
          var se = Symbol();
          r2.$isNsAgnostic = se;
          var ce = Symbol();
          r2.$isSplittable = ce;
          var le = Symbol();
          r2.$isThereMoreWidth = le;
          var ue = Symbol();
          r2.$isTransparent = ue;
          var fe = Symbol();
          r2.$isUsable = fe;
          var he = Symbol(), de = Symbol("namespaceId");
          r2.$namespaceId = de;
          var pe = Symbol("nodeName");
          r2.$nodeName = pe;
          var ge = Symbol();
          r2.$nsAttributes = ge;
          var me = Symbol();
          r2.$onChild = me;
          var ye = Symbol();
          r2.$onChildCheck = ye;
          var ve = Symbol();
          r2.$onText = ve;
          var be = Symbol();
          r2.$pushGlyphs = be;
          var ke = Symbol();
          r2.$popPara = ke;
          var _e = Symbol();
          r2.$pushPara = _e;
          var we = Symbol();
          r2.$removeChild = we;
          var Se = Symbol("root");
          r2.$root = Se;
          var Ce = Symbol();
          r2.$resolvePrototypes = Ce;
          var xe = Symbol();
          r2.$searchNode = xe;
          var Oe = Symbol();
          r2.$setId = Oe;
          var Ae = Symbol();
          r2.$setSetAttributes = Ae;
          var Pe = Symbol();
          r2.$setValue = Pe;
          var Te = Symbol();
          r2.$tabIndex = Te;
          var Fe = Symbol();
          r2.$text = Fe;
          var Ie = Symbol();
          r2.$toPages = Ie;
          var Ee = Symbol();
          r2.$toHTML = Ee;
          var Me = Symbol();
          r2.$toString = Me;
          var Re = Symbol();
          r2.$toStyle = Re;
          var De = Symbol("uid");
          r2.$uid = De;
          var je = Symbol(), Be = Symbol(), Le = Symbol(), Ne = Symbol("_children"), Ue = Symbol(), He = Symbol(), $e = Symbol(), Xe = Symbol(), qe = Symbol(), Ge = Symbol(), ze = Symbol(), We = Symbol(), Ve = Symbol(), Ke = Symbol("parent"), Ye = Symbol(), Je = Symbol(), Ze = Symbol(), Qe = 0, et = d.NamespaceIds.datasets.id, tt = function() {
            function XFAObject(t3, r3) {
              var o3 = arguments.length > 2 && arguments[2] !== void 0 && arguments[2];
              _classCallCheck(this, XFAObject);
              this[de] = t3;
              this[pe] = r3;
              this[ze] = o3;
              this[Ke] = null;
              this[Ne] = [];
              this[De] = "".concat(r3).concat(Qe++);
              this[Z] = null;
            }
            _createClass(XFAObject, [{ key: me, value: function value(t3) {
              if (!this[ze] || !this[ye](t3))
                return false;
              var r3 = t3[pe], o3 = this[r3];
              if (!(o3 instanceof rt)) {
                o3 !== null && this[we](o3);
                this[r3] = t3;
                this[v](t3);
                return true;
              }
              if (o3.push(t3)) {
                this[v](t3);
                return true;
              }
              var c2 = "";
              this.id ? c2 = " (id: ".concat(this.id, ")") : this.name && (c2 = " (name: ".concat(this.name, " ").concat(this.h.value, ")"));
              (0, u.warn)('XFA - node "'.concat(this[pe], '"').concat(c2, ' has already enough "').concat(r3, '"!'));
              return false;
            } }, { key: ye, value: function value(t3) {
              return this.hasOwnProperty(t3[pe]) && t3[de] === this[de];
            } }, { key: se, value: function value() {
              return false;
            } }, { key: m, value: function value() {
              return false;
            } }, { key: ae, value: function value() {
              return false;
            } }, { key: ne, value: function value() {
              return false;
            } }, { key: ke, value: function value() {
              this.para && this[J]()[M].paraStack.pop();
            } }, { key: _e, value: function value() {
              this[J]()[M].paraStack.push(this.para);
            } }, { key: Oe, value: function value(t3) {
              this.id && this[de] === d.NamespaceIds.template.id && t3.set(this.id, this);
            } }, { key: J, value: function value() {
              return this[Z].template;
            } }, { key: ce, value: function value() {
              return false;
            } }, { key: le, value: function value() {
              return false;
            } }, { key: v, value: function value(t3) {
              t3[Ke] = this;
              this[Ne].push(t3);
              !t3[Z] && this[Z] && (t3[Z] = this[Z]);
            } }, { key: we, value: function value(t3) {
              var r3 = this[Ne].indexOf(t3);
              this[Ne].splice(r3, 1);
            } }, { key: Q, value: function value() {
              return this.hasOwnProperty("value");
            } }, { key: Pe, value: function value(t3) {
            } }, { key: ve, value: function value(t3) {
            } }, { key: R, value: function value() {
            } }, { key: _, value: function value(t3) {
              delete this[ze];
              if (this[S]) {
                t3.clean(this[S]);
                delete this[S];
              }
            } }, { key: te, value: function value(t3) {
              return this[Ne].indexOf(t3);
            } }, { key: re, value: function value(t3, r3) {
              r3[Ke] = this;
              this[Ne].splice(t3, 0, r3);
              !r3[Z] && this[Z] && (r3[Z] = this[Z]);
            } }, { key: ue, value: function value() {
              return !this.name;
            } }, { key: he, value: function value() {
              return "";
            } }, { key: Fe, value: function value() {
              return this[Ne].length === 0 ? this[O] : this[Ne].map(function(t3) {
                return t3[Fe]();
              }).join("");
            } }, { key: Le, get: function get() {
              var t3 = Object.getPrototypeOf(this);
              if (!t3._attributes) {
                var r3, o3 = t3._attributes = /* @__PURE__ */ new Set(), c2 = _createForOfIteratorHelper(Object.getOwnPropertyNames(this));
                try {
                  for (c2.s(); !(r3 = c2.n()).done; ) {
                    var l2 = r3.value;
                    if (this[l2] === null || this[l2] instanceof XFAObject || this[l2] instanceof rt)
                      break;
                    o3.add(l2);
                  }
                } catch (t4) {
                  c2.e(t4);
                } finally {
                  c2.f();
                }
              }
              return (0, u.shadow)(this, Le, t3._attributes);
            } }, { key: oe, value: function value(t3) {
              for (var r3 = this; r3; ) {
                if (r3 === t3)
                  return true;
                r3 = r3[Y]();
              }
              return false;
            } }, { key: Y, value: function value() {
              return this[Ke];
            } }, { key: K, value: function value() {
              return this[Y]();
            } }, { key: z, value: function value() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : null;
              return t3 ? this[t3] : this[Ne];
            } }, { key: E, value: function value() {
              var t3 = /* @__PURE__ */ Object.create(null);
              this[O] && (t3.$content = this[O]);
              var r3, o3 = _createForOfIteratorHelper(Object.getOwnPropertyNames(this));
              try {
                for (o3.s(); !(r3 = o3.n()).done; ) {
                  var c2 = r3.value, value2 = this[c2];
                  value2 !== null && (value2 instanceof XFAObject ? t3[c2] = value2[E]() : value2 instanceof rt ? value2.isEmpty() || (t3[c2] = value2.dump()) : t3[c2] = value2);
                }
              } catch (t4) {
                o3.e(t4);
              } finally {
                o3.f();
              }
              return t3;
            } }, { key: Re, value: function value() {
              return null;
            } }, { key: Ee, value: function value() {
              return l.HTMLResult.EMPTY;
            } }, { key: W, value: c.default.mark(function value() {
              var t3, r3, o3;
              return c.default.wrap(function value$(c2) {
                for (; ; )
                  switch (c2.prev = c2.next) {
                    case 0:
                      t3 = _createForOfIteratorHelper(this[z]());
                      c2.prev = 1;
                      t3.s();
                    case 3:
                      if ((r3 = t3.n()).done) {
                        c2.next = 9;
                        break;
                      }
                      o3 = r3.value;
                      c2.next = 7;
                      return o3;
                    case 7:
                      c2.next = 3;
                      break;
                    case 9:
                      c2.next = 14;
                      break;
                    case 11:
                      c2.prev = 11;
                      c2.t0 = c2.catch(1);
                      t3.e(c2.t0);
                    case 14:
                      c2.prev = 14;
                      t3.f();
                      return c2.finish(14);
                    case 17:
                    case "end":
                      return c2.stop();
                  }
              }, value, this, [[1, 11, 14, 17]]);
            }) }, { key: Xe, value: c.default.mark(function value(t3, r3) {
              var o3, l2, u2, h2, d2;
              return c.default.wrap(function value$(c2) {
                for (; ; )
                  switch (c2.prev = c2.next) {
                    case 0:
                      o3 = _createForOfIteratorHelper(this[W]());
                      c2.prev = 1;
                      o3.s();
                    case 3:
                      if ((l2 = o3.n()).done) {
                        c2.next = 13;
                        break;
                      }
                      u2 = l2.value;
                      if (t3 && r3 !== t3.has(u2[pe])) {
                        c2.next = 11;
                        break;
                      }
                      h2 = this[N]();
                      (d2 = u2[Ee](h2)).success || (this[M].failingNode = u2);
                      c2.next = 11;
                      return d2;
                    case 11:
                      c2.next = 3;
                      break;
                    case 13:
                      c2.next = 18;
                      break;
                    case 15:
                      c2.prev = 15;
                      c2.t0 = c2.catch(1);
                      o3.e(c2.t0);
                    case 18:
                      c2.prev = 18;
                      o3.f();
                      return c2.finish(18);
                    case 21:
                    case "end":
                      return c2.stop();
                  }
              }, value, this, [[1, 15, 18, 21]]);
            }) }, { key: D, value: function value() {
              return null;
            } }, { key: y, value: function value(t3, r3) {
              this[M].children.push(t3);
            } }, { key: N, value: function value() {
            } }, { key: k, value: function value(t3) {
              var r3 = t3.filter, o3 = r3 === void 0 ? null : r3, c2 = t3.include, u2 = c2 === void 0 || c2;
              if (this[M].generator) {
                var h2 = this[N](), d2 = this[M].failingNode[Ee](h2);
                if (!d2.success)
                  return d2;
                d2.html && this[y](d2.html, d2.bbox);
                delete this[M].failingNode;
              } else
                this[M].generator = this[Xe](o3, u2);
              for (; ; ) {
                var g2 = this[M].generator.next();
                if (g2.done)
                  break;
                var m2 = g2.value;
                if (!m2.success)
                  return m2;
                m2.html && this[y](m2.html, m2.bbox);
              }
              this[M].generator = null;
              return l.HTMLResult.EMPTY;
            } }, { key: Ae, value: function value(t3) {
              this[Je] = new Set(Object.keys(t3));
            } }, { key: Ge, value: function value(t3) {
              var r3 = this[Le], o3 = this[Je];
              return _toConsumableArray(t3).filter(function(t4) {
                return r3.has(t4) && !o3.has(t4);
              });
            } }, { key: Ce, value: function value(t3) {
              var r3, o3 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : /* @__PURE__ */ new Set(), c2 = _createForOfIteratorHelper(this[Ne]);
              try {
                for (c2.s(); !(r3 = c2.n()).done; ) {
                  var l2 = r3.value;
                  l2[Ye](t3, o3);
                }
              } catch (t4) {
                c2.e(t4);
              } finally {
                c2.f();
              }
            } }, { key: Ye, value: function value(t3, r3) {
              var o3 = this[qe](t3, r3);
              o3 ? this[je](o3, t3, r3) : this[Ce](t3, r3);
            } }, { key: qe, value: function value(t3, r3) {
              var o3 = this.use, c2 = this.usehref;
              if (!o3 && !c2)
                return null;
              var l2 = null, h2 = null, d2 = null, m2 = o3;
              if (c2) {
                m2 = c2;
                c2.startsWith("#som(") && c2.endsWith(")") ? h2 = c2.slice("#som(".length, c2.length - 1) : c2.startsWith(".#som(") && c2.endsWith(")") ? h2 = c2.slice(".#som(".length, c2.length - 1) : c2.startsWith("#") ? d2 = c2.slice(1) : c2.startsWith(".#") && (d2 = c2.slice(2));
              } else
                o3.startsWith("#") ? d2 = o3.slice(1) : h2 = o3;
              this.use = this.usehref = "";
              d2 ? l2 = t3.get(d2) : (l2 = (0, g.searchNode)(t3.get(Se), this, h2, true, false)) && (l2 = l2[0]);
              if (!l2) {
                (0, u.warn)("XFA - Invalid prototype reference: ".concat(m2, "."));
                return null;
              }
              if (l2[pe] !== this[pe]) {
                (0, u.warn)("XFA - Incompatible prototype: ".concat(l2[pe], " !== ").concat(this[pe], "."));
                return null;
              }
              if (r3.has(l2)) {
                (0, u.warn)("XFA - Cycle detected in prototypes use.");
                return null;
              }
              r3.add(l2);
              var y2 = l2[qe](t3, r3);
              y2 && l2[je](y2, t3, r3);
              l2[Ce](t3, r3);
              r3.delete(l2);
              return l2;
            } }, { key: je, value: function value(t3, r3, o3) {
              if (o3.has(t3))
                (0, u.warn)("XFA - Cycle detected in prototypes use.");
              else {
                !this[O] && t3[O] && (this[O] = t3[O]);
                new Set(o3).add(t3);
                var c2, l2 = _createForOfIteratorHelper(this[Ge](t3[Je]));
                try {
                  for (l2.s(); !(c2 = l2.n()).done; ) {
                    var h2 = c2.value;
                    this[h2] = t3[h2];
                    this[Je] && this[Je].add(h2);
                  }
                } catch (t4) {
                  l2.e(t4);
                } finally {
                  l2.f();
                }
                var d2, g2 = _createForOfIteratorHelper(Object.getOwnPropertyNames(this));
                try {
                  for (g2.s(); !(d2 = g2.n()).done; ) {
                    var m2 = d2.value;
                    if (!this[Le].has(m2)) {
                      var y2 = this[m2], v2 = t3[m2];
                      if (y2 instanceof rt) {
                        var k2, _2 = _createForOfIteratorHelper(y2[Ne]);
                        try {
                          for (_2.s(); !(k2 = _2.n()).done; ) {
                            k2.value[Ye](r3, o3);
                          }
                        } catch (t4) {
                          _2.e(t4);
                        } finally {
                          _2.f();
                        }
                        for (var w2 = y2[Ne].length, S2 = v2[Ne].length; w2 < S2; w2++) {
                          var x2 = t3[Ne][w2][C]();
                          if (!y2.push(x2))
                            break;
                          x2[Ke] = this;
                          this[Ne].push(x2);
                          x2[Ye](r3, o3);
                        }
                      } else if (y2 === null) {
                        if (v2 !== null) {
                          var T2 = v2[C]();
                          T2[Ke] = this;
                          this[m2] = T2;
                          this[Ne].push(T2);
                          T2[Ye](r3, o3);
                        }
                      } else {
                        y2[Ce](r3, o3);
                        v2 && y2[je](v2, r3, o3);
                      }
                    }
                  }
                } catch (t4) {
                  g2.e(t4);
                } finally {
                  g2.f();
                }
              }
            } }, { key: C, value: function value() {
              var t3, r3 = Object.create(Object.getPrototypeOf(this)), o3 = _createForOfIteratorHelper(Object.getOwnPropertySymbols(this));
              try {
                for (o3.s(); !(t3 = o3.n()).done; ) {
                  var c2 = t3.value;
                  try {
                    r3[c2] = this[c2];
                  } catch (t4) {
                    (0, u.shadow)(r3, c2, this[c2]);
                  }
                }
              } catch (t4) {
                o3.e(t4);
              } finally {
                o3.f();
              }
              r3[De] = "".concat(r3[pe]).concat(Qe++);
              r3[Ne] = [];
              var l2, h2 = _createForOfIteratorHelper(Object.getOwnPropertyNames(this));
              try {
                for (h2.s(); !(l2 = h2.n()).done; ) {
                  var d2 = l2.value;
                  if (this[Le].has(d2))
                    r3[d2] = XFAObject[Ue](this[d2]);
                  else {
                    var g2 = this[d2];
                    r3[d2] = g2 instanceof rt ? new rt(g2[We]) : null;
                  }
                }
              } catch (t4) {
                h2.e(t4);
              } finally {
                h2.f();
              }
              var m2, y2 = _createForOfIteratorHelper(this[Ne]);
              try {
                for (y2.s(); !(m2 = y2.n()).done; ) {
                  var v2 = m2.value, k2 = v2[pe], _2 = v2[C]();
                  r3[Ne].push(_2);
                  _2[Ke] = r3;
                  r3[k2] === null ? r3[k2] = _2 : r3[k2][Ne].push(_2);
                }
              } catch (t4) {
                y2.e(t4);
              } finally {
                y2.f();
              }
              return r3;
            } }, { key: z, value: function value() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : null;
              return t3 ? this[Ne].filter(function(r3) {
                return r3[pe] === t3;
              }) : this[Ne];
            } }, { key: U, value: function value(t3) {
              return this[t3];
            } }, { key: H, value: function value(t3, r3) {
              var o3 = !(arguments.length > 2 && arguments[2] !== void 0) || arguments[2];
              return Array.from(this[$](t3, r3, o3));
            } }, { key: $, value: c.default.mark(function value(t3, r3) {
              var o3, l2, u2, h2, d2 = arguments;
              return c.default.wrap(function value$(c2) {
                for (; ; )
                  switch (c2.prev = c2.next) {
                    case 0:
                      o3 = !(d2.length > 2 && d2[2] !== void 0) || d2[2];
                      if (t3 !== "parent") {
                        c2.next = 5;
                        break;
                      }
                      c2.next = 4;
                      return this[Ke];
                    case 4:
                      return c2.abrupt("return");
                    case 5:
                      l2 = _createForOfIteratorHelper(this[Ne]);
                      c2.prev = 6;
                      l2.s();
                    case 8:
                      if ((u2 = l2.n()).done) {
                        c2.next = 20;
                        break;
                      }
                      if ((h2 = u2.value)[pe] !== t3) {
                        c2.next = 13;
                        break;
                      }
                      c2.next = 13;
                      return h2;
                    case 13:
                      if (h2.name !== t3) {
                        c2.next = 16;
                        break;
                      }
                      c2.next = 16;
                      return h2;
                    case 16:
                      if (!r3 && !h2[ue]()) {
                        c2.next = 18;
                        break;
                      }
                      return c2.delegateYield(h2[$](t3, r3, false), "t0", 18);
                    case 18:
                      c2.next = 8;
                      break;
                    case 20:
                      c2.next = 25;
                      break;
                    case 22:
                      c2.prev = 22;
                      c2.t1 = c2.catch(6);
                      l2.e(c2.t1);
                    case 25:
                      c2.prev = 25;
                      l2.f();
                      return c2.finish(25);
                    case 28:
                      if (!o3 || !this[Le].has(t3)) {
                        c2.next = 31;
                        break;
                      }
                      c2.next = 31;
                      return new at(this, t3, this[t3]);
                    case 31:
                    case "end":
                      return c2.stop();
                  }
              }, value, this, [[6, 22, 25, 28]]);
            }) }], [{ key: Ue, value: function value(t3) {
              return Array.isArray(t3) ? t3.map(function(t4) {
                return XFAObject[Ue](t4);
              }) : _typeof(t3) === "object" && t3 !== null ? Object.assign({}, t3) : t3;
            } }]);
            return XFAObject;
          }();
          r2.XFAObject = tt;
          var rt = function() {
            function XFAObjectArray() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 1 / 0;
              _classCallCheck(this, XFAObjectArray);
              this[We] = t3;
              this[Ne] = [];
            }
            _createClass(XFAObjectArray, [{ key: "push", value: function push(t3) {
              if (this[Ne].length <= this[We]) {
                this[Ne].push(t3);
                return true;
              }
              (0, u.warn)('XFA - node "'.concat(t3[pe], '" accepts no more than ').concat(this[We], " children"));
              return false;
            } }, { key: "isEmpty", value: function isEmpty() {
              return this[Ne].length === 0;
            } }, { key: "dump", value: function dump() {
              return this[Ne].length === 1 ? this[Ne][0][E]() : this[Ne].map(function(t3) {
                return t3[E]();
              });
            } }, { key: C, value: function value() {
              var t3 = new XFAObjectArray(this[We]);
              t3[Ne] = this[Ne].map(function(t4) {
                return t4[C]();
              });
              return t3;
            } }, { key: "children", get: function get() {
              return this[Ne];
            } }, { key: "clear", value: function clear() {
              this[Ne].length = 0;
            } }]);
            return XFAObjectArray;
          }();
          r2.XFAObjectArray = rt;
          var at = function() {
            function XFAAttribute(t3, r3, o3) {
              _classCallCheck(this, XFAAttribute);
              this[Ke] = t3;
              this[pe] = r3;
              this[O] = o3;
              this[x] = false;
              this[De] = "attribute".concat(Qe++);
            }
            _createClass(XFAAttribute, [{ key: Y, value: function value() {
              return this[Ke];
            } }, { key: ie, value: function value() {
              return true;
            } }, { key: X, value: function value() {
              return this[O].trim();
            } }, { key: Pe, value: function(t3) {
              function value(r3) {
                return t3.apply(this, arguments);
              }
              value.toString = function() {
                return t3.toString();
              };
              return value;
            }(function(t3) {
              t3 = t3.value || "";
              this[O] = t3.toString();
            }) }, { key: Fe, value: function value() {
              return this[O];
            } }, { key: oe, value: function value(t3) {
              return this[Ke] === t3 || this[Ke][oe](t3);
            } }]);
            return XFAAttribute;
          }();
          r2.XFAAttribute = at;
          var nt = function(t3) {
            _inherits(XmlObject, t3);
            var r3 = _createSuper(XmlObject);
            function XmlObject(t4, o3) {
              var c2, l2 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
              _classCallCheck(this, XmlObject);
              (c2 = r3.call(this, t4, o3))[O] = "";
              c2[He] = null;
              if (o3 !== "#text") {
                var u2 = /* @__PURE__ */ new Map();
                c2[Be] = u2;
                for (var h2 = 0, d2 = Object.entries(l2); h2 < d2.length; h2++) {
                  var g2 = _slicedToArray(d2[h2], 2), m2 = g2[0], y2 = g2[1];
                  u2.set(m2, new at(_assertThisInitialized(c2), m2, y2));
                }
                if (l2.hasOwnProperty(ge)) {
                  var v2 = l2[ge].xfa.dataNode;
                  v2 !== void 0 && (v2 === "dataGroup" ? c2[He] = false : v2 === "dataValue" && (c2[He] = true));
                }
              }
              c2[x] = false;
              return c2;
            }
            _createClass(XmlObject, [{ key: Me, value: function value(t4) {
              var r4 = this[pe];
              if (r4 !== "#text") {
                var o3 = (0, u.utf8StringToString)(r4), c2 = this[de] === et ? "xfa:" : "";
                t4.push("<".concat(c2).concat(o3));
                var l2, d2 = _createForOfIteratorHelper(this[Be].entries());
                try {
                  for (d2.s(); !(l2 = d2.n()).done; ) {
                    var g2 = _slicedToArray(l2.value, 2), m2 = g2[0], y2 = g2[1], v2 = (0, u.utf8StringToString)(m2);
                    t4.push(" ".concat(v2, '="').concat((0, h.encodeToXmlString)(y2[O]), '"'));
                  }
                } catch (t5) {
                  d2.e(t5);
                } finally {
                  d2.f();
                }
                this[He] !== null && (this[He] ? t4.push(' xfa:dataNode="dataValue"') : t4.push(' xfa:dataNode="dataGroup"'));
                if (this[O] || this[Ne].length !== 0) {
                  t4.push(">");
                  if (this[O])
                    typeof this[O] == "string" ? t4.push((0, h.encodeToXmlString)(this[O])) : this[O][Me](t4);
                  else {
                    var k2, _2 = _createForOfIteratorHelper(this[Ne]);
                    try {
                      for (_2.s(); !(k2 = _2.n()).done; ) {
                        k2.value[Me](t4);
                      }
                    } catch (t5) {
                      _2.e(t5);
                    } finally {
                      _2.f();
                    }
                  }
                  t4.push("</".concat(c2).concat(o3, ">"));
                } else
                  t4.push("/>");
              } else
                t4.push((0, h.encodeToXmlString)(this[O]));
            } }, { key: me, value: function value(t4) {
              if (this[O]) {
                var r4 = new XmlObject(this[de], "#text");
                this[v](r4);
                r4[O] = this[O];
                this[O] = "";
              }
              this[v](t4);
              return true;
            } }, { key: ve, value: function value(t4) {
              this[O] += t4;
            } }, { key: R, value: function value() {
              if (this[O] && this[Ne].length > 0) {
                var t4 = new XmlObject(this[de], "#text");
                this[v](t4);
                t4[O] = this[O];
                delete this[O];
              }
            } }, { key: Ee, value: function value() {
              return this[pe] === "#text" ? l.HTMLResult.success({ name: "#text", value: this[O] }) : l.HTMLResult.EMPTY;
            } }, { key: z, value: function value() {
              var t4 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : null;
              return t4 ? this[Ne].filter(function(r4) {
                return r4[pe] === t4;
              }) : this[Ne];
            } }, { key: L, value: function value() {
              return this[Be];
            } }, { key: U, value: function value(t4) {
              var value2 = this[Be].get(t4);
              return value2 !== void 0 ? value2 : this[z](t4);
            } }, { key: $, value: c.default.mark(function value(t4, r4) {
              var value2, o3, l2, u2;
              return c.default.wrap(function value$(c2) {
                for (; ; )
                  switch (c2.prev = c2.next) {
                    case 0:
                      value2 = this[Be].get(t4);
                      if (!value2) {
                        c2.next = 4;
                        break;
                      }
                      c2.next = 4;
                      return value2;
                    case 4:
                      o3 = _createForOfIteratorHelper(this[Ne]);
                      c2.prev = 5;
                      o3.s();
                    case 7:
                      if ((l2 = o3.n()).done) {
                        c2.next = 16;
                        break;
                      }
                      if ((u2 = l2.value)[pe] !== t4) {
                        c2.next = 12;
                        break;
                      }
                      c2.next = 12;
                      return u2;
                    case 12:
                      if (!r4) {
                        c2.next = 14;
                        break;
                      }
                      return c2.delegateYield(u2[$](t4, r4), "t0", 14);
                    case 14:
                      c2.next = 7;
                      break;
                    case 16:
                      c2.next = 21;
                      break;
                    case 18:
                      c2.prev = 18;
                      c2.t1 = c2.catch(5);
                      o3.e(c2.t1);
                    case 21:
                      c2.prev = 21;
                      o3.f();
                      return c2.finish(21);
                    case 24:
                    case "end":
                      return c2.stop();
                  }
              }, value2, this, [[5, 18, 21, 24]]);
            }) }, { key: j, value: c.default.mark(function value(t4, r4) {
              var value2, o3, l2, u2;
              return c.default.wrap(function value$(c2) {
                for (; ; )
                  switch (c2.prev = c2.next) {
                    case 0:
                      value2 = this[Be].get(t4);
                      if (!value2 || r4 && value2[x]) {
                        c2.next = 4;
                        break;
                      }
                      c2.next = 4;
                      return value2;
                    case 4:
                      o3 = _createForOfIteratorHelper(this[Ne]);
                      c2.prev = 5;
                      o3.s();
                    case 7:
                      if ((l2 = o3.n()).done) {
                        c2.next = 12;
                        break;
                      }
                      u2 = l2.value;
                      return c2.delegateYield(u2[j](t4, r4), "t0", 10);
                    case 10:
                      c2.next = 7;
                      break;
                    case 12:
                      c2.next = 17;
                      break;
                    case 14:
                      c2.prev = 14;
                      c2.t1 = c2.catch(5);
                      o3.e(c2.t1);
                    case 17:
                      c2.prev = 17;
                      o3.f();
                      return c2.finish(17);
                    case 20:
                    case "end":
                      return c2.stop();
                  }
              }, value2, this, [[5, 14, 17, 20]]);
            }) }, { key: G, value: c.default.mark(function value(t4, r4, o3) {
              var l2, u2, h2;
              return c.default.wrap(function value$(c2) {
                for (; ; )
                  switch (c2.prev = c2.next) {
                    case 0:
                      l2 = _createForOfIteratorHelper(this[Ne]);
                      c2.prev = 1;
                      l2.s();
                    case 3:
                      if ((u2 = l2.n()).done) {
                        c2.next = 12;
                        break;
                      }
                      if ((h2 = u2.value)[pe] !== t4 || o3 && h2[x]) {
                        c2.next = 8;
                        break;
                      }
                      c2.next = 8;
                      return h2;
                    case 8:
                      if (!r4) {
                        c2.next = 10;
                        break;
                      }
                      return c2.delegateYield(h2[G](t4, r4, o3), "t0", 10);
                    case 10:
                      c2.next = 3;
                      break;
                    case 12:
                      c2.next = 17;
                      break;
                    case 14:
                      c2.prev = 14;
                      c2.t1 = c2.catch(1);
                      l2.e(c2.t1);
                    case 17:
                      c2.prev = 17;
                      l2.f();
                      return c2.finish(17);
                    case 20:
                    case "end":
                      return c2.stop();
                  }
              }, value, this, [[1, 14, 17, 20]]);
            }) }, { key: ie, value: function value() {
              return this[He] === null ? this[Ne].length === 0 || this[Ne][0][de] === d.NamespaceIds.xhtml.id : this[He];
            } }, { key: X, value: function value() {
              return this[He] === null ? this[Ne].length === 0 ? this[O].trim() : this[Ne][0][de] === d.NamespaceIds.xhtml.id ? this[Ne][0][Fe]().trim() : null : this[O].trim();
            } }, { key: Pe, value: function(t4) {
              function value(r4) {
                return t4.apply(this, arguments);
              }
              value.toString = function() {
                return t4.toString();
              };
              return value;
            }(function(t4) {
              t4 = t4.value || "";
              this[O] = t4.toString();
            }) }, { key: E, value: function value() {
              var t4 = arguments.length > 0 && arguments[0] !== void 0 && arguments[0], r4 = /* @__PURE__ */ Object.create(null);
              t4 && (r4.$ns = this[de]);
              this[O] && (r4.$content = this[O]);
              r4.$name = this[pe];
              r4.children = [];
              var o3, c2 = _createForOfIteratorHelper(this[Ne]);
              try {
                for (c2.s(); !(o3 = c2.n()).done; ) {
                  var l2 = o3.value;
                  r4.children.push(l2[E](t4));
                }
              } catch (t5) {
                c2.e(t5);
              } finally {
                c2.f();
              }
              r4.attributes = /* @__PURE__ */ Object.create(null);
              var u2, h2 = _createForOfIteratorHelper(this[Be]);
              try {
                for (h2.s(); !(u2 = h2.n()).done; ) {
                  var d2 = _slicedToArray(u2.value, 2), g2 = d2[0], m2 = d2[1];
                  r4.attributes[g2] = m2[O];
                }
              } catch (t5) {
                h2.e(t5);
              } finally {
                h2.f();
              }
              return r4;
            } }]);
            return XmlObject;
          }(tt);
          r2.XmlObject = nt;
          var it = function(t3) {
            _inherits(ContentObject, t3);
            var r3 = _createSuper(ContentObject);
            function ContentObject(t4, o3) {
              var c2;
              _classCallCheck(this, ContentObject);
              (c2 = r3.call(this, t4, o3))[O] = "";
              return c2;
            }
            _createClass(ContentObject, [{ key: ve, value: function value(t4) {
              this[O] += t4;
            } }, { key: R, value: function value() {
            } }]);
            return ContentObject;
          }(tt);
          r2.ContentObject = it;
          var ot = function(t3) {
            _inherits(OptionObject, t3);
            var r3 = _createSuper(OptionObject);
            function OptionObject(t4, o3, c2) {
              var l2;
              _classCallCheck(this, OptionObject);
              (l2 = r3.call(this, t4, o3))[Ve] = c2;
              return l2;
            }
            _createClass(OptionObject, [{ key: R, value: function value() {
              var t4 = this;
              this[O] = (0, l.getKeyword)({ data: this[O], defaultValue: this[Ve][0], validate: function validate(r4) {
                return t4[Ve].includes(r4);
              } });
            } }, { key: _, value: function value(t4) {
              _get(_getPrototypeOf(OptionObject.prototype), _, this).call(this, t4);
              delete this[Ve];
            } }]);
            return OptionObject;
          }(it);
          r2.OptionObject = ot;
          var st = function(t3) {
            _inherits(StringObject, t3);
            var r3 = _createSuper(StringObject);
            function StringObject() {
              _classCallCheck(this, StringObject);
              return r3.apply(this, arguments);
            }
            _createClass(StringObject, [{ key: R, value: function value() {
              this[O] = this[O].trim();
            } }]);
            return StringObject;
          }(it);
          r2.StringObject = st;
          var ct = function(t3) {
            _inherits(IntegerObject, t3);
            var r3 = _createSuper(IntegerObject);
            function IntegerObject(t4, o3, c2, l2) {
              var u2;
              _classCallCheck(this, IntegerObject);
              (u2 = r3.call(this, t4, o3))[$e] = c2;
              u2[Ze] = l2;
              return u2;
            }
            _createClass(IntegerObject, [{ key: R, value: function value() {
              this[O] = (0, l.getInteger)({ data: this[O], defaultValue: this[$e], validate: this[Ze] });
            } }, { key: _, value: function value(t4) {
              _get(_getPrototypeOf(IntegerObject.prototype), _, this).call(this, t4);
              delete this[$e];
              delete this[Ze];
            } }]);
            return IntegerObject;
          }(it);
          r2.IntegerObject = ct;
          var lt = function(t3) {
            _inherits(Option01, t3);
            var r3 = _createSuper(Option01);
            function Option01(t4, o3) {
              _classCallCheck(this, Option01);
              return r3.call(this, t4, o3, 0, function(t5) {
                return t5 === 1;
              });
            }
            return _createClass(Option01);
          }(ct);
          r2.Option01 = lt;
          var ut = function(t3) {
            _inherits(Option10, t3);
            var r3 = _createSuper(Option10);
            function Option10(t4, o3) {
              _classCallCheck(this, Option10);
              return r3.call(this, t4, o3, 1, function(t5) {
                return t5 === 0;
              });
            }
            return _createClass(Option10);
          }(ct);
          r2.Option10 = ut;
        }, (t2, r2, o2) => {
          "use strict";
          Object.defineProperty(r2, "__esModule", { value: true });
          r2.HTMLResult = void 0;
          r2.getBBox = function getBBox(t3) {
            var r3 = -1;
            if (!t3)
              return { x: r3, y: r3, width: r3, height: r3 };
            var o3 = t3.trim().split(/\s*,\s*/).map(function(t4) {
              return getMeasurement(t4, "-1");
            });
            if (o3.length < 4 || o3[2] < 0 || o3[3] < 0)
              return { x: r3, y: r3, width: r3, height: r3 };
            var c2 = _slicedToArray(o3, 4), l2 = c2[0], u2 = c2[1], h2 = c2[2], d = c2[3];
            return { x: l2, y: u2, width: h2, height: d };
          };
          r2.getColor = function getColor(t3) {
            var r3 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [0, 0, 0], o3 = _slicedToArray(r3, 3), c2 = o3[0], l2 = o3[1], u2 = o3[2];
            if (!t3)
              return { r: c2, g: l2, b: u2 };
            var h2 = t3.trim().split(/\s*,\s*/).map(function(t4) {
              return Math.min(Math.max(0, parseInt(t4.trim(), 10)), 255);
            }).map(function(t4) {
              return isNaN(t4) ? 0 : t4;
            });
            if (h2.length < 3)
              return { r: c2, g: l2, b: u2 };
            var d = _slicedToArray(h2, 3);
            c2 = d[0];
            l2 = d[1];
            u2 = d[2];
            return { r: c2, g: l2, b: u2 };
          };
          r2.getFloat = function getFloat(t3) {
            var r3 = t3.data, o3 = t3.defaultValue, c2 = t3.validate;
            if (!r3)
              return o3;
            r3 = r3.trim();
            var l2 = parseFloat(r3);
            if (!isNaN(l2) && c2(l2))
              return l2;
            return o3;
          };
          r2.getInteger = function getInteger(t3) {
            var r3 = t3.data, o3 = t3.defaultValue, c2 = t3.validate;
            if (!r3)
              return o3;
            r3 = r3.trim();
            var l2 = parseInt(r3, 10);
            if (!isNaN(l2) && c2(l2))
              return l2;
            return o3;
          };
          r2.getKeyword = getKeyword;
          r2.getMeasurement = getMeasurement;
          r2.getRatio = function getRatio(t3) {
            if (!t3)
              return { num: 1, den: 1 };
            var r3 = t3.trim().split(/\s*:\s*/).map(function(t4) {
              return parseFloat(t4);
            }).filter(function(t4) {
              return !isNaN(t4);
            });
            r3.length === 1 && r3.push(1);
            if (r3.length === 0)
              return { num: 1, den: 1 };
            var o3 = _slicedToArray(r3, 2), c2 = o3[0], l2 = o3[1];
            return { num: c2, den: l2 };
          };
          r2.getRelevant = function getRelevant(t3) {
            if (!t3)
              return [];
            return t3.trim().split(/\s+/).map(function(t4) {
              return { excluded: t4[0] === "-", viewname: t4.substring(1) };
            });
          };
          r2.getStringOption = function getStringOption(t3, r3) {
            return getKeyword({ data: t3, defaultValue: r3[0], validate: function validate(t4) {
              return r3.includes(t4);
            } });
          };
          r2.stripQuotes = function stripQuotes(t3) {
            if (t3.startsWith("'") || t3.startsWith('"'))
              return t3.slice(1, t3.length - 1);
            return t3;
          };
          var c = o2(4);
          function _defineProperties(t3, r3) {
            for (var o3 = 0; o3 < r3.length; o3++) {
              var c2 = r3[o3];
              c2.enumerable = c2.enumerable || false;
              c2.configurable = true;
              "value" in c2 && (c2.writable = true);
              Object.defineProperty(t3, c2.key, c2);
            }
          }
          function _slicedToArray(t3, r3) {
            return function _arrayWithHoles(t4) {
              if (Array.isArray(t4))
                return t4;
            }(t3) || function _iterableToArrayLimit(t4, r4) {
              var o3 = t4 == null ? null : typeof Symbol != "undefined" && t4[Symbol.iterator] || t4["@@iterator"];
              if (o3 == null)
                return;
              var c2, l2, u2 = [], h2 = true, d = false;
              try {
                for (o3 = o3.call(t4); !(h2 = (c2 = o3.next()).done); h2 = true) {
                  u2.push(c2.value);
                  if (r4 && u2.length === r4)
                    break;
                }
              } catch (t5) {
                d = true;
                l2 = t5;
              } finally {
                try {
                  h2 || o3.return == null || o3.return();
                } finally {
                  if (d)
                    throw l2;
                }
              }
              return u2;
            }(t3, r3) || function _unsupportedIterableToArray(t4, r4) {
              if (!t4)
                return;
              if (typeof t4 == "string")
                return _arrayLikeToArray(t4, r4);
              var o3 = Object.prototype.toString.call(t4).slice(8, -1);
              o3 === "Object" && t4.constructor && (o3 = t4.constructor.name);
              if (o3 === "Map" || o3 === "Set")
                return Array.from(t4);
              if (o3 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(o3))
                return _arrayLikeToArray(t4, r4);
            }(t3, r3) || function _nonIterableRest() {
              throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
            }();
          }
          function _arrayLikeToArray(t3, r3) {
            (r3 == null || r3 > t3.length) && (r3 = t3.length);
            for (var o3 = 0, c2 = new Array(r3); o3 < r3; o3++)
              c2[o3] = t3[o3];
            return c2;
          }
          var l = { pt: function pt(t3) {
            return t3;
          }, cm: function cm(t3) {
            return t3 / 2.54 * 72;
          }, mm: function mm(t3) {
            return t3 / 25.4 * 72;
          }, in: function _in(t3) {
            return 72 * t3;
          }, px: function px(t3) {
            return t3;
          } }, u = /([+-]?\d+\.?\d*)(.*)/;
          function getKeyword(t3) {
            var r3 = t3.data, o3 = t3.defaultValue, c2 = t3.validate;
            return r3 && c2(r3 = r3.trim()) ? r3 : o3;
          }
          function getMeasurement(t3) {
            var r3 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "0";
            r3 = r3 || "0";
            if (!t3)
              return getMeasurement(r3);
            var o3 = t3.trim().match(u);
            if (!o3)
              return getMeasurement(r3);
            var c2 = _slicedToArray(o3, 3), h2 = c2[1], d = c2[2], g = parseFloat(h2);
            if (isNaN(g))
              return getMeasurement(r3);
            if (g === 0)
              return 0;
            var m = l[d];
            return m ? m(g) : g;
          }
          var h = function() {
            function HTMLResult(t3, r3, o3, c2) {
              !function _classCallCheck(t4, r4) {
                if (!(t4 instanceof r4))
                  throw new TypeError("Cannot call a class as a function");
              }(this, HTMLResult);
              this.success = t3;
              this.html = r3;
              this.bbox = o3;
              this.breakNode = c2;
            }
            !function _createClass(t3, r3, o3) {
              r3 && _defineProperties(t3.prototype, r3);
              o3 && _defineProperties(t3, o3);
              Object.defineProperty(t3, "prototype", { writable: false });
              return t3;
            }(HTMLResult, [{ key: "isBreak", value: function isBreak() {
              return !!this.breakNode;
            } }], [{ key: "FAILURE", get: function get() {
              return (0, c.shadow)(this, "FAILURE", new HTMLResult(false, null, null, null));
            } }, { key: "EMPTY", get: function get() {
              return (0, c.shadow)(this, "EMPTY", new HTMLResult(true, null, null, null));
            } }, { key: "breakNode", value: function breakNode(t3) {
              return new HTMLResult(false, null, null, t3);
            } }, { key: "success", value: function success(t3) {
              var r3 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null;
              return new HTMLResult(true, t3, r3, null);
            } }]);
            return HTMLResult;
          }();
          r2.HTMLResult = h;
        }, (t2, r2) => {
          "use strict";
          Object.defineProperty(r2, "__esModule", { value: true });
          r2.NamespaceIds = r2.$buildXFAObject = void 0;
          var o2 = Symbol();
          r2.$buildXFAObject = o2;
          r2.NamespaceIds = { config: { id: 0, check: function check(t3) {
            return t3.startsWith("http://www.xfa.org/schema/xci/");
          } }, connectionSet: { id: 1, check: function check(t3) {
            return t3.startsWith("http://www.xfa.org/schema/xfa-connection-set/");
          } }, datasets: { id: 2, check: function check(t3) {
            return t3.startsWith("http://www.xfa.org/schema/xfa-data/");
          } }, form: { id: 3, check: function check(t3) {
            return t3.startsWith("http://www.xfa.org/schema/xfa-form/");
          } }, localeSet: { id: 4, check: function check(t3) {
            return t3.startsWith("http://www.xfa.org/schema/xfa-locale-set/");
          } }, pdf: { id: 5, check: function check(t3) {
            return t3 === "http://ns.adobe.com/xdp/pdf/";
          } }, signature: { id: 6, check: function check(t3) {
            return t3 === "http://www.w3.org/2000/09/xmldsig#";
          } }, sourceSet: { id: 7, check: function check(t3) {
            return t3.startsWith("http://www.xfa.org/schema/xfa-source-set/");
          } }, stylesheet: { id: 8, check: function check(t3) {
            return t3 === "http://www.w3.org/1999/XSL/Transform";
          } }, template: { id: 9, check: function check(t3) {
            return t3.startsWith("http://www.xfa.org/schema/xfa-template/");
          } }, xdc: { id: 10, check: function check(t3) {
            return t3.startsWith("http://www.xfa.org/schema/xdc/");
          } }, xdp: { id: 11, check: function check(t3) {
            return t3 === "http://ns.adobe.com/xdp/";
          } }, xfdf: { id: 12, check: function check(t3) {
            return t3 === "http://ns.adobe.com/xfdf/";
          } }, xhtml: { id: 13, check: function check(t3) {
            return t3 === "http://www.w3.org/1999/xhtml";
          } }, xmpmeta: { id: 14, check: function check(t3) {
            return t3 === "http://ns.adobe.com/xmpmeta/";
          } } };
        }, (t2, r2, o2) => {
          "use strict";
          Object.defineProperty(r2, "__esModule", { value: true });
          r2.createDataNode = function createDataNode(t3, r3, o3) {
            var l2 = parseExpression(o3);
            if (!l2)
              return null;
            if (l2.some(function(t4) {
              return t4.operator === m;
            }))
              return null;
            var h2 = _.get(l2[0].name), d2 = 0;
            if (h2) {
              t3 = h2(t3, r3);
              d2 = 1;
            } else
              t3 = r3 || t3;
            for (var v2 = l2.length; d2 < v2; d2++) {
              var k2 = l2[d2], w2 = k2.name, S2 = k2.operator, C = k2.index;
              if (!isFinite(C)) {
                l2[d2].index = 0;
                return createNodes(t3, l2.slice(d2));
              }
              var x = void 0;
              switch (S2) {
                case g:
                  x = t3[c.$getChildrenByName](w2, false);
                  break;
                case m:
                  x = t3[c.$getChildrenByName](w2, true);
                  break;
                case y:
                  x = (x = t3[c.$getChildrenByClass](w2)) instanceof c.XFAObjectArray ? x.children : [x];
              }
              if (x.length === 0)
                return createNodes(t3, l2.slice(d2));
              if (!(C < x.length)) {
                l2[d2].index = C - x.length;
                return createNodes(t3, l2.slice(d2));
              }
              var O = x[C];
              if (!(O instanceof c.XFAObject)) {
                (0, u.warn)("XFA - Cannot create a node.");
                return null;
              }
              t3 = O;
            }
            return null;
          };
          r2.searchNode = function searchNode(t3, r3, o3) {
            var l2 = !(arguments.length > 3 && arguments[3] !== void 0) || arguments[3], u2 = !(arguments.length > 4 && arguments[4] !== void 0) || arguments[4], h2 = parseExpression(o3, l2);
            if (!h2)
              return null;
            var d2, v2 = _.get(h2[0].name), k2 = 0;
            if (v2) {
              d2 = true;
              t3 = [v2(t3, r3)];
              k2 = 1;
            } else {
              d2 = r3 === null;
              t3 = [r3 || t3];
            }
            for (var S2 = function _loop(o4) {
              var l3, v3 = h2[k2], _2 = v3.name, S3 = v3.cacheName, C2 = v3.operator, x2 = v3.index, O = [], T = _createForOfIteratorHelper(t3);
              try {
                for (T.s(); !(l3 = T.n()).done; ) {
                  var E = l3.value;
                  if (E instanceof c.XFAObject) {
                    var M = void 0, R = void 0;
                    if (u2) {
                      if (!(R = w.get(E))) {
                        R = /* @__PURE__ */ new Map();
                        w.set(E, R);
                      }
                      M = R.get(S3);
                    }
                    if (!M) {
                      switch (C2) {
                        case g:
                          M = E[c.$getChildrenByName](_2, false);
                          break;
                        case m:
                          M = E[c.$getChildrenByName](_2, true);
                          break;
                        case y:
                          M = (M = E[c.$getChildrenByClass](_2)) instanceof c.XFAObjectArray ? M.children : [M];
                      }
                      u2 && R.set(S3, M);
                    }
                    M.length > 0 && O.push(M);
                  }
                }
              } catch (t4) {
                T.e(t4);
              } finally {
                T.f();
              }
              if (O.length === 0 && !d2 && k2 === 0) {
                var D = r3[c.$getParent]();
                if (!(r3 = D))
                  return { v: null };
                k2 = -1;
                t3 = [r3];
                return "continue";
              }
              t3 = isFinite(x2) ? O.filter(function(t4) {
                return x2 < t4.length;
              }).map(function(t4) {
                return t4[x2];
              }) : O.reduce(function(t4, r4) {
                return t4.concat(r4);
              }, []);
            }, C = h2.length; k2 < C; k2++) {
              var x = S2(C);
              if (x !== "continue" && _typeof(x) === "object")
                return x.v;
            }
            if (t3.length === 0)
              return null;
            return t3;
          };
          var c = o2(230), l = o2(232), u = o2(4);
          function _createForOfIteratorHelper(t3, r3) {
            var o3 = typeof Symbol != "undefined" && t3[Symbol.iterator] || t3["@@iterator"];
            if (!o3) {
              if (Array.isArray(t3) || (o3 = _unsupportedIterableToArray(t3)) || r3 && t3 && typeof t3.length == "number") {
                o3 && (t3 = o3);
                var c2 = 0, l2 = function F() {
                };
                return { s: l2, n: function n() {
                  return c2 >= t3.length ? { done: true } : { done: false, value: t3[c2++] };
                }, e: function e(t4) {
                  throw t4;
                }, f: l2 };
              }
              throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
            }
            var u2, h2 = true, d2 = false;
            return { s: function s() {
              o3 = o3.call(t3);
            }, n: function n() {
              var t4 = o3.next();
              h2 = t4.done;
              return t4;
            }, e: function e(t4) {
              d2 = true;
              u2 = t4;
            }, f: function f() {
              try {
                h2 || o3.return == null || o3.return();
              } finally {
                if (d2)
                  throw u2;
              }
            } };
          }
          function _typeof(t3) {
            return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t4) {
              return typeof t4;
            } : function(t4) {
              return t4 && typeof Symbol == "function" && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
            }, _typeof(t3);
          }
          function _slicedToArray(t3, r3) {
            return function _arrayWithHoles(t4) {
              if (Array.isArray(t4))
                return t4;
            }(t3) || function _iterableToArrayLimit(t4, r4) {
              var o3 = t4 == null ? null : typeof Symbol != "undefined" && t4[Symbol.iterator] || t4["@@iterator"];
              if (o3 == null)
                return;
              var c2, l2, u2 = [], h2 = true, d2 = false;
              try {
                for (o3 = o3.call(t4); !(h2 = (c2 = o3.next()).done); h2 = true) {
                  u2.push(c2.value);
                  if (r4 && u2.length === r4)
                    break;
                }
              } catch (t5) {
                d2 = true;
                l2 = t5;
              } finally {
                try {
                  h2 || o3.return == null || o3.return();
                } finally {
                  if (d2)
                    throw l2;
                }
              }
              return u2;
            }(t3, r3) || _unsupportedIterableToArray(t3, r3) || function _nonIterableRest() {
              throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
            }();
          }
          function _unsupportedIterableToArray(t3, r3) {
            if (t3) {
              if (typeof t3 == "string")
                return _arrayLikeToArray(t3, r3);
              var o3 = Object.prototype.toString.call(t3).slice(8, -1);
              o3 === "Object" && t3.constructor && (o3 = t3.constructor.name);
              return o3 === "Map" || o3 === "Set" ? Array.from(t3) : o3 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(o3) ? _arrayLikeToArray(t3, r3) : void 0;
            }
          }
          function _arrayLikeToArray(t3, r3) {
            (r3 == null || r3 > t3.length) && (r3 = t3.length);
            for (var o3 = 0, c2 = new Array(r3); o3 < r3; o3++)
              c2[o3] = t3[o3];
            return c2;
          }
          var h = /^[^.[]+/, d = /^[^\]]+/, g = 0, m = 1, y = 2, v = 3, k = 4, _ = /* @__PURE__ */ new Map([["$data", function(t3, r3) {
            return t3.datasets ? t3.datasets.data : t3;
          }], ["$record", function(t3, r3) {
            return (t3.datasets ? t3.datasets.data : t3)[c.$getChildren]()[0];
          }], ["$template", function(t3, r3) {
            return t3.template;
          }], ["$connectionSet", function(t3, r3) {
            return t3.connectionSet;
          }], ["$form", function(t3, r3) {
            return t3.form;
          }], ["$layout", function(t3, r3) {
            return t3.layout;
          }], ["$host", function(t3, r3) {
            return t3.host;
          }], ["$dataWindow", function(t3, r3) {
            return t3.dataWindow;
          }], ["$event", function(t3, r3) {
            return t3.event;
          }], ["!", function(t3, r3) {
            return t3.datasets;
          }], ["$xfa", function(t3, r3) {
            return t3;
          }], ["xfa", function(t3, r3) {
            return t3;
          }], ["$", function(t3, r3) {
            return r3;
          }]]), w = /* @__PURE__ */ new WeakMap(), S = l.NamespaceIds.datasets.id;
          function parseIndex(t3) {
            return (t3 = t3.trim()) === "*" ? 1 / 0 : parseInt(t3, 10) || 0;
          }
          function parseExpression(t3, r3) {
            var o3 = !(arguments.length > 2 && arguments[2] !== void 0) || arguments[2], c2 = t3.match(h);
            if (!c2)
              return null;
            for (var l2 = c2, _2 = _slicedToArray(l2, 1), w2 = _2[0], S2 = [{ name: w2, cacheName: "." + w2, index: 0, js: null, formCalc: null, operator: g }], C = w2.length; C < t3.length; ) {
              var x = C, O = t3.charAt(C++);
              if (O !== "[") {
                var T = void 0;
                switch (t3.charAt(C)) {
                  case ".":
                    if (!r3)
                      return null;
                    C++;
                    T = m;
                    break;
                  case "#":
                    C++;
                    T = y;
                    break;
                  case "[":
                    if (o3) {
                      (0, u.warn)("XFA - SOM expression contains a FormCalc subexpression which is not supported for now.");
                      return null;
                    }
                    T = v;
                    break;
                  case "(":
                    if (o3) {
                      (0, u.warn)("XFA - SOM expression contains a JavaScript subexpression which is not supported for now.");
                      return null;
                    }
                    T = k;
                    break;
                  default:
                    T = g;
                }
                if (!(c2 = t3.slice(C).match(h)))
                  break;
                var E = c2, M = _slicedToArray(E, 1);
                C += (w2 = M[0]).length;
                S2.push({ name: w2, cacheName: t3.slice(x, C), operator: T, index: 0, js: null, formCalc: null });
              } else {
                if (!(c2 = t3.slice(C).match(d))) {
                  (0, u.warn)("XFA - Invalid index in SOM expression");
                  return null;
                }
                S2[S2.length - 1].index = parseIndex(c2[0]);
                C += c2[0].length + 1;
              }
            }
            return S2;
          }
          function createNodes(t3, r3) {
            var o3, l2 = null, u2 = _createForOfIteratorHelper(r3);
            try {
              for (u2.s(); !(o3 = u2.n()).done; ) {
                for (var h2 = o3.value, d2 = h2.name, g2 = h2.index, m2 = 0, y2 = isFinite(g2) ? g2 : 0; m2 <= y2; m2++) {
                  var v2 = t3[c.$namespaceId] === S ? -1 : t3[c.$namespaceId];
                  l2 = new c.XmlObject(v2, d2);
                  t3[c.$appendChild](l2);
                }
                t3 = l2;
              }
            } catch (t4) {
              u2.e(t4);
            } finally {
              u2.f();
            }
            return l2;
          }
        }, (t2, r2, o2) => {
          "use strict";
          Object.defineProperty(r2, "__esModule", { value: true });
          r2.Binder = void 0;
          var c = o2(230), l = o2(235), u = o2(233), h = o2(232), d = o2(4);
          function _slicedToArray(t3, r3) {
            return function _arrayWithHoles(t4) {
              if (Array.isArray(t4))
                return t4;
            }(t3) || function _iterableToArrayLimit(t4, r4) {
              var o3 = t4 == null ? null : typeof Symbol != "undefined" && t4[Symbol.iterator] || t4["@@iterator"];
              if (o3 == null)
                return;
              var c2, l2, u2 = [], h2 = true, d2 = false;
              try {
                for (o3 = o3.call(t4); !(h2 = (c2 = o3.next()).done); h2 = true) {
                  u2.push(c2.value);
                  if (r4 && u2.length === r4)
                    break;
                }
              } catch (t5) {
                d2 = true;
                l2 = t5;
              } finally {
                try {
                  h2 || o3.return == null || o3.return();
                } finally {
                  if (d2)
                    throw l2;
                }
              }
              return u2;
            }(t3, r3) || _unsupportedIterableToArray(t3, r3) || function _nonIterableRest() {
              throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
            }();
          }
          function _createForOfIteratorHelper(t3, r3) {
            var o3 = typeof Symbol != "undefined" && t3[Symbol.iterator] || t3["@@iterator"];
            if (!o3) {
              if (Array.isArray(t3) || (o3 = _unsupportedIterableToArray(t3)) || r3 && t3 && typeof t3.length == "number") {
                o3 && (t3 = o3);
                var c2 = 0, l2 = function F() {
                };
                return { s: l2, n: function n() {
                  return c2 >= t3.length ? { done: true } : { done: false, value: t3[c2++] };
                }, e: function e(t4) {
                  throw t4;
                }, f: l2 };
              }
              throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
            }
            var u2, h2 = true, d2 = false;
            return { s: function s() {
              o3 = o3.call(t3);
            }, n: function n() {
              var t4 = o3.next();
              h2 = t4.done;
              return t4;
            }, e: function e(t4) {
              d2 = true;
              u2 = t4;
            }, f: function f() {
              try {
                h2 || o3.return == null || o3.return();
              } finally {
                if (d2)
                  throw u2;
              }
            } };
          }
          function _unsupportedIterableToArray(t3, r3) {
            if (t3) {
              if (typeof t3 == "string")
                return _arrayLikeToArray(t3, r3);
              var o3 = Object.prototype.toString.call(t3).slice(8, -1);
              o3 === "Object" && t3.constructor && (o3 = t3.constructor.name);
              return o3 === "Map" || o3 === "Set" ? Array.from(t3) : o3 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(o3) ? _arrayLikeToArray(t3, r3) : void 0;
            }
          }
          function _arrayLikeToArray(t3, r3) {
            (r3 == null || r3 > t3.length) && (r3 = t3.length);
            for (var o3 = 0, c2 = new Array(r3); o3 < r3; o3++)
              c2[o3] = t3[o3];
            return c2;
          }
          function _defineProperties(t3, r3) {
            for (var o3 = 0; o3 < r3.length; o3++) {
              var c2 = r3[o3];
              c2.enumerable = c2.enumerable || false;
              c2.configurable = true;
              "value" in c2 && (c2.writable = true);
              Object.defineProperty(t3, c2.key, c2);
            }
          }
          var g = h.NamespaceIds.datasets.id;
          function createText(t3) {
            var r3 = new l.Text({});
            r3[c.$content] = t3;
            return r3;
          }
          var m = function() {
            function Binder(t3) {
              !function _classCallCheck(t4, r3) {
                if (!(t4 instanceof r3))
                  throw new TypeError("Cannot call a class as a function");
              }(this, Binder);
              this.root = t3;
              this.datasets = t3.datasets;
              t3.datasets && t3.datasets.data ? this.data = t3.datasets.data : this.data = new c.XmlObject(h.NamespaceIds.datasets.id, "data");
              this.emptyMerge = this.data[c.$getChildren]().length === 0;
              this.root.form = this.form = t3.template[c.$clone]();
            }
            !function _createClass(t3, r3, o3) {
              r3 && _defineProperties(t3.prototype, r3);
              o3 && _defineProperties(t3, o3);
              Object.defineProperty(t3, "prototype", { writable: false });
              return t3;
            }(Binder, [{ key: "_isConsumeData", value: function _isConsumeData() {
              return !this.emptyMerge && this._mergeMode;
            } }, { key: "_isMatchTemplate", value: function _isMatchTemplate() {
              return !this._isConsumeData();
            } }, { key: "bind", value: function bind() {
              this._bindElement(this.form, this.data);
              return this.form;
            } }, { key: "getData", value: function getData() {
              return this.data;
            } }, { key: "_bindValue", value: function _bindValue(t3, r3, o3) {
              t3[c.$data] = r3;
              if (t3[c.$hasSettableValue]())
                if (r3[c.$isDataValue]()) {
                  var u2 = r3[c.$getDataValue]();
                  t3[c.$setValue](createText(u2));
                } else if (t3 instanceof l.Field && t3.ui && t3.ui.choiceList && t3.ui.choiceList.open === "multiSelect") {
                  var h2 = r3[c.$getChildren]().map(function(t4) {
                    return t4[c.$content].trim();
                  }).join("\n");
                  t3[c.$setValue](createText(h2));
                } else
                  this._isConsumeData() && (0, d.warn)("XFA - Nodes haven't the same type.");
              else
                !r3[c.$isDataValue]() || this._isMatchTemplate() ? this._bindElement(t3, r3) : (0, d.warn)("XFA - Nodes haven't the same type.");
            } }, { key: "_findDataByNameToConsume", value: function _findDataByNameToConsume(t3, r3, o3, l2) {
              if (!t3)
                return null;
              for (var u2, d2, g2 = 0; g2 < 3; g2++) {
                u2 = o3[c.$getRealChildrenByNameIt](t3, false, true);
                for (; d2 = u2.next().value; )
                  if (r3 === d2[c.$isDataValue]())
                    return d2;
                if (o3[c.$namespaceId] === h.NamespaceIds.datasets.id && o3[c.$nodeName] === "data")
                  break;
                o3 = o3[c.$getParent]();
              }
              return l2 && ((d2 = (u2 = this.data[c.$getRealChildrenByNameIt](t3, true, false)).next().value) || (d2 = (u2 = this.data[c.$getAttributeIt](t3, true)).next().value) && d2[c.$isDataValue]()) ? d2 : null;
            } }, { key: "_setProperties", value: function _setProperties(t3, r3) {
              if (t3.hasOwnProperty("setProperty")) {
                var o3, h2 = _createForOfIteratorHelper(t3.setProperty.children);
                try {
                  for (h2.s(); !(o3 = h2.n()).done; ) {
                    var g2 = o3.value, m2 = g2.ref, y = g2.target;
                    if (!g2.connection && m2) {
                      var v = (0, u.searchNode)(this.root, r3, m2, false, false);
                      if (v) {
                        var k = _slicedToArray(v, 1)[0];
                        if (k[c.$isDescendent](this.data)) {
                          var _ = (0, u.searchNode)(this.root, t3, y, false, false);
                          if (_) {
                            var w = _slicedToArray(_, 1)[0];
                            if (w[c.$isDescendent](t3)) {
                              var S = w[c.$getParent]();
                              if (w instanceof l.SetProperty || S instanceof l.SetProperty)
                                (0, d.warn)("XFA - Invalid target: cannot be a setProperty or one of its properties.");
                              else if (w instanceof l.BindItems || S instanceof l.BindItems)
                                (0, d.warn)("XFA - Invalid target: cannot be a bindItems or one of its properties.");
                              else {
                                var C = k[c.$text](), x = w[c.$nodeName];
                                if (w instanceof c.XFAAttribute) {
                                  var O = /* @__PURE__ */ Object.create(null);
                                  O[x] = C;
                                  var T = Reflect.construct(Object.getPrototypeOf(S).constructor, [O]);
                                  S[x] = T[x];
                                } else if (w.hasOwnProperty(c.$content)) {
                                  w[c.$data] = k;
                                  w[c.$content] = C;
                                  w[c.$finalize]();
                                } else
                                  (0, d.warn)("XFA - Invalid node to use in setProperty");
                              }
                            } else
                              (0, d.warn)("XFA - Invalid target: must be a property or subproperty.");
                          } else
                            (0, d.warn)("XFA - Invalid target: ".concat(y, "."));
                        } else
                          (0, d.warn)("XFA - Invalid node: must be a data node.");
                      } else
                        (0, d.warn)("XFA - Invalid reference: ".concat(m2, "."));
                    }
                  }
                } catch (t4) {
                  h2.e(t4);
                } finally {
                  h2.f();
                }
              }
            } }, { key: "_bindItems", value: function _bindItems(t3, r3) {
              if (t3.hasOwnProperty("items") && t3.hasOwnProperty("bindItems") && !t3.bindItems.isEmpty()) {
                var o3, h2 = _createForOfIteratorHelper(t3.items.children);
                try {
                  for (h2.s(); !(o3 = h2.n()).done; ) {
                    var g2 = o3.value;
                    t3[c.$removeChild](g2);
                  }
                } catch (t4) {
                  h2.e(t4);
                } finally {
                  h2.f();
                }
                t3.items.clear();
                var m2 = new l.Items({}), y = new l.Items({});
                t3[c.$appendChild](m2);
                t3.items.push(m2);
                t3[c.$appendChild](y);
                t3.items.push(y);
                var v, k = _createForOfIteratorHelper(t3.bindItems.children);
                try {
                  for (k.s(); !(v = k.n()).done; ) {
                    var _ = v.value, w = _.ref, S = _.labelRef, C = _.valueRef;
                    if (!_.connection && w) {
                      var x = (0, u.searchNode)(this.root, r3, w, false, false);
                      if (x) {
                        var O, T = _createForOfIteratorHelper(x);
                        try {
                          for (T.s(); !(O = T.n()).done; ) {
                            var E = O.value;
                            if (E[c.$isDescendent](this.datasets)) {
                              var M = (0, u.searchNode)(this.root, E, S, true, false);
                              if (M) {
                                var R = _slicedToArray(M, 1)[0];
                                if (R[c.$isDescendent](this.datasets)) {
                                  var D = (0, u.searchNode)(this.root, E, C, true, false);
                                  if (D) {
                                    var j = _slicedToArray(D, 1)[0];
                                    if (j[c.$isDescendent](this.datasets)) {
                                      var L = createText(R[c.$text]()), N = createText(j[c.$text]());
                                      m2[c.$appendChild](L);
                                      m2.text.push(L);
                                      y[c.$appendChild](N);
                                      y.text.push(N);
                                    } else
                                      (0, d.warn)("XFA - Invalid value: must be a datasets child.");
                                  } else
                                    (0, d.warn)("XFA - Invalid value: ".concat(C, "."));
                                } else
                                  (0, d.warn)("XFA - Invalid label: must be a datasets child.");
                              } else
                                (0, d.warn)("XFA - Invalid label: ".concat(S, "."));
                            } else
                              (0, d.warn)("XFA - Invalid ref (".concat(w, "): must be a datasets child."));
                          }
                        } catch (t4) {
                          T.e(t4);
                        } finally {
                          T.f();
                        }
                      } else
                        (0, d.warn)("XFA - Invalid reference: ".concat(w, "."));
                    }
                  }
                } catch (t4) {
                  k.e(t4);
                } finally {
                  k.f();
                }
              }
            } }, { key: "_bindOccurrences", value: function _bindOccurrences(t3, r3, o3) {
              var l2;
              if (r3.length > 1) {
                (l2 = t3[c.$clone]())[c.$removeChild](l2.occur);
                l2.occur = null;
              }
              this._bindValue(t3, r3[0], o3);
              this._setProperties(t3, r3[0]);
              this._bindItems(t3, r3[0]);
              if (r3.length !== 1)
                for (var u2 = t3[c.$getParent](), h2 = t3[c.$nodeName], d2 = u2[c.$indexOf](t3), g2 = 1, m2 = r3.length; g2 < m2; g2++) {
                  var y = r3[g2], v = l2[c.$clone]();
                  u2[h2].push(v);
                  u2[c.$insertAt](d2 + g2, v);
                  this._bindValue(v, y, o3);
                  this._setProperties(v, y);
                  this._bindItems(v, y);
                }
            } }, { key: "_createOccurrences", value: function _createOccurrences(t3) {
              if (this.emptyMerge) {
                var r3 = t3.occur;
                if (r3 && !(r3.initial <= 1)) {
                  var o3 = t3[c.$getParent](), l2 = t3[c.$nodeName];
                  if (o3[l2] instanceof c.XFAObjectArray) {
                    var u2;
                    u2 = t3.name ? o3[l2].children.filter(function(r4) {
                      return r4.name === t3.name;
                    }).length : o3[l2].children.length;
                    var h2 = o3[c.$indexOf](t3) + 1, d2 = r3.initial - u2;
                    if (d2) {
                      var g2 = t3[c.$clone]();
                      g2[c.$removeChild](g2.occur);
                      g2.occur = null;
                      o3[l2].push(g2);
                      o3[c.$insertAt](h2, g2);
                      for (var m2 = 1; m2 < d2; m2++) {
                        var y = g2[c.$clone]();
                        o3[l2].push(y);
                        o3[c.$insertAt](h2 + m2, y);
                      }
                    }
                  }
                }
              }
            } }, { key: "_getOccurInfo", value: function _getOccurInfo(t3) {
              var r3 = t3.name, o3 = t3.occur;
              if (!o3 || !r3)
                return [1, 1];
              var c2 = o3.max === -1 ? 1 / 0 : o3.max;
              return [o3.min, c2];
            } }, { key: "_setAndBind", value: function _setAndBind(t3, r3) {
              this._setProperties(t3, r3);
              this._bindItems(t3, r3);
              this._bindElement(t3, r3);
            } }, { key: "_bindElement", value: function _bindElement(t3, r3) {
              var o3 = [];
              this._createOccurrences(t3);
              var l2, h2 = _createForOfIteratorHelper(t3[c.$getChildren]());
              try {
                for (h2.s(); !(l2 = h2.n()).done; ) {
                  var m2 = l2.value;
                  if (!m2[c.$data])
                    if (this._mergeMode !== void 0 || m2[c.$nodeName] !== "subform") {
                      if (m2[c.$isBindable]()) {
                        var y = false, v = null, k = null, _ = null;
                        if (m2.bind) {
                          switch (m2.bind.match) {
                            case "none":
                              this._setAndBind(m2, r3);
                              continue;
                            case "global":
                              y = true;
                              break;
                            case "dataRef":
                              if (!m2.bind.ref) {
                                (0, d.warn)("XFA - ref is empty in node ".concat(m2[c.$nodeName], "."));
                                this._setAndBind(m2, r3);
                                continue;
                              }
                              k = m2.bind.ref;
                          }
                          m2.bind.picture && (v = m2.bind.picture[c.$content]);
                        }
                        var w = _slicedToArray(this._getOccurInfo(m2), 2), S = w[0], C = w[1];
                        if (k) {
                          if ((_ = (0, u.searchNode)(this.root, r3, k, true, false)) === null) {
                            if (!(_ = (0, u.createDataNode)(this.data, r3, k)))
                              continue;
                            this._isConsumeData() && (_[c.$consumed] = true);
                            this._setAndBind(m2, _);
                            continue;
                          }
                          this._isConsumeData() && (_ = _.filter(function(t4) {
                            return !t4[c.$consumed];
                          }));
                          _.length > C ? _ = _.slice(0, C) : _.length === 0 && (_ = null);
                          _ && this._isConsumeData() && _.forEach(function(t4) {
                            t4[c.$consumed] = true;
                          });
                        } else {
                          if (!m2.name) {
                            this._setAndBind(m2, r3);
                            continue;
                          }
                          if (this._isConsumeData()) {
                            for (var x = []; x.length < C; ) {
                              var O = this._findDataByNameToConsume(m2.name, m2[c.$hasSettableValue](), r3, y);
                              if (!O)
                                break;
                              O[c.$consumed] = true;
                              x.push(O);
                            }
                            _ = x.length > 0 ? x : null;
                          } else {
                            if (!(_ = r3[c.$getRealChildrenByNameIt](m2.name, false, this.emptyMerge).next().value)) {
                              if (S === 0) {
                                o3.push(m2);
                                continue;
                              }
                              var T = r3[c.$namespaceId] === g ? -1 : r3[c.$namespaceId];
                              _ = m2[c.$data] = new c.XmlObject(T, m2.name);
                              this.emptyMerge && (_[c.$consumed] = true);
                              r3[c.$appendChild](_);
                              this._setAndBind(m2, _);
                              continue;
                            }
                            this.emptyMerge && (_[c.$consumed] = true);
                            _ = [_];
                          }
                        }
                        _ ? this._bindOccurrences(m2, _, v) : S > 0 ? this._setAndBind(m2, r3) : o3.push(m2);
                      }
                    } else {
                      this._mergeMode = m2.mergeMode === "consumeData";
                      var E = r3[c.$getChildren]();
                      if (E.length > 0)
                        this._bindOccurrences(m2, [E[0]], null);
                      else if (this.emptyMerge) {
                        var M = r3[c.$namespaceId] === g ? -1 : r3[c.$namespaceId], R = m2[c.$data] = new c.XmlObject(M, m2.name || "root");
                        r3[c.$appendChild](R);
                        this._bindElement(m2, R);
                      }
                    }
                }
              } catch (t4) {
                h2.e(t4);
              } finally {
                h2.f();
              }
              o3.forEach(function(t4) {
                return t4[c.$getParent]()[c.$removeChild](t4);
              });
            } }]);
            return Binder;
          }();
          r2.Binder = m;
        }, (t2, r2, o2) => {
          "use strict";
          var c = o2(2);
          Object.defineProperty(r2, "__esModule", { value: true });
          r2.Value = r2.Text = r2.TemplateNamespace = r2.Template = r2.SetProperty = r2.Items = r2.Field = r2.BindItems = void 0;
          var l = function _interopRequireDefault(t3) {
            return t3 && t3.__esModule ? t3 : { default: t3 };
          }(o2(2)), u = o2(230), h = o2(232), d = o2(236), g = o2(237), m = o2(231), y = o2(4), v = o2(238), k = o2(161), _ = o2(233);
          function _typeof(t3) {
            return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t4) {
              return typeof t4;
            } : function(t4) {
              return t4 && typeof Symbol == "function" && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
            }, _typeof(t3);
          }
          function _get() {
            _get = typeof Reflect != "undefined" && Reflect.get ? Reflect.get : function _get2(t3, r3, o3) {
              var c2 = _superPropBase(t3, r3);
              if (c2) {
                var l2 = Object.getOwnPropertyDescriptor(c2, r3);
                return l2.get ? l2.get.call(arguments.length < 3 ? t3 : o3) : l2.value;
              }
            };
            return _get.apply(this, arguments);
          }
          function _superPropBase(t3, r3) {
            for (; !Object.prototype.hasOwnProperty.call(t3, r3) && (t3 = _getPrototypeOf(t3)) !== null; )
              ;
            return t3;
          }
          function _slicedToArray(t3, r3) {
            return function _arrayWithHoles(t4) {
              if (Array.isArray(t4))
                return t4;
            }(t3) || function _iterableToArrayLimit(t4, r4) {
              var o3 = t4 == null ? null : typeof Symbol != "undefined" && t4[Symbol.iterator] || t4["@@iterator"];
              if (o3 == null)
                return;
              var c2, l2, u2 = [], h2 = true, d2 = false;
              try {
                for (o3 = o3.call(t4); !(h2 = (c2 = o3.next()).done); h2 = true) {
                  u2.push(c2.value);
                  if (r4 && u2.length === r4)
                    break;
                }
              } catch (t5) {
                d2 = true;
                l2 = t5;
              } finally {
                try {
                  h2 || o3.return == null || o3.return();
                } finally {
                  if (d2)
                    throw l2;
                }
              }
              return u2;
            }(t3, r3) || _unsupportedIterableToArray(t3, r3) || function _nonIterableRest() {
              throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
            }();
          }
          function _defineProperties(t3, r3) {
            for (var o3 = 0; o3 < r3.length; o3++) {
              var c2 = r3[o3];
              c2.enumerable = c2.enumerable || false;
              c2.configurable = true;
              "value" in c2 && (c2.writable = true);
              Object.defineProperty(t3, c2.key, c2);
            }
          }
          function _createClass(t3, r3, o3) {
            r3 && _defineProperties(t3.prototype, r3);
            o3 && _defineProperties(t3, o3);
            Object.defineProperty(t3, "prototype", { writable: false });
            return t3;
          }
          function _classCallCheck(t3, r3) {
            if (!(t3 instanceof r3))
              throw new TypeError("Cannot call a class as a function");
          }
          function _inherits(t3, r3) {
            if (typeof r3 != "function" && r3 !== null)
              throw new TypeError("Super expression must either be null or a function");
            t3.prototype = Object.create(r3 && r3.prototype, { constructor: { value: t3, writable: true, configurable: true } });
            Object.defineProperty(t3, "prototype", { writable: false });
            r3 && _setPrototypeOf(t3, r3);
          }
          function _setPrototypeOf(t3, r3) {
            _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(t4, r4) {
              t4.__proto__ = r4;
              return t4;
            };
            return _setPrototypeOf(t3, r3);
          }
          function _createSuper(t3) {
            var r3 = function _isNativeReflectConstruct() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                }));
                return true;
              } catch (t4) {
                return false;
              }
            }();
            return function _createSuperInternal() {
              var o3, c2 = _getPrototypeOf(t3);
              if (r3) {
                var l2 = _getPrototypeOf(this).constructor;
                o3 = Reflect.construct(c2, arguments, l2);
              } else
                o3 = c2.apply(this, arguments);
              return _possibleConstructorReturn(this, o3);
            };
          }
          function _possibleConstructorReturn(t3, r3) {
            if (r3 && (_typeof(r3) === "object" || typeof r3 == "function"))
              return r3;
            if (r3 !== void 0)
              throw new TypeError("Derived constructors may only return object or undefined");
            return function _assertThisInitialized(t4) {
              if (t4 === void 0)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return t4;
            }(t3);
          }
          function _getPrototypeOf(t3) {
            _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(t4) {
              return t4.__proto__ || Object.getPrototypeOf(t4);
            };
            return _getPrototypeOf(t3);
          }
          var w = c.mark(getContainedChildren);
          function _createForOfIteratorHelper(t3, r3) {
            var o3 = typeof Symbol != "undefined" && t3[Symbol.iterator] || t3["@@iterator"];
            if (!o3) {
              if (Array.isArray(t3) || (o3 = _unsupportedIterableToArray(t3)) || r3 && t3 && typeof t3.length == "number") {
                o3 && (t3 = o3);
                var c2 = 0, l2 = function F() {
                };
                return { s: l2, n: function n() {
                  return c2 >= t3.length ? { done: true } : { done: false, value: t3[c2++] };
                }, e: function e(t4) {
                  throw t4;
                }, f: l2 };
              }
              throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
            }
            var u2, h2 = true, d2 = false;
            return { s: function s() {
              o3 = o3.call(t3);
            }, n: function n() {
              var t4 = o3.next();
              h2 = t4.done;
              return t4;
            }, e: function e(t4) {
              d2 = true;
              u2 = t4;
            }, f: function f() {
              try {
                h2 || o3.return == null || o3.return();
              } finally {
                if (d2)
                  throw u2;
              }
            } };
          }
          function _unsupportedIterableToArray(t3, r3) {
            if (t3) {
              if (typeof t3 == "string")
                return _arrayLikeToArray(t3, r3);
              var o3 = Object.prototype.toString.call(t3).slice(8, -1);
              o3 === "Object" && t3.constructor && (o3 = t3.constructor.name);
              return o3 === "Map" || o3 === "Set" ? Array.from(t3) : o3 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(o3) ? _arrayLikeToArray(t3, r3) : void 0;
            }
          }
          function _arrayLikeToArray(t3, r3) {
            (r3 == null || r3 > t3.length) && (r3 = t3.length);
            for (var o3 = 0, c2 = new Array(r3); o3 < r3; o3++)
              c2[o3] = t3[o3];
            return c2;
          }
          var S = h.NamespaceIds.template.id, C = "http://www.w3.org/2000/svg", x = /^H(\d+)$/, O = /* @__PURE__ */ new Set(["image/gif", "image/jpeg", "image/jpg", "image/pjpeg", "image/png", "image/apng", "image/x-png", "image/bmp", "image/x-ms-bmp", "image/tiff", "image/tif", "application/octet-stream"]), T = [[[66, 77], "image/bmp"], [[255, 216, 255], "image/jpeg"], [[73, 73, 42, 0], "image/tiff"], [[77, 77, 0, 42], "image/tiff"], [[71, 73, 70, 56, 57, 97], "image/gif"], [[137, 80, 78, 71, 13, 10, 26, 10], "image/png"]];
          function getBorderDims(t3) {
            if (!t3 || !t3.border)
              return { w: 0, h: 0 };
            var r3 = t3.border[u.$getExtra]();
            return r3 ? { w: r3.widths[0] + r3.widths[2] + r3.insets[0] + r3.insets[2], h: r3.widths[1] + r3.widths[3] + r3.insets[1] + r3.insets[3] } : { w: 0, h: 0 };
          }
          function hasMargin(t3) {
            return t3.margin && (t3.margin.topInset || t3.margin.rightInset || t3.margin.bottomInset || t3.margin.leftInset);
          }
          function _setValue(t3, r3) {
            if (!t3.value) {
              var o3 = new Bt({});
              t3[u.$appendChild](o3);
              t3.value = o3;
            }
            t3.value[u.$setValue](r3);
          }
          function getContainedChildren(t3) {
            var r3, o3, c2;
            return l.default.wrap(function getContainedChildren$(l2) {
              for (; ; )
                switch (l2.prev = l2.next) {
                  case 0:
                    r3 = _createForOfIteratorHelper(t3[u.$getChildren]());
                    l2.prev = 1;
                    r3.s();
                  case 3:
                    if ((o3 = r3.n()).done) {
                      l2.next = 12;
                      break;
                    }
                    if (!((c2 = o3.value) instanceof St)) {
                      l2.next = 8;
                      break;
                    }
                    return l2.delegateYield(c2[u.$getContainedChildren](), "t0", 7);
                  case 7:
                    return l2.abrupt("continue", 10);
                  case 8:
                    l2.next = 10;
                    return c2;
                  case 10:
                    l2.next = 3;
                    break;
                  case 12:
                    l2.next = 17;
                    break;
                  case 14:
                    l2.prev = 14;
                    l2.t1 = l2.catch(1);
                    r3.e(l2.t1);
                  case 17:
                    l2.prev = 17;
                    r3.f();
                    return l2.finish(17);
                  case 20:
                  case "end":
                    return l2.stop();
                }
            }, w, null, [[1, 14, 17, 20]]);
          }
          function setTabIndex(t3) {
            for (; t3; ) {
              if (!t3.traversal) {
                t3[u.$tabIndex] = t3[u.$getParent]()[u.$tabIndex];
                return;
              }
              if (t3[u.$tabIndex])
                return;
              var r3, o3 = null, c2 = _createForOfIteratorHelper(t3.traversal[u.$getChildren]());
              try {
                for (c2.s(); !(r3 = c2.n()).done; ) {
                  var l2 = r3.value;
                  if (l2.operation === "next") {
                    o3 = l2;
                    break;
                  }
                }
              } catch (t4) {
                c2.e(t4);
              } finally {
                c2.f();
              }
              if (!o3 || !o3.ref) {
                t3[u.$tabIndex] = t3[u.$getParent]()[u.$tabIndex];
                return;
              }
              var h2 = t3[u.$getTemplateRoot]();
              t3[u.$tabIndex] = ++h2[u.$tabIndex];
              var d2 = h2[u.$searchNode](o3.ref, t3);
              if (!d2)
                return;
              t3 = d2[0];
            }
          }
          function applyAssist(t3, r3) {
            var o3 = t3.assist;
            if (o3) {
              var c2 = o3[u.$toHTML]();
              c2 && (r3.title = c2);
              var l2 = o3.role.match(x);
              if (l2) {
                var h2 = l2[1];
                r3.role = "heading";
                r3["aria-level"] = h2;
              }
            }
            if (t3.layout === "table")
              r3.role = "table";
            else if (t3.layout === "row")
              r3.role = "row";
            else {
              var d2 = t3[u.$getParent]();
              d2.layout === "row" && (d2.assist && d2.assist.role === "TH" ? r3.role = "columnheader" : r3.role = "cell");
            }
          }
          function ariaLabel(t3) {
            if (!t3.assist)
              return null;
            var r3 = t3.assist;
            return r3.speak && r3.speak[u.$content] !== "" ? r3.speak[u.$content] : r3.toolTip ? r3.toolTip[u.$content] : null;
          }
          function valueToHtml(t3) {
            return m.HTMLResult.success({ name: "div", attributes: { class: ["xfaRich"], style: /* @__PURE__ */ Object.create(null) }, children: [{ name: "span", attributes: { style: /* @__PURE__ */ Object.create(null) }, value: t3 }] });
          }
          function setFirstUnsplittable(t3) {
            var r3 = t3[u.$getTemplateRoot]();
            if (r3[u.$extra].firstUnsplittable === null) {
              r3[u.$extra].firstUnsplittable = t3;
              r3[u.$extra].noLayoutFailure = true;
            }
          }
          function unsetFirstUnsplittable(t3) {
            var r3 = t3[u.$getTemplateRoot]();
            r3[u.$extra].firstUnsplittable === t3 && (r3[u.$extra].noLayoutFailure = false);
          }
          function handleBreak(t3) {
            if (t3[u.$extra])
              return false;
            t3[u.$extra] = /* @__PURE__ */ Object.create(null);
            if (t3.targetType === "auto")
              return false;
            var r3 = t3[u.$getTemplateRoot](), o3 = null;
            if (t3.target) {
              if (!(o3 = r3[u.$searchNode](t3.target, t3[u.$getParent]())))
                return false;
              o3 = o3[0];
            }
            var c2 = r3[u.$extra], l2 = c2.currentPageArea, h2 = c2.currentContentArea;
            if (t3.targetType === "pageArea") {
              o3 instanceof tt || (o3 = null);
              if (t3.startNew) {
                t3[u.$extra].target = o3 || l2;
                return true;
              }
              if (o3 && o3 !== l2) {
                t3[u.$extra].target = o3;
                return true;
              }
              return false;
            }
            o3 instanceof re || (o3 = null);
            var d2, g2 = o3 && o3[u.$getParent](), m2 = g2;
            if (t3.startNew)
              if (o3) {
                var y2 = g2.contentArea.children, v2 = y2.indexOf(h2), k2 = y2.indexOf(o3);
                v2 !== -1 && v2 < k2 && (m2 = null);
                d2 = k2 - 1;
              } else
                d2 = l2.contentArea.children.indexOf(h2);
            else {
              if (!o3 || o3 === h2)
                return false;
              d2 = g2.contentArea.children.indexOf(o3) - 1;
              m2 = g2 === l2 ? null : g2;
            }
            t3[u.$extra].target = m2;
            t3[u.$extra].index = d2;
            return true;
          }
          function handleOverflow(t3, r3, o3) {
            var c2 = t3[u.$getTemplateRoot](), l2 = c2[u.$extra].noLayoutFailure, h2 = r3[u.$getSubformParent];
            r3[u.$getSubformParent] = function() {
              return t3;
            };
            c2[u.$extra].noLayoutFailure = true;
            var d2 = r3[u.$toHTML](o3);
            t3[u.$addHTML](d2.html, d2.bbox);
            c2[u.$extra].noLayoutFailure = l2;
            r3[u.$getSubformParent] = h2;
          }
          var E = function(t3) {
            _inherits(AppearanceFilter, t3);
            var r3 = _createSuper(AppearanceFilter);
            function AppearanceFilter(t4) {
              var o3;
              _classCallCheck(this, AppearanceFilter);
              (o3 = r3.call(this, S, "appearanceFilter")).id = t4.id || "";
              o3.type = (0, m.getStringOption)(t4.type, ["optional", "required"]);
              o3.use = t4.use || "";
              o3.usehref = t4.usehref || "";
              return o3;
            }
            return _createClass(AppearanceFilter);
          }(u.StringObject), M = function(t3) {
            _inherits(Arc, t3);
            var r3 = _createSuper(Arc);
            function Arc(t4) {
              var o3;
              _classCallCheck(this, Arc);
              (o3 = r3.call(this, S, "arc", true)).circular = (0, m.getInteger)({ data: t4.circular, defaultValue: 0, validate: function validate(t5) {
                return t5 === 1;
              } });
              o3.hand = (0, m.getStringOption)(t4.hand, ["even", "left", "right"]);
              o3.id = t4.id || "";
              o3.startAngle = (0, m.getFloat)({ data: t4.startAngle, defaultValue: 0, validate: function validate(t5) {
                return true;
              } });
              o3.sweepAngle = (0, m.getFloat)({ data: t4.sweepAngle, defaultValue: 360, validate: function validate(t5) {
                return true;
              } });
              o3.use = t4.use || "";
              o3.usehref = t4.usehref || "";
              o3.edge = null;
              o3.fill = null;
              return o3;
            }
            _createClass(Arc, [{ key: u.$toHTML, value: function value() {
              var t4, r4 = this.edge ? this.edge : new de({}), o3 = r4[u.$toStyle](), c2 = /* @__PURE__ */ Object.create(null);
              this.fill && this.fill.presence === "visible" ? Object.assign(c2, this.fill[u.$toStyle]()) : c2.fill = "transparent";
              c2.strokeWidth = (0, g.measureToString)(r4.presence === "visible" ? r4.thickness : 0);
              c2.stroke = o3.color;
              var l2 = { xmlns: C, style: { width: "100%", height: "100%", overflow: "visible" } };
              if (this.sweepAngle === 360)
                t4 = { name: "ellipse", attributes: { xmlns: C, cx: "50%", cy: "50%", rx: "50%", ry: "50%", style: c2 } };
              else {
                var h2 = this.startAngle * Math.PI / 180, d2 = this.sweepAngle * Math.PI / 180, y2 = this.sweepAngle > 180 ? 1 : 0, v2 = 50 * (1 + Math.cos(h2)), k2 = 50 * (1 - Math.sin(h2)), _2 = 50 * (1 + Math.cos(h2 + d2)), w2 = 50 * (1 - Math.sin(h2 + d2));
                t4 = { name: "path", attributes: { xmlns: C, d: "M ".concat(v2, " ").concat(k2, " A 50 50 0 ").concat(y2, " 0 ").concat(_2, " ").concat(w2), vectorEffect: "non-scaling-stroke", style: c2 } };
                Object.assign(l2, { viewBox: "0 0 100 100", preserveAspectRatio: "none" });
              }
              var S2 = { name: "svg", children: [t4], attributes: l2 };
              if (hasMargin(this[u.$getParent]()[u.$getParent]()))
                return m.HTMLResult.success({ name: "div", attributes: { style: { display: "inline", width: "100%", height: "100%" } }, children: [S2] });
              S2.attributes.style.position = "absolute";
              return m.HTMLResult.success(S2);
            } }]);
            return Arc;
          }(u.XFAObject), R = function(t3) {
            _inherits(Area, t3);
            var r3 = _createSuper(Area);
            function Area(t4) {
              var o3;
              _classCallCheck(this, Area);
              (o3 = r3.call(this, S, "area", true)).colSpan = (0, m.getInteger)({ data: t4.colSpan, defaultValue: 1, validate: function validate(t5) {
                return t5 >= 1 || t5 === -1;
              } });
              o3.id = t4.id || "";
              o3.name = t4.name || "";
              o3.relevant = (0, m.getRelevant)(t4.relevant);
              o3.use = t4.use || "";
              o3.usehref = t4.usehref || "";
              o3.x = (0, m.getMeasurement)(t4.x, "0pt");
              o3.y = (0, m.getMeasurement)(t4.y, "0pt");
              o3.desc = null;
              o3.extras = null;
              o3.area = new u.XFAObjectArray();
              o3.draw = new u.XFAObjectArray();
              o3.exObject = new u.XFAObjectArray();
              o3.exclGroup = new u.XFAObjectArray();
              o3.field = new u.XFAObjectArray();
              o3.subform = new u.XFAObjectArray();
              o3.subformSet = new u.XFAObjectArray();
              return o3;
            }
            _createClass(Area, [{ key: u.$getContainedChildren, value: l.default.mark(function value() {
              return l.default.wrap(function value$(t4) {
                for (; ; )
                  switch (t4.prev = t4.next) {
                    case 0:
                      return t4.delegateYield(getContainedChildren(this), "t0", 1);
                    case 1:
                    case "end":
                      return t4.stop();
                  }
              }, value, this);
            }) }, { key: u.$isTransparent, value: function value() {
              return true;
            } }, { key: u.$isBindable, value: function value() {
              return true;
            } }, { key: u.$addHTML, value: function value(t4, r4) {
              var o3 = _slicedToArray(r4, 4), c2 = o3[0], l2 = o3[1], h2 = o3[2], d2 = o3[3];
              this[u.$extra].width = Math.max(this[u.$extra].width, c2 + h2);
              this[u.$extra].height = Math.max(this[u.$extra].height, l2 + d2);
              this[u.$extra].children.push(t4);
            } }, { key: u.$getAvailableSpace, value: function value() {
              return this[u.$extra].availableSpace;
            } }, { key: u.$toHTML, value: function value(t4) {
              var r4 = (0, g.toStyle)(this, "position"), o3 = { style: r4, id: this[u.$uid], class: ["xfaArea"] };
              (0, g.isPrintOnly)(this) && o3.class.push("xfaPrintOnly");
              this.name && (o3.xfaName = this.name);
              var c2 = [];
              this[u.$extra] = { children: c2, width: 0, height: 0, availableSpace: t4 };
              var l2 = this[u.$childrenToHTML]({ filter: /* @__PURE__ */ new Set(["area", "draw", "field", "exclGroup", "subform", "subformSet"]), include: true });
              if (!l2.success) {
                if (l2.isBreak())
                  return l2;
                delete this[u.$extra];
                return m.HTMLResult.FAILURE;
              }
              r4.width = (0, g.measureToString)(this[u.$extra].width);
              r4.height = (0, g.measureToString)(this[u.$extra].height);
              var h2 = { name: "div", attributes: o3, children: c2 }, d2 = [this.x, this.y, this[u.$extra].width, this[u.$extra].height];
              delete this[u.$extra];
              return m.HTMLResult.success(h2, d2);
            } }]);
            return Area;
          }(u.XFAObject), D = function(t3) {
            _inherits(Assist, t3);
            var r3 = _createSuper(Assist);
            function Assist(t4) {
              var o3;
              _classCallCheck(this, Assist);
              (o3 = r3.call(this, S, "assist", true)).id = t4.id || "";
              o3.role = t4.role || "";
              o3.use = t4.use || "";
              o3.usehref = t4.usehref || "";
              o3.speak = null;
              o3.toolTip = null;
              return o3;
            }
            _createClass(Assist, [{ key: u.$toHTML, value: function value() {
              return this.toolTip && this.toolTip[u.$content] ? this.toolTip[u.$content] : null;
            } }]);
            return Assist;
          }(u.XFAObject), j = function(t3) {
            _inherits(Barcode, t3);
            var r3 = _createSuper(Barcode);
            function Barcode(t4) {
              var o3;
              _classCallCheck(this, Barcode);
              (o3 = r3.call(this, S, "barcode", true)).charEncoding = (0, m.getKeyword)({ data: t4.charEncoding ? t4.charEncoding.toLowerCase() : "", defaultValue: "", validate: function validate(t5) {
                return ["utf-8", "big-five", "fontspecific", "gbk", "gb-18030", "gb-2312", "ksc-5601", "none", "shift-jis", "ucs-2", "utf-16"].includes(t5) || t5.match(/iso-8859-\d{2}/);
              } });
              o3.checksum = (0, m.getStringOption)(t4.checksum, ["none", "1mod10", "1mod10_1mod11", "2mod10", "auto"]);
              o3.dataColumnCount = (0, m.getInteger)({ data: t4.dataColumnCount, defaultValue: -1, validate: function validate(t5) {
                return t5 >= 0;
              } });
              o3.dataLength = (0, m.getInteger)({ data: t4.dataLength, defaultValue: -1, validate: function validate(t5) {
                return t5 >= 0;
              } });
              o3.dataPrep = (0, m.getStringOption)(t4.dataPrep, ["none", "flateCompress"]);
              o3.dataRowCount = (0, m.getInteger)({ data: t4.dataRowCount, defaultValue: -1, validate: function validate(t5) {
                return t5 >= 0;
              } });
              o3.endChar = t4.endChar || "";
              o3.errorCorrectionLevel = (0, m.getInteger)({ data: t4.errorCorrectionLevel, defaultValue: -1, validate: function validate(t5) {
                return t5 >= 0 && t5 <= 8;
              } });
              o3.id = t4.id || "";
              o3.moduleHeight = (0, m.getMeasurement)(t4.moduleHeight, "5mm");
              o3.moduleWidth = (0, m.getMeasurement)(t4.moduleWidth, "0.25mm");
              o3.printCheckDigit = (0, m.getInteger)({ data: t4.printCheckDigit, defaultValue: 0, validate: function validate(t5) {
                return t5 === 1;
              } });
              o3.rowColumnRatio = (0, m.getRatio)(t4.rowColumnRatio);
              o3.startChar = t4.startChar || "";
              o3.textLocation = (0, m.getStringOption)(t4.textLocation, ["below", "above", "aboveEmbedded", "belowEmbedded", "none"]);
              o3.truncate = (0, m.getInteger)({ data: t4.truncate, defaultValue: 0, validate: function validate(t5) {
                return t5 === 1;
              } });
              o3.type = (0, m.getStringOption)(t4.type ? t4.type.toLowerCase() : "", ["aztec", "codabar", "code2of5industrial", "code2of5interleaved", "code2of5matrix", "code2of5standard", "code3of9", "code3of9extended", "code11", "code49", "code93", "code128", "code128a", "code128b", "code128c", "code128sscc", "datamatrix", "ean8", "ean8add2", "ean8add5", "ean13", "ean13add2", "ean13add5", "ean13pwcd", "fim", "logmars", "maxicode", "msi", "pdf417", "pdf417macro", "plessey", "postauscust2", "postauscust3", "postausreplypaid", "postausstandard", "postukrm4scc", "postusdpbc", "postusimb", "postusstandard", "postus5zip", "qrcode", "rfid", "rss14", "rss14expanded", "rss14limited", "rss14stacked", "rss14stackedomni", "rss14truncated", "telepen", "ucc128", "ucc128random", "ucc128sscc", "upca", "upcaadd2", "upcaadd5", "upcapwcd", "upce", "upceadd2", "upceadd5", "upcean2", "upcean5", "upsmaxicode"]);
              o3.upsMode = (0, m.getStringOption)(t4.upsMode, ["usCarrier", "internationalCarrier", "secureSymbol", "standardSymbol"]);
              o3.use = t4.use || "";
              o3.usehref = t4.usehref || "";
              o3.wideNarrowRatio = (0, m.getRatio)(t4.wideNarrowRatio);
              o3.encrypt = null;
              o3.extras = null;
              return o3;
            }
            return _createClass(Barcode);
          }(u.XFAObject), L = function(t3) {
            _inherits(Bind, t3);
            var r3 = _createSuper(Bind);
            function Bind(t4) {
              var o3;
              _classCallCheck(this, Bind);
              (o3 = r3.call(this, S, "bind", true)).match = (0, m.getStringOption)(t4.match, ["once", "dataRef", "global", "none"]);
              o3.ref = t4.ref || "";
              o3.picture = null;
              return o3;
            }
            return _createClass(Bind);
          }(u.XFAObject), N = function(t3) {
            _inherits(BindItems, t3);
            var r3 = _createSuper(BindItems);
            function BindItems(t4) {
              var o3;
              _classCallCheck(this, BindItems);
              (o3 = r3.call(this, S, "bindItems")).connection = t4.connection || "";
              o3.labelRef = t4.labelRef || "";
              o3.ref = t4.ref || "";
              o3.valueRef = t4.valueRef || "";
              return o3;
            }
            return _createClass(BindItems);
          }(u.XFAObject);
          r2.BindItems = N;
          var U = function(t3) {
            _inherits(Bookend, t3);
            var r3 = _createSuper(Bookend);
            function Bookend(t4) {
              var o3;
              _classCallCheck(this, Bookend);
              (o3 = r3.call(this, S, "bookend")).id = t4.id || "";
              o3.leader = t4.leader || "";
              o3.trailer = t4.trailer || "";
              o3.use = t4.use || "";
              o3.usehref = t4.usehref || "";
              return o3;
            }
            return _createClass(Bookend);
          }(u.XFAObject), H = function(t3) {
            _inherits(BooleanElement, t3);
            var r3 = _createSuper(BooleanElement);
            function BooleanElement(t4) {
              var o3;
              _classCallCheck(this, BooleanElement);
              (o3 = r3.call(this, S, "boolean")).id = t4.id || "";
              o3.name = t4.name || "";
              o3.use = t4.use || "";
              o3.usehref = t4.usehref || "";
              return o3;
            }
            _createClass(BooleanElement, [{ key: u.$toHTML, value: function value(t4) {
              return valueToHtml(this[u.$content] === 1 ? "1" : "0");
            } }]);
            return BooleanElement;
          }(u.Option01), $ = function(t3) {
            _inherits(Border, t3);
            var r3 = _createSuper(Border);
            function Border(t4) {
              var o3;
              _classCallCheck(this, Border);
              (o3 = r3.call(this, S, "border", true)).break = (0, m.getStringOption)(t4.break, ["close", "open"]);
              o3.hand = (0, m.getStringOption)(t4.hand, ["even", "left", "right"]);
              o3.id = t4.id || "";
              o3.presence = (0, m.getStringOption)(t4.presence, ["visible", "hidden", "inactive", "invisible"]);
              o3.relevant = (0, m.getRelevant)(t4.relevant);
              o3.use = t4.use || "";
              o3.usehref = t4.usehref || "";
              o3.corner = new u.XFAObjectArray(4);
              o3.edge = new u.XFAObjectArray(4);
              o3.extras = null;
              o3.fill = null;
              o3.margin = null;
              return o3;
            }
            _createClass(Border, [{ key: u.$getExtra, value: function value() {
              if (!this[u.$extra]) {
                var t4 = this.edge.children.slice();
                if (t4.length < 4)
                  for (var r4 = t4[t4.length - 1] || new de({}), o3 = t4.length; o3 < 4; o3++)
                    t4.push(r4);
                var c2 = t4.map(function(t5) {
                  return t5.thickness;
                }), l2 = [0, 0, 0, 0];
                if (this.margin) {
                  l2[0] = this.margin.topInset;
                  l2[1] = this.margin.rightInset;
                  l2[2] = this.margin.bottomInset;
                  l2[3] = this.margin.leftInset;
                }
                this[u.$extra] = { widths: c2, insets: l2, edges: t4 };
              }
              return this[u.$extra];
            } }, { key: u.$toStyle, value: function value() {
              var t4 = this[u.$getExtra]().edges.map(function(t5) {
                var r5 = t5[u.$toStyle]();
                r5.color = r5.color || "#000000";
                return r5;
              }), r4 = /* @__PURE__ */ Object.create(null);
              this.margin && Object.assign(r4, this.margin[u.$toStyle]());
              this.fill && this.fill.presence === "visible" && Object.assign(r4, this.fill[u.$toStyle]());
              if (this.corner.children.some(function(t5) {
                return t5.radius !== 0;
              })) {
                var o3 = this.corner.children.map(function(t5) {
                  return t5[u.$toStyle]();
                });
                if (o3.length === 2 || o3.length === 3)
                  for (var c2 = o3[o3.length - 1], l2 = o3.length; l2 < 4; l2++)
                    o3.push(c2);
                r4.borderRadius = o3.map(function(t5) {
                  return t5.radius;
                }).join(" ");
              }
              switch (this.presence) {
                case "invisible":
                case "hidden":
                  r4.borderStyle = "";
                  break;
                case "inactive":
                  r4.borderStyle = "none";
                  break;
                default:
                  r4.borderStyle = t4.map(function(t5) {
                    return t5.style;
                  }).join(" ");
              }
              r4.borderWidth = t4.map(function(t5) {
                return t5.width;
              }).join(" ");
              r4.borderColor = t4.map(function(t5) {
                return t5.color;
              }).join(" ");
              return r4;
            } }]);
            return Border;
          }(u.XFAObject), X = function(t3) {
            _inherits(Break, t3);
            var r3 = _createSuper(Break);
            function Break(t4) {
              var o3;
              _classCallCheck(this, Break);
              (o3 = r3.call(this, S, "break", true)).after = (0, m.getStringOption)(t4.after, ["auto", "contentArea", "pageArea", "pageEven", "pageOdd"]);
              o3.afterTarget = t4.afterTarget || "";
              o3.before = (0, m.getStringOption)(t4.before, ["auto", "contentArea", "pageArea", "pageEven", "pageOdd"]);
              o3.beforeTarget = t4.beforeTarget || "";
              o3.bookendLeader = t4.bookendLeader || "";
              o3.bookendTrailer = t4.bookendTrailer || "";
              o3.id = t4.id || "";
              o3.overflowLeader = t4.overflowLeader || "";
              o3.overflowTarget = t4.overflowTarget || "";
              o3.overflowTrailer = t4.overflowTrailer || "";
              o3.startNew = (0, m.getInteger)({ data: t4.startNew, defaultValue: 0, validate: function validate(t5) {
                return t5 === 1;
              } });
              o3.use = t4.use || "";
              o3.usehref = t4.usehref || "";
              o3.extras = null;
              return o3;
            }
            return _createClass(Break);
          }(u.XFAObject), q = function(t3) {
            _inherits(BreakAfter, t3);
            var r3 = _createSuper(BreakAfter);
            function BreakAfter(t4) {
              var o3;
              _classCallCheck(this, BreakAfter);
              (o3 = r3.call(this, S, "breakAfter", true)).id = t4.id || "";
              o3.leader = t4.leader || "";
              o3.startNew = (0, m.getInteger)({ data: t4.startNew, defaultValue: 0, validate: function validate(t5) {
                return t5 === 1;
              } });
              o3.target = t4.target || "";
              o3.targetType = (0, m.getStringOption)(t4.targetType, ["auto", "contentArea", "pageArea"]);
              o3.trailer = t4.trailer || "";
              o3.use = t4.use || "";
              o3.usehref = t4.usehref || "";
              o3.script = null;
              return o3;
            }
            return _createClass(BreakAfter);
          }(u.XFAObject), G = function(t3) {
            _inherits(BreakBefore, t3);
            var r3 = _createSuper(BreakBefore);
            function BreakBefore(t4) {
              var o3;
              _classCallCheck(this, BreakBefore);
              (o3 = r3.call(this, S, "breakBefore", true)).id = t4.id || "";
              o3.leader = t4.leader || "";
              o3.startNew = (0, m.getInteger)({ data: t4.startNew, defaultValue: 0, validate: function validate(t5) {
                return t5 === 1;
              } });
              o3.target = t4.target || "";
              o3.targetType = (0, m.getStringOption)(t4.targetType, ["auto", "contentArea", "pageArea"]);
              o3.trailer = t4.trailer || "";
              o3.use = t4.use || "";
              o3.usehref = t4.usehref || "";
              o3.script = null;
              return o3;
            }
            _createClass(BreakBefore, [{ key: u.$toHTML, value: function value(t4) {
              this[u.$extra] = {};
              return m.HTMLResult.FAILURE;
            } }]);
            return BreakBefore;
          }(u.XFAObject), z = function(t3) {
            _inherits(Button, t3);
            var r3 = _createSuper(Button);
            function Button(t4) {
              var o3;
              _classCallCheck(this, Button);
              (o3 = r3.call(this, S, "button", true)).highlight = (0, m.getStringOption)(t4.highlight, ["inverted", "none", "outline", "push"]);
              o3.id = t4.id || "";
              o3.use = t4.use || "";
              o3.usehref = t4.usehref || "";
              o3.extras = null;
              return o3;
            }
            _createClass(Button, [{ key: u.$toHTML, value: function value(t4) {
              var r4, o3 = this[u.$getParent]()[u.$getParent](), c2 = { name: "button", attributes: { id: this[u.$uid], class: ["xfaButton"], style: {} }, children: [] }, l2 = _createForOfIteratorHelper(o3.event.children);
              try {
                for (l2.s(); !(r4 = l2.n()).done; ) {
                  var h2 = r4.value;
                  if (h2.activity === "click" && h2.script) {
                    var d2 = (0, k.recoverJsURL)(h2.script[u.$content]);
                    if (d2) {
                      var y2 = (0, g.fixURL)(d2.url);
                      y2 && c2.children.push({ name: "a", attributes: { id: "link" + this[u.$uid], href: y2, newWindow: d2.newWindow, class: ["xfaLink"], style: {} }, children: [] });
                    }
                  }
                }
              } catch (t5) {
                l2.e(t5);
              } finally {
                l2.f();
              }
              return m.HTMLResult.success(c2);
            } }]);
            return Button;
          }(u.XFAObject), W = function(t3) {
            _inherits(Calculate, t3);
            var r3 = _createSuper(Calculate);
            function Calculate(t4) {
              var o3;
              _classCallCheck(this, Calculate);
              (o3 = r3.call(this, S, "calculate", true)).id = t4.id || "";
              o3.override = (0, m.getStringOption)(t4.override, ["disabled", "error", "ignore", "warning"]);
              o3.use = t4.use || "";
              o3.usehref = t4.usehref || "";
              o3.extras = null;
              o3.message = null;
              o3.script = null;
              return o3;
            }
            return _createClass(Calculate);
          }(u.XFAObject), V = function(t3) {
            _inherits(Caption, t3);
            var r3 = _createSuper(Caption);
            function Caption(t4) {
              var o3;
              _classCallCheck(this, Caption);
              (o3 = r3.call(this, S, "caption", true)).id = t4.id || "";
              o3.placement = (0, m.getStringOption)(t4.placement, ["left", "bottom", "inline", "right", "top"]);
              o3.presence = (0, m.getStringOption)(t4.presence, ["visible", "hidden", "inactive", "invisible"]);
              o3.reserve = Math.ceil((0, m.getMeasurement)(t4.reserve));
              o3.use = t4.use || "";
              o3.usehref = t4.usehref || "";
              o3.extras = null;
              o3.font = null;
              o3.margin = null;
              o3.para = null;
              o3.value = null;
              return o3;
            }
            _createClass(Caption, [{ key: u.$setValue, value: function(t4) {
              function value(r4) {
                return t4.apply(this, arguments);
              }
              value.toString = function() {
                return t4.toString();
              };
              return value;
            }(function(t4) {
              _setValue(this, t4);
            }) }, { key: u.$getExtra, value: function value(t4) {
              if (!this[u.$extra]) {
                var r4 = t4.width, o3 = t4.height;
                switch (this.placement) {
                  case "left":
                  case "right":
                  case "inline":
                    r4 = this.reserve <= 0 ? r4 : this.reserve;
                    break;
                  case "top":
                  case "bottom":
                    o3 = this.reserve <= 0 ? o3 : this.reserve;
                }
                this[u.$extra] = (0, g.layoutNode)(this, { width: r4, height: o3 });
              }
              return this[u.$extra];
            } }, { key: u.$toHTML, value: function value(t4) {
              if (!this.value)
                return m.HTMLResult.EMPTY;
              this[u.$pushPara]();
              var value2 = this.value[u.$toHTML](t4).html;
              if (!value2) {
                this[u.$popPara]();
                return m.HTMLResult.EMPTY;
              }
              var r4 = this.reserve;
              if (this.reserve <= 0) {
                var o3 = this[u.$getExtra](t4), c2 = o3.w, l2 = o3.h;
                switch (this.placement) {
                  case "left":
                  case "right":
                  case "inline":
                    this.reserve = c2;
                    break;
                  case "top":
                  case "bottom":
                    this.reserve = l2;
                }
              }
              var h2 = [];
              typeof value2 == "string" ? h2.push({ name: "#text", value: value2 }) : h2.push(value2);
              var d2 = (0, g.toStyle)(this, "font", "margin", "visibility");
              switch (this.placement) {
                case "left":
                case "right":
                  this.reserve > 0 && (d2.width = (0, g.measureToString)(this.reserve));
                  break;
                case "top":
                case "bottom":
                  this.reserve > 0 && (d2.height = (0, g.measureToString)(this.reserve));
              }
              (0, g.setPara)(this, null, value2);
              this[u.$popPara]();
              this.reserve = r4;
              return m.HTMLResult.success({ name: "div", attributes: { style: d2, class: ["xfaCaption"] }, children: h2 });
            } }]);
            return Caption;
          }(u.XFAObject), K = function(t3) {
            _inherits(Certificate, t3);
            var r3 = _createSuper(Certificate);
            function Certificate(t4) {
              var o3;
              _classCallCheck(this, Certificate);
              (o3 = r3.call(this, S, "certificate")).id = t4.id || "";
              o3.name = t4.name || "";
              o3.use = t4.use || "";
              o3.usehref = t4.usehref || "";
              return o3;
            }
            return _createClass(Certificate);
          }(u.StringObject), Y = function(t3) {
            _inherits(Certificates, t3);
            var r3 = _createSuper(Certificates);
            function Certificates(t4) {
              var o3;
              _classCallCheck(this, Certificates);
              (o3 = r3.call(this, S, "certificates", true)).credentialServerPolicy = (0, m.getStringOption)(t4.credentialServerPolicy, ["optional", "required"]);
              o3.id = t4.id || "";
              o3.url = t4.url || "";
              o3.urlPolicy = t4.urlPolicy || "";
              o3.use = t4.use || "";
              o3.usehref = t4.usehref || "";
              o3.encryption = null;
              o3.issuers = null;
              o3.keyUsage = null;
              o3.oids = null;
              o3.signing = null;
              o3.subjectDNs = null;
              return o3;
            }
            return _createClass(Certificates);
          }(u.XFAObject), J = function(t3) {
            _inherits(CheckButton, t3);
            var r3 = _createSuper(CheckButton);
            function CheckButton(t4) {
              var o3;
              _classCallCheck(this, CheckButton);
              (o3 = r3.call(this, S, "checkButton", true)).id = t4.id || "";
              o3.mark = (0, m.getStringOption)(t4.mark, ["default", "check", "circle", "cross", "diamond", "square", "star"]);
              o3.shape = (0, m.getStringOption)(t4.shape, ["square", "round"]);
              o3.size = (0, m.getMeasurement)(t4.size, "10pt");
              o3.use = t4.use || "";
              o3.usehref = t4.usehref || "";
              o3.border = null;
              o3.extras = null;
              o3.margin = null;
              return o3;
            }
            _createClass(CheckButton, [{ key: u.$toHTML, value: function value(t4) {
              var r4, o3, c2, l2 = (0, g.toStyle)("margin"), h2 = (0, g.measureToString)(this.size);
              l2.width = l2.height = h2;
              var d2, y2 = this[u.$getParent]()[u.$getParent](), v2 = y2.items.children.length && y2.items.children[0][u.$toHTML]().html || [], k2 = { on: (v2[0] !== void 0 ? v2[0] : "on").toString(), off: (v2[1] !== void 0 ? v2[1] : "off").toString() }, value2 = y2.value && y2.value[u.$text]() || "off", _2 = value2 === k2.on || void 0, w2 = y2[u.$getSubformParent](), S2 = y2[u.$uid];
              if (w2 instanceof Ce) {
                c2 = w2[u.$uid];
                r4 = "radio";
                o3 = "xfaRadio";
                d2 = w2[u.$data] && w2[u.$data][u.$uid] || w2[u.$uid];
              } else {
                r4 = "checkbox";
                o3 = "xfaCheckbox";
                d2 = y2[u.$data] && y2[u.$data][u.$uid] || y2[u.$uid];
              }
              var C2 = { name: "input", attributes: { class: [o3], style: l2, fieldId: S2, dataId: d2, type: r4, checked: _2, xfaOn: k2.on, xfaOff: k2.off, "aria-label": ariaLabel(y2) } };
              c2 && (C2.attributes.name = c2);
              return m.HTMLResult.success({ name: "label", attributes: { class: ["xfaLabel"] }, children: [C2] });
            } }]);
            return CheckButton;
          }(u.XFAObject), Z = function(t3) {
            _inherits(ChoiceList, t3);
            var r3 = _createSuper(ChoiceList);
            function ChoiceList(t4) {
              var o3;
              _classCallCheck(this, ChoiceList);
              (o3 = r3.call(this, S, "choiceList", true)).commitOn = (0, m.getStringOption)(t4.commitOn, ["select", "exit"]);
              o3.id = t4.id || "";
              o3.open = (0, m.getStringOption)(t4.open, ["userControl", "always", "multiSelect", "onEntry"]);
              o3.textEntry = (0, m.getInteger)({ data: t4.textEntry, defaultValue: 0, validate: function validate(t5) {
                return t5 === 1;
              } });
              o3.use = t4.use || "";
              o3.usehref = t4.usehref || "";
              o3.border = null;
              o3.extras = null;
              o3.margin = null;
              return o3;
            }
            _createClass(ChoiceList, [{ key: u.$toHTML, value: function value(t4) {
              var r4 = (0, g.toStyle)(this, "border", "margin"), o3 = this[u.$getParent]()[u.$getParent](), c2 = o3.font && o3.font.size || 10, l2 = { fontSize: "calc(".concat(c2, "px * var(--zoom-factor))") }, h2 = [];
              if (o3.items.children.length > 0) {
                var d2 = o3.items, y2 = 0, v2 = 0;
                d2.children.length === 2 && (v2 = 1 - (y2 = d2.children[0].save));
                for (var k2 = d2.children[y2][u.$toHTML]().html, _2 = d2.children[v2][u.$toHTML]().html, w2 = false, S2 = o3.value && o3.value[u.$text]() || "", C2 = 0, x2 = k2.length; C2 < x2; C2++) {
                  var O2 = { name: "option", attributes: { value: _2[C2] || k2[C2], style: l2 }, value: k2[C2] };
                  _2[C2] === S2 && (O2.attributes.selected = w2 = true);
                  h2.push(O2);
                }
                w2 || h2.splice(0, 0, { name: "option", attributes: { hidden: true, selected: true }, value: " " });
              }
              var T2 = { class: ["xfaSelect"], fieldId: o3[u.$uid], dataId: o3[u.$data] && o3[u.$data][u.$uid] || o3[u.$uid], style: r4, "aria-label": ariaLabel(o3) };
              this.open === "multiSelect" && (T2.multiple = true);
              return m.HTMLResult.success({ name: "label", attributes: { class: ["xfaLabel"] }, children: [{ name: "select", children: h2, attributes: T2 }] });
            } }]);
            return ChoiceList;
          }(u.XFAObject), Q = function(t3) {
            _inherits(Color, t3);
            var r3 = _createSuper(Color);
            function Color(t4) {
              var o3;
              _classCallCheck(this, Color);
              (o3 = r3.call(this, S, "color", true)).cSpace = (0, m.getStringOption)(t4.cSpace, ["SRGB"]);
              o3.id = t4.id || "";
              o3.use = t4.use || "";
              o3.usehref = t4.usehref || "";
              o3.value = t4.value ? (0, m.getColor)(t4.value) : "";
              o3.extras = null;
              return o3;
            }
            _createClass(Color, [{ key: u.$hasSettableValue, value: function value() {
              return false;
            } }, { key: u.$toStyle, value: function value() {
              return this.value ? y.Util.makeHexColor(this.value.r, this.value.g, this.value.b) : null;
            } }]);
            return Color;
          }(u.XFAObject), ee = function(t3) {
            _inherits(Comb, t3);
            var r3 = _createSuper(Comb);
            function Comb(t4) {
              var o3;
              _classCallCheck(this, Comb);
              (o3 = r3.call(this, S, "comb")).id = t4.id || "";
              o3.numberOfCells = (0, m.getInteger)({ data: t4.numberOfCells, defaultValue: 0, validate: function validate(t5) {
                return t5 >= 0;
              } });
              o3.use = t4.use || "";
              o3.usehref = t4.usehref || "";
              return o3;
            }
            return _createClass(Comb);
          }(u.XFAObject), te = function(t3) {
            _inherits(Connect, t3);
            var r3 = _createSuper(Connect);
            function Connect(t4) {
              var o3;
              _classCallCheck(this, Connect);
              (o3 = r3.call(this, S, "connect", true)).connection = t4.connection || "";
              o3.id = t4.id || "";
              o3.ref = t4.ref || "";
              o3.usage = (0, m.getStringOption)(t4.usage, ["exportAndImport", "exportOnly", "importOnly"]);
              o3.use = t4.use || "";
              o3.usehref = t4.usehref || "";
              o3.picture = null;
              return o3;
            }
            return _createClass(Connect);
          }(u.XFAObject), re = function(t3) {
            _inherits(ContentArea, t3);
            var r3 = _createSuper(ContentArea);
            function ContentArea(t4) {
              var o3;
              _classCallCheck(this, ContentArea);
              (o3 = r3.call(this, S, "contentArea", true)).h = (0, m.getMeasurement)(t4.h);
              o3.id = t4.id || "";
              o3.name = t4.name || "";
              o3.relevant = (0, m.getRelevant)(t4.relevant);
              o3.use = t4.use || "";
              o3.usehref = t4.usehref || "";
              o3.w = (0, m.getMeasurement)(t4.w);
              o3.x = (0, m.getMeasurement)(t4.x, "0pt");
              o3.y = (0, m.getMeasurement)(t4.y, "0pt");
              o3.desc = null;
              o3.extras = null;
              return o3;
            }
            _createClass(ContentArea, [{ key: u.$toHTML, value: function value(t4) {
              var r4 = { left: (0, g.measureToString)(this.x), top: (0, g.measureToString)(this.y), width: (0, g.measureToString)(this.w), height: (0, g.measureToString)(this.h) }, o3 = ["xfaContentarea"];
              (0, g.isPrintOnly)(this) && o3.push("xfaPrintOnly");
              return m.HTMLResult.success({ name: "div", children: [], attributes: { style: r4, class: o3, id: this[u.$uid] } });
            } }]);
            return ContentArea;
          }(u.XFAObject), ae = function(t3) {
            _inherits(Corner, t3);
            var r3 = _createSuper(Corner);
            function Corner(t4) {
              var o3;
              _classCallCheck(this, Corner);
              (o3 = r3.call(this, S, "corner", true)).id = t4.id || "";
              o3.inverted = (0, m.getInteger)({ data: t4.inverted, defaultValue: 0, validate: function validate(t5) {
                return t5 === 1;
              } });
              o3.join = (0, m.getStringOption)(t4.join, ["square", "round"]);
              o3.presence = (0, m.getStringOption)(t4.presence, ["visible", "hidden", "inactive", "invisible"]);
              o3.radius = (0, m.getMeasurement)(t4.radius);
              o3.stroke = (0, m.getStringOption)(t4.stroke, ["solid", "dashDot", "dashDotDot", "dashed", "dotted", "embossed", "etched", "lowered", "raised"]);
              o3.thickness = (0, m.getMeasurement)(t4.thickness, "0.5pt");
              o3.use = t4.use || "";
              o3.usehref = t4.usehref || "";
              o3.color = null;
              o3.extras = null;
              return o3;
            }
            _createClass(Corner, [{ key: u.$toStyle, value: function value() {
              var t4 = (0, g.toStyle)(this, "visibility");
              t4.radius = (0, g.measureToString)(this.join === "square" ? 0 : this.radius);
              return t4;
            } }]);
            return Corner;
          }(u.XFAObject), ne = function(t3) {
            _inherits(DateElement, t3);
            var r3 = _createSuper(DateElement);
            function DateElement(t4) {
              var o3;
              _classCallCheck(this, DateElement);
              (o3 = r3.call(this, S, "date")).id = t4.id || "";
              o3.name = t4.name || "";
              o3.use = t4.use || "";
              o3.usehref = t4.usehref || "";
              return o3;
            }
            _createClass(DateElement, [{ key: u.$finalize, value: function value() {
              var t4 = this[u.$content].trim();
              this[u.$content] = t4 ? new Date(t4) : null;
            } }, { key: u.$toHTML, value: function value(t4) {
              return valueToHtml(this[u.$content] ? this[u.$content].toString() : "");
            } }]);
            return DateElement;
          }(u.ContentObject), ie = function(t3) {
            _inherits(DateTime, t3);
            var r3 = _createSuper(DateTime);
            function DateTime(t4) {
              var o3;
              _classCallCheck(this, DateTime);
              (o3 = r3.call(this, S, "dateTime")).id = t4.id || "";
              o3.name = t4.name || "";
              o3.use = t4.use || "";
              o3.usehref = t4.usehref || "";
              return o3;
            }
            _createClass(DateTime, [{ key: u.$finalize, value: function value() {
              var t4 = this[u.$content].trim();
              this[u.$content] = t4 ? new Date(t4) : null;
            } }, { key: u.$toHTML, value: function value(t4) {
              return valueToHtml(this[u.$content] ? this[u.$content].toString() : "");
            } }]);
            return DateTime;
          }(u.ContentObject), oe = function(t3) {
            _inherits(DateTimeEdit, t3);
            var r3 = _createSuper(DateTimeEdit);
            function DateTimeEdit(t4) {
              var o3;
              _classCallCheck(this, DateTimeEdit);
              (o3 = r3.call(this, S, "dateTimeEdit", true)).hScrollPolicy = (0, m.getStringOption)(t4.hScrollPolicy, ["auto", "off", "on"]);
              o3.id = t4.id || "";
              o3.picker = (0, m.getStringOption)(t4.picker, ["host", "none"]);
              o3.use = t4.use || "";
              o3.usehref = t4.usehref || "";
              o3.border = null;
              o3.comb = null;
              o3.extras = null;
              o3.margin = null;
              return o3;
            }
            _createClass(DateTimeEdit, [{ key: u.$toHTML, value: function value(t4) {
              var r4 = (0, g.toStyle)(this, "border", "font", "margin"), o3 = this[u.$getParent]()[u.$getParent](), c2 = { name: "input", attributes: { type: "text", fieldId: o3[u.$uid], dataId: o3[u.$data] && o3[u.$data][u.$uid] || o3[u.$uid], class: ["xfaTextfield"], style: r4, "aria-label": ariaLabel(o3) } };
              return m.HTMLResult.success({ name: "label", attributes: { class: ["xfaLabel"] }, children: [c2] });
            } }]);
            return DateTimeEdit;
          }(u.XFAObject), se = function(t3) {
            _inherits(Decimal, t3);
            var r3 = _createSuper(Decimal);
            function Decimal(t4) {
              var o3;
              _classCallCheck(this, Decimal);
              (o3 = r3.call(this, S, "decimal")).fracDigits = (0, m.getInteger)({ data: t4.fracDigits, defaultValue: 2, validate: function validate(t5) {
                return true;
              } });
              o3.id = t4.id || "";
              o3.leadDigits = (0, m.getInteger)({ data: t4.leadDigits, defaultValue: -1, validate: function validate(t5) {
                return true;
              } });
              o3.name = t4.name || "";
              o3.use = t4.use || "";
              o3.usehref = t4.usehref || "";
              return o3;
            }
            _createClass(Decimal, [{ key: u.$finalize, value: function value() {
              var t4 = parseFloat(this[u.$content].trim());
              this[u.$content] = isNaN(t4) ? null : t4;
            } }, { key: u.$toHTML, value: function value(t4) {
              return valueToHtml(this[u.$content] !== null ? this[u.$content].toString() : "");
            } }]);
            return Decimal;
          }(u.ContentObject), ce = function(t3) {
            _inherits(DefaultUi, t3);
            var r3 = _createSuper(DefaultUi);
            function DefaultUi(t4) {
              var o3;
              _classCallCheck(this, DefaultUi);
              (o3 = r3.call(this, S, "defaultUi", true)).id = t4.id || "";
              o3.use = t4.use || "";
              o3.usehref = t4.usehref || "";
              o3.extras = null;
              return o3;
            }
            return _createClass(DefaultUi);
          }(u.XFAObject), le = function(t3) {
            _inherits(Desc, t3);
            var r3 = _createSuper(Desc);
            function Desc(t4) {
              var o3;
              _classCallCheck(this, Desc);
              (o3 = r3.call(this, S, "desc", true)).id = t4.id || "";
              o3.use = t4.use || "";
              o3.usehref = t4.usehref || "";
              o3.boolean = new u.XFAObjectArray();
              o3.date = new u.XFAObjectArray();
              o3.dateTime = new u.XFAObjectArray();
              o3.decimal = new u.XFAObjectArray();
              o3.exData = new u.XFAObjectArray();
              o3.float = new u.XFAObjectArray();
              o3.image = new u.XFAObjectArray();
              o3.integer = new u.XFAObjectArray();
              o3.text = new u.XFAObjectArray();
              o3.time = new u.XFAObjectArray();
              return o3;
            }
            return _createClass(Desc);
          }(u.XFAObject), ue = function(t3) {
            _inherits(DigestMethod, t3);
            var r3 = _createSuper(DigestMethod);
            function DigestMethod(t4) {
              var o3;
              _classCallCheck(this, DigestMethod);
              (o3 = r3.call(this, S, "digestMethod", ["", "SHA1", "SHA256", "SHA512", "RIPEMD160"])).id = t4.id || "";
              o3.use = t4.use || "";
              o3.usehref = t4.usehref || "";
              return o3;
            }
            return _createClass(DigestMethod);
          }(u.OptionObject), fe = function(t3) {
            _inherits(DigestMethods, t3);
            var r3 = _createSuper(DigestMethods);
            function DigestMethods(t4) {
              var o3;
              _classCallCheck(this, DigestMethods);
              (o3 = r3.call(this, S, "digestMethods", true)).id = t4.id || "";
              o3.type = (0, m.getStringOption)(t4.type, ["optional", "required"]);
              o3.use = t4.use || "";
              o3.usehref = t4.usehref || "";
              o3.digestMethod = new u.XFAObjectArray();
              return o3;
            }
            return _createClass(DigestMethods);
          }(u.XFAObject), he = function(t3) {
            _inherits(Draw, t3);
            var r3 = _createSuper(Draw);
            function Draw(t4) {
              var o3;
              _classCallCheck(this, Draw);
              (o3 = r3.call(this, S, "draw", true)).anchorType = (0, m.getStringOption)(t4.anchorType, ["topLeft", "bottomCenter", "bottomLeft", "bottomRight", "middleCenter", "middleLeft", "middleRight", "topCenter", "topRight"]);
              o3.colSpan = (0, m.getInteger)({ data: t4.colSpan, defaultValue: 1, validate: function validate(t5) {
                return t5 >= 1 || t5 === -1;
              } });
              o3.h = t4.h ? (0, m.getMeasurement)(t4.h) : "";
              o3.hAlign = (0, m.getStringOption)(t4.hAlign, ["left", "center", "justify", "justifyAll", "radix", "right"]);
              o3.id = t4.id || "";
              o3.locale = t4.locale || "";
              o3.maxH = (0, m.getMeasurement)(t4.maxH, "0pt");
              o3.maxW = (0, m.getMeasurement)(t4.maxW, "0pt");
              o3.minH = (0, m.getMeasurement)(t4.minH, "0pt");
              o3.minW = (0, m.getMeasurement)(t4.minW, "0pt");
              o3.name = t4.name || "";
              o3.presence = (0, m.getStringOption)(t4.presence, ["visible", "hidden", "inactive", "invisible"]);
              o3.relevant = (0, m.getRelevant)(t4.relevant);
              o3.rotate = (0, m.getInteger)({ data: t4.rotate, defaultValue: 0, validate: function validate(t5) {
                return t5 % 90 == 0;
              } });
              o3.use = t4.use || "";
              o3.usehref = t4.usehref || "";
              o3.w = t4.w ? (0, m.getMeasurement)(t4.w) : "";
              o3.x = (0, m.getMeasurement)(t4.x, "0pt");
              o3.y = (0, m.getMeasurement)(t4.y, "0pt");
              o3.assist = null;
              o3.border = null;
              o3.caption = null;
              o3.desc = null;
              o3.extras = null;
              o3.font = null;
              o3.keep = null;
              o3.margin = null;
              o3.para = null;
              o3.traversal = null;
              o3.ui = null;
              o3.value = null;
              o3.setProperty = new u.XFAObjectArray();
              return o3;
            }
            _createClass(Draw, [{ key: u.$setValue, value: function(t4) {
              function value(r4) {
                return t4.apply(this, arguments);
              }
              value.toString = function() {
                return t4.toString();
              };
              return value;
            }(function(t4) {
              _setValue(this, t4);
            }) }, { key: u.$toHTML, value: function value(t4) {
              setTabIndex(this);
              if (this.presence === "hidden" || this.presence === "inactive")
                return m.HTMLResult.EMPTY;
              (0, g.fixDimensions)(this);
              this[u.$pushPara]();
              var r4 = this.w, o3 = this.h, c2 = (0, g.layoutNode)(this, t4), l2 = c2.w, h2 = c2.h, y2 = c2.isBroken;
              if (l2 && this.w === "") {
                if (y2 && this[u.$getSubformParent]()[u.$isThereMoreWidth]()) {
                  this[u.$popPara]();
                  return m.HTMLResult.FAILURE;
                }
                this.w = l2;
              }
              h2 && this.h === "" && (this.h = h2);
              setFirstUnsplittable(this);
              if (!(0, d.checkDimensions)(this, t4)) {
                this.w = r4;
                this.h = o3;
                this[u.$popPara]();
                return m.HTMLResult.FAILURE;
              }
              unsetFirstUnsplittable(this);
              var v2 = (0, g.toStyle)(this, "font", "hAlign", "dimensions", "position", "presence", "rotate", "anchorType", "border", "margin");
              (0, g.setMinMaxDimensions)(this, v2);
              if (v2.margin) {
                v2.padding = v2.margin;
                delete v2.margin;
              }
              var k2 = ["xfaDraw"];
              this.font && k2.push("xfaFont");
              (0, g.isPrintOnly)(this) && k2.push("xfaPrintOnly");
              var _2 = { style: v2, id: this[u.$uid], class: k2 };
              this.name && (_2.xfaName = this.name);
              var w2 = { name: "div", attributes: _2, children: [] };
              applyAssist(this, _2);
              var S2 = (0, g.computeBbox)(this, w2, t4), value2 = this.value ? this.value[u.$toHTML](t4).html : null;
              if (value2 === null) {
                this.w = r4;
                this.h = o3;
                this[u.$popPara]();
                return m.HTMLResult.success((0, g.createWrapper)(this, w2), S2);
              }
              w2.children.push(value2);
              (0, g.setPara)(this, v2, value2);
              this.w = r4;
              this.h = o3;
              this[u.$popPara]();
              return m.HTMLResult.success((0, g.createWrapper)(this, w2), S2);
            } }]);
            return Draw;
          }(u.XFAObject), de = function(t3) {
            _inherits(Edge, t3);
            var r3 = _createSuper(Edge);
            function Edge(t4) {
              var o3;
              _classCallCheck(this, Edge);
              (o3 = r3.call(this, S, "edge", true)).cap = (0, m.getStringOption)(t4.cap, ["square", "butt", "round"]);
              o3.id = t4.id || "";
              o3.presence = (0, m.getStringOption)(t4.presence, ["visible", "hidden", "inactive", "invisible"]);
              o3.stroke = (0, m.getStringOption)(t4.stroke, ["solid", "dashDot", "dashDotDot", "dashed", "dotted", "embossed", "etched", "lowered", "raised"]);
              o3.thickness = (0, m.getMeasurement)(t4.thickness, "0.5pt");
              o3.use = t4.use || "";
              o3.usehref = t4.usehref || "";
              o3.color = null;
              o3.extras = null;
              return o3;
            }
            _createClass(Edge, [{ key: u.$toStyle, value: function value() {
              var t4 = (0, g.toStyle)(this, "visibility");
              Object.assign(t4, { linecap: this.cap, width: (0, g.measureToString)(this.thickness), color: this.color ? this.color[u.$toStyle]() : "#000000", style: "" });
              if (this.presence !== "visible")
                t4.style = "none";
              else
                switch (this.stroke) {
                  case "solid":
                    t4.style = "solid";
                    break;
                  case "dashDot":
                  case "dashDotDot":
                  case "dashed":
                    t4.style = "dashed";
                    break;
                  case "dotted":
                    t4.style = "dotted";
                    break;
                  case "embossed":
                    t4.style = "ridge";
                    break;
                  case "etched":
                    t4.style = "groove";
                    break;
                  case "lowered":
                    t4.style = "inset";
                    break;
                  case "raised":
                    t4.style = "outset";
                }
              return t4;
            } }]);
            return Edge;
          }(u.XFAObject), pe = function(t3) {
            _inherits(Encoding, t3);
            var r3 = _createSuper(Encoding);
            function Encoding(t4) {
              var o3;
              _classCallCheck(this, Encoding);
              (o3 = r3.call(this, S, "encoding", ["adbe.x509.rsa_sha1", "adbe.pkcs7.detached", "adbe.pkcs7.sha1"])).id = t4.id || "";
              o3.use = t4.use || "";
              o3.usehref = t4.usehref || "";
              return o3;
            }
            return _createClass(Encoding);
          }(u.OptionObject), ge = function(t3) {
            _inherits(Encodings, t3);
            var r3 = _createSuper(Encodings);
            function Encodings(t4) {
              var o3;
              _classCallCheck(this, Encodings);
              (o3 = r3.call(this, S, "encodings", true)).id = t4.id || "";
              o3.type = (0, m.getStringOption)(t4.type, ["optional", "required"]);
              o3.use = t4.use || "";
              o3.usehref = t4.usehref || "";
              o3.encoding = new u.XFAObjectArray();
              return o3;
            }
            return _createClass(Encodings);
          }(u.XFAObject), me = function(t3) {
            _inherits(Encrypt, t3);
            var r3 = _createSuper(Encrypt);
            function Encrypt(t4) {
              var o3;
              _classCallCheck(this, Encrypt);
              (o3 = r3.call(this, S, "encrypt", true)).id = t4.id || "";
              o3.use = t4.use || "";
              o3.usehref = t4.usehref || "";
              o3.certificate = null;
              return o3;
            }
            return _createClass(Encrypt);
          }(u.XFAObject), ye = function(t3) {
            _inherits(EncryptData, t3);
            var r3 = _createSuper(EncryptData);
            function EncryptData(t4) {
              var o3;
              _classCallCheck(this, EncryptData);
              (o3 = r3.call(this, S, "encryptData", true)).id = t4.id || "";
              o3.operation = (0, m.getStringOption)(t4.operation, ["encrypt", "decrypt"]);
              o3.target = t4.target || "";
              o3.use = t4.use || "";
              o3.usehref = t4.usehref || "";
              o3.filter = null;
              o3.manifest = null;
              return o3;
            }
            return _createClass(EncryptData);
          }(u.XFAObject), ve = function(t3) {
            _inherits(Encryption, t3);
            var r3 = _createSuper(Encryption);
            function Encryption(t4) {
              var o3;
              _classCallCheck(this, Encryption);
              (o3 = r3.call(this, S, "encryption", true)).id = t4.id || "";
              o3.type = (0, m.getStringOption)(t4.type, ["optional", "required"]);
              o3.use = t4.use || "";
              o3.usehref = t4.usehref || "";
              o3.certificate = new u.XFAObjectArray();
              return o3;
            }
            return _createClass(Encryption);
          }(u.XFAObject), be = function(t3) {
            _inherits(EncryptionMethod, t3);
            var r3 = _createSuper(EncryptionMethod);
            function EncryptionMethod(t4) {
              var o3;
              _classCallCheck(this, EncryptionMethod);
              (o3 = r3.call(this, S, "encryptionMethod", ["", "AES256-CBC", "TRIPLEDES-CBC", "AES128-CBC", "AES192-CBC"])).id = t4.id || "";
              o3.use = t4.use || "";
              o3.usehref = t4.usehref || "";
              return o3;
            }
            return _createClass(EncryptionMethod);
          }(u.OptionObject), ke = function(t3) {
            _inherits(EncryptionMethods, t3);
            var r3 = _createSuper(EncryptionMethods);
            function EncryptionMethods(t4) {
              var o3;
              _classCallCheck(this, EncryptionMethods);
              (o3 = r3.call(this, S, "encryptionMethods", true)).id = t4.id || "";
              o3.type = (0, m.getStringOption)(t4.type, ["optional", "required"]);
              o3.use = t4.use || "";
              o3.usehref = t4.usehref || "";
              o3.encryptionMethod = new u.XFAObjectArray();
              return o3;
            }
            return _createClass(EncryptionMethods);
          }(u.XFAObject), _e = function(t3) {
            _inherits(Event, t3);
            var r3 = _createSuper(Event);
            function Event(t4) {
              var o3;
              _classCallCheck(this, Event);
              (o3 = r3.call(this, S, "event", true)).activity = (0, m.getStringOption)(t4.activity, ["click", "change", "docClose", "docReady", "enter", "exit", "full", "indexChange", "initialize", "mouseDown", "mouseEnter", "mouseExit", "mouseUp", "postExecute", "postOpen", "postPrint", "postSave", "postSign", "postSubmit", "preExecute", "preOpen", "prePrint", "preSave", "preSign", "preSubmit", "ready", "validationState"]);
              o3.id = t4.id || "";
              o3.listen = (0, m.getStringOption)(t4.listen, ["refOnly", "refAndDescendents"]);
              o3.name = t4.name || "";
              o3.ref = t4.ref || "";
              o3.use = t4.use || "";
              o3.usehref = t4.usehref || "";
              o3.extras = null;
              o3.encryptData = null;
              o3.execute = null;
              o3.script = null;
              o3.signData = null;
              o3.submit = null;
              return o3;
            }
            return _createClass(Event);
          }(u.XFAObject), we = function(t3) {
            _inherits(ExData, t3);
            var r3 = _createSuper(ExData);
            function ExData(t4) {
              var o3;
              _classCallCheck(this, ExData);
              (o3 = r3.call(this, S, "exData")).contentType = t4.contentType || "";
              o3.href = t4.href || "";
              o3.id = t4.id || "";
              o3.maxLength = (0, m.getInteger)({ data: t4.maxLength, defaultValue: -1, validate: function validate(t5) {
                return t5 >= -1;
              } });
              o3.name = t4.name || "";
              o3.rid = t4.rid || "";
              o3.transferEncoding = (0, m.getStringOption)(t4.transferEncoding, ["none", "base64", "package"]);
              o3.use = t4.use || "";
              o3.usehref = t4.usehref || "";
              return o3;
            }
            _createClass(ExData, [{ key: u.$isCDATAXml, value: function value() {
              return this.contentType === "text/html";
            } }, { key: u.$onChild, value: function value(t4) {
              if (this.contentType === "text/html" && t4[u.$namespaceId] === h.NamespaceIds.xhtml.id) {
                this[u.$content] = t4;
                return true;
              }
              if (this.contentType === "text/xml") {
                this[u.$content] = t4;
                return true;
              }
              return false;
            } }, { key: u.$toHTML, value: function value(t4) {
              return this.contentType === "text/html" && this[u.$content] ? this[u.$content][u.$toHTML](t4) : m.HTMLResult.EMPTY;
            } }]);
            return ExData;
          }(u.ContentObject), Se = function(t3) {
            _inherits(ExObject, t3);
            var r3 = _createSuper(ExObject);
            function ExObject(t4) {
              var o3;
              _classCallCheck(this, ExObject);
              (o3 = r3.call(this, S, "exObject", true)).archive = t4.archive || "";
              o3.classId = t4.classId || "";
              o3.codeBase = t4.codeBase || "";
              o3.codeType = t4.codeType || "";
              o3.id = t4.id || "";
              o3.name = t4.name || "";
              o3.use = t4.use || "";
              o3.usehref = t4.usehref || "";
              o3.extras = null;
              o3.boolean = new u.XFAObjectArray();
              o3.date = new u.XFAObjectArray();
              o3.dateTime = new u.XFAObjectArray();
              o3.decimal = new u.XFAObjectArray();
              o3.exData = new u.XFAObjectArray();
              o3.exObject = new u.XFAObjectArray();
              o3.float = new u.XFAObjectArray();
              o3.image = new u.XFAObjectArray();
              o3.integer = new u.XFAObjectArray();
              o3.text = new u.XFAObjectArray();
              o3.time = new u.XFAObjectArray();
              return o3;
            }
            return _createClass(ExObject);
          }(u.XFAObject), Ce = function(t3) {
            _inherits(ExclGroup, t3);
            var r3 = _createSuper(ExclGroup);
            function ExclGroup(t4) {
              var o3;
              _classCallCheck(this, ExclGroup);
              (o3 = r3.call(this, S, "exclGroup", true)).access = (0, m.getStringOption)(t4.access, ["open", "nonInteractive", "protected", "readOnly"]);
              o3.accessKey = t4.accessKey || "";
              o3.anchorType = (0, m.getStringOption)(t4.anchorType, ["topLeft", "bottomCenter", "bottomLeft", "bottomRight", "middleCenter", "middleLeft", "middleRight", "topCenter", "topRight"]);
              o3.colSpan = (0, m.getInteger)({ data: t4.colSpan, defaultValue: 1, validate: function validate(t5) {
                return t5 >= 1 || t5 === -1;
              } });
              o3.h = t4.h ? (0, m.getMeasurement)(t4.h) : "";
              o3.hAlign = (0, m.getStringOption)(t4.hAlign, ["left", "center", "justify", "justifyAll", "radix", "right"]);
              o3.id = t4.id || "";
              o3.layout = (0, m.getStringOption)(t4.layout, ["position", "lr-tb", "rl-row", "rl-tb", "row", "table", "tb"]);
              o3.maxH = (0, m.getMeasurement)(t4.maxH, "0pt");
              o3.maxW = (0, m.getMeasurement)(t4.maxW, "0pt");
              o3.minH = (0, m.getMeasurement)(t4.minH, "0pt");
              o3.minW = (0, m.getMeasurement)(t4.minW, "0pt");
              o3.name = t4.name || "";
              o3.presence = (0, m.getStringOption)(t4.presence, ["visible", "hidden", "inactive", "invisible"]);
              o3.relevant = (0, m.getRelevant)(t4.relevant);
              o3.use = t4.use || "";
              o3.usehref = t4.usehref || "";
              o3.w = t4.w ? (0, m.getMeasurement)(t4.w) : "";
              o3.x = (0, m.getMeasurement)(t4.x, "0pt");
              o3.y = (0, m.getMeasurement)(t4.y, "0pt");
              o3.assist = null;
              o3.bind = null;
              o3.border = null;
              o3.calculate = null;
              o3.caption = null;
              o3.desc = null;
              o3.extras = null;
              o3.margin = null;
              o3.para = null;
              o3.traversal = null;
              o3.validate = null;
              o3.connect = new u.XFAObjectArray();
              o3.event = new u.XFAObjectArray();
              o3.field = new u.XFAObjectArray();
              o3.setProperty = new u.XFAObjectArray();
              return o3;
            }
            _createClass(ExclGroup, [{ key: u.$isBindable, value: function value() {
              return true;
            } }, { key: u.$hasSettableValue, value: function value() {
              return true;
            } }, { key: u.$setValue, value: function(t4) {
              function value(r4) {
                return t4.apply(this, arguments);
              }
              value.toString = function() {
                return t4.toString();
              };
              return value;
            }(function(t4) {
              var r4, o3 = _createForOfIteratorHelper(this.field.children);
              try {
                for (o3.s(); !(r4 = o3.n()).done; ) {
                  var c2 = r4.value;
                  if (!c2.value) {
                    var l2 = new Bt({});
                    c2[u.$appendChild](l2);
                    c2.value = l2;
                  }
                  c2.value[u.$setValue](t4);
                }
              } catch (t5) {
                o3.e(t5);
              } finally {
                o3.f();
              }
            }) }, { key: u.$isThereMoreWidth, value: function value() {
              return this.layout.endsWith("-tb") && this[u.$extra].attempt === 0 && this[u.$extra].numberInLine > 0 || this[u.$getParent]()[u.$isThereMoreWidth]();
            } }, { key: u.$isSplittable, value: function value() {
              var t4 = this[u.$getSubformParent]();
              if (!t4[u.$isSplittable]())
                return false;
              if (this[u.$extra]._isSplittable !== void 0)
                return this[u.$extra]._isSplittable;
              if (this.layout === "position" || this.layout.includes("row")) {
                this[u.$extra]._isSplittable = false;
                return false;
              }
              if (t4.layout && t4.layout.endsWith("-tb") && t4[u.$extra].numberInLine !== 0)
                return false;
              this[u.$extra]._isSplittable = true;
              return true;
            } }, { key: u.$flushHTML, value: function value() {
              return (0, d.flushHTML)(this);
            } }, { key: u.$addHTML, value: function value(t4, r4) {
              (0, d.addHTML)(this, t4, r4);
            } }, { key: u.$getAvailableSpace, value: function value() {
              return (0, d.getAvailableSpace)(this);
            } }, { key: u.$toHTML, value: function value(t4) {
              setTabIndex(this);
              if (this.presence === "hidden" || this.presence === "inactive" || this.h === 0 || this.w === 0)
                return m.HTMLResult.EMPTY;
              (0, g.fixDimensions)(this);
              var r4 = [], o3 = { id: this[u.$uid], class: [] };
              (0, g.setAccess)(this, o3.class);
              this[u.$extra] || (this[u.$extra] = /* @__PURE__ */ Object.create(null));
              Object.assign(this[u.$extra], { children: r4, attributes: o3, attempt: 0, line: null, numberInLine: 0, availableSpace: { width: Math.min(this.w || 1 / 0, t4.width), height: Math.min(this.h || 1 / 0, t4.height) }, width: 0, height: 0, prevHeight: 0, currentWidth: 0 });
              var c2 = this[u.$isSplittable]();
              c2 || setFirstUnsplittable(this);
              if (!(0, d.checkDimensions)(this, t4))
                return m.HTMLResult.FAILURE;
              var l2 = /* @__PURE__ */ new Set(["field"]);
              if (this.layout.includes("row")) {
                var h2 = this[u.$getSubformParent]().columnWidths;
                if (Array.isArray(h2) && h2.length > 0) {
                  this[u.$extra].columnWidths = h2;
                  this[u.$extra].currentColumn = 0;
                }
              }
              var y2 = (0, g.toStyle)(this, "anchorType", "dimensions", "position", "presence", "border", "margin", "hAlign"), v2 = ["xfaExclgroup"], k2 = (0, g.layoutClass)(this);
              k2 && v2.push(k2);
              (0, g.isPrintOnly)(this) && v2.push("xfaPrintOnly");
              o3.style = y2;
              o3.class = v2;
              this.name && (o3.xfaName = this.name);
              this[u.$pushPara]();
              for (var _2 = this.layout === "lr-tb" || this.layout === "rl-tb", w2 = _2 ? 2 : 1; this[u.$extra].attempt < w2; this[u.$extra].attempt++) {
                _2 && this[u.$extra].attempt === 1 && (this[u.$extra].numberInLine = 0);
                var S2 = this[u.$childrenToHTML]({ filter: l2, include: true });
                if (S2.success)
                  break;
                if (S2.isBreak()) {
                  this[u.$popPara]();
                  return S2;
                }
                if (_2 && this[u.$extra].attempt === 0 && this[u.$extra].numberInLine === 0 && !this[u.$getTemplateRoot]()[u.$extra].noLayoutFailure) {
                  this[u.$extra].attempt = w2;
                  break;
                }
              }
              this[u.$popPara]();
              c2 || unsetFirstUnsplittable(this);
              if (this[u.$extra].attempt === w2) {
                c2 || delete this[u.$extra];
                return m.HTMLResult.FAILURE;
              }
              var C2 = 0, x2 = 0;
              if (this.margin) {
                C2 = this.margin.leftInset + this.margin.rightInset;
                x2 = this.margin.topInset + this.margin.bottomInset;
              }
              var O2 = Math.max(this[u.$extra].width + C2, this.w || 0), T2 = Math.max(this[u.$extra].height + x2, this.h || 0), E2 = [this.x, this.y, O2, T2];
              this.w === "" && (y2.width = (0, g.measureToString)(O2));
              this.h === "" && (y2.height = (0, g.measureToString)(T2));
              var M2 = { name: "div", attributes: o3, children: r4 };
              applyAssist(this, o3);
              delete this[u.$extra];
              return m.HTMLResult.success((0, g.createWrapper)(this, M2), E2);
            } }]);
            return ExclGroup;
          }(u.XFAObject), xe = function(t3) {
            _inherits(Execute, t3);
            var r3 = _createSuper(Execute);
            function Execute(t4) {
              var o3;
              _classCallCheck(this, Execute);
              (o3 = r3.call(this, S, "execute")).connection = t4.connection || "";
              o3.executeType = (0, m.getStringOption)(t4.executeType, ["import", "remerge"]);
              o3.id = t4.id || "";
              o3.runAt = (0, m.getStringOption)(t4.runAt, ["client", "both", "server"]);
              o3.use = t4.use || "";
              o3.usehref = t4.usehref || "";
              return o3;
            }
            return _createClass(Execute);
          }(u.XFAObject), Oe = function(t3) {
            _inherits(Extras, t3);
            var r3 = _createSuper(Extras);
            function Extras(t4) {
              var o3;
              _classCallCheck(this, Extras);
              (o3 = r3.call(this, S, "extras", true)).id = t4.id || "";
              o3.name = t4.name || "";
              o3.use = t4.use || "";
              o3.usehref = t4.usehref || "";
              o3.boolean = new u.XFAObjectArray();
              o3.date = new u.XFAObjectArray();
              o3.dateTime = new u.XFAObjectArray();
              o3.decimal = new u.XFAObjectArray();
              o3.exData = new u.XFAObjectArray();
              o3.extras = new u.XFAObjectArray();
              o3.float = new u.XFAObjectArray();
              o3.image = new u.XFAObjectArray();
              o3.integer = new u.XFAObjectArray();
              o3.text = new u.XFAObjectArray();
              o3.time = new u.XFAObjectArray();
              return o3;
            }
            return _createClass(Extras);
          }(u.XFAObject), Ae = function(t3) {
            _inherits(Field, t3);
            var r3 = _createSuper(Field);
            function Field(t4) {
              var o3;
              _classCallCheck(this, Field);
              (o3 = r3.call(this, S, "field", true)).access = (0, m.getStringOption)(t4.access, ["open", "nonInteractive", "protected", "readOnly"]);
              o3.accessKey = t4.accessKey || "";
              o3.anchorType = (0, m.getStringOption)(t4.anchorType, ["topLeft", "bottomCenter", "bottomLeft", "bottomRight", "middleCenter", "middleLeft", "middleRight", "topCenter", "topRight"]);
              o3.colSpan = (0, m.getInteger)({ data: t4.colSpan, defaultValue: 1, validate: function validate(t5) {
                return t5 >= 1 || t5 === -1;
              } });
              o3.h = t4.h ? (0, m.getMeasurement)(t4.h) : "";
              o3.hAlign = (0, m.getStringOption)(t4.hAlign, ["left", "center", "justify", "justifyAll", "radix", "right"]);
              o3.id = t4.id || "";
              o3.locale = t4.locale || "";
              o3.maxH = (0, m.getMeasurement)(t4.maxH, "0pt");
              o3.maxW = (0, m.getMeasurement)(t4.maxW, "0pt");
              o3.minH = (0, m.getMeasurement)(t4.minH, "0pt");
              o3.minW = (0, m.getMeasurement)(t4.minW, "0pt");
              o3.name = t4.name || "";
              o3.presence = (0, m.getStringOption)(t4.presence, ["visible", "hidden", "inactive", "invisible"]);
              o3.relevant = (0, m.getRelevant)(t4.relevant);
              o3.rotate = (0, m.getInteger)({ data: t4.rotate, defaultValue: 0, validate: function validate(t5) {
                return t5 % 90 == 0;
              } });
              o3.use = t4.use || "";
              o3.usehref = t4.usehref || "";
              o3.w = t4.w ? (0, m.getMeasurement)(t4.w) : "";
              o3.x = (0, m.getMeasurement)(t4.x, "0pt");
              o3.y = (0, m.getMeasurement)(t4.y, "0pt");
              o3.assist = null;
              o3.bind = null;
              o3.border = null;
              o3.calculate = null;
              o3.caption = null;
              o3.desc = null;
              o3.extras = null;
              o3.font = null;
              o3.format = null;
              o3.items = new u.XFAObjectArray(2);
              o3.keep = null;
              o3.margin = null;
              o3.para = null;
              o3.traversal = null;
              o3.ui = null;
              o3.validate = null;
              o3.value = null;
              o3.bindItems = new u.XFAObjectArray();
              o3.connect = new u.XFAObjectArray();
              o3.event = new u.XFAObjectArray();
              o3.setProperty = new u.XFAObjectArray();
              return o3;
            }
            _createClass(Field, [{ key: u.$isBindable, value: function value() {
              return true;
            } }, { key: u.$setValue, value: function(t4) {
              function value(r4) {
                return t4.apply(this, arguments);
              }
              value.toString = function() {
                return t4.toString();
              };
              return value;
            }(function(t4) {
              _setValue(this, t4);
            }) }, { key: u.$toHTML, value: function value(t4) {
              setTabIndex(this);
              if (!this.ui) {
                this.ui = new Dt({});
                this.ui[u.$globalData] = this[u.$globalData];
                this[u.$appendChild](this.ui);
                var r4;
                switch (this.items.children.length) {
                  case 0:
                    r4 = new Tt({});
                    this.ui.textEdit = r4;
                    break;
                  case 1:
                    r4 = new J({});
                    this.ui.checkButton = r4;
                    break;
                  case 2:
                    r4 = new Z({});
                    this.ui.choiceList = r4;
                }
                this.ui[u.$appendChild](r4);
              }
              if (!this.ui || this.presence === "hidden" || this.presence === "inactive" || this.h === 0 || this.w === 0)
                return m.HTMLResult.EMPTY;
              this.caption && delete this.caption[u.$extra];
              this[u.$pushPara]();
              var o3 = this.caption ? this.caption[u.$toHTML](t4).html : null, c2 = this.w, l2 = this.h, h2 = 0, y2 = 0;
              if (this.margin) {
                h2 = this.margin.leftInset + this.margin.rightInset;
                y2 = this.margin.topInset + this.margin.bottomInset;
              }
              var k2 = null;
              if (this.w === "" || this.h === "") {
                var _2 = null, w2 = null, S2 = 0, C2 = 0;
                if (this.ui.checkButton)
                  S2 = C2 = this.ui.checkButton.size;
                else {
                  var x2 = (0, g.layoutNode)(this, t4), O2 = x2.w, T2 = x2.h;
                  if (O2 !== null) {
                    S2 = O2;
                    C2 = T2;
                  } else
                    C2 = (0, v.getMetrics)(this.font, true).lineNoGap;
                }
                S2 += (k2 = getBorderDims(this.ui[u.$getExtra]())).w;
                C2 += k2.h;
                if (this.caption) {
                  var E2 = this.caption[u.$getExtra](t4), M2 = E2.w, R2 = E2.h;
                  if (E2.isBroken && this[u.$getSubformParent]()[u.$isThereMoreWidth]()) {
                    this[u.$popPara]();
                    return m.HTMLResult.FAILURE;
                  }
                  _2 = M2;
                  w2 = R2;
                  switch (this.caption.placement) {
                    case "left":
                    case "right":
                    case "inline":
                      _2 += S2;
                      break;
                    case "top":
                    case "bottom":
                      w2 += C2;
                  }
                } else {
                  _2 = S2;
                  w2 = C2;
                }
                if (_2 && this.w === "") {
                  _2 += h2;
                  this.w = Math.min(this.maxW <= 0 ? 1 / 0 : this.maxW, this.minW + 1 < _2 ? _2 : this.minW);
                }
                if (w2 && this.h === "") {
                  w2 += y2;
                  this.h = Math.min(this.maxH <= 0 ? 1 / 0 : this.maxH, this.minH + 1 < w2 ? w2 : this.minH);
                }
              }
              this[u.$popPara]();
              (0, g.fixDimensions)(this);
              setFirstUnsplittable(this);
              if (!(0, d.checkDimensions)(this, t4)) {
                this.w = c2;
                this.h = l2;
                this[u.$popPara]();
                return m.HTMLResult.FAILURE;
              }
              unsetFirstUnsplittable(this);
              var D2 = (0, g.toStyle)(this, "font", "dimensions", "position", "rotate", "anchorType", "presence", "margin", "hAlign");
              (0, g.setMinMaxDimensions)(this, D2);
              var j2 = ["xfaField"];
              this.font && j2.push("xfaFont");
              (0, g.isPrintOnly)(this) && j2.push("xfaPrintOnly");
              var L2 = { style: D2, id: this[u.$uid], class: j2 };
              if (D2.margin) {
                D2.padding = D2.margin;
                delete D2.margin;
              }
              (0, g.setAccess)(this, j2);
              this.name && (L2.xfaName = this.name);
              var N2 = [], U2 = { name: "div", attributes: L2, children: N2 };
              applyAssist(this, L2);
              var H2 = this.border ? this.border[u.$toStyle]() : null, $2 = (0, g.computeBbox)(this, U2, t4), X2 = this.ui[u.$toHTML]().html;
              if (!X2) {
                Object.assign(D2, H2);
                return m.HTMLResult.success((0, g.createWrapper)(this, U2), $2);
              }
              this[u.$tabIndex] && (X2.children && X2.children[0] ? X2.children[0].attributes.tabindex = this[u.$tabIndex] : X2.attributes.tabindex = this[u.$tabIndex]);
              X2.attributes.style || (X2.attributes.style = /* @__PURE__ */ Object.create(null));
              var q2 = null;
              if (this.ui.button) {
                if (X2.children.length === 1) {
                  q2 = _slicedToArray(X2.children.splice(0, 1), 1)[0];
                }
                Object.assign(X2.attributes.style, H2);
              } else
                Object.assign(D2, H2);
              N2.push(X2);
              if (this.value) {
                if (this.ui.imageEdit)
                  X2.children.push(this.value[u.$toHTML]().html);
                else if (!this.ui.button) {
                  var G2 = "";
                  if (this.value.exData)
                    G2 = this.value.exData[u.$text]();
                  else if (this.value.text)
                    G2 = this.value.text[u.$getExtra]();
                  else {
                    var z2 = this.value[u.$toHTML]().html;
                    z2 !== null && (G2 = z2.children[0].value);
                  }
                  this.ui.textEdit && this.value.text && this.value.text.maxChars && (X2.children[0].attributes.maxLength = this.value.text.maxChars);
                  if (G2) {
                    if (this.ui.numericEdit) {
                      G2 = parseFloat(G2);
                      G2 = isNaN(G2) ? "" : G2.toString();
                    }
                    X2.children[0].name === "textarea" ? X2.children[0].attributes.textContent = G2 : X2.children[0].attributes.value = G2;
                  }
                }
              }
              if (!this.ui.imageEdit && X2.children && X2.children[0] && this.h) {
                k2 = k2 || getBorderDims(this.ui[u.$getExtra]());
                var W2 = 0;
                if (this.caption && ["top", "bottom"].includes(this.caption.placement)) {
                  (W2 = this.caption.reserve) <= 0 && (W2 = this.caption[u.$getExtra](t4).h);
                  var V2 = this.h - W2 - y2 - k2.h;
                  X2.children[0].attributes.style.height = (0, g.measureToString)(V2);
                } else
                  X2.children[0].attributes.style.height = "100%";
              }
              q2 && X2.children.push(q2);
              if (!o3) {
                X2.attributes.class && X2.attributes.class.push("xfaLeft");
                this.w = c2;
                this.h = l2;
                return m.HTMLResult.success((0, g.createWrapper)(this, U2), $2);
              }
              if (this.ui.button) {
                D2.padding && delete D2.padding;
                o3.name === "div" && (o3.name = "span");
                X2.children.push(o3);
                return m.HTMLResult.success(U2, $2);
              }
              this.ui.checkButton && (o3.attributes.class[0] = "xfaCaptionForCheckButton");
              X2.attributes.class || (X2.attributes.class = []);
              X2.children.splice(0, 0, o3);
              switch (this.caption.placement) {
                case "left":
                case "inline":
                  X2.attributes.class.push("xfaLeft");
                  break;
                case "right":
                  X2.attributes.class.push("xfaRight");
                  break;
                case "top":
                  X2.attributes.class.push("xfaTop");
                  break;
                case "bottom":
                  X2.attributes.class.push("xfaBottom");
              }
              this.w = c2;
              this.h = l2;
              return m.HTMLResult.success((0, g.createWrapper)(this, U2), $2);
            } }]);
            return Field;
          }(u.XFAObject);
          r2.Field = Ae;
          var Pe = function(t3) {
            _inherits(Fill, t3);
            var r3 = _createSuper(Fill);
            function Fill(t4) {
              var o3;
              _classCallCheck(this, Fill);
              (o3 = r3.call(this, S, "fill", true)).id = t4.id || "";
              o3.presence = (0, m.getStringOption)(t4.presence, ["visible", "hidden", "inactive", "invisible"]);
              o3.use = t4.use || "";
              o3.usehref = t4.usehref || "";
              o3.color = null;
              o3.extras = null;
              o3.linear = null;
              o3.pattern = null;
              o3.radial = null;
              o3.solid = null;
              o3.stipple = null;
              return o3;
            }
            _createClass(Fill, [{ key: u.$toStyle, value: function value() {
              var t4 = this[u.$getParent](), r4 = t4[u.$getParent]()[u.$getParent](), o3 = /* @__PURE__ */ Object.create(null), c2 = "color", l2 = c2;
              if (t4 instanceof $) {
                c2 = "background-color";
                l2 = "background";
                r4 instanceof Dt && (o3.backgroundColor = "white");
              }
              if (t4 instanceof ft || t4 instanceof M) {
                c2 = l2 = "fill";
                o3.fill = "white";
              }
              var h2, d2 = _createForOfIteratorHelper(Object.getOwnPropertyNames(this));
              try {
                for (d2.s(); !(h2 = d2.n()).done; ) {
                  var g2 = h2.value;
                  if (g2 !== "extras" && g2 !== "color") {
                    var m2 = this[g2];
                    if (m2 instanceof u.XFAObject) {
                      var y2 = m2[u.$toStyle](this.color);
                      y2 && (o3[y2.startsWith("#") ? c2 : l2] = y2);
                      return o3;
                    }
                  }
                }
              } catch (t5) {
                d2.e(t5);
              } finally {
                d2.f();
              }
              if (this.color && this.color.value) {
                var v2 = this.color[u.$toStyle]();
                o3[v2.startsWith("#") ? c2 : l2] = v2;
              }
              return o3;
            } }]);
            return Fill;
          }(u.XFAObject), Te = function(t3) {
            _inherits(Filter, t3);
            var r3 = _createSuper(Filter);
            function Filter(t4) {
              var o3;
              _classCallCheck(this, Filter);
              (o3 = r3.call(this, S, "filter", true)).addRevocationInfo = (0, m.getStringOption)(t4.addRevocationInfo, ["", "required", "optional", "none"]);
              o3.id = t4.id || "";
              o3.name = t4.name || "";
              o3.use = t4.use || "";
              o3.usehref = t4.usehref || "";
              o3.version = (0, m.getInteger)({ data: o3.version, defaultValue: 5, validate: function validate(t5) {
                return t5 >= 1 && t5 <= 5;
              } });
              o3.appearanceFilter = null;
              o3.certificates = null;
              o3.digestMethods = null;
              o3.encodings = null;
              o3.encryptionMethods = null;
              o3.handler = null;
              o3.lockDocument = null;
              o3.mdp = null;
              o3.reasons = null;
              o3.timeStamp = null;
              return o3;
            }
            return _createClass(Filter);
          }(u.XFAObject), Fe = function(t3) {
            _inherits(Float, t3);
            var r3 = _createSuper(Float);
            function Float(t4) {
              var o3;
              _classCallCheck(this, Float);
              (o3 = r3.call(this, S, "float")).id = t4.id || "";
              o3.name = t4.name || "";
              o3.use = t4.use || "";
              o3.usehref = t4.usehref || "";
              return o3;
            }
            _createClass(Float, [{ key: u.$finalize, value: function value() {
              var t4 = parseFloat(this[u.$content].trim());
              this[u.$content] = isNaN(t4) ? null : t4;
            } }, { key: u.$toHTML, value: function value(t4) {
              return valueToHtml(this[u.$content] !== null ? this[u.$content].toString() : "");
            } }]);
            return Float;
          }(u.ContentObject), Ie = function(t3) {
            _inherits(Font, t3);
            var r3 = _createSuper(Font);
            function Font(t4) {
              var o3;
              _classCallCheck(this, Font);
              (o3 = r3.call(this, S, "font", true)).baselineShift = (0, m.getMeasurement)(t4.baselineShift);
              o3.fontHorizontalScale = (0, m.getFloat)({ data: t4.fontHorizontalScale, defaultValue: 100, validate: function validate(t5) {
                return t5 >= 0;
              } });
              o3.fontVerticalScale = (0, m.getFloat)({ data: t4.fontVerticalScale, defaultValue: 100, validate: function validate(t5) {
                return t5 >= 0;
              } });
              o3.id = t4.id || "";
              o3.kerningMode = (0, m.getStringOption)(t4.kerningMode, ["none", "pair"]);
              o3.letterSpacing = (0, m.getMeasurement)(t4.letterSpacing, "0");
              o3.lineThrough = (0, m.getInteger)({ data: t4.lineThrough, defaultValue: 0, validate: function validate(t5) {
                return t5 === 1 || t5 === 2;
              } });
              o3.lineThroughPeriod = (0, m.getStringOption)(t4.lineThroughPeriod, ["all", "word"]);
              o3.overline = (0, m.getInteger)({ data: t4.overline, defaultValue: 0, validate: function validate(t5) {
                return t5 === 1 || t5 === 2;
              } });
              o3.overlinePeriod = (0, m.getStringOption)(t4.overlinePeriod, ["all", "word"]);
              o3.posture = (0, m.getStringOption)(t4.posture, ["normal", "italic"]);
              o3.size = (0, m.getMeasurement)(t4.size, "10pt");
              o3.typeface = t4.typeface || "Courier";
              o3.underline = (0, m.getInteger)({ data: t4.underline, defaultValue: 0, validate: function validate(t5) {
                return t5 === 1 || t5 === 2;
              } });
              o3.underlinePeriod = (0, m.getStringOption)(t4.underlinePeriod, ["all", "word"]);
              o3.use = t4.use || "";
              o3.usehref = t4.usehref || "";
              o3.weight = (0, m.getStringOption)(t4.weight, ["normal", "bold"]);
              o3.extras = null;
              o3.fill = null;
              return o3;
            }
            _createClass(Font, [{ key: u.$clean, value: function value(t4) {
              _get(_getPrototypeOf(Font.prototype), u.$clean, this).call(this, t4);
              this[u.$globalData].usedTypefaces.add(this.typeface);
            } }, { key: u.$toStyle, value: function value() {
              var t4 = (0, g.toStyle)(this, "fill"), r4 = t4.color;
              if (r4) {
                if (r4 === "#000000")
                  delete t4.color;
                else if (!r4.startsWith("#")) {
                  t4.background = r4;
                  t4.backgroundClip = "text";
                  t4.color = "transparent";
                }
              }
              this.baselineShift && (t4.verticalAlign = (0, g.measureToString)(this.baselineShift));
              t4.fontKerning = this.kerningMode === "none" ? "none" : "normal";
              t4.letterSpacing = (0, g.measureToString)(this.letterSpacing);
              if (this.lineThrough !== 0) {
                t4.textDecoration = "line-through";
                this.lineThrough === 2 && (t4.textDecorationStyle = "double");
              }
              if (this.overline !== 0) {
                t4.textDecoration = "overline";
                this.overline === 2 && (t4.textDecorationStyle = "double");
              }
              t4.fontStyle = this.posture;
              t4.fontSize = (0, g.measureToString)(0.99 * this.size);
              (0, g.setFontFamily)(this, this, this[u.$globalData].fontFinder, t4);
              if (this.underline !== 0) {
                t4.textDecoration = "underline";
                this.underline === 2 && (t4.textDecorationStyle = "double");
              }
              t4.fontWeight = this.weight;
              return t4;
            } }]);
            return Font;
          }(u.XFAObject), Ee = function(t3) {
            _inherits(Format, t3);
            var r3 = _createSuper(Format);
            function Format(t4) {
              var o3;
              _classCallCheck(this, Format);
              (o3 = r3.call(this, S, "format", true)).id = t4.id || "";
              o3.use = t4.use || "";
              o3.usehref = t4.usehref || "";
              o3.extras = null;
              o3.picture = null;
              return o3;
            }
            return _createClass(Format);
          }(u.XFAObject), Me = function(t3) {
            _inherits(Handler, t3);
            var r3 = _createSuper(Handler);
            function Handler(t4) {
              var o3;
              _classCallCheck(this, Handler);
              (o3 = r3.call(this, S, "handler")).id = t4.id || "";
              o3.type = (0, m.getStringOption)(t4.type, ["optional", "required"]);
              o3.use = t4.use || "";
              o3.usehref = t4.usehref || "";
              return o3;
            }
            return _createClass(Handler);
          }(u.StringObject), Re = function(t3) {
            _inherits(Hyphenation, t3);
            var r3 = _createSuper(Hyphenation);
            function Hyphenation(t4) {
              var o3;
              _classCallCheck(this, Hyphenation);
              (o3 = r3.call(this, S, "hyphenation")).excludeAllCaps = (0, m.getInteger)({ data: t4.excludeAllCaps, defaultValue: 0, validate: function validate(t5) {
                return t5 === 1;
              } });
              o3.excludeInitialCap = (0, m.getInteger)({ data: t4.excludeInitialCap, defaultValue: 0, validate: function validate(t5) {
                return t5 === 1;
              } });
              o3.hyphenate = (0, m.getInteger)({ data: t4.hyphenate, defaultValue: 0, validate: function validate(t5) {
                return t5 === 1;
              } });
              o3.id = t4.id || "";
              o3.pushCharacterCount = (0, m.getInteger)({ data: t4.pushCharacterCount, defaultValue: 3, validate: function validate(t5) {
                return t5 >= 0;
              } });
              o3.remainCharacterCount = (0, m.getInteger)({ data: t4.remainCharacterCount, defaultValue: 3, validate: function validate(t5) {
                return t5 >= 0;
              } });
              o3.use = t4.use || "";
              o3.usehref = t4.usehref || "";
              o3.wordCharacterCount = (0, m.getInteger)({ data: t4.wordCharacterCount, defaultValue: 7, validate: function validate(t5) {
                return t5 >= 0;
              } });
              return o3;
            }
            return _createClass(Hyphenation);
          }(u.XFAObject), De = function(t3) {
            _inherits(Image, t3);
            var r3 = _createSuper(Image);
            function Image(t4) {
              var o3;
              _classCallCheck(this, Image);
              (o3 = r3.call(this, S, "image")).aspect = (0, m.getStringOption)(t4.aspect, ["fit", "actual", "height", "none", "width"]);
              o3.contentType = t4.contentType || "";
              o3.href = t4.href || "";
              o3.id = t4.id || "";
              o3.name = t4.name || "";
              o3.transferEncoding = (0, m.getStringOption)(t4.transferEncoding, ["base64", "none", "package"]);
              o3.use = t4.use || "";
              o3.usehref = t4.usehref || "";
              return o3;
            }
            _createClass(Image, [{ key: u.$toHTML, value: function value() {
              if (this.contentType && !O.has(this.contentType.toLowerCase()))
                return m.HTMLResult.EMPTY;
              var t4 = this[u.$globalData].images && this[u.$globalData].images.get(this.href);
              if (!t4 && (this.href || !this[u.$content]))
                return m.HTMLResult.EMPTY;
              t4 || this.transferEncoding !== "base64" || (t4 = (0, y.stringToBytes)(atob(this[u.$content])));
              if (!t4)
                return m.HTMLResult.EMPTY;
              if (!this.contentType) {
                var r4, o3 = _createForOfIteratorHelper(T);
                try {
                  for (o3.s(); !(r4 = o3.n()).done; ) {
                    var c2 = _slicedToArray(r4.value, 2), l2 = c2[0], h2 = c2[1];
                    if (t4.length > l2.length && l2.every(function(r5, o4) {
                      return r5 === t4[o4];
                    })) {
                      this.contentType = h2;
                      break;
                    }
                  }
                } catch (t5) {
                  o3.e(t5);
                } finally {
                  o3.f();
                }
                if (!this.contentType)
                  return m.HTMLResult.EMPTY;
              }
              var d2, g2 = new Blob([t4], { type: this.contentType });
              switch (this.aspect) {
                case "fit":
                case "actual":
                  break;
                case "height":
                  d2 = { height: "100%", objectFit: "fill" };
                  break;
                case "none":
                  d2 = { width: "100%", height: "100%", objectFit: "fill" };
                  break;
                case "width":
                  d2 = { width: "100%", objectFit: "fill" };
              }
              var v2 = this[u.$getParent]();
              return m.HTMLResult.success({ name: "img", attributes: { class: ["xfaImage"], style: d2, src: URL.createObjectURL(g2), alt: v2 ? ariaLabel(v2[u.$getParent]()) : null } });
            } }]);
            return Image;
          }(u.StringObject), je = function(t3) {
            _inherits(ImageEdit, t3);
            var r3 = _createSuper(ImageEdit);
            function ImageEdit(t4) {
              var o3;
              _classCallCheck(this, ImageEdit);
              (o3 = r3.call(this, S, "imageEdit", true)).data = (0, m.getStringOption)(t4.data, ["link", "embed"]);
              o3.id = t4.id || "";
              o3.use = t4.use || "";
              o3.usehref = t4.usehref || "";
              o3.border = null;
              o3.extras = null;
              o3.margin = null;
              return o3;
            }
            _createClass(ImageEdit, [{ key: u.$toHTML, value: function value(t4) {
              return this.data === "embed" ? m.HTMLResult.success({ name: "div", children: [], attributes: {} }) : m.HTMLResult.EMPTY;
            } }]);
            return ImageEdit;
          }(u.XFAObject), Be = function(t3) {
            _inherits(Integer, t3);
            var r3 = _createSuper(Integer);
            function Integer(t4) {
              var o3;
              _classCallCheck(this, Integer);
              (o3 = r3.call(this, S, "integer")).id = t4.id || "";
              o3.name = t4.name || "";
              o3.use = t4.use || "";
              o3.usehref = t4.usehref || "";
              return o3;
            }
            _createClass(Integer, [{ key: u.$finalize, value: function value() {
              var t4 = parseInt(this[u.$content].trim(), 10);
              this[u.$content] = isNaN(t4) ? null : t4;
            } }, { key: u.$toHTML, value: function value(t4) {
              return valueToHtml(this[u.$content] !== null ? this[u.$content].toString() : "");
            } }]);
            return Integer;
          }(u.ContentObject), Le = function(t3) {
            _inherits(Issuers, t3);
            var r3 = _createSuper(Issuers);
            function Issuers(t4) {
              var o3;
              _classCallCheck(this, Issuers);
              (o3 = r3.call(this, S, "issuers", true)).id = t4.id || "";
              o3.type = (0, m.getStringOption)(t4.type, ["optional", "required"]);
              o3.use = t4.use || "";
              o3.usehref = t4.usehref || "";
              o3.certificate = new u.XFAObjectArray();
              return o3;
            }
            return _createClass(Issuers);
          }(u.XFAObject), Ne = function(t3) {
            _inherits(Items, t3);
            var r3 = _createSuper(Items);
            function Items(t4) {
              var o3;
              _classCallCheck(this, Items);
              (o3 = r3.call(this, S, "items", true)).id = t4.id || "";
              o3.name = t4.name || "";
              o3.presence = (0, m.getStringOption)(t4.presence, ["visible", "hidden", "inactive", "invisible"]);
              o3.ref = t4.ref || "";
              o3.save = (0, m.getInteger)({ data: t4.save, defaultValue: 0, validate: function validate(t5) {
                return t5 === 1;
              } });
              o3.use = t4.use || "";
              o3.usehref = t4.usehref || "";
              o3.boolean = new u.XFAObjectArray();
              o3.date = new u.XFAObjectArray();
              o3.dateTime = new u.XFAObjectArray();
              o3.decimal = new u.XFAObjectArray();
              o3.exData = new u.XFAObjectArray();
              o3.float = new u.XFAObjectArray();
              o3.image = new u.XFAObjectArray();
              o3.integer = new u.XFAObjectArray();
              o3.text = new u.XFAObjectArray();
              o3.time = new u.XFAObjectArray();
              return o3;
            }
            _createClass(Items, [{ key: u.$toHTML, value: function value() {
              var t4, r4 = [], o3 = _createForOfIteratorHelper(this[u.$getChildren]());
              try {
                for (o3.s(); !(t4 = o3.n()).done; ) {
                  var c2 = t4.value;
                  r4.push(c2[u.$text]());
                }
              } catch (t5) {
                o3.e(t5);
              } finally {
                o3.f();
              }
              return m.HTMLResult.success(r4);
            } }]);
            return Items;
          }(u.XFAObject);
          r2.Items = Ne;
          var Ue = function(t3) {
            _inherits(Keep, t3);
            var r3 = _createSuper(Keep);
            function Keep(t4) {
              var o3;
              _classCallCheck(this, Keep);
              (o3 = r3.call(this, S, "keep", true)).id = t4.id || "";
              var c2 = ["none", "contentArea", "pageArea"];
              o3.intact = (0, m.getStringOption)(t4.intact, c2);
              o3.next = (0, m.getStringOption)(t4.next, c2);
              o3.previous = (0, m.getStringOption)(t4.previous, c2);
              o3.use = t4.use || "";
              o3.usehref = t4.usehref || "";
              o3.extras = null;
              return o3;
            }
            return _createClass(Keep);
          }(u.XFAObject), He = function(t3) {
            _inherits(KeyUsage, t3);
            var r3 = _createSuper(KeyUsage);
            function KeyUsage(t4) {
              var o3;
              _classCallCheck(this, KeyUsage);
              var c2 = ["", "yes", "no"];
              (o3 = r3.call(this, S, "keyUsage")).crlSign = (0, m.getStringOption)(t4.crlSign, c2);
              o3.dataEncipherment = (0, m.getStringOption)(t4.dataEncipherment, c2);
              o3.decipherOnly = (0, m.getStringOption)(t4.decipherOnly, c2);
              o3.digitalSignature = (0, m.getStringOption)(t4.digitalSignature, c2);
              o3.encipherOnly = (0, m.getStringOption)(t4.encipherOnly, c2);
              o3.id = t4.id || "";
              o3.keyAgreement = (0, m.getStringOption)(t4.keyAgreement, c2);
              o3.keyCertSign = (0, m.getStringOption)(t4.keyCertSign, c2);
              o3.keyEncipherment = (0, m.getStringOption)(t4.keyEncipherment, c2);
              o3.nonRepudiation = (0, m.getStringOption)(t4.nonRepudiation, c2);
              o3.type = (0, m.getStringOption)(t4.type, ["optional", "required"]);
              o3.use = t4.use || "";
              o3.usehref = t4.usehref || "";
              return o3;
            }
            return _createClass(KeyUsage);
          }(u.XFAObject), $e = function(t3) {
            _inherits(Line, t3);
            var r3 = _createSuper(Line);
            function Line(t4) {
              var o3;
              _classCallCheck(this, Line);
              (o3 = r3.call(this, S, "line", true)).hand = (0, m.getStringOption)(t4.hand, ["even", "left", "right"]);
              o3.id = t4.id || "";
              o3.slope = (0, m.getStringOption)(t4.slope, ["\\", "/"]);
              o3.use = t4.use || "";
              o3.usehref = t4.usehref || "";
              o3.edge = null;
              return o3;
            }
            _createClass(Line, [{ key: u.$toHTML, value: function value() {
              var t4, r4, o3, c2, l2 = this[u.$getParent]()[u.$getParent](), h2 = this.edge ? this.edge : new de({}), d2 = h2[u.$toStyle](), y2 = /* @__PURE__ */ Object.create(null), v2 = h2.presence === "visible" ? h2.thickness : 0;
              y2.strokeWidth = (0, g.measureToString)(v2);
              y2.stroke = d2.color;
              var k2 = "100%", _2 = "100%";
              if (l2.w <= v2) {
                t4 = "50%";
                r4 = 0;
                o3 = "50%";
                c2 = "100%";
                k2 = y2.strokeWidth;
              } else if (l2.h <= v2) {
                t4 = 0;
                r4 = "50%";
                o3 = "100%";
                c2 = "50%";
                _2 = y2.strokeWidth;
              } else if (this.slope === "\\") {
                t4 = 0;
                r4 = 0;
                o3 = "100%";
                c2 = "100%";
              } else {
                t4 = 0;
                r4 = "100%";
                o3 = "100%";
                c2 = 0;
              }
              var w2 = { name: "svg", children: [{ name: "line", attributes: { xmlns: C, x1: t4, y1: r4, x2: o3, y2: c2, style: y2 } }], attributes: { xmlns: C, width: k2, height: _2, style: { overflow: "visible" } } };
              if (hasMargin(l2))
                return m.HTMLResult.success({ name: "div", attributes: { style: { display: "inline", width: "100%", height: "100%" } }, children: [w2] });
              w2.attributes.style.position = "absolute";
              return m.HTMLResult.success(w2);
            } }]);
            return Line;
          }(u.XFAObject), Xe = function(t3) {
            _inherits(Linear, t3);
            var r3 = _createSuper(Linear);
            function Linear(t4) {
              var o3;
              _classCallCheck(this, Linear);
              (o3 = r3.call(this, S, "linear", true)).id = t4.id || "";
              o3.type = (0, m.getStringOption)(t4.type, ["toRight", "toBottom", "toLeft", "toTop"]);
              o3.use = t4.use || "";
              o3.usehref = t4.usehref || "";
              o3.color = null;
              o3.extras = null;
              return o3;
            }
            _createClass(Linear, [{ key: u.$toStyle, value: function value(t4) {
              t4 = t4 ? t4[u.$toStyle]() : "#FFFFFF";
              var r4 = this.type.replace(/([RBLT])/, " $1").toLowerCase(), o3 = this.color ? this.color[u.$toStyle]() : "#000000";
              return "linear-gradient(".concat(r4, ", ").concat(t4, ", ").concat(o3, ")");
            } }]);
            return Linear;
          }(u.XFAObject), qe = function(t3) {
            _inherits(LockDocument, t3);
            var r3 = _createSuper(LockDocument);
            function LockDocument(t4) {
              var o3;
              _classCallCheck(this, LockDocument);
              (o3 = r3.call(this, S, "lockDocument")).id = t4.id || "";
              o3.type = (0, m.getStringOption)(t4.type, ["optional", "required"]);
              o3.use = t4.use || "";
              o3.usehref = t4.usehref || "";
              return o3;
            }
            _createClass(LockDocument, [{ key: u.$finalize, value: function value() {
              this[u.$content] = (0, m.getStringOption)(this[u.$content], ["auto", "0", "1"]);
            } }]);
            return LockDocument;
          }(u.ContentObject), Ge = function(t3) {
            _inherits(Manifest, t3);
            var r3 = _createSuper(Manifest);
            function Manifest(t4) {
              var o3;
              _classCallCheck(this, Manifest);
              (o3 = r3.call(this, S, "manifest", true)).action = (0, m.getStringOption)(t4.action, ["include", "all", "exclude"]);
              o3.id = t4.id || "";
              o3.name = t4.name || "";
              o3.use = t4.use || "";
              o3.usehref = t4.usehref || "";
              o3.extras = null;
              o3.ref = new u.XFAObjectArray();
              return o3;
            }
            return _createClass(Manifest);
          }(u.XFAObject), ze = function(t3) {
            _inherits(Margin, t3);
            var r3 = _createSuper(Margin);
            function Margin(t4) {
              var o3;
              _classCallCheck(this, Margin);
              (o3 = r3.call(this, S, "margin", true)).bottomInset = (0, m.getMeasurement)(t4.bottomInset, "0");
              o3.id = t4.id || "";
              o3.leftInset = (0, m.getMeasurement)(t4.leftInset, "0");
              o3.rightInset = (0, m.getMeasurement)(t4.rightInset, "0");
              o3.topInset = (0, m.getMeasurement)(t4.topInset, "0");
              o3.use = t4.use || "";
              o3.usehref = t4.usehref || "";
              o3.extras = null;
              return o3;
            }
            _createClass(Margin, [{ key: u.$toStyle, value: function value() {
              return { margin: (0, g.measureToString)(this.topInset) + " " + (0, g.measureToString)(this.rightInset) + " " + (0, g.measureToString)(this.bottomInset) + " " + (0, g.measureToString)(this.leftInset) };
            } }]);
            return Margin;
          }(u.XFAObject), We = function(t3) {
            _inherits(Mdp, t3);
            var r3 = _createSuper(Mdp);
            function Mdp(t4) {
              var o3;
              _classCallCheck(this, Mdp);
              (o3 = r3.call(this, S, "mdp")).id = t4.id || "";
              o3.permissions = (0, m.getInteger)({ data: t4.permissions, defaultValue: 2, validate: function validate(t5) {
                return t5 === 1 || t5 === 3;
              } });
              o3.signatureType = (0, m.getStringOption)(t4.signatureType, ["filler", "author"]);
              o3.use = t4.use || "";
              o3.usehref = t4.usehref || "";
              return o3;
            }
            return _createClass(Mdp);
          }(u.XFAObject), Ve = function(t3) {
            _inherits(Medium, t3);
            var r3 = _createSuper(Medium);
            function Medium(t4) {
              var o3;
              _classCallCheck(this, Medium);
              (o3 = r3.call(this, S, "medium")).id = t4.id || "";
              o3.imagingBBox = (0, m.getBBox)(t4.imagingBBox);
              o3.long = (0, m.getMeasurement)(t4.long);
              o3.orientation = (0, m.getStringOption)(t4.orientation, ["portrait", "landscape"]);
              o3.short = (0, m.getMeasurement)(t4.short);
              o3.stock = t4.stock || "";
              o3.trayIn = (0, m.getStringOption)(t4.trayIn, ["auto", "delegate", "pageFront"]);
              o3.trayOut = (0, m.getStringOption)(t4.trayOut, ["auto", "delegate"]);
              o3.use = t4.use || "";
              o3.usehref = t4.usehref || "";
              return o3;
            }
            return _createClass(Medium);
          }(u.XFAObject), Ke = function(t3) {
            _inherits(Message, t3);
            var r3 = _createSuper(Message);
            function Message(t4) {
              var o3;
              _classCallCheck(this, Message);
              (o3 = r3.call(this, S, "message", true)).id = t4.id || "";
              o3.use = t4.use || "";
              o3.usehref = t4.usehref || "";
              o3.text = new u.XFAObjectArray();
              return o3;
            }
            return _createClass(Message);
          }(u.XFAObject), Ye = function(t3) {
            _inherits(NumericEdit, t3);
            var r3 = _createSuper(NumericEdit);
            function NumericEdit(t4) {
              var o3;
              _classCallCheck(this, NumericEdit);
              (o3 = r3.call(this, S, "numericEdit", true)).hScrollPolicy = (0, m.getStringOption)(t4.hScrollPolicy, ["auto", "off", "on"]);
              o3.id = t4.id || "";
              o3.use = t4.use || "";
              o3.usehref = t4.usehref || "";
              o3.border = null;
              o3.comb = null;
              o3.extras = null;
              o3.margin = null;
              return o3;
            }
            _createClass(NumericEdit, [{ key: u.$toHTML, value: function value(t4) {
              var r4 = (0, g.toStyle)(this, "border", "font", "margin"), o3 = this[u.$getParent]()[u.$getParent](), c2 = { name: "input", attributes: { type: "text", fieldId: o3[u.$uid], dataId: o3[u.$data] && o3[u.$data][u.$uid] || o3[u.$uid], class: ["xfaTextfield"], style: r4, "aria-label": ariaLabel(o3) } };
              return m.HTMLResult.success({ name: "label", attributes: { class: ["xfaLabel"] }, children: [c2] });
            } }]);
            return NumericEdit;
          }(u.XFAObject), Je = function(t3) {
            _inherits(Occur, t3);
            var r3 = _createSuper(Occur);
            function Occur(t4) {
              var o3;
              _classCallCheck(this, Occur);
              (o3 = r3.call(this, S, "occur", true)).id = t4.id || "";
              o3.initial = t4.initial !== "" ? (0, m.getInteger)({ data: t4.initial, defaultValue: "", validate: function validate(t5) {
                return true;
              } }) : "";
              o3.max = t4.max !== "" ? (0, m.getInteger)({ data: t4.max, defaultValue: 1, validate: function validate(t5) {
                return true;
              } }) : "";
              o3.min = t4.min !== "" ? (0, m.getInteger)({ data: t4.min, defaultValue: 1, validate: function validate(t5) {
                return true;
              } }) : "";
              o3.use = t4.use || "";
              o3.usehref = t4.usehref || "";
              o3.extras = null;
              return o3;
            }
            _createClass(Occur, [{ key: u.$clean, value: function value() {
              var t4 = this[u.$getParent](), r4 = this.min;
              this.min === "" && (this.min = t4 instanceof tt || t4 instanceof rt ? 0 : 1);
              this.max === "" && (this.max = r4 === "" ? t4 instanceof tt || t4 instanceof rt ? -1 : 1 : this.min);
              this.max !== -1 && this.max < this.min && (this.max = this.min);
              this.initial === "" && (this.initial = t4 instanceof At ? 1 : this.min);
            } }]);
            return Occur;
          }(u.XFAObject), Ze = function(t3) {
            _inherits(Oid, t3);
            var r3 = _createSuper(Oid);
            function Oid(t4) {
              var o3;
              _classCallCheck(this, Oid);
              (o3 = r3.call(this, S, "oid")).id = t4.id || "";
              o3.name = t4.name || "";
              o3.use = t4.use || "";
              o3.usehref = t4.usehref || "";
              return o3;
            }
            return _createClass(Oid);
          }(u.StringObject), Qe = function(t3) {
            _inherits(Oids, t3);
            var r3 = _createSuper(Oids);
            function Oids(t4) {
              var o3;
              _classCallCheck(this, Oids);
              (o3 = r3.call(this, S, "oids", true)).id = t4.id || "";
              o3.type = (0, m.getStringOption)(t4.type, ["optional", "required"]);
              o3.use = t4.use || "";
              o3.usehref = t4.usehref || "";
              o3.oid = new u.XFAObjectArray();
              return o3;
            }
            return _createClass(Oids);
          }(u.XFAObject), et = function(t3) {
            _inherits(Overflow, t3);
            var r3 = _createSuper(Overflow);
            function Overflow(t4) {
              var o3;
              _classCallCheck(this, Overflow);
              (o3 = r3.call(this, S, "overflow")).id = t4.id || "";
              o3.leader = t4.leader || "";
              o3.target = t4.target || "";
              o3.trailer = t4.trailer || "";
              o3.use = t4.use || "";
              o3.usehref = t4.usehref || "";
              return o3;
            }
            _createClass(Overflow, [{ key: u.$getExtra, value: function value() {
              if (!this[u.$extra]) {
                var t4 = this[u.$getParent](), r4 = this[u.$getTemplateRoot](), o3 = r4[u.$searchNode](this.target, t4), c2 = r4[u.$searchNode](this.leader, t4), l2 = r4[u.$searchNode](this.trailer, t4);
                this[u.$extra] = { target: o3 && o3[0] || null, leader: c2 && c2[0] || null, trailer: l2 && l2[0] || null, addLeader: false, addTrailer: false };
              }
              return this[u.$extra];
            } }]);
            return Overflow;
          }(u.XFAObject), tt = function(t3) {
            _inherits(PageArea, t3);
            var r3 = _createSuper(PageArea);
            function PageArea(t4) {
              var o3;
              _classCallCheck(this, PageArea);
              (o3 = r3.call(this, S, "pageArea", true)).blankOrNotBlank = (0, m.getStringOption)(t4.blankOrNotBlank, ["any", "blank", "notBlank"]);
              o3.id = t4.id || "";
              o3.initialNumber = (0, m.getInteger)({ data: t4.initialNumber, defaultValue: 1, validate: function validate(t5) {
                return true;
              } });
              o3.name = t4.name || "";
              o3.numbered = (0, m.getInteger)({ data: t4.numbered, defaultValue: 1, validate: function validate(t5) {
                return true;
              } });
              o3.oddOrEven = (0, m.getStringOption)(t4.oddOrEven, ["any", "even", "odd"]);
              o3.pagePosition = (0, m.getStringOption)(t4.pagePosition, ["any", "first", "last", "only", "rest"]);
              o3.relevant = (0, m.getRelevant)(t4.relevant);
              o3.use = t4.use || "";
              o3.usehref = t4.usehref || "";
              o3.desc = null;
              o3.extras = null;
              o3.medium = null;
              o3.occur = null;
              o3.area = new u.XFAObjectArray();
              o3.contentArea = new u.XFAObjectArray();
              o3.draw = new u.XFAObjectArray();
              o3.exclGroup = new u.XFAObjectArray();
              o3.field = new u.XFAObjectArray();
              o3.subform = new u.XFAObjectArray();
              return o3;
            }
            _createClass(PageArea, [{ key: u.$isUsable, value: function value() {
              if (!this[u.$extra]) {
                this[u.$extra] = { numberOfUse: 0 };
                return true;
              }
              return !this.occur || this.occur.max === -1 || this[u.$extra].numberOfUse < this.occur.max;
            } }, { key: u.$cleanPage, value: function value() {
              delete this[u.$extra];
            } }, { key: u.$getNextPage, value: function value() {
              this[u.$extra] || (this[u.$extra] = { numberOfUse: 0 });
              var t4 = this[u.$getParent]();
              if (t4.relation === "orderedOccurrence" && this[u.$isUsable]()) {
                this[u.$extra].numberOfUse += 1;
                return this;
              }
              return t4[u.$getNextPage]();
            } }, { key: u.$getAvailableSpace, value: function value() {
              return this[u.$extra].space || { width: 0, height: 0 };
            } }, { key: u.$toHTML, value: function value() {
              this[u.$extra] || (this[u.$extra] = { numberOfUse: 1 });
              var t4 = [];
              this[u.$extra].children = t4;
              var r4 = /* @__PURE__ */ Object.create(null);
              if (this.medium && this.medium.short && this.medium.long) {
                r4.width = (0, g.measureToString)(this.medium.short);
                r4.height = (0, g.measureToString)(this.medium.long);
                this[u.$extra].space = { width: this.medium.short, height: this.medium.long };
                if (this.medium.orientation === "landscape") {
                  var o3 = r4.width;
                  r4.width = r4.height;
                  r4.height = o3;
                  this[u.$extra].space = { width: this.medium.long, height: this.medium.short };
                }
              } else
                (0, y.warn)("XFA - No medium specified in pageArea: please file a bug.");
              this[u.$childrenToHTML]({ filter: /* @__PURE__ */ new Set(["area", "draw", "field", "subform"]), include: true });
              this[u.$childrenToHTML]({ filter: /* @__PURE__ */ new Set(["contentArea"]), include: true });
              return m.HTMLResult.success({ name: "div", children: t4, attributes: { class: ["xfaPage"], id: this[u.$uid], style: r4, xfaName: this.name } });
            } }]);
            return PageArea;
          }(u.XFAObject), rt = function(t3) {
            _inherits(PageSet, t3);
            var r3 = _createSuper(PageSet);
            function PageSet(t4) {
              var o3;
              _classCallCheck(this, PageSet);
              (o3 = r3.call(this, S, "pageSet", true)).duplexImposition = (0, m.getStringOption)(t4.duplexImposition, ["longEdge", "shortEdge"]);
              o3.id = t4.id || "";
              o3.name = t4.name || "";
              o3.relation = (0, m.getStringOption)(t4.relation, ["orderedOccurrence", "duplexPaginated", "simplexPaginated"]);
              o3.relevant = (0, m.getRelevant)(t4.relevant);
              o3.use = t4.use || "";
              o3.usehref = t4.usehref || "";
              o3.extras = null;
              o3.occur = null;
              o3.pageArea = new u.XFAObjectArray();
              o3.pageSet = new u.XFAObjectArray();
              return o3;
            }
            _createClass(PageSet, [{ key: u.$cleanPage, value: function value() {
              var t4, r4 = _createForOfIteratorHelper(this.pageArea.children);
              try {
                for (r4.s(); !(t4 = r4.n()).done; ) {
                  t4.value[u.$cleanPage]();
                }
              } catch (t5) {
                r4.e(t5);
              } finally {
                r4.f();
              }
              var o3, c2 = _createForOfIteratorHelper(this.pageSet.children);
              try {
                for (c2.s(); !(o3 = c2.n()).done; ) {
                  o3.value[u.$cleanPage]();
                }
              } catch (t5) {
                c2.e(t5);
              } finally {
                c2.f();
              }
            } }, { key: u.$isUsable, value: function value() {
              return !this.occur || this.occur.max === -1 || this[u.$extra].numberOfUse < this.occur.max;
            } }, { key: u.$getNextPage, value: function value() {
              this[u.$extra] || (this[u.$extra] = { numberOfUse: 1, pageIndex: -1, pageSetIndex: -1 });
              if (this.relation === "orderedOccurrence") {
                if (this[u.$extra].pageIndex + 1 < this.pageArea.children.length) {
                  this[u.$extra].pageIndex += 1;
                  return this.pageArea.children[this[u.$extra].pageIndex][u.$getNextPage]();
                }
                if (this[u.$extra].pageSetIndex + 1 < this.pageSet.children.length) {
                  this[u.$extra].pageSetIndex += 1;
                  return this.pageSet.children[this[u.$extra].pageSetIndex][u.$getNextPage]();
                }
                if (this[u.$isUsable]()) {
                  this[u.$extra].numberOfUse += 1;
                  this[u.$extra].pageIndex = -1;
                  this[u.$extra].pageSetIndex = -1;
                  return this[u.$getNextPage]();
                }
                var t4 = this[u.$getParent]();
                if (t4 instanceof PageSet)
                  return t4[u.$getNextPage]();
                this[u.$cleanPage]();
                return this[u.$getNextPage]();
              }
              var r4 = this[u.$getTemplateRoot]()[u.$extra].pageNumber, o3 = r4 % 2 == 0 ? "even" : "odd", c2 = r4 === 0 ? "first" : "rest", l2 = this.pageArea.children.find(function(t5) {
                return t5.oddOrEven === o3 && t5.pagePosition === c2;
              });
              return l2 || ((l2 = this.pageArea.children.find(function(t5) {
                return t5.oddOrEven === "any" && t5.pagePosition === c2;
              })) ? l2 : (l2 = this.pageArea.children.find(function(t5) {
                return t5.oddOrEven === "any" && t5.pagePosition === "any";
              })) || this.pageArea.children[0]);
            } }]);
            return PageSet;
          }(u.XFAObject), at = function(t3) {
            _inherits(Para, t3);
            var r3 = _createSuper(Para);
            function Para(t4) {
              var o3;
              _classCallCheck(this, Para);
              (o3 = r3.call(this, S, "para", true)).hAlign = (0, m.getStringOption)(t4.hAlign, ["left", "center", "justify", "justifyAll", "radix", "right"]);
              o3.id = t4.id || "";
              o3.lineHeight = t4.lineHeight ? (0, m.getMeasurement)(t4.lineHeight, "0pt") : "";
              o3.marginLeft = t4.marginLeft ? (0, m.getMeasurement)(t4.marginLeft, "0pt") : "";
              o3.marginRight = t4.marginRight ? (0, m.getMeasurement)(t4.marginRight, "0pt") : "";
              o3.orphans = (0, m.getInteger)({ data: t4.orphans, defaultValue: 0, validate: function validate(t5) {
                return t5 >= 0;
              } });
              o3.preserve = t4.preserve || "";
              o3.radixOffset = t4.radixOffset ? (0, m.getMeasurement)(t4.radixOffset, "0pt") : "";
              o3.spaceAbove = t4.spaceAbove ? (0, m.getMeasurement)(t4.spaceAbove, "0pt") : "";
              o3.spaceBelow = t4.spaceBelow ? (0, m.getMeasurement)(t4.spaceBelow, "0pt") : "";
              o3.tabDefault = t4.tabDefault ? (0, m.getMeasurement)(o3.tabDefault) : "";
              o3.tabStops = (t4.tabStops || "").trim().split(/\s+/).map(function(t5, r4) {
                return r4 % 2 == 1 ? (0, m.getMeasurement)(t5) : t5;
              });
              o3.textIndent = t4.textIndent ? (0, m.getMeasurement)(t4.textIndent, "0pt") : "";
              o3.use = t4.use || "";
              o3.usehref = t4.usehref || "";
              o3.vAlign = (0, m.getStringOption)(t4.vAlign, ["top", "bottom", "middle"]);
              o3.widows = (0, m.getInteger)({ data: t4.widows, defaultValue: 0, validate: function validate(t5) {
                return t5 >= 0;
              } });
              o3.hyphenation = null;
              return o3;
            }
            _createClass(Para, [{ key: u.$toStyle, value: function value() {
              var t4 = (0, g.toStyle)(this, "hAlign");
              this.marginLeft !== "" && (t4.paddingLeft = (0, g.measureToString)(this.marginLeft));
              this.marginRight !== "" && (t4.paddingight = (0, g.measureToString)(this.marginRight));
              this.spaceAbove !== "" && (t4.paddingTop = (0, g.measureToString)(this.spaceAbove));
              this.spaceBelow !== "" && (t4.paddingBottom = (0, g.measureToString)(this.spaceBelow));
              if (this.textIndent !== "") {
                t4.textIndent = (0, g.measureToString)(this.textIndent);
                (0, g.fixTextIndent)(t4);
              }
              this.lineHeight > 0 && (t4.lineHeight = (0, g.measureToString)(this.lineHeight));
              this.tabDefault !== "" && (t4.tabSize = (0, g.measureToString)(this.tabDefault));
              this.tabStops.length;
              this.hyphenatation && Object.assign(t4, this.hyphenatation[u.$toStyle]());
              return t4;
            } }]);
            return Para;
          }(u.XFAObject), nt = function(t3) {
            _inherits(PasswordEdit, t3);
            var r3 = _createSuper(PasswordEdit);
            function PasswordEdit(t4) {
              var o3;
              _classCallCheck(this, PasswordEdit);
              (o3 = r3.call(this, S, "passwordEdit", true)).hScrollPolicy = (0, m.getStringOption)(t4.hScrollPolicy, ["auto", "off", "on"]);
              o3.id = t4.id || "";
              o3.passwordChar = t4.passwordChar || "*";
              o3.use = t4.use || "";
              o3.usehref = t4.usehref || "";
              o3.border = null;
              o3.extras = null;
              o3.margin = null;
              return o3;
            }
            return _createClass(PasswordEdit);
          }(u.XFAObject), it = function(t3) {
            _inherits(Pattern, t3);
            var r3 = _createSuper(Pattern);
            function Pattern(t4) {
              var o3;
              _classCallCheck(this, Pattern);
              (o3 = r3.call(this, S, "pattern", true)).id = t4.id || "";
              o3.type = (0, m.getStringOption)(t4.type, ["crossHatch", "crossDiagonal", "diagonalLeft", "diagonalRight", "horizontal", "vertical"]);
              o3.use = t4.use || "";
              o3.usehref = t4.usehref || "";
              o3.color = null;
              o3.extras = null;
              return o3;
            }
            _createClass(Pattern, [{ key: u.$toStyle, value: function value(t4) {
              t4 = t4 ? t4[u.$toStyle]() : "#FFFFFF";
              var r4 = this.color ? this.color[u.$toStyle]() : "#000000", o3 = "repeating-linear-gradient", c2 = "".concat(t4, ",").concat(t4, " ").concat(5, "px,").concat(r4, " ").concat(5, "px,").concat(r4, " ").concat(10, "px");
              switch (this.type) {
                case "crossHatch":
                  return "".concat(o3, "(to top,").concat(c2, ") ").concat(o3, "(to right,").concat(c2, ")");
                case "crossDiagonal":
                  return "".concat(o3, "(45deg,").concat(c2, ") ").concat(o3, "(-45deg,").concat(c2, ")");
                case "diagonalLeft":
                  return "".concat(o3, "(45deg,").concat(c2, ")");
                case "diagonalRight":
                  return "".concat(o3, "(-45deg,").concat(c2, ")");
                case "horizontal":
                  return "".concat(o3, "(to top,").concat(c2, ")");
                case "vertical":
                  return "".concat(o3, "(to right,").concat(c2, ")");
              }
              return "";
            } }]);
            return Pattern;
          }(u.XFAObject), ot = function(t3) {
            _inherits(Picture, t3);
            var r3 = _createSuper(Picture);
            function Picture(t4) {
              var o3;
              _classCallCheck(this, Picture);
              (o3 = r3.call(this, S, "picture")).id = t4.id || "";
              o3.use = t4.use || "";
              o3.usehref = t4.usehref || "";
              return o3;
            }
            return _createClass(Picture);
          }(u.StringObject), st = function(t3) {
            _inherits(Proto, t3);
            var r3 = _createSuper(Proto);
            function Proto(t4) {
              var o3;
              _classCallCheck(this, Proto);
              (o3 = r3.call(this, S, "proto", true)).appearanceFilter = new u.XFAObjectArray();
              o3.arc = new u.XFAObjectArray();
              o3.area = new u.XFAObjectArray();
              o3.assist = new u.XFAObjectArray();
              o3.barcode = new u.XFAObjectArray();
              o3.bindItems = new u.XFAObjectArray();
              o3.bookend = new u.XFAObjectArray();
              o3.boolean = new u.XFAObjectArray();
              o3.border = new u.XFAObjectArray();
              o3.break = new u.XFAObjectArray();
              o3.breakAfter = new u.XFAObjectArray();
              o3.breakBefore = new u.XFAObjectArray();
              o3.button = new u.XFAObjectArray();
              o3.calculate = new u.XFAObjectArray();
              o3.caption = new u.XFAObjectArray();
              o3.certificate = new u.XFAObjectArray();
              o3.certificates = new u.XFAObjectArray();
              o3.checkButton = new u.XFAObjectArray();
              o3.choiceList = new u.XFAObjectArray();
              o3.color = new u.XFAObjectArray();
              o3.comb = new u.XFAObjectArray();
              o3.connect = new u.XFAObjectArray();
              o3.contentArea = new u.XFAObjectArray();
              o3.corner = new u.XFAObjectArray();
              o3.date = new u.XFAObjectArray();
              o3.dateTime = new u.XFAObjectArray();
              o3.dateTimeEdit = new u.XFAObjectArray();
              o3.decimal = new u.XFAObjectArray();
              o3.defaultUi = new u.XFAObjectArray();
              o3.desc = new u.XFAObjectArray();
              o3.digestMethod = new u.XFAObjectArray();
              o3.digestMethods = new u.XFAObjectArray();
              o3.draw = new u.XFAObjectArray();
              o3.edge = new u.XFAObjectArray();
              o3.encoding = new u.XFAObjectArray();
              o3.encodings = new u.XFAObjectArray();
              o3.encrypt = new u.XFAObjectArray();
              o3.encryptData = new u.XFAObjectArray();
              o3.encryption = new u.XFAObjectArray();
              o3.encryptionMethod = new u.XFAObjectArray();
              o3.encryptionMethods = new u.XFAObjectArray();
              o3.event = new u.XFAObjectArray();
              o3.exData = new u.XFAObjectArray();
              o3.exObject = new u.XFAObjectArray();
              o3.exclGroup = new u.XFAObjectArray();
              o3.execute = new u.XFAObjectArray();
              o3.extras = new u.XFAObjectArray();
              o3.field = new u.XFAObjectArray();
              o3.fill = new u.XFAObjectArray();
              o3.filter = new u.XFAObjectArray();
              o3.float = new u.XFAObjectArray();
              o3.font = new u.XFAObjectArray();
              o3.format = new u.XFAObjectArray();
              o3.handler = new u.XFAObjectArray();
              o3.hyphenation = new u.XFAObjectArray();
              o3.image = new u.XFAObjectArray();
              o3.imageEdit = new u.XFAObjectArray();
              o3.integer = new u.XFAObjectArray();
              o3.issuers = new u.XFAObjectArray();
              o3.items = new u.XFAObjectArray();
              o3.keep = new u.XFAObjectArray();
              o3.keyUsage = new u.XFAObjectArray();
              o3.line = new u.XFAObjectArray();
              o3.linear = new u.XFAObjectArray();
              o3.lockDocument = new u.XFAObjectArray();
              o3.manifest = new u.XFAObjectArray();
              o3.margin = new u.XFAObjectArray();
              o3.mdp = new u.XFAObjectArray();
              o3.medium = new u.XFAObjectArray();
              o3.message = new u.XFAObjectArray();
              o3.numericEdit = new u.XFAObjectArray();
              o3.occur = new u.XFAObjectArray();
              o3.oid = new u.XFAObjectArray();
              o3.oids = new u.XFAObjectArray();
              o3.overflow = new u.XFAObjectArray();
              o3.pageArea = new u.XFAObjectArray();
              o3.pageSet = new u.XFAObjectArray();
              o3.para = new u.XFAObjectArray();
              o3.passwordEdit = new u.XFAObjectArray();
              o3.pattern = new u.XFAObjectArray();
              o3.picture = new u.XFAObjectArray();
              o3.radial = new u.XFAObjectArray();
              o3.reason = new u.XFAObjectArray();
              o3.reasons = new u.XFAObjectArray();
              o3.rectangle = new u.XFAObjectArray();
              o3.ref = new u.XFAObjectArray();
              o3.script = new u.XFAObjectArray();
              o3.setProperty = new u.XFAObjectArray();
              o3.signData = new u.XFAObjectArray();
              o3.signature = new u.XFAObjectArray();
              o3.signing = new u.XFAObjectArray();
              o3.solid = new u.XFAObjectArray();
              o3.speak = new u.XFAObjectArray();
              o3.stipple = new u.XFAObjectArray();
              o3.subform = new u.XFAObjectArray();
              o3.subformSet = new u.XFAObjectArray();
              o3.subjectDN = new u.XFAObjectArray();
              o3.subjectDNs = new u.XFAObjectArray();
              o3.submit = new u.XFAObjectArray();
              o3.text = new u.XFAObjectArray();
              o3.textEdit = new u.XFAObjectArray();
              o3.time = new u.XFAObjectArray();
              o3.timeStamp = new u.XFAObjectArray();
              o3.toolTip = new u.XFAObjectArray();
              o3.traversal = new u.XFAObjectArray();
              o3.traverse = new u.XFAObjectArray();
              o3.ui = new u.XFAObjectArray();
              o3.validate = new u.XFAObjectArray();
              o3.value = new u.XFAObjectArray();
              o3.variables = new u.XFAObjectArray();
              return o3;
            }
            return _createClass(Proto);
          }(u.XFAObject), ct = function(t3) {
            _inherits(Radial, t3);
            var r3 = _createSuper(Radial);
            function Radial(t4) {
              var o3;
              _classCallCheck(this, Radial);
              (o3 = r3.call(this, S, "radial", true)).id = t4.id || "";
              o3.type = (0, m.getStringOption)(t4.type, ["toEdge", "toCenter"]);
              o3.use = t4.use || "";
              o3.usehref = t4.usehref || "";
              o3.color = null;
              o3.extras = null;
              return o3;
            }
            _createClass(Radial, [{ key: u.$toStyle, value: function value(t4) {
              t4 = t4 ? t4[u.$toStyle]() : "#FFFFFF";
              var r4 = this.color ? this.color[u.$toStyle]() : "#000000", o3 = this.type === "toEdge" ? "".concat(t4, ",").concat(r4) : "".concat(r4, ",").concat(t4);
              return "radial-gradient(circle at center, ".concat(o3, ")");
            } }]);
            return Radial;
          }(u.XFAObject), lt = function(t3) {
            _inherits(Reason, t3);
            var r3 = _createSuper(Reason);
            function Reason(t4) {
              var o3;
              _classCallCheck(this, Reason);
              (o3 = r3.call(this, S, "reason")).id = t4.id || "";
              o3.name = t4.name || "";
              o3.use = t4.use || "";
              o3.usehref = t4.usehref || "";
              return o3;
            }
            return _createClass(Reason);
          }(u.StringObject), ut = function(t3) {
            _inherits(Reasons, t3);
            var r3 = _createSuper(Reasons);
            function Reasons(t4) {
              var o3;
              _classCallCheck(this, Reasons);
              (o3 = r3.call(this, S, "reasons", true)).id = t4.id || "";
              o3.type = (0, m.getStringOption)(t4.type, ["optional", "required"]);
              o3.use = t4.use || "";
              o3.usehref = t4.usehref || "";
              o3.reason = new u.XFAObjectArray();
              return o3;
            }
            return _createClass(Reasons);
          }(u.XFAObject), ft = function(t3) {
            _inherits(Rectangle, t3);
            var r3 = _createSuper(Rectangle);
            function Rectangle(t4) {
              var o3;
              _classCallCheck(this, Rectangle);
              (o3 = r3.call(this, S, "rectangle", true)).hand = (0, m.getStringOption)(t4.hand, ["even", "left", "right"]);
              o3.id = t4.id || "";
              o3.use = t4.use || "";
              o3.usehref = t4.usehref || "";
              o3.corner = new u.XFAObjectArray(4);
              o3.edge = new u.XFAObjectArray(4);
              o3.fill = null;
              return o3;
            }
            _createClass(Rectangle, [{ key: u.$toHTML, value: function value() {
              var t4 = this.edge.children.length ? this.edge.children[0] : new de({}), r4 = t4[u.$toStyle](), o3 = /* @__PURE__ */ Object.create(null);
              this.fill && this.fill.presence === "visible" ? Object.assign(o3, this.fill[u.$toStyle]()) : o3.fill = "transparent";
              o3.strokeWidth = (0, g.measureToString)(t4.presence === "visible" ? t4.thickness : 0);
              o3.stroke = r4.color;
              var c2 = (this.corner.children.length ? this.corner.children[0] : new ae({}))[u.$toStyle](), l2 = { name: "svg", children: [{ name: "rect", attributes: { xmlns: C, width: "100%", height: "100%", x: 0, y: 0, rx: c2.radius, ry: c2.radius, style: o3 } }], attributes: { xmlns: C, style: { overflow: "visible" }, width: "100%", height: "100%" } };
              if (hasMargin(this[u.$getParent]()[u.$getParent]()))
                return m.HTMLResult.success({ name: "div", attributes: { style: { display: "inline", width: "100%", height: "100%" } }, children: [l2] });
              l2.attributes.style.position = "absolute";
              return m.HTMLResult.success(l2);
            } }]);
            return Rectangle;
          }(u.XFAObject), ht = function(t3) {
            _inherits(RefElement, t3);
            var r3 = _createSuper(RefElement);
            function RefElement(t4) {
              var o3;
              _classCallCheck(this, RefElement);
              (o3 = r3.call(this, S, "ref")).id = t4.id || "";
              o3.use = t4.use || "";
              o3.usehref = t4.usehref || "";
              return o3;
            }
            return _createClass(RefElement);
          }(u.StringObject), dt = function(t3) {
            _inherits(Script, t3);
            var r3 = _createSuper(Script);
            function Script(t4) {
              var o3;
              _classCallCheck(this, Script);
              (o3 = r3.call(this, S, "script")).binding = t4.binding || "";
              o3.contentType = t4.contentType || "";
              o3.id = t4.id || "";
              o3.name = t4.name || "";
              o3.runAt = (0, m.getStringOption)(t4.runAt, ["client", "both", "server"]);
              o3.use = t4.use || "";
              o3.usehref = t4.usehref || "";
              return o3;
            }
            return _createClass(Script);
          }(u.StringObject), gt = function(t3) {
            _inherits(SetProperty, t3);
            var r3 = _createSuper(SetProperty);
            function SetProperty(t4) {
              var o3;
              _classCallCheck(this, SetProperty);
              (o3 = r3.call(this, S, "setProperty")).connection = t4.connection || "";
              o3.ref = t4.ref || "";
              o3.target = t4.target || "";
              return o3;
            }
            return _createClass(SetProperty);
          }(u.XFAObject);
          r2.SetProperty = gt;
          var mt = function(t3) {
            _inherits(SignData, t3);
            var r3 = _createSuper(SignData);
            function SignData(t4) {
              var o3;
              _classCallCheck(this, SignData);
              (o3 = r3.call(this, S, "signData", true)).id = t4.id || "";
              o3.operation = (0, m.getStringOption)(t4.operation, ["sign", "clear", "verify"]);
              o3.ref = t4.ref || "";
              o3.target = t4.target || "";
              o3.use = t4.use || "";
              o3.usehref = t4.usehref || "";
              o3.filter = null;
              o3.manifest = null;
              return o3;
            }
            return _createClass(SignData);
          }(u.XFAObject), yt = function(t3) {
            _inherits(Signature, t3);
            var r3 = _createSuper(Signature);
            function Signature(t4) {
              var o3;
              _classCallCheck(this, Signature);
              (o3 = r3.call(this, S, "signature", true)).id = t4.id || "";
              o3.type = (0, m.getStringOption)(t4.type, ["PDF1.3", "PDF1.6"]);
              o3.use = t4.use || "";
              o3.usehref = t4.usehref || "";
              o3.border = null;
              o3.extras = null;
              o3.filter = null;
              o3.manifest = null;
              o3.margin = null;
              return o3;
            }
            return _createClass(Signature);
          }(u.XFAObject), vt = function(t3) {
            _inherits(Signing, t3);
            var r3 = _createSuper(Signing);
            function Signing(t4) {
              var o3;
              _classCallCheck(this, Signing);
              (o3 = r3.call(this, S, "signing", true)).id = t4.id || "";
              o3.type = (0, m.getStringOption)(t4.type, ["optional", "required"]);
              o3.use = t4.use || "";
              o3.usehref = t4.usehref || "";
              o3.certificate = new u.XFAObjectArray();
              return o3;
            }
            return _createClass(Signing);
          }(u.XFAObject), bt = function(t3) {
            _inherits(Solid, t3);
            var r3 = _createSuper(Solid);
            function Solid(t4) {
              var o3;
              _classCallCheck(this, Solid);
              (o3 = r3.call(this, S, "solid", true)).id = t4.id || "";
              o3.use = t4.use || "";
              o3.usehref = t4.usehref || "";
              o3.extras = null;
              return o3;
            }
            _createClass(Solid, [{ key: u.$toStyle, value: function value(t4) {
              return t4 ? t4[u.$toStyle]() : "#FFFFFF";
            } }]);
            return Solid;
          }(u.XFAObject), kt = function(t3) {
            _inherits(Speak, t3);
            var r3 = _createSuper(Speak);
            function Speak(t4) {
              var o3;
              _classCallCheck(this, Speak);
              (o3 = r3.call(this, S, "speak")).disable = (0, m.getInteger)({ data: t4.disable, defaultValue: 0, validate: function validate(t5) {
                return t5 === 1;
              } });
              o3.id = t4.id || "";
              o3.priority = (0, m.getStringOption)(t4.priority, ["custom", "caption", "name", "toolTip"]);
              o3.rid = t4.rid || "";
              o3.use = t4.use || "";
              o3.usehref = t4.usehref || "";
              return o3;
            }
            return _createClass(Speak);
          }(u.StringObject), _t = function(t3) {
            _inherits(Stipple, t3);
            var r3 = _createSuper(Stipple);
            function Stipple(t4) {
              var o3;
              _classCallCheck(this, Stipple);
              (o3 = r3.call(this, S, "stipple", true)).id = t4.id || "";
              o3.rate = (0, m.getInteger)({ data: t4.rate, defaultValue: 50, validate: function validate(t5) {
                return t5 >= 0 && t5 <= 100;
              } });
              o3.use = t4.use || "";
              o3.usehref = t4.usehref || "";
              o3.color = null;
              o3.extras = null;
              return o3;
            }
            _createClass(Stipple, [{ key: u.$toStyle, value: function value(t4) {
              var r4 = this.rate / 100;
              return y.Util.makeHexColor(Math.round(t4.value.r * (1 - r4) + this.value.r * r4), Math.round(t4.value.g * (1 - r4) + this.value.g * r4), Math.round(t4.value.b * (1 - r4) + this.value.b * r4));
            } }]);
            return Stipple;
          }(u.XFAObject), wt = function(t3) {
            _inherits(Subform, t3);
            var r3 = _createSuper(Subform);
            function Subform(t4) {
              var o3;
              _classCallCheck(this, Subform);
              (o3 = r3.call(this, S, "subform", true)).access = (0, m.getStringOption)(t4.access, ["open", "nonInteractive", "protected", "readOnly"]);
              o3.allowMacro = (0, m.getInteger)({ data: t4.allowMacro, defaultValue: 0, validate: function validate(t5) {
                return t5 === 1;
              } });
              o3.anchorType = (0, m.getStringOption)(t4.anchorType, ["topLeft", "bottomCenter", "bottomLeft", "bottomRight", "middleCenter", "middleLeft", "middleRight", "topCenter", "topRight"]);
              o3.colSpan = (0, m.getInteger)({ data: t4.colSpan, defaultValue: 1, validate: function validate(t5) {
                return t5 >= 1 || t5 === -1;
              } });
              o3.columnWidths = (t4.columnWidths || "").trim().split(/\s+/).map(function(t5) {
                return t5 === "-1" ? -1 : (0, m.getMeasurement)(t5);
              });
              o3.h = t4.h ? (0, m.getMeasurement)(t4.h) : "";
              o3.hAlign = (0, m.getStringOption)(t4.hAlign, ["left", "center", "justify", "justifyAll", "radix", "right"]);
              o3.id = t4.id || "";
              o3.layout = (0, m.getStringOption)(t4.layout, ["position", "lr-tb", "rl-row", "rl-tb", "row", "table", "tb"]);
              o3.locale = t4.locale || "";
              o3.maxH = (0, m.getMeasurement)(t4.maxH, "0pt");
              o3.maxW = (0, m.getMeasurement)(t4.maxW, "0pt");
              o3.mergeMode = (0, m.getStringOption)(t4.mergeMode, ["consumeData", "matchTemplate"]);
              o3.minH = (0, m.getMeasurement)(t4.minH, "0pt");
              o3.minW = (0, m.getMeasurement)(t4.minW, "0pt");
              o3.name = t4.name || "";
              o3.presence = (0, m.getStringOption)(t4.presence, ["visible", "hidden", "inactive", "invisible"]);
              o3.relevant = (0, m.getRelevant)(t4.relevant);
              o3.restoreState = (0, m.getStringOption)(t4.restoreState, ["manual", "auto"]);
              o3.scope = (0, m.getStringOption)(t4.scope, ["name", "none"]);
              o3.use = t4.use || "";
              o3.usehref = t4.usehref || "";
              o3.w = t4.w ? (0, m.getMeasurement)(t4.w) : "";
              o3.x = (0, m.getMeasurement)(t4.x, "0pt");
              o3.y = (0, m.getMeasurement)(t4.y, "0pt");
              o3.assist = null;
              o3.bind = null;
              o3.bookend = null;
              o3.border = null;
              o3.break = null;
              o3.calculate = null;
              o3.desc = null;
              o3.extras = null;
              o3.keep = null;
              o3.margin = null;
              o3.occur = null;
              o3.overflow = null;
              o3.pageSet = null;
              o3.para = null;
              o3.traversal = null;
              o3.validate = null;
              o3.variables = null;
              o3.area = new u.XFAObjectArray();
              o3.breakAfter = new u.XFAObjectArray();
              o3.breakBefore = new u.XFAObjectArray();
              o3.connect = new u.XFAObjectArray();
              o3.draw = new u.XFAObjectArray();
              o3.event = new u.XFAObjectArray();
              o3.exObject = new u.XFAObjectArray();
              o3.exclGroup = new u.XFAObjectArray();
              o3.field = new u.XFAObjectArray();
              o3.proto = new u.XFAObjectArray();
              o3.setProperty = new u.XFAObjectArray();
              o3.subform = new u.XFAObjectArray();
              o3.subformSet = new u.XFAObjectArray();
              return o3;
            }
            _createClass(Subform, [{ key: u.$getSubformParent, value: function value() {
              var t4 = this[u.$getParent]();
              return t4 instanceof St ? t4[u.$getSubformParent]() : t4;
            } }, { key: u.$isBindable, value: function value() {
              return true;
            } }, { key: u.$isThereMoreWidth, value: function value() {
              return this.layout.endsWith("-tb") && this[u.$extra].attempt === 0 && this[u.$extra].numberInLine > 0 || this[u.$getParent]()[u.$isThereMoreWidth]();
            } }, { key: u.$getContainedChildren, value: l.default.mark(function value() {
              return l.default.wrap(function value$(t4) {
                for (; ; )
                  switch (t4.prev = t4.next) {
                    case 0:
                      return t4.delegateYield(getContainedChildren(this), "t0", 1);
                    case 1:
                    case "end":
                      return t4.stop();
                  }
              }, value, this);
            }) }, { key: u.$flushHTML, value: function value() {
              return (0, d.flushHTML)(this);
            } }, { key: u.$addHTML, value: function value(t4, r4) {
              (0, d.addHTML)(this, t4, r4);
            } }, { key: u.$getAvailableSpace, value: function value() {
              return (0, d.getAvailableSpace)(this);
            } }, { key: u.$isSplittable, value: function value() {
              var t4 = this[u.$getSubformParent]();
              if (!t4[u.$isSplittable]())
                return false;
              if (this[u.$extra]._isSplittable !== void 0)
                return this[u.$extra]._isSplittable;
              if (this.layout === "position" || this.layout.includes("row")) {
                this[u.$extra]._isSplittable = false;
                return false;
              }
              if (this.keep && this.keep.intact !== "none") {
                this[u.$extra]._isSplittable = false;
                return false;
              }
              if (t4.layout && t4.layout.endsWith("-tb") && t4[u.$extra].numberInLine !== 0)
                return false;
              this[u.$extra]._isSplittable = true;
              return true;
            } }, { key: u.$toHTML, value: function value(t4) {
              setTabIndex(this);
              if (this.break) {
                if (this.break.after !== "auto" || this.break.afterTarget !== "") {
                  var r4 = new q({ targetType: this.break.after, target: this.break.afterTarget, startNew: this.break.startNew.toString() });
                  r4[u.$globalData] = this[u.$globalData];
                  this[u.$appendChild](r4);
                  this.breakAfter.push(r4);
                }
                if (this.break.before !== "auto" || this.break.beforeTarget !== "") {
                  var o3 = new G({ targetType: this.break.before, target: this.break.beforeTarget, startNew: this.break.startNew.toString() });
                  o3[u.$globalData] = this[u.$globalData];
                  this[u.$appendChild](o3);
                  this.breakBefore.push(o3);
                }
                if (this.break.overflowTarget !== "") {
                  var c2 = new et({ target: this.break.overflowTarget, leader: this.break.overflowLeader, trailer: this.break.overflowTrailer });
                  c2[u.$globalData] = this[u.$globalData];
                  this[u.$appendChild](c2);
                  this.overflow.push(c2);
                }
                this[u.$removeChild](this.break);
                this.break = null;
              }
              if (this.presence === "hidden" || this.presence === "inactive")
                return m.HTMLResult.EMPTY;
              (this.breakBefore.children.length > 1 || this.breakAfter.children.length > 1) && (0, y.warn)("XFA - Several breakBefore or breakAfter in subforms: please file a bug.");
              if (this.breakBefore.children.length >= 1) {
                var l2 = this.breakBefore.children[0];
                if (handleBreak(l2))
                  return m.HTMLResult.breakNode(l2);
              }
              if (this[u.$extra] && this[u.$extra].afterBreakAfter)
                return m.HTMLResult.EMPTY;
              (0, g.fixDimensions)(this);
              var h2 = [], v2 = { id: this[u.$uid], class: [] };
              (0, g.setAccess)(this, v2.class);
              this[u.$extra] || (this[u.$extra] = /* @__PURE__ */ Object.create(null));
              Object.assign(this[u.$extra], { children: h2, line: null, attributes: v2, attempt: 0, numberInLine: 0, availableSpace: { width: Math.min(this.w || 1 / 0, t4.width), height: Math.min(this.h || 1 / 0, t4.height) }, width: 0, height: 0, prevHeight: 0, currentWidth: 0 });
              var k2 = this[u.$getTemplateRoot](), _2 = k2[u.$extra].noLayoutFailure, w2 = this[u.$isSplittable]();
              w2 || setFirstUnsplittable(this);
              if (!(0, d.checkDimensions)(this, t4))
                return m.HTMLResult.FAILURE;
              var S2 = /* @__PURE__ */ new Set(["area", "draw", "exclGroup", "field", "subform", "subformSet"]);
              if (this.layout.includes("row")) {
                var C2 = this[u.$getSubformParent]().columnWidths;
                if (Array.isArray(C2) && C2.length > 0) {
                  this[u.$extra].columnWidths = C2;
                  this[u.$extra].currentColumn = 0;
                }
              }
              var x2 = (0, g.toStyle)(this, "anchorType", "dimensions", "position", "presence", "border", "margin", "hAlign"), O2 = ["xfaSubform"], T2 = (0, g.layoutClass)(this);
              T2 && O2.push(T2);
              v2.style = x2;
              v2.class = O2;
              this.name && (v2.xfaName = this.name);
              if (this.overflow) {
                var E2 = this.overflow[u.$getExtra]();
                if (E2.addLeader) {
                  E2.addLeader = false;
                  handleOverflow(this, E2.leader, t4);
                }
              }
              this[u.$pushPara]();
              for (var M2 = this.layout === "lr-tb" || this.layout === "rl-tb", R2 = M2 ? 2 : 1; this[u.$extra].attempt < R2; this[u.$extra].attempt++) {
                M2 && this[u.$extra].attempt === 1 && (this[u.$extra].numberInLine = 0);
                var D2 = this[u.$childrenToHTML]({ filter: S2, include: true });
                if (D2.success)
                  break;
                if (D2.isBreak()) {
                  this[u.$popPara]();
                  return D2;
                }
                if (M2 && this[u.$extra].attempt === 0 && this[u.$extra].numberInLine === 0 && !k2[u.$extra].noLayoutFailure) {
                  this[u.$extra].attempt = R2;
                  break;
                }
              }
              this[u.$popPara]();
              w2 || unsetFirstUnsplittable(this);
              k2[u.$extra].noLayoutFailure = _2;
              if (this[u.$extra].attempt === R2) {
                this.overflow && (this[u.$getTemplateRoot]()[u.$extra].overflowNode = this.overflow);
                w2 || delete this[u.$extra];
                return m.HTMLResult.FAILURE;
              }
              if (this.overflow) {
                var j2 = this.overflow[u.$getExtra]();
                if (j2.addTrailer) {
                  j2.addTrailer = false;
                  handleOverflow(this, j2.trailer, t4);
                }
              }
              var L2 = 0, N2 = 0;
              if (this.margin) {
                L2 = this.margin.leftInset + this.margin.rightInset;
                N2 = this.margin.topInset + this.margin.bottomInset;
              }
              var U2 = Math.max(this[u.$extra].width + L2, this.w || 0), H2 = Math.max(this[u.$extra].height + N2, this.h || 0), $2 = [this.x, this.y, U2, H2];
              this.w === "" && (x2.width = (0, g.measureToString)(U2));
              this.h === "" && (x2.height = (0, g.measureToString)(H2));
              if ((x2.width === "0px" || x2.height === "0px") && h2.length === 0)
                return m.HTMLResult.EMPTY;
              var X2 = { name: "div", attributes: v2, children: h2 };
              applyAssist(this, v2);
              var z2 = m.HTMLResult.success((0, g.createWrapper)(this, X2), $2);
              if (this.breakAfter.children.length >= 1) {
                var W2 = this.breakAfter.children[0];
                if (handleBreak(W2)) {
                  this[u.$extra].afterBreakAfter = z2;
                  return m.HTMLResult.breakNode(W2);
                }
              }
              delete this[u.$extra];
              return z2;
            } }]);
            return Subform;
          }(u.XFAObject), St = function(t3) {
            _inherits(SubformSet, t3);
            var r3 = _createSuper(SubformSet);
            function SubformSet(t4) {
              var o3;
              _classCallCheck(this, SubformSet);
              (o3 = r3.call(this, S, "subformSet", true)).id = t4.id || "";
              o3.name = t4.name || "";
              o3.relation = (0, m.getStringOption)(t4.relation, ["ordered", "choice", "unordered"]);
              o3.relevant = (0, m.getRelevant)(t4.relevant);
              o3.use = t4.use || "";
              o3.usehref = t4.usehref || "";
              o3.bookend = null;
              o3.break = null;
              o3.desc = null;
              o3.extras = null;
              o3.occur = null;
              o3.overflow = null;
              o3.breakAfter = new u.XFAObjectArray();
              o3.breakBefore = new u.XFAObjectArray();
              o3.subform = new u.XFAObjectArray();
              o3.subformSet = new u.XFAObjectArray();
              return o3;
            }
            _createClass(SubformSet, [{ key: u.$getContainedChildren, value: l.default.mark(function value() {
              return l.default.wrap(function value$(t4) {
                for (; ; )
                  switch (t4.prev = t4.next) {
                    case 0:
                      return t4.delegateYield(getContainedChildren(this), "t0", 1);
                    case 1:
                    case "end":
                      return t4.stop();
                  }
              }, value, this);
            }) }, { key: u.$getSubformParent, value: function value() {
              for (var t4 = this[u.$getParent](); !(t4 instanceof wt); )
                t4 = t4[u.$getParent]();
              return t4;
            } }, { key: u.$isBindable, value: function value() {
              return true;
            } }]);
            return SubformSet;
          }(u.XFAObject), Ct = function(t3) {
            _inherits(SubjectDN, t3);
            var r3 = _createSuper(SubjectDN);
            function SubjectDN(t4) {
              var o3;
              _classCallCheck(this, SubjectDN);
              (o3 = r3.call(this, S, "subjectDN")).delimiter = t4.delimiter || ",";
              o3.id = t4.id || "";
              o3.name = t4.name || "";
              o3.use = t4.use || "";
              o3.usehref = t4.usehref || "";
              return o3;
            }
            _createClass(SubjectDN, [{ key: u.$finalize, value: function value() {
              this[u.$content] = new Map(this[u.$content].split(this.delimiter).map(function(t4) {
                (t4 = t4.split("=", 2))[0] = t4[0].trim();
                return t4;
              }));
            } }]);
            return SubjectDN;
          }(u.ContentObject), xt = function(t3) {
            _inherits(SubjectDNs, t3);
            var r3 = _createSuper(SubjectDNs);
            function SubjectDNs(t4) {
              var o3;
              _classCallCheck(this, SubjectDNs);
              (o3 = r3.call(this, S, "subjectDNs", true)).id = t4.id || "";
              o3.type = (0, m.getStringOption)(t4.type, ["optional", "required"]);
              o3.use = t4.use || "";
              o3.usehref = t4.usehref || "";
              o3.subjectDN = new u.XFAObjectArray();
              return o3;
            }
            return _createClass(SubjectDNs);
          }(u.XFAObject), Ot = function(t3) {
            _inherits(Submit, t3);
            var r3 = _createSuper(Submit);
            function Submit(t4) {
              var o3;
              _classCallCheck(this, Submit);
              (o3 = r3.call(this, S, "submit", true)).embedPDF = (0, m.getInteger)({ data: t4.embedPDF, defaultValue: 0, validate: function validate(t5) {
                return t5 === 1;
              } });
              o3.format = (0, m.getStringOption)(t4.format, ["xdp", "formdata", "pdf", "urlencoded", "xfd", "xml"]);
              o3.id = t4.id || "";
              o3.target = t4.target || "";
              o3.textEncoding = (0, m.getKeyword)({ data: t4.textEncoding ? t4.textEncoding.toLowerCase() : "", defaultValue: "", validate: function validate(t5) {
                return ["utf-8", "big-five", "fontspecific", "gbk", "gb-18030", "gb-2312", "ksc-5601", "none", "shift-jis", "ucs-2", "utf-16"].includes(t5) || t5.match(/iso-8859-\d{2}/);
              } });
              o3.use = t4.use || "";
              o3.usehref = t4.usehref || "";
              o3.xdpContent = t4.xdpContent || "";
              o3.encrypt = null;
              o3.encryptData = new u.XFAObjectArray();
              o3.signData = new u.XFAObjectArray();
              return o3;
            }
            return _createClass(Submit);
          }(u.XFAObject), At = function(t3) {
            _inherits(Template, t3);
            var r3 = _createSuper(Template);
            function Template(t4) {
              var o3;
              _classCallCheck(this, Template);
              (o3 = r3.call(this, S, "template", true)).baseProfile = (0, m.getStringOption)(t4.baseProfile, ["full", "interactiveForms"]);
              o3.extras = null;
              o3.subform = new u.XFAObjectArray();
              return o3;
            }
            _createClass(Template, [{ key: u.$finalize, value: function value() {
              this.subform.children.length === 0 && (0, y.warn)("XFA - No subforms in template node.");
              this.subform.children.length >= 2 && (0, y.warn)("XFA - Several subforms in template node: please file a bug.");
              this[u.$tabIndex] = 5e3;
            } }, { key: u.$isSplittable, value: function value() {
              return true;
            } }, { key: u.$searchNode, value: function value(t4, r4) {
              return t4.startsWith("#") ? [this[u.$ids].get(t4.slice(1))] : (0, _.searchNode)(this, r4, t4, true, true);
            } }, { key: u.$toPages, value: l.default.mark(function value() {
              var t4, r4, o3, c2, h2, d2, g2, v2, k2, _2, w2, S2, C2, x2, O2, T2, E2 = this;
              return l.default.wrap(function value$(M2) {
                for (; ; )
                  switch (M2.prev = M2.next) {
                    case 0:
                      if (this.subform.children.length) {
                        M2.next = 2;
                        break;
                      }
                      return M2.abrupt("return", m.HTMLResult.success({ name: "div", children: [] }));
                    case 2:
                      this[u.$extra] = { overflowNode: null, firstUnsplittable: null, currentContentArea: null, currentPageArea: null, noLayoutFailure: false, pageNumber: 1, pagePosition: "first", oddOrEven: "odd", blankOrNotBlank: "nonBlank", paraStack: [] };
                      (t4 = this.subform.children[0]).pageSet[u.$cleanPage]();
                      r4 = t4.pageSet.pageArea.children;
                      o3 = { name: "div", children: [] };
                      c2 = null;
                      h2 = null;
                      d2 = null;
                      if (t4.breakBefore.children.length >= 1) {
                        h2 = t4.breakBefore.children[0];
                        d2 = h2.target;
                      } else if (t4.subform.children.length >= 1 && t4.subform.children[0].breakBefore.children.length >= 1) {
                        h2 = t4.subform.children[0].breakBefore.children[0];
                        d2 = h2.target;
                      } else if (t4.break && t4.break.beforeTarget) {
                        h2 = t4.break;
                        d2 = h2.beforeTarget;
                      } else if (t4.subform.children.length >= 1 && t4.subform.children[0].break && t4.subform.children[0].break.beforeTarget) {
                        h2 = t4.subform.children[0].break;
                        d2 = h2.beforeTarget;
                      }
                      if (h2 && (g2 = this[u.$searchNode](d2, h2[u.$getParent]())) instanceof tt) {
                        c2 = g2;
                        h2[u.$extra] = {};
                      }
                      c2 || (c2 = r4[0]);
                      c2[u.$extra] = { numberOfUse: 1 };
                      (v2 = c2[u.$getParent]())[u.$extra] = { numberOfUse: 1, pageIndex: v2.pageArea.children.indexOf(c2), pageSetIndex: 0 };
                      _2 = null;
                      w2 = null;
                      S2 = true;
                      C2 = 0;
                      x2 = 0;
                      O2 = l.default.mark(function _loop() {
                        var r5, h3, d3, g3, m2, v3, O3, T3, M3, R2, D2;
                        return l.default.wrap(function _loop$(l2) {
                          for (; ; )
                            switch (l2.prev = l2.next) {
                              case 0:
                                if (S2) {
                                  l2.next = 7;
                                  break;
                                }
                                o3.children.pop();
                                if (++C2 != 3) {
                                  l2.next = 5;
                                  break;
                                }
                                (0, y.warn)("XFA - Something goes wrong: please file a bug.");
                                return l2.abrupt("return", { v: o3 });
                              case 5:
                                l2.next = 8;
                                break;
                              case 7:
                                C2 = 0;
                              case 8:
                                k2 = null;
                                E2[u.$extra].currentPageArea = c2;
                                r5 = c2[u.$toHTML]().html;
                                o3.children.push(r5);
                                if (_2) {
                                  E2[u.$extra].noLayoutFailure = true;
                                  r5.children.push(_2[u.$toHTML](c2[u.$extra].space).html);
                                  _2 = null;
                                }
                                if (w2) {
                                  E2[u.$extra].noLayoutFailure = true;
                                  r5.children.push(w2[u.$toHTML](c2[u.$extra].space).html);
                                  w2 = null;
                                }
                                h3 = c2.contentArea.children;
                                d3 = r5.children.filter(function(t5) {
                                  return t5.attributes.class.includes("xfaContentarea");
                                });
                                S2 = false;
                                E2[u.$extra].firstUnsplittable = null;
                                E2[u.$extra].noLayoutFailure = false;
                                g3 = function flush(r6) {
                                  var o4 = t4[u.$flushHTML]();
                                  if (o4) {
                                    S2 = S2 || o4.children && o4.children.length !== 0;
                                    d3[r6].children.push(o4);
                                  }
                                };
                                m2 = x2, v3 = h3.length;
                              case 21:
                                if (!(m2 < v3)) {
                                  l2.next = 48;
                                  break;
                                }
                                O3 = E2[u.$extra].currentContentArea = h3[m2];
                                T3 = { width: O3.w, height: O3.h };
                                x2 = 0;
                                if (_2) {
                                  d3[m2].children.push(_2[u.$toHTML](T3).html);
                                  _2 = null;
                                }
                                if (w2) {
                                  d3[m2].children.push(w2[u.$toHTML](T3).html);
                                  w2 = null;
                                }
                                if (!(M3 = t4[u.$toHTML](T3)).success) {
                                  l2.next = 31;
                                  break;
                                }
                                if (M3.html) {
                                  S2 = S2 || M3.html.children && M3.html.children.length !== 0;
                                  d3[m2].children.push(M3.html);
                                } else
                                  !S2 && o3.children.length > 1 && o3.children.pop();
                                return l2.abrupt("return", { v: o3 });
                              case 31:
                                if (!M3.isBreak()) {
                                  l2.next = 40;
                                  break;
                                }
                                R2 = M3.breakNode;
                                g3(m2);
                                if (R2.targetType !== "auto") {
                                  l2.next = 36;
                                  break;
                                }
                                return l2.abrupt("continue", 45);
                              case 36:
                                R2.leader && (_2 = (_2 = E2[u.$searchNode](R2.leader, R2[u.$getParent]())) ? _2[0] : null);
                                R2.trailer && (w2 = (w2 = E2[u.$searchNode](R2.trailer, R2[u.$getParent]())) ? w2[0] : null);
                                if (R2.targetType === "pageArea") {
                                  k2 = R2[u.$extra].target;
                                  m2 = 1 / 0;
                                } else if (R2[u.$extra].target) {
                                  k2 = R2[u.$extra].target;
                                  x2 = R2[u.$extra].index + 1;
                                  m2 = 1 / 0;
                                } else
                                  m2 = R2[u.$extra].index;
                                return l2.abrupt("continue", 45);
                              case 40:
                                if (!E2[u.$extra].overflowNode) {
                                  l2.next = 44;
                                  break;
                                }
                                D2 = function() {
                                  var t5 = E2[u.$extra].overflowNode;
                                  E2[u.$extra].overflowNode = null;
                                  var r6 = t5[u.$getExtra](), o4 = r6.target;
                                  r6.addLeader = r6.leader !== null;
                                  r6.addTrailer = r6.trailer !== null;
                                  g3(m2);
                                  var c3 = m2;
                                  m2 = 1 / 0;
                                  if (o4 instanceof tt)
                                    k2 = o4;
                                  else if (o4 instanceof re) {
                                    var l3 = h3.findIndex(function(t6) {
                                      return t6 === o4;
                                    });
                                    if (l3 !== -1)
                                      l3 > c3 ? m2 = l3 - 1 : x2 = l3;
                                    else {
                                      k2 = o4[u.$getParent]();
                                      x2 = k2.contentArea.children.findIndex(function(t6) {
                                        return t6 === o4;
                                      });
                                    }
                                  }
                                  return "continue";
                                }();
                                if (D2 !== "continue") {
                                  l2.next = 44;
                                  break;
                                }
                                return l2.abrupt("continue", 45);
                              case 44:
                                g3(m2);
                              case 45:
                                m2++;
                                l2.next = 21;
                                break;
                              case 48:
                                E2[u.$extra].pageNumber += 1;
                                k2 && (k2[u.$isUsable]() ? k2[u.$extra].numberOfUse += 1 : k2 = null);
                                c2 = k2 || c2[u.$getNextPage]();
                                l2.next = 53;
                                return null;
                              case 53:
                              case "end":
                                return l2.stop();
                            }
                        }, _loop);
                      });
                    case 22:
                      0;
                      return M2.delegateYield(O2(), "t0", 24);
                    case 24:
                      if (_typeof(T2 = M2.t0) !== "object") {
                        M2.next = 27;
                        break;
                      }
                      return M2.abrupt("return", T2.v);
                    case 27:
                      M2.next = 22;
                      break;
                    case 29:
                    case "end":
                      return M2.stop();
                  }
              }, value, this);
            }) }]);
            return Template;
          }(u.XFAObject);
          r2.Template = At;
          var Pt = function(t3) {
            _inherits(Text, t3);
            var r3 = _createSuper(Text);
            function Text(t4) {
              var o3;
              _classCallCheck(this, Text);
              (o3 = r3.call(this, S, "text")).id = t4.id || "";
              o3.maxChars = (0, m.getInteger)({ data: t4.maxChars, defaultValue: 0, validate: function validate(t5) {
                return t5 >= 0;
              } });
              o3.name = t4.name || "";
              o3.rid = t4.rid || "";
              o3.use = t4.use || "";
              o3.usehref = t4.usehref || "";
              return o3;
            }
            _createClass(Text, [{ key: u.$acceptWhitespace, value: function value() {
              return true;
            } }, { key: u.$onChild, value: function value(t4) {
              if (t4[u.$namespaceId] === h.NamespaceIds.xhtml.id) {
                this[u.$content] = t4;
                return true;
              }
              (0, y.warn)("XFA - Invalid content in Text: ".concat(t4[u.$nodeName], "."));
              return false;
            } }, { key: u.$onText, value: function value(t4) {
              this[u.$content] instanceof u.XFAObject || _get(_getPrototypeOf(Text.prototype), u.$onText, this).call(this, t4);
            } }, { key: u.$finalize, value: function value() {
              typeof this[u.$content] == "string" && (this[u.$content] = this[u.$content].replace(/\r\n/g, "\n"));
            } }, { key: u.$getExtra, value: function value() {
              return typeof this[u.$content] == "string" ? this[u.$content].split(/[\u2029\u2028\n]/).reduce(function(t4, r4) {
                r4 && t4.push(r4);
                return t4;
              }, []).join("\n") : this[u.$content][u.$text]();
            } }, { key: u.$toHTML, value: function value(t4) {
              if (typeof this[u.$content] == "string") {
                var r4 = valueToHtml(this[u.$content]).html;
                if (this[u.$content].includes("\u2029")) {
                  r4.name = "div";
                  r4.children = [];
                  this[u.$content].split("\u2029").map(function(t5) {
                    return t5.split(/[\u2028\n]/).reduce(function(t6, r5) {
                      t6.push({ name: "span", value: r5 }, { name: "br" });
                      return t6;
                    }, []);
                  }).forEach(function(t5) {
                    r4.children.push({ name: "p", children: t5 });
                  });
                } else if (/[\u2028\n]/.test(this[u.$content])) {
                  r4.name = "div";
                  r4.children = [];
                  this[u.$content].split(/[\u2028\n]/).forEach(function(t5) {
                    r4.children.push({ name: "span", value: t5 }, { name: "br" });
                  });
                }
                return m.HTMLResult.success(r4);
              }
              return this[u.$content][u.$toHTML](t4);
            } }]);
            return Text;
          }(u.ContentObject);
          r2.Text = Pt;
          var Tt = function(t3) {
            _inherits(TextEdit, t3);
            var r3 = _createSuper(TextEdit);
            function TextEdit(t4) {
              var o3;
              _classCallCheck(this, TextEdit);
              (o3 = r3.call(this, S, "textEdit", true)).allowRichText = (0, m.getInteger)({ data: t4.allowRichText, defaultValue: 0, validate: function validate(t5) {
                return t5 === 1;
              } });
              o3.hScrollPolicy = (0, m.getStringOption)(t4.hScrollPolicy, ["auto", "off", "on"]);
              o3.id = t4.id || "";
              o3.multiLine = (0, m.getInteger)({ data: t4.multiLine, defaultValue: "", validate: function validate(t5) {
                return t5 === 0 || t5 === 1;
              } });
              o3.use = t4.use || "";
              o3.usehref = t4.usehref || "";
              o3.vScrollPolicy = (0, m.getStringOption)(t4.vScrollPolicy, ["auto", "off", "on"]);
              o3.border = null;
              o3.comb = null;
              o3.extras = null;
              o3.margin = null;
              return o3;
            }
            _createClass(TextEdit, [{ key: u.$toHTML, value: function value(t4) {
              var r4, o3 = (0, g.toStyle)(this, "border", "font", "margin"), c2 = this[u.$getParent]()[u.$getParent]();
              this.multiLine === "" && (this.multiLine = c2 instanceof he ? 1 : 0);
              r4 = this.multiLine === 1 ? { name: "textarea", attributes: { dataId: c2[u.$data] && c2[u.$data][u.$uid] || c2[u.$uid], fieldId: c2[u.$uid], class: ["xfaTextfield"], style: o3, "aria-label": ariaLabel(c2) } } : { name: "input", attributes: { type: "text", dataId: c2[u.$data] && c2[u.$data][u.$uid] || c2[u.$uid], fieldId: c2[u.$uid], class: ["xfaTextfield"], style: o3, "aria-label": ariaLabel(c2) } };
              return m.HTMLResult.success({ name: "label", attributes: { class: ["xfaLabel"] }, children: [r4] });
            } }]);
            return TextEdit;
          }(u.XFAObject), Ft = function(t3) {
            _inherits(Time, t3);
            var r3 = _createSuper(Time);
            function Time(t4) {
              var o3;
              _classCallCheck(this, Time);
              (o3 = r3.call(this, S, "time")).id = t4.id || "";
              o3.name = t4.name || "";
              o3.use = t4.use || "";
              o3.usehref = t4.usehref || "";
              return o3;
            }
            _createClass(Time, [{ key: u.$finalize, value: function value() {
              var t4 = this[u.$content].trim();
              this[u.$content] = t4 ? new Date(t4) : null;
            } }, { key: u.$toHTML, value: function value(t4) {
              return valueToHtml(this[u.$content] ? this[u.$content].toString() : "");
            } }]);
            return Time;
          }(u.StringObject), It = function(t3) {
            _inherits(TimeStamp, t3);
            var r3 = _createSuper(TimeStamp);
            function TimeStamp(t4) {
              var o3;
              _classCallCheck(this, TimeStamp);
              (o3 = r3.call(this, S, "timeStamp")).id = t4.id || "";
              o3.server = t4.server || "";
              o3.type = (0, m.getStringOption)(t4.type, ["optional", "required"]);
              o3.use = t4.use || "";
              o3.usehref = t4.usehref || "";
              return o3;
            }
            return _createClass(TimeStamp);
          }(u.XFAObject), Et = function(t3) {
            _inherits(ToolTip, t3);
            var r3 = _createSuper(ToolTip);
            function ToolTip(t4) {
              var o3;
              _classCallCheck(this, ToolTip);
              (o3 = r3.call(this, S, "toolTip")).id = t4.id || "";
              o3.rid = t4.rid || "";
              o3.use = t4.use || "";
              o3.usehref = t4.usehref || "";
              return o3;
            }
            return _createClass(ToolTip);
          }(u.StringObject), Mt = function(t3) {
            _inherits(Traversal, t3);
            var r3 = _createSuper(Traversal);
            function Traversal(t4) {
              var o3;
              _classCallCheck(this, Traversal);
              (o3 = r3.call(this, S, "traversal", true)).id = t4.id || "";
              o3.use = t4.use || "";
              o3.usehref = t4.usehref || "";
              o3.extras = null;
              o3.traverse = new u.XFAObjectArray();
              return o3;
            }
            return _createClass(Traversal);
          }(u.XFAObject), Rt = function(t3) {
            _inherits(Traverse, t3);
            var r3 = _createSuper(Traverse);
            function Traverse(t4) {
              var o3;
              _classCallCheck(this, Traverse);
              (o3 = r3.call(this, S, "traverse", true)).id = t4.id || "";
              o3.operation = (0, m.getStringOption)(t4.operation, ["next", "back", "down", "first", "left", "right", "up"]);
              o3.ref = t4.ref || "";
              o3.use = t4.use || "";
              o3.usehref = t4.usehref || "";
              o3.extras = null;
              o3.script = null;
              return o3;
            }
            _createClass(Traverse, [{ key: "name", get: function get() {
              return this.operation;
            } }, { key: u.$isTransparent, value: function value() {
              return false;
            } }]);
            return Traverse;
          }(u.XFAObject), Dt = function(t3) {
            _inherits(Ui, t3);
            var r3 = _createSuper(Ui);
            function Ui(t4) {
              var o3;
              _classCallCheck(this, Ui);
              (o3 = r3.call(this, S, "ui", true)).id = t4.id || "";
              o3.use = t4.use || "";
              o3.usehref = t4.usehref || "";
              o3.extras = null;
              o3.picture = null;
              o3.barcode = null;
              o3.button = null;
              o3.checkButton = null;
              o3.choiceList = null;
              o3.dateTimeEdit = null;
              o3.defaultUi = null;
              o3.imageEdit = null;
              o3.numericEdit = null;
              o3.passwordEdit = null;
              o3.signature = null;
              o3.textEdit = null;
              return o3;
            }
            _createClass(Ui, [{ key: u.$getExtra, value: function value() {
              if (this[u.$extra] === void 0) {
                var t4, r4 = _createForOfIteratorHelper(Object.getOwnPropertyNames(this));
                try {
                  for (r4.s(); !(t4 = r4.n()).done; ) {
                    var o3 = t4.value;
                    if (o3 !== "extras" && o3 !== "picture") {
                      var c2 = this[o3];
                      if (c2 instanceof u.XFAObject) {
                        this[u.$extra] = c2;
                        return c2;
                      }
                    }
                  }
                } catch (t5) {
                  r4.e(t5);
                } finally {
                  r4.f();
                }
                this[u.$extra] = null;
              }
              return this[u.$extra];
            } }, { key: u.$toHTML, value: function value(t4) {
              var r4 = this[u.$getExtra]();
              return r4 ? r4[u.$toHTML](t4) : m.HTMLResult.EMPTY;
            } }]);
            return Ui;
          }(u.XFAObject), jt = function(t3) {
            _inherits(Validate, t3);
            var r3 = _createSuper(Validate);
            function Validate(t4) {
              var o3;
              _classCallCheck(this, Validate);
              (o3 = r3.call(this, S, "validate", true)).formatTest = (0, m.getStringOption)(t4.formatTest, ["warning", "disabled", "error"]);
              o3.id = t4.id || "";
              o3.nullTest = (0, m.getStringOption)(t4.nullTest, ["disabled", "error", "warning"]);
              o3.scriptTest = (0, m.getStringOption)(t4.scriptTest, ["error", "disabled", "warning"]);
              o3.use = t4.use || "";
              o3.usehref = t4.usehref || "";
              o3.extras = null;
              o3.message = null;
              o3.picture = null;
              o3.script = null;
              return o3;
            }
            return _createClass(Validate);
          }(u.XFAObject), Bt = function(t3) {
            _inherits(Value, t3);
            var r3 = _createSuper(Value);
            function Value(t4) {
              var o3;
              _classCallCheck(this, Value);
              (o3 = r3.call(this, S, "value", true)).id = t4.id || "";
              o3.override = (0, m.getInteger)({ data: t4.override, defaultValue: 0, validate: function validate(t5) {
                return t5 === 1;
              } });
              o3.relevant = (0, m.getRelevant)(t4.relevant);
              o3.use = t4.use || "";
              o3.usehref = t4.usehref || "";
              o3.arc = null;
              o3.boolean = null;
              o3.date = null;
              o3.dateTime = null;
              o3.decimal = null;
              o3.exData = null;
              o3.float = null;
              o3.image = null;
              o3.integer = null;
              o3.line = null;
              o3.rectangle = null;
              o3.text = null;
              o3.time = null;
              return o3;
            }
            _createClass(Value, [{ key: u.$setValue, value: function(t4) {
              function value(r4) {
                return t4.apply(this, arguments);
              }
              value.toString = function() {
                return t4.toString();
              };
              return value;
            }(function(t4) {
              var r4 = this[u.$getParent]();
              if (r4 instanceof Ae && r4.ui && r4.ui.imageEdit) {
                if (!this.image) {
                  this.image = new De({});
                  this[u.$appendChild](this.image);
                }
                this.image[u.$content] = t4[u.$content];
              } else {
                var o3 = t4[u.$nodeName];
                if (this[o3] === null) {
                  var c2, l2 = _createForOfIteratorHelper(Object.getOwnPropertyNames(this));
                  try {
                    for (l2.s(); !(c2 = l2.n()).done; ) {
                      var h2 = c2.value, d2 = this[h2];
                      if (d2 instanceof u.XFAObject) {
                        this[h2] = null;
                        this[u.$removeChild](d2);
                      }
                    }
                  } catch (t5) {
                    l2.e(t5);
                  } finally {
                    l2.f();
                  }
                  this[t4[u.$nodeName]] = t4;
                  this[u.$appendChild](t4);
                } else
                  this[o3][u.$content] = t4[u.$content];
              }
            }) }, { key: u.$text, value: function value() {
              if (this.exData)
                return typeof this.exData[u.$content] == "string" ? this.exData[u.$content].trim() : this.exData[u.$content][u.$text]().trim();
              var t4, r4 = _createForOfIteratorHelper(Object.getOwnPropertyNames(this));
              try {
                for (r4.s(); !(t4 = r4.n()).done; ) {
                  var o3 = t4.value;
                  if (o3 !== "image") {
                    var c2 = this[o3];
                    if (c2 instanceof u.XFAObject)
                      return (c2[u.$content] || "").toString().trim();
                  }
                }
              } catch (t5) {
                r4.e(t5);
              } finally {
                r4.f();
              }
              return null;
            } }, { key: u.$toHTML, value: function value(t4) {
              var r4, o3 = _createForOfIteratorHelper(Object.getOwnPropertyNames(this));
              try {
                for (o3.s(); !(r4 = o3.n()).done; ) {
                  var c2 = this[r4.value];
                  if (c2 instanceof u.XFAObject)
                    return c2[u.$toHTML](t4);
                }
              } catch (t5) {
                o3.e(t5);
              } finally {
                o3.f();
              }
              return m.HTMLResult.EMPTY;
            } }]);
            return Value;
          }(u.XFAObject);
          r2.Value = Bt;
          var Lt = function(t3) {
            _inherits(Variables, t3);
            var r3 = _createSuper(Variables);
            function Variables(t4) {
              var o3;
              _classCallCheck(this, Variables);
              (o3 = r3.call(this, S, "variables", true)).id = t4.id || "";
              o3.use = t4.use || "";
              o3.usehref = t4.usehref || "";
              o3.boolean = new u.XFAObjectArray();
              o3.date = new u.XFAObjectArray();
              o3.dateTime = new u.XFAObjectArray();
              o3.decimal = new u.XFAObjectArray();
              o3.exData = new u.XFAObjectArray();
              o3.float = new u.XFAObjectArray();
              o3.image = new u.XFAObjectArray();
              o3.integer = new u.XFAObjectArray();
              o3.manifest = new u.XFAObjectArray();
              o3.script = new u.XFAObjectArray();
              o3.text = new u.XFAObjectArray();
              o3.time = new u.XFAObjectArray();
              return o3;
            }
            _createClass(Variables, [{ key: u.$isTransparent, value: function value() {
              return true;
            } }]);
            return Variables;
          }(u.XFAObject), Nt = function() {
            function TemplateNamespace() {
              _classCallCheck(this, TemplateNamespace);
            }
            _createClass(TemplateNamespace, null, [{ key: h.$buildXFAObject, value: function value(t3, r3) {
              if (TemplateNamespace.hasOwnProperty(t3)) {
                var o3 = TemplateNamespace[t3](r3);
                o3[u.$setSetAttributes](r3);
                return o3;
              }
            } }, { key: "appearanceFilter", value: function appearanceFilter(t3) {
              return new E(t3);
            } }, { key: "arc", value: function arc(t3) {
              return new M(t3);
            } }, { key: "area", value: function area(t3) {
              return new R(t3);
            } }, { key: "assist", value: function assist(t3) {
              return new D(t3);
            } }, { key: "barcode", value: function barcode(t3) {
              return new j(t3);
            } }, { key: "bind", value: function bind(t3) {
              return new L(t3);
            } }, { key: "bindItems", value: function bindItems(t3) {
              return new N(t3);
            } }, { key: "bookend", value: function bookend(t3) {
              return new U(t3);
            } }, { key: "boolean", value: function boolean(t3) {
              return new H(t3);
            } }, { key: "border", value: function border(t3) {
              return new $(t3);
            } }, { key: "break", value: function _break(t3) {
              return new X(t3);
            } }, { key: "breakAfter", value: function breakAfter(t3) {
              return new q(t3);
            } }, { key: "breakBefore", value: function breakBefore(t3) {
              return new G(t3);
            } }, { key: "button", value: function button(t3) {
              return new z(t3);
            } }, { key: "calculate", value: function calculate(t3) {
              return new W(t3);
            } }, { key: "caption", value: function caption(t3) {
              return new V(t3);
            } }, { key: "certificate", value: function certificate(t3) {
              return new K(t3);
            } }, { key: "certificates", value: function certificates(t3) {
              return new Y(t3);
            } }, { key: "checkButton", value: function checkButton(t3) {
              return new J(t3);
            } }, { key: "choiceList", value: function choiceList(t3) {
              return new Z(t3);
            } }, { key: "color", value: function color(t3) {
              return new Q(t3);
            } }, { key: "comb", value: function comb(t3) {
              return new ee(t3);
            } }, { key: "connect", value: function connect(t3) {
              return new te(t3);
            } }, { key: "contentArea", value: function contentArea(t3) {
              return new re(t3);
            } }, { key: "corner", value: function corner(t3) {
              return new ae(t3);
            } }, { key: "date", value: function date(t3) {
              return new ne(t3);
            } }, { key: "dateTime", value: function dateTime(t3) {
              return new ie(t3);
            } }, { key: "dateTimeEdit", value: function dateTimeEdit(t3) {
              return new oe(t3);
            } }, { key: "decimal", value: function decimal(t3) {
              return new se(t3);
            } }, { key: "defaultUi", value: function defaultUi(t3) {
              return new ce(t3);
            } }, { key: "desc", value: function desc(t3) {
              return new le(t3);
            } }, { key: "digestMethod", value: function digestMethod(t3) {
              return new ue(t3);
            } }, { key: "digestMethods", value: function digestMethods(t3) {
              return new fe(t3);
            } }, { key: "draw", value: function draw(t3) {
              return new he(t3);
            } }, { key: "edge", value: function edge(t3) {
              return new de(t3);
            } }, { key: "encoding", value: function encoding(t3) {
              return new pe(t3);
            } }, { key: "encodings", value: function encodings(t3) {
              return new ge(t3);
            } }, { key: "encrypt", value: function encrypt(t3) {
              return new me(t3);
            } }, { key: "encryptData", value: function encryptData(t3) {
              return new ye(t3);
            } }, { key: "encryption", value: function encryption(t3) {
              return new ve(t3);
            } }, { key: "encryptionMethod", value: function encryptionMethod(t3) {
              return new be(t3);
            } }, { key: "encryptionMethods", value: function encryptionMethods(t3) {
              return new ke(t3);
            } }, { key: "event", value: function event(t3) {
              return new _e(t3);
            } }, { key: "exData", value: function exData(t3) {
              return new we(t3);
            } }, { key: "exObject", value: function exObject(t3) {
              return new Se(t3);
            } }, { key: "exclGroup", value: function exclGroup(t3) {
              return new Ce(t3);
            } }, { key: "execute", value: function execute(t3) {
              return new xe(t3);
            } }, { key: "extras", value: function extras(t3) {
              return new Oe(t3);
            } }, { key: "field", value: function field(t3) {
              return new Ae(t3);
            } }, { key: "fill", value: function fill(t3) {
              return new Pe(t3);
            } }, { key: "filter", value: function filter(t3) {
              return new Te(t3);
            } }, { key: "float", value: function float(t3) {
              return new Fe(t3);
            } }, { key: "font", value: function font(t3) {
              return new Ie(t3);
            } }, { key: "format", value: function format(t3) {
              return new Ee(t3);
            } }, { key: "handler", value: function handler(t3) {
              return new Me(t3);
            } }, { key: "hyphenation", value: function hyphenation(t3) {
              return new Re(t3);
            } }, { key: "image", value: function image(t3) {
              return new De(t3);
            } }, { key: "imageEdit", value: function imageEdit(t3) {
              return new je(t3);
            } }, { key: "integer", value: function integer(t3) {
              return new Be(t3);
            } }, { key: "issuers", value: function issuers(t3) {
              return new Le(t3);
            } }, { key: "items", value: function items(t3) {
              return new Ne(t3);
            } }, { key: "keep", value: function keep(t3) {
              return new Ue(t3);
            } }, { key: "keyUsage", value: function keyUsage(t3) {
              return new He(t3);
            } }, { key: "line", value: function line(t3) {
              return new $e(t3);
            } }, { key: "linear", value: function linear(t3) {
              return new Xe(t3);
            } }, { key: "lockDocument", value: function lockDocument(t3) {
              return new qe(t3);
            } }, { key: "manifest", value: function manifest(t3) {
              return new Ge(t3);
            } }, { key: "margin", value: function margin(t3) {
              return new ze(t3);
            } }, { key: "mdp", value: function mdp(t3) {
              return new We(t3);
            } }, { key: "medium", value: function medium(t3) {
              return new Ve(t3);
            } }, { key: "message", value: function message(t3) {
              return new Ke(t3);
            } }, { key: "numericEdit", value: function numericEdit(t3) {
              return new Ye(t3);
            } }, { key: "occur", value: function occur(t3) {
              return new Je(t3);
            } }, { key: "oid", value: function oid(t3) {
              return new Ze(t3);
            } }, { key: "oids", value: function oids(t3) {
              return new Qe(t3);
            } }, { key: "overflow", value: function overflow(t3) {
              return new et(t3);
            } }, { key: "pageArea", value: function pageArea(t3) {
              return new tt(t3);
            } }, { key: "pageSet", value: function pageSet(t3) {
              return new rt(t3);
            } }, { key: "para", value: function para(t3) {
              return new at(t3);
            } }, { key: "passwordEdit", value: function passwordEdit(t3) {
              return new nt(t3);
            } }, { key: "pattern", value: function pattern(t3) {
              return new it(t3);
            } }, { key: "picture", value: function picture(t3) {
              return new ot(t3);
            } }, { key: "proto", value: function proto(t3) {
              return new st(t3);
            } }, { key: "radial", value: function radial(t3) {
              return new ct(t3);
            } }, { key: "reason", value: function reason(t3) {
              return new lt(t3);
            } }, { key: "reasons", value: function reasons(t3) {
              return new ut(t3);
            } }, { key: "rectangle", value: function rectangle(t3) {
              return new ft(t3);
            } }, { key: "ref", value: function ref(t3) {
              return new ht(t3);
            } }, { key: "script", value: function script(t3) {
              return new dt(t3);
            } }, { key: "setProperty", value: function setProperty(t3) {
              return new gt(t3);
            } }, { key: "signData", value: function signData(t3) {
              return new mt(t3);
            } }, { key: "signature", value: function signature(t3) {
              return new yt(t3);
            } }, { key: "signing", value: function signing(t3) {
              return new vt(t3);
            } }, { key: "solid", value: function solid(t3) {
              return new bt(t3);
            } }, { key: "speak", value: function speak(t3) {
              return new kt(t3);
            } }, { key: "stipple", value: function stipple(t3) {
              return new _t(t3);
            } }, { key: "subform", value: function subform(t3) {
              return new wt(t3);
            } }, { key: "subformSet", value: function subformSet(t3) {
              return new St(t3);
            } }, { key: "subjectDN", value: function subjectDN(t3) {
              return new Ct(t3);
            } }, { key: "subjectDNs", value: function subjectDNs(t3) {
              return new xt(t3);
            } }, { key: "submit", value: function submit(t3) {
              return new Ot(t3);
            } }, { key: "template", value: function template(t3) {
              return new At(t3);
            } }, { key: "text", value: function text(t3) {
              return new Pt(t3);
            } }, { key: "textEdit", value: function textEdit(t3) {
              return new Tt(t3);
            } }, { key: "time", value: function time(t3) {
              return new Ft(t3);
            } }, { key: "timeStamp", value: function timeStamp(t3) {
              return new It(t3);
            } }, { key: "toolTip", value: function toolTip(t3) {
              return new Et(t3);
            } }, { key: "traversal", value: function traversal(t3) {
              return new Mt(t3);
            } }, { key: "traverse", value: function traverse(t3) {
              return new Rt(t3);
            } }, { key: "ui", value: function ui(t3) {
              return new Dt(t3);
            } }, { key: "validate", value: function validate(t3) {
              return new jt(t3);
            } }, { key: "value", value: function value(t3) {
              return new Bt(t3);
            } }, { key: "variables", value: function variables(t3) {
              return new Lt(t3);
            } }]);
            return TemplateNamespace;
          }();
          r2.TemplateNamespace = Nt;
        }, (t2, r2, o2) => {
          "use strict";
          Object.defineProperty(r2, "__esModule", { value: true });
          r2.addHTML = function addHTML(t3, r3, o3) {
            var u = t3[c.$extra], h = u.availableSpace, d = _slicedToArray(o3, 4), g = d[0], m = d[1], y = d[2], v = d[3];
            switch (t3.layout) {
              case "position":
                u.width = Math.max(u.width, g + y);
                u.height = Math.max(u.height, m + v);
                u.children.push(r3);
                break;
              case "lr-tb":
              case "rl-tb":
                if (!u.line || u.attempt === 1) {
                  u.line = createLine(t3, []);
                  u.children.push(u.line);
                  u.numberInLine = 0;
                }
                u.numberInLine += 1;
                u.line.children.push(r3);
                if (u.attempt === 0) {
                  u.currentWidth += y;
                  u.height = Math.max(u.height, u.prevHeight + v);
                } else {
                  u.currentWidth = y;
                  u.prevHeight = u.height;
                  u.height += v;
                  u.attempt = 0;
                }
                u.width = Math.max(u.width, u.currentWidth);
                break;
              case "rl-row":
              case "row":
                u.children.push(r3);
                u.width += y;
                u.height = Math.max(u.height, v);
                var k, _ = (0, l.measureToString)(u.height), w = function _createForOfIteratorHelper(t4, r4) {
                  var o4 = typeof Symbol != "undefined" && t4[Symbol.iterator] || t4["@@iterator"];
                  if (!o4) {
                    if (Array.isArray(t4) || (o4 = _unsupportedIterableToArray(t4)) || r4 && t4 && typeof t4.length == "number") {
                      o4 && (t4 = o4);
                      var c2 = 0, l2 = function F() {
                      };
                      return { s: l2, n: function n() {
                        return c2 >= t4.length ? { done: true } : { done: false, value: t4[c2++] };
                      }, e: function e(t5) {
                        throw t5;
                      }, f: l2 };
                    }
                    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
                  }
                  var u2, h2 = true, d2 = false;
                  return { s: function s() {
                    o4 = o4.call(t4);
                  }, n: function n() {
                    var t5 = o4.next();
                    h2 = t5.done;
                    return t5;
                  }, e: function e(t5) {
                    d2 = true;
                    u2 = t5;
                  }, f: function f() {
                    try {
                      h2 || o4.return == null || o4.return();
                    } finally {
                      if (d2)
                        throw u2;
                    }
                  } };
                }(u.children);
                try {
                  for (w.s(); !(k = w.n()).done; ) {
                    k.value.attributes.style.height = _;
                  }
                } catch (t4) {
                  w.e(t4);
                } finally {
                  w.f();
                }
                break;
              case "table":
              case "tb":
                u.width = Math.min(h.width, Math.max(u.width, y));
                u.height += v;
                u.children.push(r3);
            }
          };
          r2.checkDimensions = function checkDimensions(t3, r3) {
            if (t3[c.$getTemplateRoot]()[c.$extra].firstUnsplittable === null)
              return true;
            if (t3.w === 0 || t3.h === 0)
              return true;
            var o3 = t3[c.$getSubformParent](), l2 = o3[c.$extra] && o3[c.$extra].attempt || 0, u = _slicedToArray(function getTransformedBBox(t4) {
              var r4, o4, c2 = t4.w === "" ? NaN : t4.w, l3 = t4.h === "" ? NaN : t4.h, u2 = 0, h2 = 0;
              switch (t4.anchorType || "") {
                case "bottomCenter":
                  u2 = c2 / 2;
                  h2 = l3;
                  break;
                case "bottomLeft":
                  u2 = 0;
                  h2 = l3;
                  break;
                case "bottomRight":
                  u2 = c2;
                  h2 = l3;
                  break;
                case "middleCenter":
                  u2 = c2 / 2;
                  h2 = l3 / 2;
                  break;
                case "middleLeft":
                  u2 = 0;
                  h2 = l3 / 2;
                  break;
                case "middleRight":
                  u2 = c2;
                  h2 = l3 / 2;
                  break;
                case "topCenter":
                  u2 = c2 / 2;
                  h2 = 0;
                  break;
                case "topRight":
                  u2 = c2;
                  h2 = 0;
              }
              switch (t4.rotate || 0) {
                case 0:
                  r4 = -u2;
                  o4 = -h2;
                  break;
                case 90:
                  r4 = -h2;
                  o4 = u2;
                  var d2 = [l3, -c2];
                  c2 = d2[0];
                  l3 = d2[1];
                  break;
                case 180:
                  r4 = u2;
                  o4 = h2;
                  var g2 = [-c2, -l3];
                  c2 = g2[0];
                  l3 = g2[1];
                  break;
                case 270:
                  r4 = h2;
                  o4 = -u2;
                  var m2 = [-l3, c2];
                  c2 = m2[0];
                  l3 = m2[1];
              }
              return [t4.x + r4 + Math.min(0, c2), t4.y + o4 + Math.min(0, l3), Math.abs(c2), Math.abs(l3)];
            }(t3), 4), h = u[1], d = u[2], g = u[3];
            switch (o3.layout) {
              case "lr-tb":
              case "rl-tb":
                return l2 === 0 ? t3[c.$getTemplateRoot]()[c.$extra].noLayoutFailure ? t3.w !== "" ? Math.round(d - r3.width) <= 2 : r3.width > 2 : !(t3.h !== "" && Math.round(g - r3.height) > 2) && (t3.w !== "" ? Math.round(d - r3.width) <= 2 || o3[c.$extra].numberInLine === 0 && r3.height > 2 : r3.width > 2) : !!t3[c.$getTemplateRoot]()[c.$extra].noLayoutFailure || !(t3.h !== "" && Math.round(g - r3.height) > 2) && ((t3.w === "" || Math.round(d - r3.width) <= 2 || !o3[c.$isThereMoreWidth]()) && r3.height > 2);
              case "table":
              case "tb":
                return !!t3[c.$getTemplateRoot]()[c.$extra].noLayoutFailure || (t3.h === "" || t3[c.$isSplittable]() ? (t3.w === "" || Math.round(d - r3.width) <= 2 || !o3[c.$isThereMoreWidth]()) && r3.height > 2 : Math.round(g - r3.height) <= 2);
              case "position":
                if (t3[c.$getTemplateRoot]()[c.$extra].noLayoutFailure)
                  return true;
                if (t3.h === "" || Math.round(g + h - r3.height) <= 2)
                  return true;
                var m = t3[c.$getTemplateRoot]()[c.$extra].currentContentArea;
                return g + h > m.h;
              case "rl-row":
              case "row":
                return !!t3[c.$getTemplateRoot]()[c.$extra].noLayoutFailure || (t3.h === "" || Math.round(g - r3.height) <= 2);
              default:
                return true;
            }
          };
          r2.flushHTML = function flushHTML(t3) {
            if (!t3[c.$extra])
              return null;
            var r3 = { name: "div", attributes: t3[c.$extra].attributes, children: t3[c.$extra].children };
            if (t3[c.$extra].failingNode) {
              var o3 = t3[c.$extra].failingNode[c.$flushHTML]();
              o3 && (t3.layout.endsWith("-tb") ? r3.children.push(createLine(t3, [o3])) : r3.children.push(o3));
            }
            if (r3.children.length === 0)
              return null;
            return r3;
          };
          r2.getAvailableSpace = function getAvailableSpace(t3) {
            var r3 = t3[c.$extra].availableSpace, o3 = t3.margin ? t3.margin.topInset + t3.margin.bottomInset : 0, l2 = t3.margin ? t3.margin.leftInset + t3.margin.rightInset : 0;
            switch (t3.layout) {
              case "lr-tb":
              case "rl-tb":
                return t3[c.$extra].attempt === 0 ? { width: r3.width - l2 - t3[c.$extra].currentWidth, height: r3.height - o3 - t3[c.$extra].prevHeight } : { width: r3.width - l2, height: r3.height - o3 - t3[c.$extra].height };
              case "rl-row":
              case "row":
                return { width: t3[c.$extra].columnWidths.slice(t3[c.$extra].currentColumn).reduce(function(t4, r4) {
                  return t4 + r4;
                }), height: r3.height - l2 };
              case "table":
              case "tb":
                return { width: r3.width - l2, height: r3.height - o3 - t3[c.$extra].height };
              default:
                return r3;
            }
          };
          var c = o2(230), l = o2(237);
          function _slicedToArray(t3, r3) {
            return function _arrayWithHoles(t4) {
              if (Array.isArray(t4))
                return t4;
            }(t3) || function _iterableToArrayLimit(t4, r4) {
              var o3 = t4 == null ? null : typeof Symbol != "undefined" && t4[Symbol.iterator] || t4["@@iterator"];
              if (o3 == null)
                return;
              var c2, l2, u = [], h = true, d = false;
              try {
                for (o3 = o3.call(t4); !(h = (c2 = o3.next()).done); h = true) {
                  u.push(c2.value);
                  if (r4 && u.length === r4)
                    break;
                }
              } catch (t5) {
                d = true;
                l2 = t5;
              } finally {
                try {
                  h || o3.return == null || o3.return();
                } finally {
                  if (d)
                    throw l2;
                }
              }
              return u;
            }(t3, r3) || _unsupportedIterableToArray(t3, r3) || function _nonIterableRest() {
              throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
            }();
          }
          function _unsupportedIterableToArray(t3, r3) {
            if (t3) {
              if (typeof t3 == "string")
                return _arrayLikeToArray(t3, r3);
              var o3 = Object.prototype.toString.call(t3).slice(8, -1);
              o3 === "Object" && t3.constructor && (o3 = t3.constructor.name);
              return o3 === "Map" || o3 === "Set" ? Array.from(t3) : o3 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(o3) ? _arrayLikeToArray(t3, r3) : void 0;
            }
          }
          function _arrayLikeToArray(t3, r3) {
            (r3 == null || r3 > t3.length) && (r3 = t3.length);
            for (var o3 = 0, c2 = new Array(r3); o3 < r3; o3++)
              c2[o3] = t3[o3];
            return c2;
          }
          function createLine(t3, r3) {
            return { name: "div", attributes: { class: [t3.layout === "lr-tb" ? "xfaLr" : "xfaRl"] }, children: r3 };
          }
        }, (t2, r2, o2) => {
          "use strict";
          Object.defineProperty(r2, "__esModule", { value: true });
          r2.computeBbox = function computeBbox(t3, r3, o3) {
            var l2;
            if (t3.w !== "" && t3.h !== "")
              l2 = [t3.x, t3.y, t3.w, t3.h];
            else {
              if (!o3)
                return null;
              var u2 = t3.w;
              if (u2 === "") {
                if (t3.maxW === 0) {
                  var h2 = t3[c.$getSubformParent]();
                  u2 = h2.layout === "position" && h2.w !== "" ? 0 : t3.minW;
                } else
                  u2 = Math.min(t3.maxW, o3.width);
                r3.attributes.style.width = measureToString(u2);
              }
              var d2 = t3.h;
              if (d2 === "") {
                if (t3.maxH === 0) {
                  var g2 = t3[c.$getSubformParent]();
                  d2 = g2.layout === "position" && g2.h !== "" ? 0 : t3.minH;
                } else
                  d2 = Math.min(t3.maxH, o3.height);
                r3.attributes.style.height = measureToString(d2);
              }
              l2 = [t3.x, t3.y, u2, d2];
            }
            return l2;
          };
          r2.createWrapper = function createWrapper(t3, r3) {
            var o3 = r3.attributes, l2 = o3.style, u2 = { name: "div", attributes: { class: ["xfaWrapper"], style: /* @__PURE__ */ Object.create(null) }, children: [] };
            o3.class.push("xfaWrapped");
            if (t3.border) {
              var h2, d2, g2 = t3.border[c.$extra], m = g2.widths, y = g2.insets, v = y[0], k = y[3], _ = y[0] + y[2], w = y[1] + y[3];
              switch (t3.border.hand) {
                case "even":
                  v -= m[0] / 2;
                  k -= m[3] / 2;
                  h2 = "calc(100% + ".concat((m[1] + m[3]) / 2 - w, "px)");
                  d2 = "calc(100% + ".concat((m[0] + m[2]) / 2 - _, "px)");
                  break;
                case "left":
                  v -= m[0];
                  k -= m[3];
                  h2 = "calc(100% + ".concat(m[1] + m[3] - w, "px)");
                  d2 = "calc(100% + ".concat(m[0] + m[2] - _, "px)");
                  break;
                case "right":
                  h2 = w ? "calc(100% - ".concat(w, "px)") : "100%";
                  d2 = _ ? "calc(100% - ".concat(_, "px)") : "100%";
              }
              var S = ["xfaBorder"];
              isPrintOnly(t3.border) && S.push("xfaPrintOnly");
              for (var C = { name: "div", attributes: { class: S, style: { top: "".concat(v, "px"), left: "".concat(k, "px"), width: h2, height: d2 } }, children: [] }, x = 0, O = ["border", "borderWidth", "borderColor", "borderRadius", "borderStyle"]; x < O.length; x++) {
                var T = O[x];
                if (l2[T] !== void 0) {
                  C.attributes.style[T] = l2[T];
                  delete l2[T];
                }
              }
              u2.children.push(C, r3);
            } else
              u2.children.push(r3);
            for (var E = 0, M = ["background", "backgroundClip", "top", "left", "width", "height", "minWidth", "minHeight", "maxWidth", "maxHeight", "transform", "transformOrigin", "visibility"]; E < M.length; E++) {
              var R = M[E];
              if (l2[R] !== void 0) {
                u2.attributes.style[R] = l2[R];
                delete l2[R];
              }
            }
            l2.position === "absolute" ? u2.attributes.style.position = "absolute" : u2.attributes.style.position = "relative";
            delete l2.position;
            if (l2.alignSelf) {
              u2.attributes.style.alignSelf = l2.alignSelf;
              delete l2.alignSelf;
            }
            return u2;
          };
          r2.fixDimensions = function fixDimensions(t3) {
            var r3 = t3[c.$getSubformParent]();
            if (r3.layout && r3.layout.includes("row")) {
              var o3, l2 = r3[c.$extra], u2 = t3.colSpan;
              o3 = u2 === -1 ? l2.columnWidths.slice(l2.currentColumn).reduce(function(t4, r4) {
                return t4 + r4;
              }, 0) : l2.columnWidths.slice(l2.currentColumn, l2.currentColumn + u2).reduce(function(t4, r4) {
                return t4 + r4;
              }, 0);
              isNaN(o3) || (t3.w = o3);
            }
            r3.layout && r3.layout !== "position" && (t3.x = t3.y = 0);
            t3.layout === "table" && t3.w === "" && Array.isArray(t3.columnWidths) && (t3.w = t3.columnWidths.reduce(function(t4, r4) {
              return t4 + r4;
            }, 0));
          };
          r2.fixTextIndent = function fixTextIndent(t3) {
            var r3 = (0, u.getMeasurement)(t3.textIndent, "0px");
            if (r3 >= 0)
              return;
            var o3 = "padding" + ((t3.textAlign === "right" ? "right" : "left") == "left" ? "Left" : "Right"), c2 = (0, u.getMeasurement)(t3[o3], "0px");
            t3[o3] = "".concat(c2 - r3, "px");
          };
          r2.fixURL = function fixURL(t3) {
            var r3 = (0, l.createValidAbsoluteUrl)(t3, null, { addDefaultProtocol: true, tryConvertEncoding: true });
            return r3 ? r3.href : null;
          };
          r2.isPrintOnly = isPrintOnly;
          r2.layoutClass = function layoutClass(t3) {
            switch (t3.layout) {
              case "position":
              default:
                return "xfaPosition";
              case "lr-tb":
                return "xfaLrTb";
              case "rl-row":
                return "xfaRlRow";
              case "rl-tb":
                return "xfaRlTb";
              case "row":
                return "xfaRow";
              case "table":
                return "xfaTable";
              case "tb":
                return "xfaTb";
            }
          };
          r2.layoutNode = function layoutNode(t3, r3) {
            var o3 = null, l2 = null, u2 = false;
            if ((!t3.w || !t3.h) && t3.value) {
              var h2 = 0, d2 = 0;
              if (t3.margin) {
                h2 = t3.margin.leftInset + t3.margin.rightInset;
                d2 = t3.margin.topInset + t3.margin.bottomInset;
              }
              var g2 = null, m = null;
              if (t3.para) {
                m = /* @__PURE__ */ Object.create(null);
                g2 = t3.para.lineHeight === "" ? null : t3.para.lineHeight;
                m.top = t3.para.spaceAbove === "" ? 0 : t3.para.spaceAbove;
                m.bottom = t3.para.spaceBelow === "" ? 0 : t3.para.spaceBelow;
                m.left = t3.para.marginLeft === "" ? 0 : t3.para.marginLeft;
                m.right = t3.para.marginRight === "" ? 0 : t3.para.marginRight;
              }
              var y = t3.font;
              if (!y)
                for (var v = t3[c.$getTemplateRoot](), k = t3[c.$getParent](); k && k !== v; ) {
                  if (k.font) {
                    y = k.font;
                    break;
                  }
                  k = k[c.$getParent]();
                }
              var _ = (t3.w ? t3.w : r3.width) - h2, w = t3[c.$globalData].fontFinder;
              if (t3.value.exData && t3.value.exData[c.$content] && t3.value.exData.contentType === "text/html") {
                var S = layoutText(t3.value.exData[c.$content], y, m, g2, w, _);
                l2 = S.width;
                o3 = S.height;
                u2 = S.isBroken;
              } else {
                var C = t3.value[c.$text]();
                if (C) {
                  var x = layoutText(C, y, m, g2, w, _);
                  l2 = x.width;
                  o3 = x.height;
                  u2 = x.isBroken;
                }
              }
              l2 === null || t3.w || (l2 += h2);
              o3 === null || t3.h || (o3 += d2);
            }
            return { w: l2, h: o3, isBroken: u2 };
          };
          r2.measureToString = measureToString;
          r2.setAccess = function setAccess(t3, r3) {
            switch (t3.access) {
              case "nonInteractive":
                r3.push("xfaNonInteractive");
                break;
              case "readOnly":
                r3.push("xfaReadOnly");
                break;
              case "protected":
                r3.push("xfaDisabled");
            }
          };
          r2.setFontFamily = function setFontFamily(t3, r3, o3, c2) {
            if (!o3) {
              delete c2.fontFamily;
              return;
            }
            var l2 = (0, u.stripQuotes)(t3.typeface);
            c2.fontFamily = '"'.concat(l2, '"');
            var d2 = o3.find(l2);
            if (d2) {
              var g2 = d2.regular.cssFontInfo.fontFamily;
              g2 !== l2 && (c2.fontFamily = '"'.concat(g2, '"'));
              var m = getCurrentPara(r3);
              if (m && m.lineHeight !== "")
                return;
              if (c2.lineHeight)
                return;
              var y = (0, h.selectFont)(t3, d2);
              y && (c2.lineHeight = Math.max(1.2, y.lineHeight));
            }
          };
          r2.setMinMaxDimensions = function setMinMaxDimensions(t3, r3) {
            if (t3[c.$getSubformParent]().layout === "position") {
              t3.minW > 0 && (r3.minWidth = measureToString(t3.minW));
              t3.maxW > 0 && (r3.maxWidth = measureToString(t3.maxW));
              t3.minH > 0 && (r3.minHeight = measureToString(t3.minH));
              t3.maxH > 0 && (r3.maxHeight = measureToString(t3.maxH));
            }
          };
          r2.setPara = function setPara(t3, r3, o3) {
            if (o3.attributes.class && o3.attributes.class.includes("xfaRich")) {
              if (r3) {
                t3.h === "" && (r3.height = "auto");
                t3.w === "" && (r3.width = "auto");
              }
              var l2 = getCurrentPara(t3);
              if (l2) {
                var u2 = o3.attributes.style;
                u2.display = "flex";
                u2.flexDirection = "column";
                switch (l2.vAlign) {
                  case "top":
                    u2.justifyContent = "start";
                    break;
                  case "bottom":
                    u2.justifyContent = "end";
                    break;
                  case "middle":
                    u2.justifyContent = "center";
                }
                for (var h2 = l2[c.$toStyle](), d2 = 0, g2 = Object.entries(h2); d2 < g2.length; d2++) {
                  var m = (k = g2[d2], _ = 2, function _arrayWithHoles(t4) {
                    if (Array.isArray(t4))
                      return t4;
                  }(k) || function _iterableToArrayLimit(t4, r4) {
                    var o4 = t4 == null ? null : typeof Symbol != "undefined" && t4[Symbol.iterator] || t4["@@iterator"];
                    if (o4 == null)
                      return;
                    var c2, l3, u3 = [], h3 = true, d3 = false;
                    try {
                      for (o4 = o4.call(t4); !(h3 = (c2 = o4.next()).done); h3 = true) {
                        u3.push(c2.value);
                        if (r4 && u3.length === r4)
                          break;
                      }
                    } catch (t5) {
                      d3 = true;
                      l3 = t5;
                    } finally {
                      try {
                        h3 || o4.return == null || o4.return();
                      } finally {
                        if (d3)
                          throw l3;
                      }
                    }
                    return u3;
                  }(k, _) || function _unsupportedIterableToArray(t4, r4) {
                    if (!t4)
                      return;
                    if (typeof t4 == "string")
                      return _arrayLikeToArray(t4, r4);
                    var o4 = Object.prototype.toString.call(t4).slice(8, -1);
                    o4 === "Object" && t4.constructor && (o4 = t4.constructor.name);
                    if (o4 === "Map" || o4 === "Set")
                      return Array.from(t4);
                    if (o4 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(o4))
                      return _arrayLikeToArray(t4, r4);
                  }(k, _) || function _nonIterableRest() {
                    throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
                  }()), y = m[0], v = m[1];
                  y in u2 || (u2[y] = v);
                }
              }
            }
            var k, _;
          };
          r2.toStyle = function toStyle(t3) {
            for (var r3 = /* @__PURE__ */ Object.create(null), o3 = arguments.length, u2 = new Array(o3 > 1 ? o3 - 1 : 0), h2 = 1; h2 < o3; h2++)
              u2[h2 - 1] = arguments[h2];
            for (var d2 = 0, m = u2; d2 < m.length; d2++) {
              var y = m[d2], v = t3[y];
              if (v !== null) {
                if (g.hasOwnProperty(y))
                  g[y](t3, r3);
                else if (v instanceof c.XFAObject) {
                  var k = v[c.$toStyle]();
                  k ? Object.assign(r3, k) : (0, l.warn)("(DEBUG) - XFA - style for ".concat(y, " not implemented yet"));
                }
              }
            }
            return r3;
          };
          var c = o2(230), l = o2(4), u = o2(231), h = o2(238), d = o2(239);
          function _arrayLikeToArray(t3, r3) {
            (r3 == null || r3 > t3.length) && (r3 = t3.length);
            for (var o3 = 0, c2 = new Array(r3); o3 < r3; o3++)
              c2[o3] = t3[o3];
            return c2;
          }
          function measureToString(t3) {
            return typeof t3 == "string" ? "0px" : Number.isInteger(t3) ? "".concat(t3, "px") : "".concat(t3.toFixed(2), "px");
          }
          var g = { anchorType: function anchorType(t3, r3) {
            var o3 = t3[c.$getSubformParent]();
            if (o3 && (!o3.layout || o3.layout === "position")) {
              "transform" in r3 || (r3.transform = "");
              switch (t3.anchorType) {
                case "bottomCenter":
                  r3.transform += "translate(-50%, -100%)";
                  break;
                case "bottomLeft":
                  r3.transform += "translate(0,-100%)";
                  break;
                case "bottomRight":
                  r3.transform += "translate(-100%,-100%)";
                  break;
                case "middleCenter":
                  r3.transform += "translate(-50%,-50%)";
                  break;
                case "middleLeft":
                  r3.transform += "translate(0,-50%)";
                  break;
                case "middleRight":
                  r3.transform += "translate(-100%,-50%)";
                  break;
                case "topCenter":
                  r3.transform += "translate(-50%,0)";
                  break;
                case "topRight":
                  r3.transform += "translate(-100%,0)";
              }
            }
          }, dimensions: function dimensions(t3, r3) {
            var o3 = t3[c.$getSubformParent](), l2 = t3.w, u2 = t3.h;
            if (o3.layout && o3.layout.includes("row")) {
              var h2, d2 = o3[c.$extra], g2 = t3.colSpan;
              if (g2 === -1) {
                h2 = d2.columnWidths.slice(d2.currentColumn).reduce(function(t4, r4) {
                  return t4 + r4;
                }, 0);
                d2.currentColumn = 0;
              } else {
                h2 = d2.columnWidths.slice(d2.currentColumn, d2.currentColumn + g2).reduce(function(t4, r4) {
                  return t4 + r4;
                }, 0);
                d2.currentColumn = (d2.currentColumn + t3.colSpan) % d2.columnWidths.length;
              }
              isNaN(h2) || (l2 = t3.w = h2);
            }
            r3.width = l2 !== "" ? measureToString(l2) : "auto";
            r3.height = u2 !== "" ? measureToString(u2) : "auto";
          }, position: function position(t3, r3) {
            var o3 = t3[c.$getSubformParent]();
            if (!o3 || !o3.layout || o3.layout === "position") {
              r3.position = "absolute";
              r3.left = measureToString(t3.x);
              r3.top = measureToString(t3.y);
            }
          }, rotate: function rotate(t3, r3) {
            if (t3.rotate) {
              "transform" in r3 || (r3.transform = "");
              r3.transform += "rotate(-".concat(t3.rotate, "deg)");
              r3.transformOrigin = "top left";
            }
          }, presence: function presence(t3, r3) {
            switch (t3.presence) {
              case "invisible":
                r3.visibility = "hidden";
                break;
              case "hidden":
              case "inactive":
                r3.display = "none";
            }
          }, hAlign: function hAlign(t3, r3) {
            if (t3[c.$nodeName] === "para")
              switch (t3.hAlign) {
                case "justifyAll":
                  r3.textAlign = "justify-all";
                  break;
                case "radix":
                  r3.textAlign = "left";
                  break;
                default:
                  r3.textAlign = t3.hAlign;
              }
            else
              switch (t3.hAlign) {
                case "left":
                  r3.alignSelf = "start";
                  break;
                case "center":
                  r3.alignSelf = "center";
                  break;
                case "right":
                  r3.alignSelf = "end";
              }
          }, margin: function margin(t3, r3) {
            t3.margin && (r3.margin = t3.margin[c.$toStyle]().margin);
          } };
          function layoutText(t3, r3, o3, l2, u2, h2) {
            var g2 = new d.TextMeasure(r3, o3, l2, u2);
            typeof t3 == "string" ? g2.addString(t3) : t3[c.$pushGlyphs](g2);
            return g2.compute(h2);
          }
          function isPrintOnly(t3) {
            return t3.relevant.length > 0 && !t3.relevant[0].excluded && t3.relevant[0].viewname === "print";
          }
          function getCurrentPara(t3) {
            var r3 = t3[c.$getTemplateRoot]()[c.$extra].paraStack;
            return r3.length ? r3[r3.length - 1] : null;
          }
        }, (t2, r2, o2) => {
          "use strict";
          Object.defineProperty(r2, "__esModule", { value: true });
          r2.FontFinder = void 0;
          r2.getMetrics = function getMetrics(t3) {
            var r3 = arguments.length > 1 && arguments[1] !== void 0 && arguments[1], o3 = null;
            if (t3) {
              var u2 = (0, l.stripQuotes)(t3.typeface), h2 = t3[c.$globalData].fontFinder.find(u2);
              o3 = selectFont(t3, h2);
            }
            if (!o3)
              return { lineHeight: 12, lineGap: 2, lineNoGap: 10 };
            var d = t3.size || 10, g = o3.lineHeight ? Math.max(r3 ? 0 : 1.2, o3.lineHeight) : 1.2, m = o3.lineGap === void 0 ? 0.2 : o3.lineGap;
            return { lineHeight: g * d, lineGap: m * d, lineNoGap: Math.max(1, g - m) * d };
          };
          r2.selectFont = selectFont;
          var c = o2(230), l = o2(231), u = o2(4);
          function _slicedToArray(t3, r3) {
            return function _arrayWithHoles(t4) {
              if (Array.isArray(t4))
                return t4;
            }(t3) || function _iterableToArrayLimit(t4, r4) {
              var o3 = t4 == null ? null : typeof Symbol != "undefined" && t4[Symbol.iterator] || t4["@@iterator"];
              if (o3 == null)
                return;
              var c2, l2, u2 = [], h2 = true, d = false;
              try {
                for (o3 = o3.call(t4); !(h2 = (c2 = o3.next()).done); h2 = true) {
                  u2.push(c2.value);
                  if (r4 && u2.length === r4)
                    break;
                }
              } catch (t5) {
                d = true;
                l2 = t5;
              } finally {
                try {
                  h2 || o3.return == null || o3.return();
                } finally {
                  if (d)
                    throw l2;
                }
              }
              return u2;
            }(t3, r3) || _unsupportedIterableToArray(t3, r3) || function _nonIterableRest() {
              throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
            }();
          }
          function _createForOfIteratorHelper(t3, r3) {
            var o3 = typeof Symbol != "undefined" && t3[Symbol.iterator] || t3["@@iterator"];
            if (!o3) {
              if (Array.isArray(t3) || (o3 = _unsupportedIterableToArray(t3)) || r3 && t3 && typeof t3.length == "number") {
                o3 && (t3 = o3);
                var c2 = 0, l2 = function F() {
                };
                return { s: l2, n: function n() {
                  return c2 >= t3.length ? { done: true } : { done: false, value: t3[c2++] };
                }, e: function e(t4) {
                  throw t4;
                }, f: l2 };
              }
              throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
            }
            var u2, h2 = true, d = false;
            return { s: function s() {
              o3 = o3.call(t3);
            }, n: function n() {
              var t4 = o3.next();
              h2 = t4.done;
              return t4;
            }, e: function e(t4) {
              d = true;
              u2 = t4;
            }, f: function f() {
              try {
                h2 || o3.return == null || o3.return();
              } finally {
                if (d)
                  throw u2;
              }
            } };
          }
          function _unsupportedIterableToArray(t3, r3) {
            if (t3) {
              if (typeof t3 == "string")
                return _arrayLikeToArray(t3, r3);
              var o3 = Object.prototype.toString.call(t3).slice(8, -1);
              o3 === "Object" && t3.constructor && (o3 = t3.constructor.name);
              return o3 === "Map" || o3 === "Set" ? Array.from(t3) : o3 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(o3) ? _arrayLikeToArray(t3, r3) : void 0;
            }
          }
          function _arrayLikeToArray(t3, r3) {
            (r3 == null || r3 > t3.length) && (r3 = t3.length);
            for (var o3 = 0, c2 = new Array(r3); o3 < r3; o3++)
              c2[o3] = t3[o3];
            return c2;
          }
          function _defineProperties(t3, r3) {
            for (var o3 = 0; o3 < r3.length; o3++) {
              var c2 = r3[o3];
              c2.enumerable = c2.enumerable || false;
              c2.configurable = true;
              "value" in c2 && (c2.writable = true);
              Object.defineProperty(t3, c2.key, c2);
            }
          }
          var h = function() {
            function FontFinder(t3) {
              !function _classCallCheck(t4, r3) {
                if (!(t4 instanceof r3))
                  throw new TypeError("Cannot call a class as a function");
              }(this, FontFinder);
              this.fonts = /* @__PURE__ */ new Map();
              this.cache = /* @__PURE__ */ new Map();
              this.warned = /* @__PURE__ */ new Set();
              this.defaultFont = null;
              this.add(t3);
            }
            !function _createClass(t3, r3, o3) {
              r3 && _defineProperties(t3.prototype, r3);
              o3 && _defineProperties(t3, o3);
              Object.defineProperty(t3, "prototype", { writable: false });
              return t3;
            }(FontFinder, [{ key: "add", value: function add(t3) {
              var r3, o3 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null, c2 = _createForOfIteratorHelper(t3);
              try {
                for (c2.s(); !(r3 = c2.n()).done; ) {
                  var l2 = r3.value;
                  this.addPdfFont(l2);
                }
              } catch (t4) {
                c2.e(t4);
              } finally {
                c2.f();
              }
              var u2, h2 = _createForOfIteratorHelper(this.fonts.values());
              try {
                for (h2.s(); !(u2 = h2.n()).done; ) {
                  var d = u2.value;
                  d.regular || (d.regular = d.italic || d.bold || d.bolditalic);
                }
              } catch (t4) {
                h2.e(t4);
              } finally {
                h2.f();
              }
              if (o3 && o3.size !== 0) {
                var g, m = this.fonts.get("PdfJS-Fallback-PdfJS-XFA"), y = _createForOfIteratorHelper(o3);
                try {
                  for (y.s(); !(g = y.n()).done; ) {
                    var v = g.value;
                    this.fonts.set(v, m);
                  }
                } catch (t4) {
                  y.e(t4);
                } finally {
                  y.f();
                }
              }
            } }, { key: "addPdfFont", value: function addPdfFont(t3) {
              var r3 = t3.cssFontInfo, o3 = r3.fontFamily, c2 = this.fonts.get(o3);
              if (!c2) {
                c2 = /* @__PURE__ */ Object.create(null);
                this.fonts.set(o3, c2);
                this.defaultFont || (this.defaultFont = c2);
              }
              var l2 = "", u2 = parseFloat(r3.fontWeight);
              parseFloat(r3.italicAngle) !== 0 ? l2 = u2 >= 700 ? "bolditalic" : "italic" : u2 >= 700 && (l2 = "bold");
              if (!l2) {
                (t3.name.includes("Bold") || t3.psName && t3.psName.includes("Bold")) && (l2 = "bold");
                (t3.name.includes("Italic") || t3.name.endsWith("It") || t3.psName && (t3.psName.includes("Italic") || t3.psName.endsWith("It"))) && (l2 += "italic");
              }
              l2 || (l2 = "regular");
              c2[l2] = t3;
            } }, { key: "getDefault", value: function getDefault() {
              return this.defaultFont;
            } }, { key: "find", value: function find(t3) {
              var r3 = !(arguments.length > 1 && arguments[1] !== void 0) || arguments[1], o3 = this.fonts.get(t3) || this.cache.get(t3);
              if (o3)
                return o3;
              var c2 = /,|-|_| |bolditalic|bold|italic|regular|it/gi, l2 = t3.replace(c2, "");
              if (o3 = this.fonts.get(l2)) {
                this.cache.set(t3, o3);
                return o3;
              }
              l2 = l2.toLowerCase();
              var h2, d = [], g = _createForOfIteratorHelper(this.fonts.entries());
              try {
                for (g.s(); !(h2 = g.n()).done; ) {
                  var m = _slicedToArray(h2.value, 2), y = m[0], v = m[1];
                  y.replace(c2, "").toLowerCase().startsWith(l2) && d.push(v);
                }
              } catch (t4) {
                g.e(t4);
              } finally {
                g.f();
              }
              if (d.length === 0) {
                var k, _ = _createForOfIteratorHelper(this.fonts.entries());
                try {
                  for (_.s(); !(k = _.n()).done; ) {
                    var w = _slicedToArray(k.value, 2), S = w[1];
                    S.regular.name && S.regular.name.replace(c2, "").toLowerCase().startsWith(l2) && d.push(S);
                  }
                } catch (t4) {
                  _.e(t4);
                } finally {
                  _.f();
                }
              }
              if (d.length === 0) {
                l2 = l2.replace(/psmt|mt/gi, "");
                var C, x = _createForOfIteratorHelper(this.fonts.entries());
                try {
                  for (x.s(); !(C = x.n()).done; ) {
                    var O = _slicedToArray(C.value, 2), T = O[0], E = O[1];
                    T.replace(c2, "").toLowerCase().startsWith(l2) && d.push(E);
                  }
                } catch (t4) {
                  x.e(t4);
                } finally {
                  x.f();
                }
              }
              if (d.length === 0) {
                var M, R = _createForOfIteratorHelper(this.fonts.values());
                try {
                  for (R.s(); !(M = R.n()).done; ) {
                    var D = M.value;
                    D.regular.name && D.regular.name.replace(c2, "").toLowerCase().startsWith(l2) && d.push(D);
                  }
                } catch (t4) {
                  R.e(t4);
                } finally {
                  R.f();
                }
              }
              if (d.length >= 1) {
                d.length !== 1 && r3 && (0, u.warn)("XFA - Too many choices to guess the correct font: ".concat(t3));
                this.cache.set(t3, d[0]);
                return d[0];
              }
              if (r3 && !this.warned.has(t3)) {
                this.warned.add(t3);
                (0, u.warn)("XFA - Cannot find the font: ".concat(t3));
              }
              return null;
            } }]);
            return FontFinder;
          }();
          r2.FontFinder = h;
          function selectFont(t3, r3) {
            return t3.posture === "italic" ? t3.weight === "bold" ? r3.bolditalic : r3.italic : t3.weight === "bold" ? r3.bold : r3.regular;
          }
        }, (t2, r2, o2) => {
          "use strict";
          Object.defineProperty(r2, "__esModule", { value: true });
          r2.TextMeasure = void 0;
          var c = o2(238);
          function _createForOfIteratorHelper(t3, r3) {
            var o3 = typeof Symbol != "undefined" && t3[Symbol.iterator] || t3["@@iterator"];
            if (!o3) {
              if (Array.isArray(t3) || (o3 = _unsupportedIterableToArray(t3)) || r3 && t3 && typeof t3.length == "number") {
                o3 && (t3 = o3);
                var c2 = 0, l2 = function F() {
                };
                return { s: l2, n: function n() {
                  return c2 >= t3.length ? { done: true } : { done: false, value: t3[c2++] };
                }, e: function e(t4) {
                  throw t4;
                }, f: l2 };
              }
              throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
            }
            var u2, h2 = true, d = false;
            return { s: function s() {
              o3 = o3.call(t3);
            }, n: function n() {
              var t4 = o3.next();
              h2 = t4.done;
              return t4;
            }, e: function e(t4) {
              d = true;
              u2 = t4;
            }, f: function f() {
              try {
                h2 || o3.return == null || o3.return();
              } finally {
                if (d)
                  throw u2;
              }
            } };
          }
          function _slicedToArray(t3, r3) {
            return function _arrayWithHoles(t4) {
              if (Array.isArray(t4))
                return t4;
            }(t3) || function _iterableToArrayLimit(t4, r4) {
              var o3 = t4 == null ? null : typeof Symbol != "undefined" && t4[Symbol.iterator] || t4["@@iterator"];
              if (o3 == null)
                return;
              var c2, l2, u2 = [], h2 = true, d = false;
              try {
                for (o3 = o3.call(t4); !(h2 = (c2 = o3.next()).done); h2 = true) {
                  u2.push(c2.value);
                  if (r4 && u2.length === r4)
                    break;
                }
              } catch (t5) {
                d = true;
                l2 = t5;
              } finally {
                try {
                  h2 || o3.return == null || o3.return();
                } finally {
                  if (d)
                    throw l2;
                }
              }
              return u2;
            }(t3, r3) || _unsupportedIterableToArray(t3, r3) || function _nonIterableRest() {
              throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
            }();
          }
          function _unsupportedIterableToArray(t3, r3) {
            if (t3) {
              if (typeof t3 == "string")
                return _arrayLikeToArray(t3, r3);
              var o3 = Object.prototype.toString.call(t3).slice(8, -1);
              o3 === "Object" && t3.constructor && (o3 = t3.constructor.name);
              return o3 === "Map" || o3 === "Set" ? Array.from(t3) : o3 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(o3) ? _arrayLikeToArray(t3, r3) : void 0;
            }
          }
          function _arrayLikeToArray(t3, r3) {
            (r3 == null || r3 > t3.length) && (r3 = t3.length);
            for (var o3 = 0, c2 = new Array(r3); o3 < r3; o3++)
              c2[o3] = t3[o3];
            return c2;
          }
          function _classCallCheck(t3, r3) {
            if (!(t3 instanceof r3))
              throw new TypeError("Cannot call a class as a function");
          }
          function _defineProperties(t3, r3) {
            for (var o3 = 0; o3 < r3.length; o3++) {
              var c2 = r3[o3];
              c2.enumerable = c2.enumerable || false;
              c2.configurable = true;
              "value" in c2 && (c2.writable = true);
              Object.defineProperty(t3, c2.key, c2);
            }
          }
          function _createClass(t3, r3, o3) {
            r3 && _defineProperties(t3.prototype, r3);
            o3 && _defineProperties(t3, o3);
            Object.defineProperty(t3, "prototype", { writable: false });
            return t3;
          }
          var l = function() {
            function FontInfo(t3, r3, o3, l2) {
              _classCallCheck(this, FontInfo);
              this.lineHeight = o3;
              this.paraMargin = r3 || { top: 0, bottom: 0, left: 0, right: 0 };
              if (t3) {
                this.xfaFont = { typeface: t3.typeface, posture: t3.posture, weight: t3.weight, size: t3.size, letterSpacing: t3.letterSpacing };
                var u2 = l2.find(t3.typeface);
                if (u2) {
                  this.pdfFont = (0, c.selectFont)(t3, u2);
                  if (!this.pdfFont) {
                    var h2 = _slicedToArray(this.defaultFont(l2), 2);
                    this.pdfFont = h2[0];
                    this.xfaFont = h2[1];
                  }
                } else {
                  var d = _slicedToArray(this.defaultFont(l2), 2);
                  this.pdfFont = d[0];
                  this.xfaFont = d[1];
                }
              } else {
                var g = _slicedToArray(this.defaultFont(l2), 2);
                this.pdfFont = g[0];
                this.xfaFont = g[1];
              }
            }
            _createClass(FontInfo, [{ key: "defaultFont", value: function defaultFont(t3) {
              var r3 = t3.find("Helvetica", false) || t3.find("Myriad Pro", false) || t3.find("Arial", false) || t3.getDefault();
              if (r3 && r3.regular) {
                var o3 = r3.regular;
                return [o3, { typeface: o3.cssFontInfo.fontFamily, posture: "normal", weight: "normal", size: 10, letterSpacing: 0 }];
              }
              return [null, { typeface: "Courier", posture: "normal", weight: "normal", size: 10, letterSpacing: 0 }];
            } }]);
            return FontInfo;
          }(), u = function() {
            function FontSelector(t3, r3, o3, c2) {
              _classCallCheck(this, FontSelector);
              this.fontFinder = c2;
              this.stack = [new l(t3, r3, o3, c2)];
            }
            _createClass(FontSelector, [{ key: "pushData", value: function pushData(t3, r3, o3) {
              for (var c2 = this.stack[this.stack.length - 1], u2 = 0, h2 = ["typeface", "posture", "weight", "size", "letterSpacing"]; u2 < h2.length; u2++) {
                var d = h2[u2];
                t3[d] || (t3[d] = c2.xfaFont[d]);
              }
              for (var g = 0, m = ["top", "bottom", "left", "right"]; g < m.length; g++) {
                var y = m[g];
                isNaN(r3[y]) && (r3[y] = c2.paraMargin[y]);
              }
              var v = new l(t3, r3, o3 || c2.lineHeight, this.fontFinder);
              v.pdfFont || (v.pdfFont = c2.pdfFont);
              this.stack.push(v);
            } }, { key: "popFont", value: function popFont() {
              this.stack.pop();
            } }, { key: "topFont", value: function topFont() {
              return this.stack[this.stack.length - 1];
            } }]);
            return FontSelector;
          }(), h = function() {
            function TextMeasure(t3, r3, o3, c2) {
              _classCallCheck(this, TextMeasure);
              this.glyphs = [];
              this.fontSelector = new u(t3, r3, o3, c2);
              this.extraHeight = 0;
            }
            _createClass(TextMeasure, [{ key: "pushData", value: function pushData(t3, r3, o3) {
              this.fontSelector.pushData(t3, r3, o3);
            } }, { key: "popFont", value: function popFont(t3) {
              return this.fontSelector.popFont();
            } }, { key: "addPara", value: function addPara() {
              var t3 = this.fontSelector.topFont();
              this.extraHeight += t3.paraMargin.top + t3.paraMargin.bottom;
            } }, { key: "addString", value: function addString(t3) {
              if (t3) {
                var r3 = this.fontSelector.topFont(), o3 = r3.xfaFont.size;
                if (r3.pdfFont) {
                  var c2, l2 = r3.xfaFont.letterSpacing, u2 = r3.pdfFont, h2 = u2.lineHeight || 1.2, d = r3.lineHeight || Math.max(1.2, h2) * o3, g = h2 - (u2.lineGap === void 0 ? 0.2 : u2.lineGap), m = Math.max(1, g) * o3, y = o3 / 1e3, v = u2.defaultWidth || u2.charsToGlyphs(" ")[0].width, k = _createForOfIteratorHelper(t3.split(/[\u2029\n]/));
                  try {
                    for (k.s(); !(c2 = k.n()).done; ) {
                      var _, w = c2.value, S = u2.encodeString(w).join(""), C = _createForOfIteratorHelper(u2.charsToGlyphs(S));
                      try {
                        for (C.s(); !(_ = C.n()).done; ) {
                          var x = _.value, O = x.width || v;
                          this.glyphs.push([O * y + l2, d, m, x.unicode, false]);
                        }
                      } catch (t4) {
                        C.e(t4);
                      } finally {
                        C.f();
                      }
                      this.glyphs.push([0, 0, 0, "\n", true]);
                    }
                  } catch (t4) {
                    k.e(t4);
                  } finally {
                    k.f();
                  }
                  this.glyphs.pop();
                } else {
                  var T, E = _createForOfIteratorHelper(t3.split(/[\u2029\n]/));
                  try {
                    for (E.s(); !(T = E.n()).done; ) {
                      var M, R = _createForOfIteratorHelper(T.value.split(""));
                      try {
                        for (R.s(); !(M = R.n()).done; ) {
                          var D = M.value;
                          this.glyphs.push([o3, 1.2 * o3, o3, D, false]);
                        }
                      } catch (t4) {
                        R.e(t4);
                      } finally {
                        R.f();
                      }
                      this.glyphs.push([0, 0, 0, "\n", true]);
                    }
                  } catch (t4) {
                    E.e(t4);
                  } finally {
                    E.f();
                  }
                  this.glyphs.pop();
                }
              }
            } }, { key: "compute", value: function compute(t3) {
              for (var r3 = -1, o3 = 0, c2 = 0, l2 = 0, u2 = 0, h2 = 0, d = false, g = true, m = 0, y = this.glyphs.length; m < y; m++) {
                var v = _slicedToArray(this.glyphs[m], 5), k = v[0], _ = v[1], w = v[2], S = v[3] === " ", C = g ? w : _;
                if (v[4]) {
                  c2 = Math.max(c2, u2);
                  u2 = 0;
                  l2 += h2;
                  h2 = C;
                  r3 = -1;
                  o3 = 0;
                  g = false;
                } else if (S)
                  if (u2 + k > t3) {
                    c2 = Math.max(c2, u2);
                    u2 = 0;
                    l2 += h2;
                    h2 = C;
                    r3 = -1;
                    o3 = 0;
                    d = true;
                    g = false;
                  } else {
                    h2 = Math.max(C, h2);
                    o3 = u2;
                    u2 += k;
                    r3 = m;
                  }
                else if (u2 + k > t3) {
                  l2 += h2;
                  h2 = C;
                  if (r3 !== -1) {
                    m = r3;
                    c2 = Math.max(c2, o3);
                    u2 = 0;
                    r3 = -1;
                    o3 = 0;
                  } else {
                    c2 = Math.max(c2, u2);
                    u2 = k;
                  }
                  d = true;
                  g = false;
                } else {
                  u2 += k;
                  h2 = Math.max(C, h2);
                }
              }
              return { width: 1.02 * (c2 = Math.max(c2, u2)), height: l2 += h2 + this.extraHeight, isBroken: d };
            } }]);
            return TextMeasure;
          }();
          r2.TextMeasure = h;
        }, (t2, r2, o2) => {
          "use strict";
          Object.defineProperty(r2, "__esModule", { value: true });
          r2.DataHandler = void 0;
          var c = o2(230);
          function _createForOfIteratorHelper(t3, r3) {
            var o3 = typeof Symbol != "undefined" && t3[Symbol.iterator] || t3["@@iterator"];
            if (!o3) {
              if (Array.isArray(t3) || (o3 = _unsupportedIterableToArray(t3)) || r3 && t3 && typeof t3.length == "number") {
                o3 && (t3 = o3);
                var c2 = 0, l2 = function F() {
                };
                return { s: l2, n: function n() {
                  return c2 >= t3.length ? { done: true } : { done: false, value: t3[c2++] };
                }, e: function e(t4) {
                  throw t4;
                }, f: l2 };
              }
              throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
            }
            var u, h = true, d = false;
            return { s: function s() {
              o3 = o3.call(t3);
            }, n: function n() {
              var t4 = o3.next();
              h = t4.done;
              return t4;
            }, e: function e(t4) {
              d = true;
              u = t4;
            }, f: function f() {
              try {
                h || o3.return == null || o3.return();
              } finally {
                if (d)
                  throw u;
              }
            } };
          }
          function _slicedToArray(t3, r3) {
            return function _arrayWithHoles(t4) {
              if (Array.isArray(t4))
                return t4;
            }(t3) || function _iterableToArrayLimit(t4, r4) {
              var o3 = t4 == null ? null : typeof Symbol != "undefined" && t4[Symbol.iterator] || t4["@@iterator"];
              if (o3 == null)
                return;
              var c2, l2, u = [], h = true, d = false;
              try {
                for (o3 = o3.call(t4); !(h = (c2 = o3.next()).done); h = true) {
                  u.push(c2.value);
                  if (r4 && u.length === r4)
                    break;
                }
              } catch (t5) {
                d = true;
                l2 = t5;
              } finally {
                try {
                  h || o3.return == null || o3.return();
                } finally {
                  if (d)
                    throw l2;
                }
              }
              return u;
            }(t3, r3) || _unsupportedIterableToArray(t3, r3) || function _nonIterableRest() {
              throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
            }();
          }
          function _unsupportedIterableToArray(t3, r3) {
            if (t3) {
              if (typeof t3 == "string")
                return _arrayLikeToArray(t3, r3);
              var o3 = Object.prototype.toString.call(t3).slice(8, -1);
              o3 === "Object" && t3.constructor && (o3 = t3.constructor.name);
              return o3 === "Map" || o3 === "Set" ? Array.from(t3) : o3 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(o3) ? _arrayLikeToArray(t3, r3) : void 0;
            }
          }
          function _arrayLikeToArray(t3, r3) {
            (r3 == null || r3 > t3.length) && (r3 = t3.length);
            for (var o3 = 0, c2 = new Array(r3); o3 < r3; o3++)
              c2[o3] = t3[o3];
            return c2;
          }
          function _defineProperties(t3, r3) {
            for (var o3 = 0; o3 < r3.length; o3++) {
              var c2 = r3[o3];
              c2.enumerable = c2.enumerable || false;
              c2.configurable = true;
              "value" in c2 && (c2.writable = true);
              Object.defineProperty(t3, c2.key, c2);
            }
          }
          var l = function() {
            function DataHandler(t3, r3) {
              !function _classCallCheck(t4, r4) {
                if (!(t4 instanceof r4))
                  throw new TypeError("Cannot call a class as a function");
              }(this, DataHandler);
              this.data = r3;
              this.dataset = t3.datasets || null;
            }
            !function _createClass(t3, r3, o3) {
              r3 && _defineProperties(t3.prototype, r3);
              o3 && _defineProperties(t3, o3);
              Object.defineProperty(t3, "prototype", { writable: false });
              return t3;
            }(DataHandler, [{ key: "serialize", value: function serialize(t3) {
              for (var r3 = [[-1, this.data[c.$getChildren]()]]; r3.length > 0; ) {
                var o3 = r3[r3.length - 1], l2 = _slicedToArray(o3, 2), u = l2[0], h = l2[1];
                if (u + 1 !== h.length) {
                  var d = h[++o3[0]], g = t3.get(d[c.$uid]);
                  if (g)
                    d[c.$setValue](g);
                  else {
                    var m, y = _createForOfIteratorHelper(d[c.$getAttributes]().values());
                    try {
                      for (y.s(); !(m = y.n()).done; ) {
                        var v = m.value, k = t3.get(v[c.$uid]);
                        if (k) {
                          v[c.$setValue](k);
                          break;
                        }
                      }
                    } catch (t4) {
                      y.e(t4);
                    } finally {
                      y.f();
                    }
                  }
                  var _ = d[c.$getChildren]();
                  _.length > 0 && r3.push([-1, _]);
                } else
                  r3.pop();
              }
              var w = ['<xfa:datasets xmlns:xfa="http://www.xfa.org/schema/xfa-data/1.0/">'];
              if (this.dataset) {
                var S, C = _createForOfIteratorHelper(this.dataset[c.$getChildren]());
                try {
                  for (C.s(); !(S = C.n()).done; ) {
                    var x = S.value;
                    x[c.$nodeName] !== "data" && x[c.$toString](w);
                  }
                } catch (t4) {
                  C.e(t4);
                } finally {
                  C.f();
                }
              }
              this.data[c.$toString](w);
              w.push("</xfa:datasets>");
              return w.join("");
            } }]);
            return DataHandler;
          }();
          r2.DataHandler = l;
        }, (t2, r2, o2) => {
          "use strict";
          function _typeof(t3) {
            return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t4) {
              return typeof t4;
            } : function(t4) {
              return t4 && typeof Symbol == "function" && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
            }, _typeof(t3);
          }
          Object.defineProperty(r2, "__esModule", { value: true });
          r2.XFAParser = void 0;
          var c = o2(230), l = o2(223), u = o2(242), h = o2(4);
          function _slicedToArray(t3, r3) {
            return function _arrayWithHoles(t4) {
              if (Array.isArray(t4))
                return t4;
            }(t3) || function _iterableToArrayLimit(t4, r4) {
              var o3 = t4 == null ? null : typeof Symbol != "undefined" && t4[Symbol.iterator] || t4["@@iterator"];
              if (o3 == null)
                return;
              var c2, l2, u2 = [], h2 = true, d2 = false;
              try {
                for (o3 = o3.call(t4); !(h2 = (c2 = o3.next()).done); h2 = true) {
                  u2.push(c2.value);
                  if (r4 && u2.length === r4)
                    break;
                }
              } catch (t5) {
                d2 = true;
                l2 = t5;
              } finally {
                try {
                  h2 || o3.return == null || o3.return();
                } finally {
                  if (d2)
                    throw l2;
                }
              }
              return u2;
            }(t3, r3) || _unsupportedIterableToArray(t3, r3) || function _nonIterableRest() {
              throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
            }();
          }
          function _unsupportedIterableToArray(t3, r3) {
            if (t3) {
              if (typeof t3 == "string")
                return _arrayLikeToArray(t3, r3);
              var o3 = Object.prototype.toString.call(t3).slice(8, -1);
              o3 === "Object" && t3.constructor && (o3 = t3.constructor.name);
              return o3 === "Map" || o3 === "Set" ? Array.from(t3) : o3 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(o3) ? _arrayLikeToArray(t3, r3) : void 0;
            }
          }
          function _arrayLikeToArray(t3, r3) {
            (r3 == null || r3 > t3.length) && (r3 = t3.length);
            for (var o3 = 0, c2 = new Array(r3); o3 < r3; o3++)
              c2[o3] = t3[o3];
            return c2;
          }
          function _classCallCheck(t3, r3) {
            if (!(t3 instanceof r3))
              throw new TypeError("Cannot call a class as a function");
          }
          function _defineProperties(t3, r3) {
            for (var o3 = 0; o3 < r3.length; o3++) {
              var c2 = r3[o3];
              c2.enumerable = c2.enumerable || false;
              c2.configurable = true;
              "value" in c2 && (c2.writable = true);
              Object.defineProperty(t3, c2.key, c2);
            }
          }
          function _setPrototypeOf(t3, r3) {
            _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(t4, r4) {
              t4.__proto__ = r4;
              return t4;
            };
            return _setPrototypeOf(t3, r3);
          }
          function _createSuper(t3) {
            var r3 = function _isNativeReflectConstruct() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                }));
                return true;
              } catch (t4) {
                return false;
              }
            }();
            return function _createSuperInternal() {
              var o3, c2 = _getPrototypeOf(t3);
              if (r3) {
                var l2 = _getPrototypeOf(this).constructor;
                o3 = Reflect.construct(c2, arguments, l2);
              } else
                o3 = c2.apply(this, arguments);
              return _possibleConstructorReturn(this, o3);
            };
          }
          function _possibleConstructorReturn(t3, r3) {
            if (r3 && (_typeof(r3) === "object" || typeof r3 == "function"))
              return r3;
            if (r3 !== void 0)
              throw new TypeError("Derived constructors may only return object or undefined");
            return function _assertThisInitialized(t4) {
              if (t4 === void 0)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return t4;
            }(t3);
          }
          function _getPrototypeOf(t3) {
            _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(t4) {
              return t4.__proto__ || Object.getPrototypeOf(t4);
            };
            return _getPrototypeOf(t3);
          }
          var d = function(t3) {
            !function _inherits(t4, r4) {
              if (typeof r4 != "function" && r4 !== null)
                throw new TypeError("Super expression must either be null or a function");
              t4.prototype = Object.create(r4 && r4.prototype, { constructor: { value: t4, writable: true, configurable: true } });
              Object.defineProperty(t4, "prototype", { writable: false });
              r4 && _setPrototypeOf(t4, r4);
            }(XFAParser, t3);
            var r3 = _createSuper(XFAParser);
            function XFAParser() {
              var t4, o3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : null, c2 = arguments.length > 1 && arguments[1] !== void 0 && arguments[1];
              _classCallCheck(this, XFAParser);
              (t4 = r3.call(this))._builder = new u.Builder(o3);
              t4._stack = [];
              t4._globalData = { usedTypefaces: /* @__PURE__ */ new Set() };
              t4._ids = /* @__PURE__ */ new Map();
              t4._current = t4._builder.buildRoot(t4._ids);
              t4._errorCode = l.XMLParserErrorCode.NoError;
              t4._whiteRegex = /^\s+$/;
              t4._nbsps = /\xa0+/g;
              t4._richText = c2;
              return t4;
            }
            !function _createClass(t4, r4, o3) {
              r4 && _defineProperties(t4.prototype, r4);
              o3 && _defineProperties(t4, o3);
              Object.defineProperty(t4, "prototype", { writable: false });
              return t4;
            }(XFAParser, [{ key: "parse", value: function parse(t4) {
              this.parseXml(t4);
              if (this._errorCode === l.XMLParserErrorCode.NoError) {
                this._current[c.$finalize]();
                return this._current.element;
              }
            } }, { key: "onText", value: function onText(t4) {
              t4 = t4.replace(this._nbsps, function(t5) {
                return t5.slice(1) + " ";
              });
              this._richText || this._current[c.$acceptWhitespace]() ? this._current[c.$onText](t4, this._richText) : this._whiteRegex.test(t4) || this._current[c.$onText](t4.trim());
            } }, { key: "onCdata", value: function onCdata(t4) {
              this._current[c.$onText](t4);
            } }, { key: "_mkAttributes", value: function _mkAttributes(t4, r4) {
              var o3, l2 = null, u2 = null, d2 = /* @__PURE__ */ Object.create({}), g = function _createForOfIteratorHelper(t5, r5) {
                var o4 = typeof Symbol != "undefined" && t5[Symbol.iterator] || t5["@@iterator"];
                if (!o4) {
                  if (Array.isArray(t5) || (o4 = _unsupportedIterableToArray(t5)) || r5 && t5 && typeof t5.length == "number") {
                    o4 && (t5 = o4);
                    var c2 = 0, l3 = function F() {
                    };
                    return { s: l3, n: function n() {
                      return c2 >= t5.length ? { done: true } : { done: false, value: t5[c2++] };
                    }, e: function e(t6) {
                      throw t6;
                    }, f: l3 };
                  }
                  throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
                }
                var u3, h2 = true, d3 = false;
                return { s: function s() {
                  o4 = o4.call(t5);
                }, n: function n() {
                  var t6 = o4.next();
                  h2 = t6.done;
                  return t6;
                }, e: function e(t6) {
                  d3 = true;
                  u3 = t6;
                }, f: function f() {
                  try {
                    h2 || o4.return == null || o4.return();
                  } finally {
                    if (d3)
                      throw u3;
                  }
                } };
              }(t4);
              try {
                for (g.s(); !(o3 = g.n()).done; ) {
                  var m = o3.value, y = m.name, v = m.value;
                  if (y === "xmlns")
                    l2 ? (0, h.warn)("XFA - multiple namespace definition in <".concat(r4, ">")) : l2 = v;
                  else if (y.startsWith("xmlns:")) {
                    var k = y.substring("xmlns:".length);
                    u2 || (u2 = []);
                    u2.push({ prefix: k, value: v });
                  } else {
                    var _ = y.indexOf(":");
                    if (_ === -1)
                      d2[y] = v;
                    else {
                      var w = d2[c.$nsAttributes];
                      w || (w = d2[c.$nsAttributes] = /* @__PURE__ */ Object.create(null));
                      var S = [y.slice(0, _), y.slice(_ + 1)], C = S[0], x = S[1], O = w[C];
                      O || (O = w[C] = /* @__PURE__ */ Object.create(null));
                      O[x] = v;
                    }
                  }
                }
              } catch (t5) {
                g.e(t5);
              } finally {
                g.f();
              }
              return [l2, u2, d2];
            } }, { key: "_getNameAndPrefix", value: function _getNameAndPrefix(t4, r4) {
              var o3 = t4.indexOf(":");
              return o3 === -1 ? [t4, null] : [t4.substring(o3 + 1), r4 ? "" : t4.substring(0, o3)];
            } }, { key: "onBeginElement", value: function onBeginElement(t4, r4, o3) {
              var l2 = _slicedToArray(this._mkAttributes(r4, t4), 3), u2 = l2[0], h2 = l2[1], d2 = l2[2], g = _slicedToArray(this._getNameAndPrefix(t4, this._builder.isNsAgnostic()), 2), m = g[0], y = g[1], v = this._builder.build({ nsPrefix: y, name: m, attributes: d2, namespace: u2, prefixes: h2 });
              v[c.$globalData] = this._globalData;
              if (o3) {
                v[c.$finalize]();
                this._current[c.$onChild](v) && v[c.$setId](this._ids);
                v[c.$clean](this._builder);
              } else {
                this._stack.push(this._current);
                this._current = v;
              }
            } }, { key: "onEndElement", value: function onEndElement(t4) {
              var r4 = this._current;
              if (r4[c.$isCDATAXml]() && typeof r4[c.$content] == "string") {
                var o3 = new XFAParser();
                o3._globalData = this._globalData;
                var l2 = o3.parse(r4[c.$content]);
                r4[c.$content] = null;
                r4[c.$onChild](l2);
              }
              r4[c.$finalize]();
              this._current = this._stack.pop();
              this._current[c.$onChild](r4) && r4[c.$setId](this._ids);
              r4[c.$clean](this._builder);
            } }, { key: "onError", value: function onError(t4) {
              this._errorCode = t4;
            } }]);
            return XFAParser;
          }(l.XMLParserBase);
          r2.XFAParser = d;
        }, (t2, r2, o2) => {
          "use strict";
          function _typeof(t3) {
            return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t4) {
              return typeof t4;
            } : function(t4) {
              return t4 && typeof Symbol == "function" && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
            }, _typeof(t3);
          }
          Object.defineProperty(r2, "__esModule", { value: true });
          r2.Builder = void 0;
          var c = o2(232), l = o2(230), u = o2(243), h = o2(235), d = o2(252), g = o2(4);
          function _slicedToArray(t3, r3) {
            return function _arrayWithHoles(t4) {
              if (Array.isArray(t4))
                return t4;
            }(t3) || function _iterableToArrayLimit(t4, r4) {
              var o3 = t4 == null ? null : typeof Symbol != "undefined" && t4[Symbol.iterator] || t4["@@iterator"];
              if (o3 == null)
                return;
              var c2, l2, u2 = [], h2 = true, d2 = false;
              try {
                for (o3 = o3.call(t4); !(h2 = (c2 = o3.next()).done); h2 = true) {
                  u2.push(c2.value);
                  if (r4 && u2.length === r4)
                    break;
                }
              } catch (t5) {
                d2 = true;
                l2 = t5;
              } finally {
                try {
                  h2 || o3.return == null || o3.return();
                } finally {
                  if (d2)
                    throw l2;
                }
              }
              return u2;
            }(t3, r3) || _unsupportedIterableToArray(t3, r3) || function _nonIterableRest() {
              throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
            }();
          }
          function _toConsumableArray(t3) {
            return function _arrayWithoutHoles(t4) {
              if (Array.isArray(t4))
                return _arrayLikeToArray(t4);
            }(t3) || function _iterableToArray(t4) {
              if (typeof Symbol != "undefined" && t4[Symbol.iterator] != null || t4["@@iterator"] != null)
                return Array.from(t4);
            }(t3) || _unsupportedIterableToArray(t3) || function _nonIterableSpread() {
              throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
            }();
          }
          function _unsupportedIterableToArray(t3, r3) {
            if (t3) {
              if (typeof t3 == "string")
                return _arrayLikeToArray(t3, r3);
              var o3 = Object.prototype.toString.call(t3).slice(8, -1);
              o3 === "Object" && t3.constructor && (o3 = t3.constructor.name);
              return o3 === "Map" || o3 === "Set" ? Array.from(t3) : o3 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(o3) ? _arrayLikeToArray(t3, r3) : void 0;
            }
          }
          function _arrayLikeToArray(t3, r3) {
            (r3 == null || r3 > t3.length) && (r3 = t3.length);
            for (var o3 = 0, c2 = new Array(r3); o3 < r3; o3++)
              c2[o3] = t3[o3];
            return c2;
          }
          function _classCallCheck(t3, r3) {
            if (!(t3 instanceof r3))
              throw new TypeError("Cannot call a class as a function");
          }
          function _defineProperties(t3, r3) {
            for (var o3 = 0; o3 < r3.length; o3++) {
              var c2 = r3[o3];
              c2.enumerable = c2.enumerable || false;
              c2.configurable = true;
              "value" in c2 && (c2.writable = true);
              Object.defineProperty(t3, c2.key, c2);
            }
          }
          function _createClass(t3, r3, o3) {
            r3 && _defineProperties(t3.prototype, r3);
            o3 && _defineProperties(t3, o3);
            Object.defineProperty(t3, "prototype", { writable: false });
            return t3;
          }
          function _get() {
            _get = typeof Reflect != "undefined" && Reflect.get ? Reflect.get : function _get2(t3, r3, o3) {
              var c2 = _superPropBase(t3, r3);
              if (c2) {
                var l2 = Object.getOwnPropertyDescriptor(c2, r3);
                return l2.get ? l2.get.call(arguments.length < 3 ? t3 : o3) : l2.value;
              }
            };
            return _get.apply(this, arguments);
          }
          function _superPropBase(t3, r3) {
            for (; !Object.prototype.hasOwnProperty.call(t3, r3) && (t3 = _getPrototypeOf(t3)) !== null; )
              ;
            return t3;
          }
          function _inherits(t3, r3) {
            if (typeof r3 != "function" && r3 !== null)
              throw new TypeError("Super expression must either be null or a function");
            t3.prototype = Object.create(r3 && r3.prototype, { constructor: { value: t3, writable: true, configurable: true } });
            Object.defineProperty(t3, "prototype", { writable: false });
            r3 && _setPrototypeOf(t3, r3);
          }
          function _setPrototypeOf(t3, r3) {
            _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(t4, r4) {
              t4.__proto__ = r4;
              return t4;
            };
            return _setPrototypeOf(t3, r3);
          }
          function _createSuper(t3) {
            var r3 = function _isNativeReflectConstruct() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                }));
                return true;
              } catch (t4) {
                return false;
              }
            }();
            return function _createSuperInternal() {
              var o3, c2 = _getPrototypeOf(t3);
              if (r3) {
                var l2 = _getPrototypeOf(this).constructor;
                o3 = Reflect.construct(c2, arguments, l2);
              } else
                o3 = c2.apply(this, arguments);
              return _possibleConstructorReturn(this, o3);
            };
          }
          function _possibleConstructorReturn(t3, r3) {
            if (r3 && (_typeof(r3) === "object" || typeof r3 == "function"))
              return r3;
            if (r3 !== void 0)
              throw new TypeError("Derived constructors may only return object or undefined");
            return function _assertThisInitialized(t4) {
              if (t4 === void 0)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return t4;
            }(t3);
          }
          function _getPrototypeOf(t3) {
            _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(t4) {
              return t4.__proto__ || Object.getPrototypeOf(t4);
            };
            return _getPrototypeOf(t3);
          }
          var m = function(t3) {
            _inherits(Root, t3);
            var r3 = _createSuper(Root);
            function Root(t4) {
              var o3;
              _classCallCheck(this, Root);
              (o3 = r3.call(this, -1, "root", /* @__PURE__ */ Object.create(null))).element = null;
              o3[l.$ids] = t4;
              return o3;
            }
            _createClass(Root, [{ key: l.$onChild, value: function value(t4) {
              this.element = t4;
              return true;
            } }, { key: l.$finalize, value: function value() {
              _get(_getPrototypeOf(Root.prototype), l.$finalize, this).call(this);
              if (this.element.template instanceof h.Template) {
                this[l.$ids].set(l.$root, this.element);
                this.element.template[l.$resolvePrototypes](this[l.$ids]);
                this.element.template[l.$ids] = this[l.$ids];
              }
            } }]);
            return Root;
          }(l.XFAObject), y = function(t3) {
            _inherits(Empty, t3);
            var r3 = _createSuper(Empty);
            function Empty() {
              _classCallCheck(this, Empty);
              return r3.call(this, -1, "", /* @__PURE__ */ Object.create(null));
            }
            _createClass(Empty, [{ key: l.$onChild, value: function value(t4) {
              return false;
            } }]);
            return Empty;
          }(l.XFAObject), v = function() {
            function Builder() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : null;
              _classCallCheck(this, Builder);
              this._namespaceStack = [];
              this._nsAgnosticLevel = 0;
              this._namespacePrefixes = /* @__PURE__ */ new Map();
              this._namespaces = /* @__PURE__ */ new Map();
              this._nextNsId = Math.max.apply(Math, _toConsumableArray(Object.values(c.NamespaceIds).map(function(t4) {
                return t4.id;
              })));
              this._currentNamespace = t3 || new d.UnknownNamespace(++this._nextNsId);
            }
            _createClass(Builder, [{ key: "buildRoot", value: function buildRoot(t3) {
              return new m(t3);
            } }, { key: "build", value: function build(t3) {
              var r3 = t3.nsPrefix, o3 = t3.name, h2 = t3.attributes, d2 = t3.namespace, g2 = t3.prefixes, m2 = d2 !== null;
              if (m2) {
                this._namespaceStack.push(this._currentNamespace);
                this._currentNamespace = this._searchNamespace(d2);
              }
              g2 && this._addNamespacePrefix(g2);
              if (h2.hasOwnProperty(l.$nsAttributes)) {
                for (var v2 = u.NamespaceSetUp.datasets, k = h2[l.$nsAttributes], _ = null, w = 0, S = Object.entries(k); w < S.length; w++) {
                  var C = _slicedToArray(S[w], 2), x = C[0], O = C[1];
                  if (this._getNamespaceToUse(x) === v2) {
                    _ = { xfa: O };
                    break;
                  }
                }
                _ ? h2[l.$nsAttributes] = _ : delete h2[l.$nsAttributes];
              }
              var T = this._getNamespaceToUse(r3), E = T && T[c.$buildXFAObject](o3, h2) || new y();
              E[l.$isNsAgnostic]() && this._nsAgnosticLevel++;
              (m2 || g2 || E[l.$isNsAgnostic]()) && (E[l.$cleanup] = { hasNamespace: m2, prefixes: g2, nsAgnostic: E[l.$isNsAgnostic]() });
              return E;
            } }, { key: "isNsAgnostic", value: function isNsAgnostic() {
              return this._nsAgnosticLevel > 0;
            } }, { key: "_searchNamespace", value: function _searchNamespace(t3) {
              var r3 = this._namespaces.get(t3);
              if (r3)
                return r3;
              for (var o3 = 0, l2 = Object.entries(c.NamespaceIds); o3 < l2.length; o3++) {
                var h2 = _slicedToArray(l2[o3], 2), g2 = h2[0];
                if ((0, h2[1].check)(t3)) {
                  if (r3 = u.NamespaceSetUp[g2]) {
                    this._namespaces.set(t3, r3);
                    return r3;
                  }
                  break;
                }
              }
              r3 = new d.UnknownNamespace(++this._nextNsId);
              this._namespaces.set(t3, r3);
              return r3;
            } }, { key: "_addNamespacePrefix", value: function _addNamespacePrefix(t3) {
              var r3, o3 = function _createForOfIteratorHelper(t4, r4) {
                var o4 = typeof Symbol != "undefined" && t4[Symbol.iterator] || t4["@@iterator"];
                if (!o4) {
                  if (Array.isArray(t4) || (o4 = _unsupportedIterableToArray(t4)) || r4 && t4 && typeof t4.length == "number") {
                    o4 && (t4 = o4);
                    var c3 = 0, l3 = function F() {
                    };
                    return { s: l3, n: function n() {
                      return c3 >= t4.length ? { done: true } : { done: false, value: t4[c3++] };
                    }, e: function e(t5) {
                      throw t5;
                    }, f: l3 };
                  }
                  throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
                }
                var u3, h3 = true, d3 = false;
                return { s: function s() {
                  o4 = o4.call(t4);
                }, n: function n() {
                  var t5 = o4.next();
                  h3 = t5.done;
                  return t5;
                }, e: function e(t5) {
                  d3 = true;
                  u3 = t5;
                }, f: function f() {
                  try {
                    h3 || o4.return == null || o4.return();
                  } finally {
                    if (d3)
                      throw u3;
                  }
                } };
              }(t3);
              try {
                for (o3.s(); !(r3 = o3.n()).done; ) {
                  var c2 = r3.value, l2 = c2.prefix, u2 = c2.value, h2 = this._searchNamespace(u2), d2 = this._namespacePrefixes.get(l2);
                  if (!d2) {
                    d2 = [];
                    this._namespacePrefixes.set(l2, d2);
                  }
                  d2.push(h2);
                }
              } catch (t4) {
                o3.e(t4);
              } finally {
                o3.f();
              }
            } }, { key: "_getNamespaceToUse", value: function _getNamespaceToUse(t3) {
              if (!t3)
                return this._currentNamespace;
              var r3 = this._namespacePrefixes.get(t3);
              if (r3 && r3.length > 0)
                return r3[r3.length - 1];
              (0, g.warn)("Unknown namespace prefix: ".concat(t3, "."));
              return null;
            } }, { key: "clean", value: function clean(t3) {
              var r3 = this, o3 = t3.hasNamespace, c2 = t3.prefixes, l2 = t3.nsAgnostic;
              o3 && (this._currentNamespace = this._namespaceStack.pop());
              c2 && c2.forEach(function(t4) {
                var o4 = t4.prefix;
                r3._namespacePrefixes.get(o4).pop();
              });
              l2 && this._nsAgnosticLevel--;
            } }]);
            return Builder;
          }();
          r2.Builder = v;
        }, (t2, r2, o2) => {
          "use strict";
          Object.defineProperty(r2, "__esModule", { value: true });
          r2.NamespaceSetUp = void 0;
          var c = o2(244), l = o2(245), u = o2(246), h = o2(247), d = o2(248), g = o2(249), m = o2(235), y = o2(250), v = o2(251), k = { config: c.ConfigNamespace, connection: l.ConnectionSetNamespace, datasets: u.DatasetsNamespace, localeSet: h.LocaleSetNamespace, signature: d.SignatureNamespace, stylesheet: g.StylesheetNamespace, template: m.TemplateNamespace, xdp: y.XdpNamespace, xhtml: v.XhtmlNamespace };
          r2.NamespaceSetUp = k;
        }, (t2, r2, o2) => {
          "use strict";
          function _typeof(t3) {
            return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t4) {
              return typeof t4;
            } : function(t4) {
              return t4 && typeof Symbol == "function" && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
            }, _typeof(t3);
          }
          Object.defineProperty(r2, "__esModule", { value: true });
          r2.ConfigNamespace = void 0;
          var c = o2(232), l = o2(230), u = o2(231), h = o2(4);
          function _createForOfIteratorHelper(t3, r3) {
            var o3 = typeof Symbol != "undefined" && t3[Symbol.iterator] || t3["@@iterator"];
            if (!o3) {
              if (Array.isArray(t3) || (o3 = function _unsupportedIterableToArray(t4, r4) {
                if (!t4)
                  return;
                if (typeof t4 == "string")
                  return _arrayLikeToArray(t4, r4);
                var o4 = Object.prototype.toString.call(t4).slice(8, -1);
                o4 === "Object" && t4.constructor && (o4 = t4.constructor.name);
                if (o4 === "Map" || o4 === "Set")
                  return Array.from(t4);
                if (o4 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(o4))
                  return _arrayLikeToArray(t4, r4);
              }(t3)) || r3 && t3 && typeof t3.length == "number") {
                o3 && (t3 = o3);
                var c2 = 0, l2 = function F() {
                };
                return { s: l2, n: function n() {
                  return c2 >= t3.length ? { done: true } : { done: false, value: t3[c2++] };
                }, e: function e(t4) {
                  throw t4;
                }, f: l2 };
              }
              throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
            }
            var u2, h2 = true, d2 = false;
            return { s: function s() {
              o3 = o3.call(t3);
            }, n: function n() {
              var t4 = o3.next();
              h2 = t4.done;
              return t4;
            }, e: function e(t4) {
              d2 = true;
              u2 = t4;
            }, f: function f() {
              try {
                h2 || o3.return == null || o3.return();
              } finally {
                if (d2)
                  throw u2;
              }
            } };
          }
          function _arrayLikeToArray(t3, r3) {
            (r3 == null || r3 > t3.length) && (r3 = t3.length);
            for (var o3 = 0, c2 = new Array(r3); o3 < r3; o3++)
              c2[o3] = t3[o3];
            return c2;
          }
          function _defineProperties(t3, r3) {
            for (var o3 = 0; o3 < r3.length; o3++) {
              var c2 = r3[o3];
              c2.enumerable = c2.enumerable || false;
              c2.configurable = true;
              "value" in c2 && (c2.writable = true);
              Object.defineProperty(t3, c2.key, c2);
            }
          }
          function _createClass(t3, r3, o3) {
            r3 && _defineProperties(t3.prototype, r3);
            o3 && _defineProperties(t3, o3);
            Object.defineProperty(t3, "prototype", { writable: false });
            return t3;
          }
          function _classCallCheck(t3, r3) {
            if (!(t3 instanceof r3))
              throw new TypeError("Cannot call a class as a function");
          }
          function _inherits(t3, r3) {
            if (typeof r3 != "function" && r3 !== null)
              throw new TypeError("Super expression must either be null or a function");
            t3.prototype = Object.create(r3 && r3.prototype, { constructor: { value: t3, writable: true, configurable: true } });
            Object.defineProperty(t3, "prototype", { writable: false });
            r3 && _setPrototypeOf(t3, r3);
          }
          function _setPrototypeOf(t3, r3) {
            _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(t4, r4) {
              t4.__proto__ = r4;
              return t4;
            };
            return _setPrototypeOf(t3, r3);
          }
          function _createSuper(t3) {
            var r3 = function _isNativeReflectConstruct() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                }));
                return true;
              } catch (t4) {
                return false;
              }
            }();
            return function _createSuperInternal() {
              var o3, c2 = _getPrototypeOf(t3);
              if (r3) {
                var l2 = _getPrototypeOf(this).constructor;
                o3 = Reflect.construct(c2, arguments, l2);
              } else
                o3 = c2.apply(this, arguments);
              return _possibleConstructorReturn(this, o3);
            };
          }
          function _possibleConstructorReturn(t3, r3) {
            if (r3 && (_typeof(r3) === "object" || typeof r3 == "function"))
              return r3;
            if (r3 !== void 0)
              throw new TypeError("Derived constructors may only return object or undefined");
            return function _assertThisInitialized(t4) {
              if (t4 === void 0)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return t4;
            }(t3);
          }
          function _getPrototypeOf(t3) {
            _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(t4) {
              return t4.__proto__ || Object.getPrototypeOf(t4);
            };
            return _getPrototypeOf(t3);
          }
          var d = c.NamespaceIds.config.id, g = function(t3) {
            _inherits(Acrobat, t3);
            var r3 = _createSuper(Acrobat);
            function Acrobat(t4) {
              var o3;
              _classCallCheck(this, Acrobat);
              (o3 = r3.call(this, d, "acrobat", true)).acrobat7 = null;
              o3.autoSave = null;
              o3.common = null;
              o3.validate = null;
              o3.validateApprovalSignatures = null;
              o3.submitUrl = new l.XFAObjectArray();
              return o3;
            }
            return _createClass(Acrobat);
          }(l.XFAObject), m = function(t3) {
            _inherits(Acrobat7, t3);
            var r3 = _createSuper(Acrobat7);
            function Acrobat7(t4) {
              var o3;
              _classCallCheck(this, Acrobat7);
              (o3 = r3.call(this, d, "acrobat7", true)).dynamicRender = null;
              return o3;
            }
            return _createClass(Acrobat7);
          }(l.XFAObject), y = function(t3) {
            _inherits(ADBE_JSConsole, t3);
            var r3 = _createSuper(ADBE_JSConsole);
            function ADBE_JSConsole(t4) {
              _classCallCheck(this, ADBE_JSConsole);
              return r3.call(this, d, "ADBE_JSConsole", ["delegate", "Enable", "Disable"]);
            }
            return _createClass(ADBE_JSConsole);
          }(l.OptionObject), v = function(t3) {
            _inherits(ADBE_JSDebugger, t3);
            var r3 = _createSuper(ADBE_JSDebugger);
            function ADBE_JSDebugger(t4) {
              _classCallCheck(this, ADBE_JSDebugger);
              return r3.call(this, d, "ADBE_JSDebugger", ["delegate", "Enable", "Disable"]);
            }
            return _createClass(ADBE_JSDebugger);
          }(l.OptionObject), k = function(t3) {
            _inherits(AddSilentPrint, t3);
            var r3 = _createSuper(AddSilentPrint);
            function AddSilentPrint(t4) {
              _classCallCheck(this, AddSilentPrint);
              return r3.call(this, d, "addSilentPrint");
            }
            return _createClass(AddSilentPrint);
          }(l.Option01), _ = function(t3) {
            _inherits(AddViewerPreferences, t3);
            var r3 = _createSuper(AddViewerPreferences);
            function AddViewerPreferences(t4) {
              _classCallCheck(this, AddViewerPreferences);
              return r3.call(this, d, "addViewerPreferences");
            }
            return _createClass(AddViewerPreferences);
          }(l.Option01), w = function(t3) {
            _inherits(AdjustData, t3);
            var r3 = _createSuper(AdjustData);
            function AdjustData(t4) {
              _classCallCheck(this, AdjustData);
              return r3.call(this, d, "adjustData");
            }
            return _createClass(AdjustData);
          }(l.Option10), S = function(t3) {
            _inherits(AdobeExtensionLevel, t3);
            var r3 = _createSuper(AdobeExtensionLevel);
            function AdobeExtensionLevel(t4) {
              _classCallCheck(this, AdobeExtensionLevel);
              return r3.call(this, d, "adobeExtensionLevel", 0, function(t5) {
                return t5 >= 1 && t5 <= 8;
              });
            }
            return _createClass(AdobeExtensionLevel);
          }(l.IntegerObject), C = function(t3) {
            _inherits(Agent, t3);
            var r3 = _createSuper(Agent);
            function Agent(t4) {
              var o3;
              _classCallCheck(this, Agent);
              (o3 = r3.call(this, d, "agent", true)).name = t4.name ? t4.name.trim() : "";
              o3.common = new l.XFAObjectArray();
              return o3;
            }
            return _createClass(Agent);
          }(l.XFAObject), x = function(t3) {
            _inherits(AlwaysEmbed, t3);
            var r3 = _createSuper(AlwaysEmbed);
            function AlwaysEmbed(t4) {
              _classCallCheck(this, AlwaysEmbed);
              return r3.call(this, d, "alwaysEmbed");
            }
            return _createClass(AlwaysEmbed);
          }(l.ContentObject), O = function(t3) {
            _inherits(Amd, t3);
            var r3 = _createSuper(Amd);
            function Amd(t4) {
              _classCallCheck(this, Amd);
              return r3.call(this, d, "amd");
            }
            return _createClass(Amd);
          }(l.StringObject), T = function(t3) {
            _inherits(Area, t3);
            var r3 = _createSuper(Area);
            function Area(t4) {
              var o3;
              _classCallCheck(this, Area);
              (o3 = r3.call(this, d, "area")).level = (0, u.getInteger)({ data: t4.level, defaultValue: 0, validate: function validate(t5) {
                return t5 >= 1 && t5 <= 3;
              } });
              o3.name = (0, u.getStringOption)(t4.name, ["", "barcode", "coreinit", "deviceDriver", "font", "general", "layout", "merge", "script", "signature", "sourceSet", "templateCache"]);
              return o3;
            }
            return _createClass(Area);
          }(l.XFAObject), E = function(t3) {
            _inherits(Attributes, t3);
            var r3 = _createSuper(Attributes);
            function Attributes(t4) {
              _classCallCheck(this, Attributes);
              return r3.call(this, d, "attributes", ["preserve", "delegate", "ignore"]);
            }
            return _createClass(Attributes);
          }(l.OptionObject), M = function(t3) {
            _inherits(AutoSave, t3);
            var r3 = _createSuper(AutoSave);
            function AutoSave(t4) {
              _classCallCheck(this, AutoSave);
              return r3.call(this, d, "autoSave", ["disabled", "enabled"]);
            }
            return _createClass(AutoSave);
          }(l.OptionObject), R = function(t3) {
            _inherits(Base, t3);
            var r3 = _createSuper(Base);
            function Base(t4) {
              _classCallCheck(this, Base);
              return r3.call(this, d, "base");
            }
            return _createClass(Base);
          }(l.StringObject), D = function(t3) {
            _inherits(BatchOutput, t3);
            var r3 = _createSuper(BatchOutput);
            function BatchOutput(t4) {
              var o3;
              _classCallCheck(this, BatchOutput);
              (o3 = r3.call(this, d, "batchOutput")).format = (0, u.getStringOption)(t4.format, ["none", "concat", "zip", "zipCompress"]);
              return o3;
            }
            return _createClass(BatchOutput);
          }(l.XFAObject), j = function(t3) {
            _inherits(BehaviorOverride, t3);
            var r3 = _createSuper(BehaviorOverride);
            function BehaviorOverride(t4) {
              _classCallCheck(this, BehaviorOverride);
              return r3.call(this, d, "behaviorOverride");
            }
            _createClass(BehaviorOverride, [{ key: l.$finalize, value: function value() {
              this[l.$content] = new Map(this[l.$content].trim().split(/\s+/).filter(function(t4) {
                return t4.includes(":");
              }).map(function(t4) {
                return t4.split(":", 2);
              }));
            } }]);
            return BehaviorOverride;
          }(l.ContentObject), L = function(t3) {
            _inherits(Cache, t3);
            var r3 = _createSuper(Cache);
            function Cache(t4) {
              var o3;
              _classCallCheck(this, Cache);
              (o3 = r3.call(this, d, "cache", true)).templateCache = null;
              return o3;
            }
            return _createClass(Cache);
          }(l.XFAObject), N = function(t3) {
            _inherits(Change, t3);
            var r3 = _createSuper(Change);
            function Change(t4) {
              _classCallCheck(this, Change);
              return r3.call(this, d, "change");
            }
            return _createClass(Change);
          }(l.Option01), U = function(t3) {
            _inherits(Common, t3);
            var r3 = _createSuper(Common);
            function Common(t4) {
              var o3;
              _classCallCheck(this, Common);
              (o3 = r3.call(this, d, "common", true)).data = null;
              o3.locale = null;
              o3.localeSet = null;
              o3.messaging = null;
              o3.suppressBanner = null;
              o3.template = null;
              o3.validationMessaging = null;
              o3.versionControl = null;
              o3.log = new l.XFAObjectArray();
              return o3;
            }
            return _createClass(Common);
          }(l.XFAObject), H = function(t3) {
            _inherits(Compress, t3);
            var r3 = _createSuper(Compress);
            function Compress(t4) {
              var o3;
              _classCallCheck(this, Compress);
              (o3 = r3.call(this, d, "compress")).scope = (0, u.getStringOption)(t4.scope, ["imageOnly", "document"]);
              return o3;
            }
            return _createClass(Compress);
          }(l.XFAObject), $ = function(t3) {
            _inherits(CompressLogicalStructure, t3);
            var r3 = _createSuper(CompressLogicalStructure);
            function CompressLogicalStructure(t4) {
              _classCallCheck(this, CompressLogicalStructure);
              return r3.call(this, d, "compressLogicalStructure");
            }
            return _createClass(CompressLogicalStructure);
          }(l.Option01), X = function(t3) {
            _inherits(CompressObjectStream, t3);
            var r3 = _createSuper(CompressObjectStream);
            function CompressObjectStream(t4) {
              _classCallCheck(this, CompressObjectStream);
              return r3.call(this, d, "compressObjectStream");
            }
            return _createClass(CompressObjectStream);
          }(l.Option10), q = function(t3) {
            _inherits(Compression, t3);
            var r3 = _createSuper(Compression);
            function Compression(t4) {
              var o3;
              _classCallCheck(this, Compression);
              (o3 = r3.call(this, d, "compression", true)).compressLogicalStructure = null;
              o3.compressObjectStream = null;
              o3.level = null;
              o3.type = null;
              return o3;
            }
            return _createClass(Compression);
          }(l.XFAObject), G = function(t3) {
            _inherits(Config, t3);
            var r3 = _createSuper(Config);
            function Config(t4) {
              var o3;
              _classCallCheck(this, Config);
              (o3 = r3.call(this, d, "config", true)).acrobat = null;
              o3.present = null;
              o3.trace = null;
              o3.agent = new l.XFAObjectArray();
              return o3;
            }
            return _createClass(Config);
          }(l.XFAObject), z = function(t3) {
            _inherits(Conformance, t3);
            var r3 = _createSuper(Conformance);
            function Conformance(t4) {
              _classCallCheck(this, Conformance);
              return r3.call(this, d, "conformance", ["A", "B"]);
            }
            return _createClass(Conformance);
          }(l.OptionObject), W = function(t3) {
            _inherits(ContentCopy, t3);
            var r3 = _createSuper(ContentCopy);
            function ContentCopy(t4) {
              _classCallCheck(this, ContentCopy);
              return r3.call(this, d, "contentCopy");
            }
            return _createClass(ContentCopy);
          }(l.Option01), V = function(t3) {
            _inherits(Copies, t3);
            var r3 = _createSuper(Copies);
            function Copies(t4) {
              _classCallCheck(this, Copies);
              return r3.call(this, d, "copies", 1, function(t5) {
                return t5 >= 1;
              });
            }
            return _createClass(Copies);
          }(l.IntegerObject), K = function(t3) {
            _inherits(Creator, t3);
            var r3 = _createSuper(Creator);
            function Creator(t4) {
              _classCallCheck(this, Creator);
              return r3.call(this, d, "creator");
            }
            return _createClass(Creator);
          }(l.StringObject), Y = function(t3) {
            _inherits(CurrentPage, t3);
            var r3 = _createSuper(CurrentPage);
            function CurrentPage(t4) {
              _classCallCheck(this, CurrentPage);
              return r3.call(this, d, "currentPage", 0, function(t5) {
                return t5 >= 0;
              });
            }
            return _createClass(CurrentPage);
          }(l.IntegerObject), J = function(t3) {
            _inherits(Data, t3);
            var r3 = _createSuper(Data);
            function Data(t4) {
              var o3;
              _classCallCheck(this, Data);
              (o3 = r3.call(this, d, "data", true)).adjustData = null;
              o3.attributes = null;
              o3.incrementalLoad = null;
              o3.outputXSL = null;
              o3.range = null;
              o3.record = null;
              o3.startNode = null;
              o3.uri = null;
              o3.window = null;
              o3.xsl = null;
              o3.excludeNS = new l.XFAObjectArray();
              o3.transform = new l.XFAObjectArray();
              return o3;
            }
            return _createClass(Data);
          }(l.XFAObject), Z = function(t3) {
            _inherits(Debug, t3);
            var r3 = _createSuper(Debug);
            function Debug(t4) {
              var o3;
              _classCallCheck(this, Debug);
              (o3 = r3.call(this, d, "debug", true)).uri = null;
              return o3;
            }
            return _createClass(Debug);
          }(l.XFAObject), Q = function(t3) {
            _inherits(DefaultTypeface, t3);
            var r3 = _createSuper(DefaultTypeface);
            function DefaultTypeface(t4) {
              var o3;
              _classCallCheck(this, DefaultTypeface);
              (o3 = r3.call(this, d, "defaultTypeface")).writingScript = (0, u.getStringOption)(t4.writingScript, ["*", "Arabic", "Cyrillic", "EastEuropeanRoman", "Greek", "Hebrew", "Japanese", "Korean", "Roman", "SimplifiedChinese", "Thai", "TraditionalChinese", "Vietnamese"]);
              return o3;
            }
            return _createClass(DefaultTypeface);
          }(l.ContentObject), ee = function(t3) {
            _inherits(Destination, t3);
            var r3 = _createSuper(Destination);
            function Destination(t4) {
              _classCallCheck(this, Destination);
              return r3.call(this, d, "destination", ["pdf", "pcl", "ps", "webClient", "zpl"]);
            }
            return _createClass(Destination);
          }(l.OptionObject), te = function(t3) {
            _inherits(DocumentAssembly, t3);
            var r3 = _createSuper(DocumentAssembly);
            function DocumentAssembly(t4) {
              _classCallCheck(this, DocumentAssembly);
              return r3.call(this, d, "documentAssembly");
            }
            return _createClass(DocumentAssembly);
          }(l.Option01), re = function(t3) {
            _inherits(Driver, t3);
            var r3 = _createSuper(Driver);
            function Driver(t4) {
              var o3;
              _classCallCheck(this, Driver);
              (o3 = r3.call(this, d, "driver", true)).name = t4.name ? t4.name.trim() : "";
              o3.fontInfo = null;
              o3.xdc = null;
              return o3;
            }
            return _createClass(Driver);
          }(l.XFAObject), ae = function(t3) {
            _inherits(DuplexOption, t3);
            var r3 = _createSuper(DuplexOption);
            function DuplexOption(t4) {
              _classCallCheck(this, DuplexOption);
              return r3.call(this, d, "duplexOption", ["simplex", "duplexFlipLongEdge", "duplexFlipShortEdge"]);
            }
            return _createClass(DuplexOption);
          }(l.OptionObject), ne = function(t3) {
            _inherits(DynamicRender, t3);
            var r3 = _createSuper(DynamicRender);
            function DynamicRender(t4) {
              _classCallCheck(this, DynamicRender);
              return r3.call(this, d, "dynamicRender", ["forbidden", "required"]);
            }
            return _createClass(DynamicRender);
          }(l.OptionObject), ie = function(t3) {
            _inherits(Embed, t3);
            var r3 = _createSuper(Embed);
            function Embed(t4) {
              _classCallCheck(this, Embed);
              return r3.call(this, d, "embed");
            }
            return _createClass(Embed);
          }(l.Option01), oe = function(t3) {
            _inherits(Encrypt, t3);
            var r3 = _createSuper(Encrypt);
            function Encrypt(t4) {
              _classCallCheck(this, Encrypt);
              return r3.call(this, d, "encrypt");
            }
            return _createClass(Encrypt);
          }(l.Option01), se = function(t3) {
            _inherits(Encryption, t3);
            var r3 = _createSuper(Encryption);
            function Encryption(t4) {
              var o3;
              _classCallCheck(this, Encryption);
              (o3 = r3.call(this, d, "encryption", true)).encrypt = null;
              o3.encryptionLevel = null;
              o3.permissions = null;
              return o3;
            }
            return _createClass(Encryption);
          }(l.XFAObject), ce = function(t3) {
            _inherits(EncryptionLevel, t3);
            var r3 = _createSuper(EncryptionLevel);
            function EncryptionLevel(t4) {
              _classCallCheck(this, EncryptionLevel);
              return r3.call(this, d, "encryptionLevel", ["40bit", "128bit"]);
            }
            return _createClass(EncryptionLevel);
          }(l.OptionObject), le = function(t3) {
            _inherits(Enforce, t3);
            var r3 = _createSuper(Enforce);
            function Enforce(t4) {
              _classCallCheck(this, Enforce);
              return r3.call(this, d, "enforce");
            }
            return _createClass(Enforce);
          }(l.StringObject), ue = function(t3) {
            _inherits(Equate, t3);
            var r3 = _createSuper(Equate);
            function Equate(t4) {
              var o3;
              _classCallCheck(this, Equate);
              (o3 = r3.call(this, d, "equate")).force = (0, u.getInteger)({ data: t4.force, defaultValue: 1, validate: function validate(t5) {
                return t5 === 0;
              } });
              o3.from = t4.from || "";
              o3.to = t4.to || "";
              return o3;
            }
            return _createClass(Equate);
          }(l.XFAObject), fe = function(t3) {
            _inherits(EquateRange, t3);
            var r3 = _createSuper(EquateRange);
            function EquateRange(t4) {
              var o3;
              _classCallCheck(this, EquateRange);
              (o3 = r3.call(this, d, "equateRange")).from = t4.from || "";
              o3.to = t4.to || "";
              o3._unicodeRange = t4.unicodeRange || "";
              return o3;
            }
            _createClass(EquateRange, [{ key: "unicodeRange", get: function get() {
              var t4, r4 = [], o3 = /U\+([0-9a-fA-F]+)/, c2 = _createForOfIteratorHelper(this._unicodeRange.split(",").map(function(t5) {
                return t5.trim();
              }).filter(function(t5) {
                return !!t5;
              }));
              try {
                for (c2.s(); !(t4 = c2.n()).done; ) {
                  var l2 = t4.value;
                  (l2 = l2.split("-", 2).map(function(t5) {
                    var r5 = t5.match(o3);
                    return r5 ? parseInt(r5[1], 16) : 0;
                  })).length === 1 && l2.push(l2[0]);
                  r4.push(l2);
                }
              } catch (t5) {
                c2.e(t5);
              } finally {
                c2.f();
              }
              return (0, h.shadow)(this, "unicodeRange", r4);
            } }]);
            return EquateRange;
          }(l.XFAObject), he = function(t3) {
            _inherits(Exclude, t3);
            var r3 = _createSuper(Exclude);
            function Exclude(t4) {
              _classCallCheck(this, Exclude);
              return r3.call(this, d, "exclude");
            }
            _createClass(Exclude, [{ key: l.$finalize, value: function value() {
              this[l.$content] = this[l.$content].trim().split(/\s+/).filter(function(t4) {
                return t4 && ["calculate", "close", "enter", "exit", "initialize", "ready", "validate"].includes(t4);
              });
            } }]);
            return Exclude;
          }(l.ContentObject), de = function(t3) {
            _inherits(ExcludeNS, t3);
            var r3 = _createSuper(ExcludeNS);
            function ExcludeNS(t4) {
              _classCallCheck(this, ExcludeNS);
              return r3.call(this, d, "excludeNS");
            }
            return _createClass(ExcludeNS);
          }(l.StringObject), pe = function(t3) {
            _inherits(FlipLabel, t3);
            var r3 = _createSuper(FlipLabel);
            function FlipLabel(t4) {
              _classCallCheck(this, FlipLabel);
              return r3.call(this, d, "flipLabel", ["usePrinterSetting", "on", "off"]);
            }
            return _createClass(FlipLabel);
          }(l.OptionObject), ge = function(t3) {
            _inherits(FontInfo, t3);
            var r3 = _createSuper(FontInfo);
            function FontInfo(t4) {
              var o3;
              _classCallCheck(this, FontInfo);
              (o3 = r3.call(this, d, "fontInfo", true)).embed = null;
              o3.map = null;
              o3.subsetBelow = null;
              o3.alwaysEmbed = new l.XFAObjectArray();
              o3.defaultTypeface = new l.XFAObjectArray();
              o3.neverEmbed = new l.XFAObjectArray();
              return o3;
            }
            return _createClass(FontInfo);
          }(l.XFAObject), me = function(t3) {
            _inherits(FormFieldFilling, t3);
            var r3 = _createSuper(FormFieldFilling);
            function FormFieldFilling(t4) {
              _classCallCheck(this, FormFieldFilling);
              return r3.call(this, d, "formFieldFilling");
            }
            return _createClass(FormFieldFilling);
          }(l.Option01), ye = function(t3) {
            _inherits(GroupParent, t3);
            var r3 = _createSuper(GroupParent);
            function GroupParent(t4) {
              _classCallCheck(this, GroupParent);
              return r3.call(this, d, "groupParent");
            }
            return _createClass(GroupParent);
          }(l.StringObject), ve = function(t3) {
            _inherits(IfEmpty, t3);
            var r3 = _createSuper(IfEmpty);
            function IfEmpty(t4) {
              _classCallCheck(this, IfEmpty);
              return r3.call(this, d, "ifEmpty", ["dataValue", "dataGroup", "ignore", "remove"]);
            }
            return _createClass(IfEmpty);
          }(l.OptionObject), be = function(t3) {
            _inherits(IncludeXDPContent, t3);
            var r3 = _createSuper(IncludeXDPContent);
            function IncludeXDPContent(t4) {
              _classCallCheck(this, IncludeXDPContent);
              return r3.call(this, d, "includeXDPContent");
            }
            return _createClass(IncludeXDPContent);
          }(l.StringObject), ke = function(t3) {
            _inherits(IncrementalLoad, t3);
            var r3 = _createSuper(IncrementalLoad);
            function IncrementalLoad(t4) {
              _classCallCheck(this, IncrementalLoad);
              return r3.call(this, d, "incrementalLoad", ["none", "forwardOnly"]);
            }
            return _createClass(IncrementalLoad);
          }(l.OptionObject), _e = function(t3) {
            _inherits(IncrementalMerge, t3);
            var r3 = _createSuper(IncrementalMerge);
            function IncrementalMerge(t4) {
              _classCallCheck(this, IncrementalMerge);
              return r3.call(this, d, "incrementalMerge");
            }
            return _createClass(IncrementalMerge);
          }(l.Option01), we = function(t3) {
            _inherits(Interactive, t3);
            var r3 = _createSuper(Interactive);
            function Interactive(t4) {
              _classCallCheck(this, Interactive);
              return r3.call(this, d, "interactive");
            }
            return _createClass(Interactive);
          }(l.Option01), Se = function(t3) {
            _inherits(Jog, t3);
            var r3 = _createSuper(Jog);
            function Jog(t4) {
              _classCallCheck(this, Jog);
              return r3.call(this, d, "jog", ["usePrinterSetting", "none", "pageSet"]);
            }
            return _createClass(Jog);
          }(l.OptionObject), Ce = function(t3) {
            _inherits(LabelPrinter, t3);
            var r3 = _createSuper(LabelPrinter);
            function LabelPrinter(t4) {
              var o3;
              _classCallCheck(this, LabelPrinter);
              (o3 = r3.call(this, d, "labelPrinter", true)).name = (0, u.getStringOption)(t4.name, ["zpl", "dpl", "ipl", "tcpl"]);
              o3.batchOutput = null;
              o3.flipLabel = null;
              o3.fontInfo = null;
              o3.xdc = null;
              return o3;
            }
            return _createClass(LabelPrinter);
          }(l.XFAObject), xe = function(t3) {
            _inherits(Layout, t3);
            var r3 = _createSuper(Layout);
            function Layout(t4) {
              _classCallCheck(this, Layout);
              return r3.call(this, d, "layout", ["paginate", "panel"]);
            }
            return _createClass(Layout);
          }(l.OptionObject), Oe = function(t3) {
            _inherits(Level, t3);
            var r3 = _createSuper(Level);
            function Level(t4) {
              _classCallCheck(this, Level);
              return r3.call(this, d, "level", 0, function(t5) {
                return t5 > 0;
              });
            }
            return _createClass(Level);
          }(l.IntegerObject), Ae = function(t3) {
            _inherits(Linearized, t3);
            var r3 = _createSuper(Linearized);
            function Linearized(t4) {
              _classCallCheck(this, Linearized);
              return r3.call(this, d, "linearized");
            }
            return _createClass(Linearized);
          }(l.Option01), Pe = function(t3) {
            _inherits(Locale, t3);
            var r3 = _createSuper(Locale);
            function Locale(t4) {
              _classCallCheck(this, Locale);
              return r3.call(this, d, "locale");
            }
            return _createClass(Locale);
          }(l.StringObject), Te = function(t3) {
            _inherits(LocaleSet, t3);
            var r3 = _createSuper(LocaleSet);
            function LocaleSet(t4) {
              _classCallCheck(this, LocaleSet);
              return r3.call(this, d, "localeSet");
            }
            return _createClass(LocaleSet);
          }(l.StringObject), Fe = function(t3) {
            _inherits(Log, t3);
            var r3 = _createSuper(Log);
            function Log(t4) {
              var o3;
              _classCallCheck(this, Log);
              (o3 = r3.call(this, d, "log", true)).mode = null;
              o3.threshold = null;
              o3.to = null;
              o3.uri = null;
              return o3;
            }
            return _createClass(Log);
          }(l.XFAObject), Ie = function(t3) {
            _inherits(MapElement, t3);
            var r3 = _createSuper(MapElement);
            function MapElement(t4) {
              var o3;
              _classCallCheck(this, MapElement);
              (o3 = r3.call(this, d, "map", true)).equate = new l.XFAObjectArray();
              o3.equateRange = new l.XFAObjectArray();
              return o3;
            }
            return _createClass(MapElement);
          }(l.XFAObject), Ee = function(t3) {
            _inherits(MediumInfo, t3);
            var r3 = _createSuper(MediumInfo);
            function MediumInfo(t4) {
              var o3;
              _classCallCheck(this, MediumInfo);
              (o3 = r3.call(this, d, "mediumInfo", true)).map = null;
              return o3;
            }
            return _createClass(MediumInfo);
          }(l.XFAObject), Me = function(t3) {
            _inherits(Message, t3);
            var r3 = _createSuper(Message);
            function Message(t4) {
              var o3;
              _classCallCheck(this, Message);
              (o3 = r3.call(this, d, "message", true)).msgId = null;
              o3.severity = null;
              return o3;
            }
            return _createClass(Message);
          }(l.XFAObject), Re = function(t3) {
            _inherits(Messaging, t3);
            var r3 = _createSuper(Messaging);
            function Messaging(t4) {
              var o3;
              _classCallCheck(this, Messaging);
              (o3 = r3.call(this, d, "messaging", true)).message = new l.XFAObjectArray();
              return o3;
            }
            return _createClass(Messaging);
          }(l.XFAObject), De = function(t3) {
            _inherits(Mode, t3);
            var r3 = _createSuper(Mode);
            function Mode(t4) {
              _classCallCheck(this, Mode);
              return r3.call(this, d, "mode", ["append", "overwrite"]);
            }
            return _createClass(Mode);
          }(l.OptionObject), je = function(t3) {
            _inherits(ModifyAnnots, t3);
            var r3 = _createSuper(ModifyAnnots);
            function ModifyAnnots(t4) {
              _classCallCheck(this, ModifyAnnots);
              return r3.call(this, d, "modifyAnnots");
            }
            return _createClass(ModifyAnnots);
          }(l.Option01), Be = function(t3) {
            _inherits(MsgId, t3);
            var r3 = _createSuper(MsgId);
            function MsgId(t4) {
              _classCallCheck(this, MsgId);
              return r3.call(this, d, "msgId", 1, function(t5) {
                return t5 >= 1;
              });
            }
            return _createClass(MsgId);
          }(l.IntegerObject), Le = function(t3) {
            _inherits(NameAttr, t3);
            var r3 = _createSuper(NameAttr);
            function NameAttr(t4) {
              _classCallCheck(this, NameAttr);
              return r3.call(this, d, "nameAttr");
            }
            return _createClass(NameAttr);
          }(l.StringObject), Ne = function(t3) {
            _inherits(NeverEmbed, t3);
            var r3 = _createSuper(NeverEmbed);
            function NeverEmbed(t4) {
              _classCallCheck(this, NeverEmbed);
              return r3.call(this, d, "neverEmbed");
            }
            return _createClass(NeverEmbed);
          }(l.ContentObject), Ue = function(t3) {
            _inherits(NumberOfCopies, t3);
            var r3 = _createSuper(NumberOfCopies);
            function NumberOfCopies(t4) {
              _classCallCheck(this, NumberOfCopies);
              return r3.call(this, d, "numberOfCopies", null, function(t5) {
                return t5 >= 2 && t5 <= 5;
              });
            }
            return _createClass(NumberOfCopies);
          }(l.IntegerObject), He = function(t3) {
            _inherits(OpenAction, t3);
            var r3 = _createSuper(OpenAction);
            function OpenAction(t4) {
              var o3;
              _classCallCheck(this, OpenAction);
              (o3 = r3.call(this, d, "openAction", true)).destination = null;
              return o3;
            }
            return _createClass(OpenAction);
          }(l.XFAObject), $e = function(t3) {
            _inherits(Output, t3);
            var r3 = _createSuper(Output);
            function Output(t4) {
              var o3;
              _classCallCheck(this, Output);
              (o3 = r3.call(this, d, "output", true)).to = null;
              o3.type = null;
              o3.uri = null;
              return o3;
            }
            return _createClass(Output);
          }(l.XFAObject), Xe = function(t3) {
            _inherits(OutputBin, t3);
            var r3 = _createSuper(OutputBin);
            function OutputBin(t4) {
              _classCallCheck(this, OutputBin);
              return r3.call(this, d, "outputBin");
            }
            return _createClass(OutputBin);
          }(l.StringObject), qe = function(t3) {
            _inherits(OutputXSL, t3);
            var r3 = _createSuper(OutputXSL);
            function OutputXSL(t4) {
              var o3;
              _classCallCheck(this, OutputXSL);
              (o3 = r3.call(this, d, "outputXSL", true)).uri = null;
              return o3;
            }
            return _createClass(OutputXSL);
          }(l.XFAObject), Ge = function(t3) {
            _inherits(Overprint, t3);
            var r3 = _createSuper(Overprint);
            function Overprint(t4) {
              _classCallCheck(this, Overprint);
              return r3.call(this, d, "overprint", ["none", "both", "draw", "field"]);
            }
            return _createClass(Overprint);
          }(l.OptionObject), ze = function(t3) {
            _inherits(Packets, t3);
            var r3 = _createSuper(Packets);
            function Packets(t4) {
              _classCallCheck(this, Packets);
              return r3.call(this, d, "packets");
            }
            _createClass(Packets, [{ key: l.$finalize, value: function value() {
              this[l.$content] !== "*" && (this[l.$content] = this[l.$content].trim().split(/\s+/).filter(function(t4) {
                return ["config", "datasets", "template", "xfdf", "xslt"].includes(t4);
              }));
            } }]);
            return Packets;
          }(l.StringObject), We = function(t3) {
            _inherits(PageOffset, t3);
            var r3 = _createSuper(PageOffset);
            function PageOffset(t4) {
              var o3;
              _classCallCheck(this, PageOffset);
              (o3 = r3.call(this, d, "pageOffset")).x = (0, u.getInteger)({ data: t4.x, defaultValue: "useXDCSetting", validate: function validate(t5) {
                return true;
              } });
              o3.y = (0, u.getInteger)({ data: t4.y, defaultValue: "useXDCSetting", validate: function validate(t5) {
                return true;
              } });
              return o3;
            }
            return _createClass(PageOffset);
          }(l.XFAObject), Ve = function(t3) {
            _inherits(PageRange, t3);
            var r3 = _createSuper(PageRange);
            function PageRange(t4) {
              _classCallCheck(this, PageRange);
              return r3.call(this, d, "pageRange");
            }
            _createClass(PageRange, [{ key: l.$finalize, value: function value() {
              for (var t4 = this[l.$content].trim().split(/\s+/).map(function(t5) {
                return parseInt(t5, 10);
              }), r4 = [], o3 = 0, c2 = t4.length; o3 < c2; o3 += 2)
                r4.push(t4.slice(o3, o3 + 2));
              this[l.$content] = r4;
            } }]);
            return PageRange;
          }(l.StringObject), Ke = function(t3) {
            _inherits(Pagination, t3);
            var r3 = _createSuper(Pagination);
            function Pagination(t4) {
              _classCallCheck(this, Pagination);
              return r3.call(this, d, "pagination", ["simplex", "duplexShortEdge", "duplexLongEdge"]);
            }
            return _createClass(Pagination);
          }(l.OptionObject), Ye = function(t3) {
            _inherits(PaginationOverride, t3);
            var r3 = _createSuper(PaginationOverride);
            function PaginationOverride(t4) {
              _classCallCheck(this, PaginationOverride);
              return r3.call(this, d, "paginationOverride", ["none", "forceDuplex", "forceDuplexLongEdge", "forceDuplexShortEdge", "forceSimplex"]);
            }
            return _createClass(PaginationOverride);
          }(l.OptionObject), Je = function(t3) {
            _inherits(Part, t3);
            var r3 = _createSuper(Part);
            function Part(t4) {
              _classCallCheck(this, Part);
              return r3.call(this, d, "part", 1, function(t5) {
                return false;
              });
            }
            return _createClass(Part);
          }(l.IntegerObject), Ze = function(t3) {
            _inherits(Pcl, t3);
            var r3 = _createSuper(Pcl);
            function Pcl(t4) {
              var o3;
              _classCallCheck(this, Pcl);
              (o3 = r3.call(this, d, "pcl", true)).name = t4.name || "";
              o3.batchOutput = null;
              o3.fontInfo = null;
              o3.jog = null;
              o3.mediumInfo = null;
              o3.outputBin = null;
              o3.pageOffset = null;
              o3.staple = null;
              o3.xdc = null;
              return o3;
            }
            return _createClass(Pcl);
          }(l.XFAObject), Qe = function(t3) {
            _inherits(Pdf, t3);
            var r3 = _createSuper(Pdf);
            function Pdf(t4) {
              var o3;
              _classCallCheck(this, Pdf);
              (o3 = r3.call(this, d, "pdf", true)).name = t4.name || "";
              o3.adobeExtensionLevel = null;
              o3.batchOutput = null;
              o3.compression = null;
              o3.creator = null;
              o3.encryption = null;
              o3.fontInfo = null;
              o3.interactive = null;
              o3.linearized = null;
              o3.openAction = null;
              o3.pdfa = null;
              o3.producer = null;
              o3.renderPolicy = null;
              o3.scriptModel = null;
              o3.silentPrint = null;
              o3.submitFormat = null;
              o3.tagged = null;
              o3.version = null;
              o3.viewerPreferences = null;
              o3.xdc = null;
              return o3;
            }
            return _createClass(Pdf);
          }(l.XFAObject), et = function(t3) {
            _inherits(Pdfa, t3);
            var r3 = _createSuper(Pdfa);
            function Pdfa(t4) {
              var o3;
              _classCallCheck(this, Pdfa);
              (o3 = r3.call(this, d, "pdfa", true)).amd = null;
              o3.conformance = null;
              o3.includeXDPContent = null;
              o3.part = null;
              return o3;
            }
            return _createClass(Pdfa);
          }(l.XFAObject), tt = function(t3) {
            _inherits(Permissions, t3);
            var r3 = _createSuper(Permissions);
            function Permissions(t4) {
              var o3;
              _classCallCheck(this, Permissions);
              (o3 = r3.call(this, d, "permissions", true)).accessibleContent = null;
              o3.change = null;
              o3.contentCopy = null;
              o3.documentAssembly = null;
              o3.formFieldFilling = null;
              o3.modifyAnnots = null;
              o3.plaintextMetadata = null;
              o3.print = null;
              o3.printHighQuality = null;
              return o3;
            }
            return _createClass(Permissions);
          }(l.XFAObject), rt = function(t3) {
            _inherits(PickTrayByPDFSize, t3);
            var r3 = _createSuper(PickTrayByPDFSize);
            function PickTrayByPDFSize(t4) {
              _classCallCheck(this, PickTrayByPDFSize);
              return r3.call(this, d, "pickTrayByPDFSize");
            }
            return _createClass(PickTrayByPDFSize);
          }(l.Option01), at = function(t3) {
            _inherits(Picture, t3);
            var r3 = _createSuper(Picture);
            function Picture(t4) {
              _classCallCheck(this, Picture);
              return r3.call(this, d, "picture");
            }
            return _createClass(Picture);
          }(l.StringObject), nt = function(t3) {
            _inherits(PlaintextMetadata, t3);
            var r3 = _createSuper(PlaintextMetadata);
            function PlaintextMetadata(t4) {
              _classCallCheck(this, PlaintextMetadata);
              return r3.call(this, d, "plaintextMetadata");
            }
            return _createClass(PlaintextMetadata);
          }(l.Option01), it = function(t3) {
            _inherits(Presence, t3);
            var r3 = _createSuper(Presence);
            function Presence(t4) {
              _classCallCheck(this, Presence);
              return r3.call(this, d, "presence", ["preserve", "dissolve", "dissolveStructure", "ignore", "remove"]);
            }
            return _createClass(Presence);
          }(l.OptionObject), ot = function(t3) {
            _inherits(Present, t3);
            var r3 = _createSuper(Present);
            function Present(t4) {
              var o3;
              _classCallCheck(this, Present);
              (o3 = r3.call(this, d, "present", true)).behaviorOverride = null;
              o3.cache = null;
              o3.common = null;
              o3.copies = null;
              o3.destination = null;
              o3.incrementalMerge = null;
              o3.layout = null;
              o3.output = null;
              o3.overprint = null;
              o3.pagination = null;
              o3.paginationOverride = null;
              o3.script = null;
              o3.validate = null;
              o3.xdp = null;
              o3.driver = new l.XFAObjectArray();
              o3.labelPrinter = new l.XFAObjectArray();
              o3.pcl = new l.XFAObjectArray();
              o3.pdf = new l.XFAObjectArray();
              o3.ps = new l.XFAObjectArray();
              o3.submitUrl = new l.XFAObjectArray();
              o3.webClient = new l.XFAObjectArray();
              o3.zpl = new l.XFAObjectArray();
              return o3;
            }
            return _createClass(Present);
          }(l.XFAObject), st = function(t3) {
            _inherits(Print, t3);
            var r3 = _createSuper(Print);
            function Print(t4) {
              _classCallCheck(this, Print);
              return r3.call(this, d, "print");
            }
            return _createClass(Print);
          }(l.Option01), ct = function(t3) {
            _inherits(PrintHighQuality, t3);
            var r3 = _createSuper(PrintHighQuality);
            function PrintHighQuality(t4) {
              _classCallCheck(this, PrintHighQuality);
              return r3.call(this, d, "printHighQuality");
            }
            return _createClass(PrintHighQuality);
          }(l.Option01), lt = function(t3) {
            _inherits(PrintScaling, t3);
            var r3 = _createSuper(PrintScaling);
            function PrintScaling(t4) {
              _classCallCheck(this, PrintScaling);
              return r3.call(this, d, "printScaling", ["appdefault", "noScaling"]);
            }
            return _createClass(PrintScaling);
          }(l.OptionObject), ut = function(t3) {
            _inherits(PrinterName, t3);
            var r3 = _createSuper(PrinterName);
            function PrinterName(t4) {
              _classCallCheck(this, PrinterName);
              return r3.call(this, d, "printerName");
            }
            return _createClass(PrinterName);
          }(l.StringObject), ft = function(t3) {
            _inherits(Producer, t3);
            var r3 = _createSuper(Producer);
            function Producer(t4) {
              _classCallCheck(this, Producer);
              return r3.call(this, d, "producer");
            }
            return _createClass(Producer);
          }(l.StringObject), ht = function(t3) {
            _inherits(Ps, t3);
            var r3 = _createSuper(Ps);
            function Ps(t4) {
              var o3;
              _classCallCheck(this, Ps);
              (o3 = r3.call(this, d, "ps", true)).name = t4.name || "";
              o3.batchOutput = null;
              o3.fontInfo = null;
              o3.jog = null;
              o3.mediumInfo = null;
              o3.outputBin = null;
              o3.staple = null;
              o3.xdc = null;
              return o3;
            }
            return _createClass(Ps);
          }(l.XFAObject), dt = function(t3) {
            _inherits(Range, t3);
            var r3 = _createSuper(Range);
            function Range(t4) {
              _classCallCheck(this, Range);
              return r3.call(this, d, "range");
            }
            _createClass(Range, [{ key: l.$finalize, value: function value() {
              this[l.$content] = this[l.$content].trim().split(/\s*,\s*/, 2).map(function(t4) {
                return t4.split("-").map(function(t5) {
                  return parseInt(t5.trim(), 10);
                });
              }).filter(function(t4) {
                return t4.every(function(t5) {
                  return !isNaN(t5);
                });
              }).map(function(t4) {
                t4.length === 1 && t4.push(t4[0]);
                return t4;
              });
            } }]);
            return Range;
          }(l.ContentObject), gt = function(t3) {
            _inherits(Record, t3);
            var r3 = _createSuper(Record);
            function Record(t4) {
              _classCallCheck(this, Record);
              return r3.call(this, d, "record");
            }
            _createClass(Record, [{ key: l.$finalize, value: function value() {
              this[l.$content] = this[l.$content].trim();
              var t4 = parseInt(this[l.$content], 10);
              !isNaN(t4) && t4 >= 0 && (this[l.$content] = t4);
            } }]);
            return Record;
          }(l.ContentObject), mt = function(t3) {
            _inherits(Relevant, t3);
            var r3 = _createSuper(Relevant);
            function Relevant(t4) {
              _classCallCheck(this, Relevant);
              return r3.call(this, d, "relevant");
            }
            _createClass(Relevant, [{ key: l.$finalize, value: function value() {
              this[l.$content] = this[l.$content].trim().split(/\s+/);
            } }]);
            return Relevant;
          }(l.ContentObject), yt = function(t3) {
            _inherits(Rename, t3);
            var r3 = _createSuper(Rename);
            function Rename(t4) {
              _classCallCheck(this, Rename);
              return r3.call(this, d, "rename");
            }
            _createClass(Rename, [{ key: l.$finalize, value: function value() {
              this[l.$content] = this[l.$content].trim();
              (this[l.$content].toLowerCase().startsWith("xml") || this[l.$content].match(new RegExp("[\\p{L}_][\\p{L}\\d._\\p{M}-]*", "u"))) && (0, h.warn)("XFA - Rename: invalid XFA name");
            } }]);
            return Rename;
          }(l.ContentObject), vt = function(t3) {
            _inherits(RenderPolicy, t3);
            var r3 = _createSuper(RenderPolicy);
            function RenderPolicy(t4) {
              _classCallCheck(this, RenderPolicy);
              return r3.call(this, d, "renderPolicy", ["server", "client"]);
            }
            return _createClass(RenderPolicy);
          }(l.OptionObject), bt = function(t3) {
            _inherits(RunScripts, t3);
            var r3 = _createSuper(RunScripts);
            function RunScripts(t4) {
              _classCallCheck(this, RunScripts);
              return r3.call(this, d, "runScripts", ["both", "client", "none", "server"]);
            }
            return _createClass(RunScripts);
          }(l.OptionObject), kt = function(t3) {
            _inherits(Script, t3);
            var r3 = _createSuper(Script);
            function Script(t4) {
              var o3;
              _classCallCheck(this, Script);
              (o3 = r3.call(this, d, "script", true)).currentPage = null;
              o3.exclude = null;
              o3.runScripts = null;
              return o3;
            }
            return _createClass(Script);
          }(l.XFAObject), _t = function(t3) {
            _inherits(ScriptModel, t3);
            var r3 = _createSuper(ScriptModel);
            function ScriptModel(t4) {
              _classCallCheck(this, ScriptModel);
              return r3.call(this, d, "scriptModel", ["XFA", "none"]);
            }
            return _createClass(ScriptModel);
          }(l.OptionObject), wt = function(t3) {
            _inherits(Severity, t3);
            var r3 = _createSuper(Severity);
            function Severity(t4) {
              _classCallCheck(this, Severity);
              return r3.call(this, d, "severity", ["ignore", "error", "information", "trace", "warning"]);
            }
            return _createClass(Severity);
          }(l.OptionObject), St = function(t3) {
            _inherits(SilentPrint, t3);
            var r3 = _createSuper(SilentPrint);
            function SilentPrint(t4) {
              var o3;
              _classCallCheck(this, SilentPrint);
              (o3 = r3.call(this, d, "silentPrint", true)).addSilentPrint = null;
              o3.printerName = null;
              return o3;
            }
            return _createClass(SilentPrint);
          }(l.XFAObject), Ct = function(t3) {
            _inherits(Staple, t3);
            var r3 = _createSuper(Staple);
            function Staple(t4) {
              var o3;
              _classCallCheck(this, Staple);
              (o3 = r3.call(this, d, "staple")).mode = (0, u.getStringOption)(t4.mode, ["usePrinterSetting", "on", "off"]);
              return o3;
            }
            return _createClass(Staple);
          }(l.XFAObject), xt = function(t3) {
            _inherits(StartNode, t3);
            var r3 = _createSuper(StartNode);
            function StartNode(t4) {
              _classCallCheck(this, StartNode);
              return r3.call(this, d, "startNode");
            }
            return _createClass(StartNode);
          }(l.StringObject), Ot = function(t3) {
            _inherits(StartPage, t3);
            var r3 = _createSuper(StartPage);
            function StartPage(t4) {
              _classCallCheck(this, StartPage);
              return r3.call(this, d, "startPage", 0, function(t5) {
                return true;
              });
            }
            return _createClass(StartPage);
          }(l.IntegerObject), At = function(t3) {
            _inherits(SubmitFormat, t3);
            var r3 = _createSuper(SubmitFormat);
            function SubmitFormat(t4) {
              _classCallCheck(this, SubmitFormat);
              return r3.call(this, d, "submitFormat", ["html", "delegate", "fdf", "xml", "pdf"]);
            }
            return _createClass(SubmitFormat);
          }(l.OptionObject), Pt = function(t3) {
            _inherits(SubmitUrl, t3);
            var r3 = _createSuper(SubmitUrl);
            function SubmitUrl(t4) {
              _classCallCheck(this, SubmitUrl);
              return r3.call(this, d, "submitUrl");
            }
            return _createClass(SubmitUrl);
          }(l.StringObject), Tt = function(t3) {
            _inherits(SubsetBelow, t3);
            var r3 = _createSuper(SubsetBelow);
            function SubsetBelow(t4) {
              _classCallCheck(this, SubsetBelow);
              return r3.call(this, d, "subsetBelow", 100, function(t5) {
                return t5 >= 0 && t5 <= 100;
              });
            }
            return _createClass(SubsetBelow);
          }(l.IntegerObject), Ft = function(t3) {
            _inherits(SuppressBanner, t3);
            var r3 = _createSuper(SuppressBanner);
            function SuppressBanner(t4) {
              _classCallCheck(this, SuppressBanner);
              return r3.call(this, d, "suppressBanner");
            }
            return _createClass(SuppressBanner);
          }(l.Option01), It = function(t3) {
            _inherits(Tagged, t3);
            var r3 = _createSuper(Tagged);
            function Tagged(t4) {
              _classCallCheck(this, Tagged);
              return r3.call(this, d, "tagged");
            }
            return _createClass(Tagged);
          }(l.Option01), Et = function(t3) {
            _inherits(Template, t3);
            var r3 = _createSuper(Template);
            function Template(t4) {
              var o3;
              _classCallCheck(this, Template);
              (o3 = r3.call(this, d, "template", true)).base = null;
              o3.relevant = null;
              o3.startPage = null;
              o3.uri = null;
              o3.xsl = null;
              return o3;
            }
            return _createClass(Template);
          }(l.XFAObject), Mt = function(t3) {
            _inherits(Threshold, t3);
            var r3 = _createSuper(Threshold);
            function Threshold(t4) {
              _classCallCheck(this, Threshold);
              return r3.call(this, d, "threshold", ["trace", "error", "information", "warning"]);
            }
            return _createClass(Threshold);
          }(l.OptionObject), Rt = function(t3) {
            _inherits(To, t3);
            var r3 = _createSuper(To);
            function To(t4) {
              _classCallCheck(this, To);
              return r3.call(this, d, "to", ["null", "memory", "stderr", "stdout", "system", "uri"]);
            }
            return _createClass(To);
          }(l.OptionObject), Dt = function(t3) {
            _inherits(TemplateCache, t3);
            var r3 = _createSuper(TemplateCache);
            function TemplateCache(t4) {
              var o3;
              _classCallCheck(this, TemplateCache);
              (o3 = r3.call(this, d, "templateCache")).maxEntries = (0, u.getInteger)({ data: t4.maxEntries, defaultValue: 5, validate: function validate(t5) {
                return t5 >= 0;
              } });
              return o3;
            }
            return _createClass(TemplateCache);
          }(l.XFAObject), jt = function(t3) {
            _inherits(Trace, t3);
            var r3 = _createSuper(Trace);
            function Trace(t4) {
              var o3;
              _classCallCheck(this, Trace);
              (o3 = r3.call(this, d, "trace", true)).area = new l.XFAObjectArray();
              return o3;
            }
            return _createClass(Trace);
          }(l.XFAObject), Bt = function(t3) {
            _inherits(Transform, t3);
            var r3 = _createSuper(Transform);
            function Transform(t4) {
              var o3;
              _classCallCheck(this, Transform);
              (o3 = r3.call(this, d, "transform", true)).groupParent = null;
              o3.ifEmpty = null;
              o3.nameAttr = null;
              o3.picture = null;
              o3.presence = null;
              o3.rename = null;
              o3.whitespace = null;
              return o3;
            }
            return _createClass(Transform);
          }(l.XFAObject), Lt = function(t3) {
            _inherits(Type, t3);
            var r3 = _createSuper(Type);
            function Type(t4) {
              _classCallCheck(this, Type);
              return r3.call(this, d, "type", ["none", "ascii85", "asciiHex", "ccittfax", "flate", "lzw", "runLength", "native", "xdp", "mergedXDP"]);
            }
            return _createClass(Type);
          }(l.OptionObject), Nt = function(t3) {
            _inherits(Uri, t3);
            var r3 = _createSuper(Uri);
            function Uri(t4) {
              _classCallCheck(this, Uri);
              return r3.call(this, d, "uri");
            }
            return _createClass(Uri);
          }(l.StringObject), Ut = function(t3) {
            _inherits(Validate, t3);
            var r3 = _createSuper(Validate);
            function Validate(t4) {
              _classCallCheck(this, Validate);
              return r3.call(this, d, "validate", ["preSubmit", "prePrint", "preExecute", "preSave"]);
            }
            return _createClass(Validate);
          }(l.OptionObject), Ht = function(t3) {
            _inherits(ValidateApprovalSignatures, t3);
            var r3 = _createSuper(ValidateApprovalSignatures);
            function ValidateApprovalSignatures(t4) {
              _classCallCheck(this, ValidateApprovalSignatures);
              return r3.call(this, d, "validateApprovalSignatures");
            }
            _createClass(ValidateApprovalSignatures, [{ key: l.$finalize, value: function value() {
              this[l.$content] = this[l.$content].trim().split(/\s+/).filter(function(t4) {
                return ["docReady", "postSign"].includes(t4);
              });
            } }]);
            return ValidateApprovalSignatures;
          }(l.ContentObject), $t = function(t3) {
            _inherits(ValidationMessaging, t3);
            var r3 = _createSuper(ValidationMessaging);
            function ValidationMessaging(t4) {
              _classCallCheck(this, ValidationMessaging);
              return r3.call(this, d, "validationMessaging", ["allMessagesIndividually", "allMessagesTogether", "firstMessageOnly", "noMessages"]);
            }
            return _createClass(ValidationMessaging);
          }(l.OptionObject), Xt = function(t3) {
            _inherits(Version, t3);
            var r3 = _createSuper(Version);
            function Version(t4) {
              _classCallCheck(this, Version);
              return r3.call(this, d, "version", ["1.7", "1.6", "1.5", "1.4", "1.3", "1.2"]);
            }
            return _createClass(Version);
          }(l.OptionObject), qt = function(t3) {
            _inherits(VersionControl, t3);
            var r3 = _createSuper(VersionControl);
            function VersionControl(t4) {
              var o3;
              _classCallCheck(this, VersionControl);
              (o3 = r3.call(this, d, "VersionControl")).outputBelow = (0, u.getStringOption)(t4.outputBelow, ["warn", "error", "update"]);
              o3.sourceAbove = (0, u.getStringOption)(t4.sourceAbove, ["warn", "error"]);
              o3.sourceBelow = (0, u.getStringOption)(t4.sourceBelow, ["update", "maintain"]);
              return o3;
            }
            return _createClass(VersionControl);
          }(l.XFAObject), Gt = function(t3) {
            _inherits(ViewerPreferences, t3);
            var r3 = _createSuper(ViewerPreferences);
            function ViewerPreferences(t4) {
              var o3;
              _classCallCheck(this, ViewerPreferences);
              (o3 = r3.call(this, d, "viewerPreferences", true)).ADBE_JSConsole = null;
              o3.ADBE_JSDebugger = null;
              o3.addViewerPreferences = null;
              o3.duplexOption = null;
              o3.enforce = null;
              o3.numberOfCopies = null;
              o3.pageRange = null;
              o3.pickTrayByPDFSize = null;
              o3.printScaling = null;
              return o3;
            }
            return _createClass(ViewerPreferences);
          }(l.XFAObject), zt = function(t3) {
            _inherits(WebClient, t3);
            var r3 = _createSuper(WebClient);
            function WebClient(t4) {
              var o3;
              _classCallCheck(this, WebClient);
              (o3 = r3.call(this, d, "webClient", true)).name = t4.name ? t4.name.trim() : "";
              o3.fontInfo = null;
              o3.xdc = null;
              return o3;
            }
            return _createClass(WebClient);
          }(l.XFAObject), Wt = function(t3) {
            _inherits(Whitespace, t3);
            var r3 = _createSuper(Whitespace);
            function Whitespace(t4) {
              _classCallCheck(this, Whitespace);
              return r3.call(this, d, "whitespace", ["preserve", "ltrim", "normalize", "rtrim", "trim"]);
            }
            return _createClass(Whitespace);
          }(l.OptionObject), Vt = function(t3) {
            _inherits(Window, t3);
            var r3 = _createSuper(Window);
            function Window(t4) {
              _classCallCheck(this, Window);
              return r3.call(this, d, "window");
            }
            _createClass(Window, [{ key: l.$finalize, value: function value() {
              var t4 = this[l.$content].trim().split(/\s*,\s*/, 2).map(function(t5) {
                return parseInt(t5, 10);
              });
              if (t4.some(function(t5) {
                return isNaN(t5);
              }))
                this[l.$content] = [0, 0];
              else {
                t4.length === 1 && t4.push(t4[0]);
                this[l.$content] = t4;
              }
            } }]);
            return Window;
          }(l.ContentObject), Kt = function(t3) {
            _inherits(Xdc, t3);
            var r3 = _createSuper(Xdc);
            function Xdc(t4) {
              var o3;
              _classCallCheck(this, Xdc);
              (o3 = r3.call(this, d, "xdc", true)).uri = new l.XFAObjectArray();
              o3.xsl = new l.XFAObjectArray();
              return o3;
            }
            return _createClass(Xdc);
          }(l.XFAObject), Yt = function(t3) {
            _inherits(Xdp, t3);
            var r3 = _createSuper(Xdp);
            function Xdp(t4) {
              var o3;
              _classCallCheck(this, Xdp);
              (o3 = r3.call(this, d, "xdp", true)).packets = null;
              return o3;
            }
            return _createClass(Xdp);
          }(l.XFAObject), Jt = function(t3) {
            _inherits(Xsl, t3);
            var r3 = _createSuper(Xsl);
            function Xsl(t4) {
              var o3;
              _classCallCheck(this, Xsl);
              (o3 = r3.call(this, d, "xsl", true)).debug = null;
              o3.uri = null;
              return o3;
            }
            return _createClass(Xsl);
          }(l.XFAObject), Zt = function(t3) {
            _inherits(Zpl, t3);
            var r3 = _createSuper(Zpl);
            function Zpl(t4) {
              var o3;
              _classCallCheck(this, Zpl);
              (o3 = r3.call(this, d, "zpl", true)).name = t4.name ? t4.name.trim() : "";
              o3.batchOutput = null;
              o3.flipLabel = null;
              o3.fontInfo = null;
              o3.xdc = null;
              return o3;
            }
            return _createClass(Zpl);
          }(l.XFAObject), Qt = function() {
            function ConfigNamespace() {
              _classCallCheck(this, ConfigNamespace);
            }
            _createClass(ConfigNamespace, null, [{ key: c.$buildXFAObject, value: function value(t3, r3) {
              if (ConfigNamespace.hasOwnProperty(t3))
                return ConfigNamespace[t3](r3);
            } }, { key: "acrobat", value: function acrobat(t3) {
              return new g(t3);
            } }, { key: "acrobat7", value: function acrobat7(t3) {
              return new m(t3);
            } }, { key: "ADBE_JSConsole", value: function ADBE_JSConsole(t3) {
              return new y(t3);
            } }, { key: "ADBE_JSDebugger", value: function ADBE_JSDebugger(t3) {
              return new v(t3);
            } }, { key: "addSilentPrint", value: function addSilentPrint(t3) {
              return new k(t3);
            } }, { key: "addViewerPreferences", value: function addViewerPreferences(t3) {
              return new _(t3);
            } }, { key: "adjustData", value: function adjustData(t3) {
              return new w(t3);
            } }, { key: "adobeExtensionLevel", value: function adobeExtensionLevel(t3) {
              return new S(t3);
            } }, { key: "agent", value: function agent(t3) {
              return new C(t3);
            } }, { key: "alwaysEmbed", value: function alwaysEmbed(t3) {
              return new x(t3);
            } }, { key: "amd", value: function amd(t3) {
              return new O(t3);
            } }, { key: "area", value: function area(t3) {
              return new T(t3);
            } }, { key: "attributes", value: function attributes(t3) {
              return new E(t3);
            } }, { key: "autoSave", value: function autoSave(t3) {
              return new M(t3);
            } }, { key: "base", value: function base(t3) {
              return new R(t3);
            } }, { key: "batchOutput", value: function batchOutput(t3) {
              return new D(t3);
            } }, { key: "behaviorOverride", value: function behaviorOverride(t3) {
              return new j(t3);
            } }, { key: "cache", value: function cache(t3) {
              return new L(t3);
            } }, { key: "change", value: function change(t3) {
              return new N(t3);
            } }, { key: "common", value: function common(t3) {
              return new U(t3);
            } }, { key: "compress", value: function compress(t3) {
              return new H(t3);
            } }, { key: "compressLogicalStructure", value: function compressLogicalStructure(t3) {
              return new $(t3);
            } }, { key: "compressObjectStream", value: function compressObjectStream(t3) {
              return new X(t3);
            } }, { key: "compression", value: function compression(t3) {
              return new q(t3);
            } }, { key: "config", value: function config(t3) {
              return new G(t3);
            } }, { key: "conformance", value: function conformance(t3) {
              return new z(t3);
            } }, { key: "contentCopy", value: function contentCopy(t3) {
              return new W(t3);
            } }, { key: "copies", value: function copies(t3) {
              return new V(t3);
            } }, { key: "creator", value: function creator(t3) {
              return new K(t3);
            } }, { key: "currentPage", value: function currentPage(t3) {
              return new Y(t3);
            } }, { key: "data", value: function data(t3) {
              return new J(t3);
            } }, { key: "debug", value: function debug(t3) {
              return new Z(t3);
            } }, { key: "defaultTypeface", value: function defaultTypeface(t3) {
              return new Q(t3);
            } }, { key: "destination", value: function destination(t3) {
              return new ee(t3);
            } }, { key: "documentAssembly", value: function documentAssembly(t3) {
              return new te(t3);
            } }, { key: "driver", value: function driver(t3) {
              return new re(t3);
            } }, { key: "duplexOption", value: function duplexOption(t3) {
              return new ae(t3);
            } }, { key: "dynamicRender", value: function dynamicRender(t3) {
              return new ne(t3);
            } }, { key: "embed", value: function embed(t3) {
              return new ie(t3);
            } }, { key: "encrypt", value: function encrypt(t3) {
              return new oe(t3);
            } }, { key: "encryption", value: function encryption(t3) {
              return new se(t3);
            } }, { key: "encryptionLevel", value: function encryptionLevel(t3) {
              return new ce(t3);
            } }, { key: "enforce", value: function enforce(t3) {
              return new le(t3);
            } }, { key: "equate", value: function equate(t3) {
              return new ue(t3);
            } }, { key: "equateRange", value: function equateRange(t3) {
              return new fe(t3);
            } }, { key: "exclude", value: function exclude(t3) {
              return new he(t3);
            } }, { key: "excludeNS", value: function excludeNS(t3) {
              return new de(t3);
            } }, { key: "flipLabel", value: function flipLabel(t3) {
              return new pe(t3);
            } }, { key: "fontInfo", value: function fontInfo(t3) {
              return new ge(t3);
            } }, { key: "formFieldFilling", value: function formFieldFilling(t3) {
              return new me(t3);
            } }, { key: "groupParent", value: function groupParent(t3) {
              return new ye(t3);
            } }, { key: "ifEmpty", value: function ifEmpty(t3) {
              return new ve(t3);
            } }, { key: "includeXDPContent", value: function includeXDPContent(t3) {
              return new be(t3);
            } }, { key: "incrementalLoad", value: function incrementalLoad(t3) {
              return new ke(t3);
            } }, { key: "incrementalMerge", value: function incrementalMerge(t3) {
              return new _e(t3);
            } }, { key: "interactive", value: function interactive(t3) {
              return new we(t3);
            } }, { key: "jog", value: function jog(t3) {
              return new Se(t3);
            } }, { key: "labelPrinter", value: function labelPrinter(t3) {
              return new Ce(t3);
            } }, { key: "layout", value: function layout(t3) {
              return new xe(t3);
            } }, { key: "level", value: function level(t3) {
              return new Oe(t3);
            } }, { key: "linearized", value: function linearized(t3) {
              return new Ae(t3);
            } }, { key: "locale", value: function locale(t3) {
              return new Pe(t3);
            } }, { key: "localeSet", value: function localeSet(t3) {
              return new Te(t3);
            } }, { key: "log", value: function log(t3) {
              return new Fe(t3);
            } }, { key: "map", value: function map(t3) {
              return new Ie(t3);
            } }, { key: "mediumInfo", value: function mediumInfo(t3) {
              return new Ee(t3);
            } }, { key: "message", value: function message(t3) {
              return new Me(t3);
            } }, { key: "messaging", value: function messaging(t3) {
              return new Re(t3);
            } }, { key: "mode", value: function mode(t3) {
              return new De(t3);
            } }, { key: "modifyAnnots", value: function modifyAnnots(t3) {
              return new je(t3);
            } }, { key: "msgId", value: function msgId(t3) {
              return new Be(t3);
            } }, { key: "nameAttr", value: function nameAttr(t3) {
              return new Le(t3);
            } }, { key: "neverEmbed", value: function neverEmbed(t3) {
              return new Ne(t3);
            } }, { key: "numberOfCopies", value: function numberOfCopies(t3) {
              return new Ue(t3);
            } }, { key: "openAction", value: function openAction(t3) {
              return new He(t3);
            } }, { key: "output", value: function output(t3) {
              return new $e(t3);
            } }, { key: "outputBin", value: function outputBin(t3) {
              return new Xe(t3);
            } }, { key: "outputXSL", value: function outputXSL(t3) {
              return new qe(t3);
            } }, { key: "overprint", value: function overprint(t3) {
              return new Ge(t3);
            } }, { key: "packets", value: function packets(t3) {
              return new ze(t3);
            } }, { key: "pageOffset", value: function pageOffset(t3) {
              return new We(t3);
            } }, { key: "pageRange", value: function pageRange(t3) {
              return new Ve(t3);
            } }, { key: "pagination", value: function pagination(t3) {
              return new Ke(t3);
            } }, { key: "paginationOverride", value: function paginationOverride(t3) {
              return new Ye(t3);
            } }, { key: "part", value: function part(t3) {
              return new Je(t3);
            } }, { key: "pcl", value: function pcl(t3) {
              return new Ze(t3);
            } }, { key: "pdf", value: function pdf(t3) {
              return new Qe(t3);
            } }, { key: "pdfa", value: function pdfa(t3) {
              return new et(t3);
            } }, { key: "permissions", value: function permissions(t3) {
              return new tt(t3);
            } }, { key: "pickTrayByPDFSize", value: function pickTrayByPDFSize(t3) {
              return new rt(t3);
            } }, { key: "picture", value: function picture(t3) {
              return new at(t3);
            } }, { key: "plaintextMetadata", value: function plaintextMetadata(t3) {
              return new nt(t3);
            } }, { key: "presence", value: function presence(t3) {
              return new it(t3);
            } }, { key: "present", value: function present(t3) {
              return new ot(t3);
            } }, { key: "print", value: function print(t3) {
              return new st(t3);
            } }, { key: "printHighQuality", value: function printHighQuality(t3) {
              return new ct(t3);
            } }, { key: "printScaling", value: function printScaling(t3) {
              return new lt(t3);
            } }, { key: "printerName", value: function printerName(t3) {
              return new ut(t3);
            } }, { key: "producer", value: function producer(t3) {
              return new ft(t3);
            } }, { key: "ps", value: function ps(t3) {
              return new ht(t3);
            } }, { key: "range", value: function range(t3) {
              return new dt(t3);
            } }, { key: "record", value: function record(t3) {
              return new gt(t3);
            } }, { key: "relevant", value: function relevant(t3) {
              return new mt(t3);
            } }, { key: "rename", value: function rename(t3) {
              return new yt(t3);
            } }, { key: "renderPolicy", value: function renderPolicy(t3) {
              return new vt(t3);
            } }, { key: "runScripts", value: function runScripts(t3) {
              return new bt(t3);
            } }, { key: "script", value: function script(t3) {
              return new kt(t3);
            } }, { key: "scriptModel", value: function scriptModel(t3) {
              return new _t(t3);
            } }, { key: "severity", value: function severity(t3) {
              return new wt(t3);
            } }, { key: "silentPrint", value: function silentPrint(t3) {
              return new St(t3);
            } }, { key: "staple", value: function staple(t3) {
              return new Ct(t3);
            } }, { key: "startNode", value: function startNode(t3) {
              return new xt(t3);
            } }, { key: "startPage", value: function startPage(t3) {
              return new Ot(t3);
            } }, { key: "submitFormat", value: function submitFormat(t3) {
              return new At(t3);
            } }, { key: "submitUrl", value: function submitUrl(t3) {
              return new Pt(t3);
            } }, { key: "subsetBelow", value: function subsetBelow(t3) {
              return new Tt(t3);
            } }, { key: "suppressBanner", value: function suppressBanner(t3) {
              return new Ft(t3);
            } }, { key: "tagged", value: function tagged(t3) {
              return new It(t3);
            } }, { key: "template", value: function template(t3) {
              return new Et(t3);
            } }, { key: "templateCache", value: function templateCache(t3) {
              return new Dt(t3);
            } }, { key: "threshold", value: function threshold(t3) {
              return new Mt(t3);
            } }, { key: "to", value: function to(t3) {
              return new Rt(t3);
            } }, { key: "trace", value: function trace(t3) {
              return new jt(t3);
            } }, { key: "transform", value: function transform(t3) {
              return new Bt(t3);
            } }, { key: "type", value: function type(t3) {
              return new Lt(t3);
            } }, { key: "uri", value: function uri(t3) {
              return new Nt(t3);
            } }, { key: "validate", value: function validate(t3) {
              return new Ut(t3);
            } }, { key: "validateApprovalSignatures", value: function validateApprovalSignatures(t3) {
              return new Ht(t3);
            } }, { key: "validationMessaging", value: function validationMessaging(t3) {
              return new $t(t3);
            } }, { key: "version", value: function version(t3) {
              return new Xt(t3);
            } }, { key: "versionControl", value: function versionControl(t3) {
              return new qt(t3);
            } }, { key: "viewerPreferences", value: function viewerPreferences(t3) {
              return new Gt(t3);
            } }, { key: "webClient", value: function webClient(t3) {
              return new zt(t3);
            } }, { key: "whitespace", value: function whitespace(t3) {
              return new Wt(t3);
            } }, { key: "window", value: function window2(t3) {
              return new Vt(t3);
            } }, { key: "xdc", value: function xdc(t3) {
              return new Kt(t3);
            } }, { key: "xdp", value: function xdp(t3) {
              return new Yt(t3);
            } }, { key: "xsl", value: function xsl(t3) {
              return new Jt(t3);
            } }, { key: "zpl", value: function zpl(t3) {
              return new Zt(t3);
            } }]);
            return ConfigNamespace;
          }();
          r2.ConfigNamespace = Qt;
        }, (t2, r2, o2) => {
          "use strict";
          function _typeof(t3) {
            return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t4) {
              return typeof t4;
            } : function(t4) {
              return t4 && typeof Symbol == "function" && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
            }, _typeof(t3);
          }
          Object.defineProperty(r2, "__esModule", { value: true });
          r2.ConnectionSetNamespace = void 0;
          var c = o2(232), l = o2(230);
          function _defineProperties(t3, r3) {
            for (var o3 = 0; o3 < r3.length; o3++) {
              var c2 = r3[o3];
              c2.enumerable = c2.enumerable || false;
              c2.configurable = true;
              "value" in c2 && (c2.writable = true);
              Object.defineProperty(t3, c2.key, c2);
            }
          }
          function _createClass(t3, r3, o3) {
            r3 && _defineProperties(t3.prototype, r3);
            o3 && _defineProperties(t3, o3);
            Object.defineProperty(t3, "prototype", { writable: false });
            return t3;
          }
          function _classCallCheck(t3, r3) {
            if (!(t3 instanceof r3))
              throw new TypeError("Cannot call a class as a function");
          }
          function _inherits(t3, r3) {
            if (typeof r3 != "function" && r3 !== null)
              throw new TypeError("Super expression must either be null or a function");
            t3.prototype = Object.create(r3 && r3.prototype, { constructor: { value: t3, writable: true, configurable: true } });
            Object.defineProperty(t3, "prototype", { writable: false });
            r3 && _setPrototypeOf(t3, r3);
          }
          function _setPrototypeOf(t3, r3) {
            _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(t4, r4) {
              t4.__proto__ = r4;
              return t4;
            };
            return _setPrototypeOf(t3, r3);
          }
          function _createSuper(t3) {
            var r3 = function _isNativeReflectConstruct() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                }));
                return true;
              } catch (t4) {
                return false;
              }
            }();
            return function _createSuperInternal() {
              var o3, c2 = _getPrototypeOf(t3);
              if (r3) {
                var l2 = _getPrototypeOf(this).constructor;
                o3 = Reflect.construct(c2, arguments, l2);
              } else
                o3 = c2.apply(this, arguments);
              return _possibleConstructorReturn(this, o3);
            };
          }
          function _possibleConstructorReturn(t3, r3) {
            if (r3 && (_typeof(r3) === "object" || typeof r3 == "function"))
              return r3;
            if (r3 !== void 0)
              throw new TypeError("Derived constructors may only return object or undefined");
            return function _assertThisInitialized(t4) {
              if (t4 === void 0)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return t4;
            }(t3);
          }
          function _getPrototypeOf(t3) {
            _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(t4) {
              return t4.__proto__ || Object.getPrototypeOf(t4);
            };
            return _getPrototypeOf(t3);
          }
          var u = c.NamespaceIds.connectionSet.id, h = function(t3) {
            _inherits(ConnectionSet, t3);
            var r3 = _createSuper(ConnectionSet);
            function ConnectionSet(t4) {
              var o3;
              _classCallCheck(this, ConnectionSet);
              (o3 = r3.call(this, u, "connectionSet", true)).wsdlConnection = new l.XFAObjectArray();
              o3.xmlConnection = new l.XFAObjectArray();
              o3.xsdConnection = new l.XFAObjectArray();
              return o3;
            }
            return _createClass(ConnectionSet);
          }(l.XFAObject), d = function(t3) {
            _inherits(EffectiveInputPolicy, t3);
            var r3 = _createSuper(EffectiveInputPolicy);
            function EffectiveInputPolicy(t4) {
              var o3;
              _classCallCheck(this, EffectiveInputPolicy);
              (o3 = r3.call(this, u, "effectiveInputPolicy")).id = t4.id || "";
              o3.name = t4.name || "";
              o3.use = t4.use || "";
              o3.usehref = t4.usehref || "";
              return o3;
            }
            return _createClass(EffectiveInputPolicy);
          }(l.XFAObject), g = function(t3) {
            _inherits(EffectiveOutputPolicy, t3);
            var r3 = _createSuper(EffectiveOutputPolicy);
            function EffectiveOutputPolicy(t4) {
              var o3;
              _classCallCheck(this, EffectiveOutputPolicy);
              (o3 = r3.call(this, u, "effectiveOutputPolicy")).id = t4.id || "";
              o3.name = t4.name || "";
              o3.use = t4.use || "";
              o3.usehref = t4.usehref || "";
              return o3;
            }
            return _createClass(EffectiveOutputPolicy);
          }(l.XFAObject), m = function(t3) {
            _inherits(Operation, t3);
            var r3 = _createSuper(Operation);
            function Operation(t4) {
              var o3;
              _classCallCheck(this, Operation);
              (o3 = r3.call(this, u, "operation")).id = t4.id || "";
              o3.input = t4.input || "";
              o3.name = t4.name || "";
              o3.output = t4.output || "";
              o3.use = t4.use || "";
              o3.usehref = t4.usehref || "";
              return o3;
            }
            return _createClass(Operation);
          }(l.StringObject), y = function(t3) {
            _inherits(RootElement, t3);
            var r3 = _createSuper(RootElement);
            function RootElement(t4) {
              var o3;
              _classCallCheck(this, RootElement);
              (o3 = r3.call(this, u, "rootElement")).id = t4.id || "";
              o3.name = t4.name || "";
              o3.use = t4.use || "";
              o3.usehref = t4.usehref || "";
              return o3;
            }
            return _createClass(RootElement);
          }(l.StringObject), v = function(t3) {
            _inherits(SoapAction, t3);
            var r3 = _createSuper(SoapAction);
            function SoapAction(t4) {
              var o3;
              _classCallCheck(this, SoapAction);
              (o3 = r3.call(this, u, "soapAction")).id = t4.id || "";
              o3.name = t4.name || "";
              o3.use = t4.use || "";
              o3.usehref = t4.usehref || "";
              return o3;
            }
            return _createClass(SoapAction);
          }(l.StringObject), k = function(t3) {
            _inherits(SoapAddress, t3);
            var r3 = _createSuper(SoapAddress);
            function SoapAddress(t4) {
              var o3;
              _classCallCheck(this, SoapAddress);
              (o3 = r3.call(this, u, "soapAddress")).id = t4.id || "";
              o3.name = t4.name || "";
              o3.use = t4.use || "";
              o3.usehref = t4.usehref || "";
              return o3;
            }
            return _createClass(SoapAddress);
          }(l.StringObject), _ = function(t3) {
            _inherits(Uri, t3);
            var r3 = _createSuper(Uri);
            function Uri(t4) {
              var o3;
              _classCallCheck(this, Uri);
              (o3 = r3.call(this, u, "uri")).id = t4.id || "";
              o3.name = t4.name || "";
              o3.use = t4.use || "";
              o3.usehref = t4.usehref || "";
              return o3;
            }
            return _createClass(Uri);
          }(l.StringObject), w = function(t3) {
            _inherits(WsdlAddress, t3);
            var r3 = _createSuper(WsdlAddress);
            function WsdlAddress(t4) {
              var o3;
              _classCallCheck(this, WsdlAddress);
              (o3 = r3.call(this, u, "wsdlAddress")).id = t4.id || "";
              o3.name = t4.name || "";
              o3.use = t4.use || "";
              o3.usehref = t4.usehref || "";
              return o3;
            }
            return _createClass(WsdlAddress);
          }(l.StringObject), S = function(t3) {
            _inherits(WsdlConnection, t3);
            var r3 = _createSuper(WsdlConnection);
            function WsdlConnection(t4) {
              var o3;
              _classCallCheck(this, WsdlConnection);
              (o3 = r3.call(this, u, "wsdlConnection", true)).dataDescription = t4.dataDescription || "";
              o3.name = t4.name || "";
              o3.effectiveInputPolicy = null;
              o3.effectiveOutputPolicy = null;
              o3.operation = null;
              o3.soapAction = null;
              o3.soapAddress = null;
              o3.wsdlAddress = null;
              return o3;
            }
            return _createClass(WsdlConnection);
          }(l.XFAObject), C = function(t3) {
            _inherits(XmlConnection, t3);
            var r3 = _createSuper(XmlConnection);
            function XmlConnection(t4) {
              var o3;
              _classCallCheck(this, XmlConnection);
              (o3 = r3.call(this, u, "xmlConnection", true)).dataDescription = t4.dataDescription || "";
              o3.name = t4.name || "";
              o3.uri = null;
              return o3;
            }
            return _createClass(XmlConnection);
          }(l.XFAObject), x = function(t3) {
            _inherits(XsdConnection, t3);
            var r3 = _createSuper(XsdConnection);
            function XsdConnection(t4) {
              var o3;
              _classCallCheck(this, XsdConnection);
              (o3 = r3.call(this, u, "xsdConnection", true)).dataDescription = t4.dataDescription || "";
              o3.name = t4.name || "";
              o3.rootElement = null;
              o3.uri = null;
              return o3;
            }
            return _createClass(XsdConnection);
          }(l.XFAObject), O = function() {
            function ConnectionSetNamespace() {
              _classCallCheck(this, ConnectionSetNamespace);
            }
            _createClass(ConnectionSetNamespace, null, [{ key: c.$buildXFAObject, value: function value(t3, r3) {
              if (ConnectionSetNamespace.hasOwnProperty(t3))
                return ConnectionSetNamespace[t3](r3);
            } }, { key: "connectionSet", value: function connectionSet(t3) {
              return new h(t3);
            } }, { key: "effectiveInputPolicy", value: function effectiveInputPolicy(t3) {
              return new d(t3);
            } }, { key: "effectiveOutputPolicy", value: function effectiveOutputPolicy(t3) {
              return new g(t3);
            } }, { key: "operation", value: function operation(t3) {
              return new m(t3);
            } }, { key: "rootElement", value: function rootElement(t3) {
              return new y(t3);
            } }, { key: "soapAction", value: function soapAction(t3) {
              return new v(t3);
            } }, { key: "soapAddress", value: function soapAddress(t3) {
              return new k(t3);
            } }, { key: "uri", value: function uri(t3) {
              return new _(t3);
            } }, { key: "wsdlAddress", value: function wsdlAddress(t3) {
              return new w(t3);
            } }, { key: "wsdlConnection", value: function wsdlConnection(t3) {
              return new S(t3);
            } }, { key: "xmlConnection", value: function xmlConnection(t3) {
              return new C(t3);
            } }, { key: "xsdConnection", value: function xsdConnection(t3) {
              return new x(t3);
            } }]);
            return ConnectionSetNamespace;
          }();
          r2.ConnectionSetNamespace = O;
        }, (t2, r2, o2) => {
          "use strict";
          function _typeof(t3) {
            return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t4) {
              return typeof t4;
            } : function(t4) {
              return t4 && typeof Symbol == "function" && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
            }, _typeof(t3);
          }
          Object.defineProperty(r2, "__esModule", { value: true });
          r2.DatasetsNamespace = void 0;
          var c = o2(230), l = o2(232);
          function _classCallCheck(t3, r3) {
            if (!(t3 instanceof r3))
              throw new TypeError("Cannot call a class as a function");
          }
          function _defineProperties(t3, r3) {
            for (var o3 = 0; o3 < r3.length; o3++) {
              var c2 = r3[o3];
              c2.enumerable = c2.enumerable || false;
              c2.configurable = true;
              "value" in c2 && (c2.writable = true);
              Object.defineProperty(t3, c2.key, c2);
            }
          }
          function _createClass(t3, r3, o3) {
            r3 && _defineProperties(t3.prototype, r3);
            o3 && _defineProperties(t3, o3);
            Object.defineProperty(t3, "prototype", { writable: false });
            return t3;
          }
          function _inherits(t3, r3) {
            if (typeof r3 != "function" && r3 !== null)
              throw new TypeError("Super expression must either be null or a function");
            t3.prototype = Object.create(r3 && r3.prototype, { constructor: { value: t3, writable: true, configurable: true } });
            Object.defineProperty(t3, "prototype", { writable: false });
            r3 && _setPrototypeOf(t3, r3);
          }
          function _setPrototypeOf(t3, r3) {
            _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(t4, r4) {
              t4.__proto__ = r4;
              return t4;
            };
            return _setPrototypeOf(t3, r3);
          }
          function _createSuper(t3) {
            var r3 = function _isNativeReflectConstruct() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                }));
                return true;
              } catch (t4) {
                return false;
              }
            }();
            return function _createSuperInternal() {
              var o3, c2 = _getPrototypeOf(t3);
              if (r3) {
                var l2 = _getPrototypeOf(this).constructor;
                o3 = Reflect.construct(c2, arguments, l2);
              } else
                o3 = c2.apply(this, arguments);
              return _possibleConstructorReturn(this, o3);
            };
          }
          function _possibleConstructorReturn(t3, r3) {
            if (r3 && (_typeof(r3) === "object" || typeof r3 == "function"))
              return r3;
            if (r3 !== void 0)
              throw new TypeError("Derived constructors may only return object or undefined");
            return function _assertThisInitialized(t4) {
              if (t4 === void 0)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return t4;
            }(t3);
          }
          function _getPrototypeOf(t3) {
            _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(t4) {
              return t4.__proto__ || Object.getPrototypeOf(t4);
            };
            return _getPrototypeOf(t3);
          }
          var u = l.NamespaceIds.datasets.id, h = function(t3) {
            _inherits(Data, t3);
            var r3 = _createSuper(Data);
            function Data(t4) {
              _classCallCheck(this, Data);
              return r3.call(this, u, "data", t4);
            }
            _createClass(Data, [{ key: c.$isNsAgnostic, value: function value() {
              return true;
            } }]);
            return Data;
          }(c.XmlObject), d = function(t3) {
            _inherits(Datasets, t3);
            var r3 = _createSuper(Datasets);
            function Datasets(t4) {
              var o3;
              _classCallCheck(this, Datasets);
              (o3 = r3.call(this, u, "datasets", true)).data = null;
              o3.Signature = null;
              return o3;
            }
            _createClass(Datasets, [{ key: c.$onChild, value: function value(t4) {
              var r4 = t4[c.$nodeName];
              (r4 === "data" && t4[c.$namespaceId] === u || r4 === "Signature" && t4[c.$namespaceId] === l.NamespaceIds.signature.id) && (this[r4] = t4);
              this[c.$appendChild](t4);
            } }]);
            return Datasets;
          }(c.XFAObject), g = function() {
            function DatasetsNamespace() {
              _classCallCheck(this, DatasetsNamespace);
            }
            _createClass(DatasetsNamespace, null, [{ key: l.$buildXFAObject, value: function value(t3, r3) {
              if (DatasetsNamespace.hasOwnProperty(t3))
                return DatasetsNamespace[t3](r3);
            } }, { key: "datasets", value: function datasets(t3) {
              return new d(t3);
            } }, { key: "data", value: function data(t3) {
              return new h(t3);
            } }]);
            return DatasetsNamespace;
          }();
          r2.DatasetsNamespace = g;
        }, (t2, r2, o2) => {
          "use strict";
          function _typeof(t3) {
            return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t4) {
              return typeof t4;
            } : function(t4) {
              return t4 && typeof Symbol == "function" && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
            }, _typeof(t3);
          }
          Object.defineProperty(r2, "__esModule", { value: true });
          r2.LocaleSetNamespace = void 0;
          var c = o2(232), l = o2(230), u = o2(231);
          function _defineProperties(t3, r3) {
            for (var o3 = 0; o3 < r3.length; o3++) {
              var c2 = r3[o3];
              c2.enumerable = c2.enumerable || false;
              c2.configurable = true;
              "value" in c2 && (c2.writable = true);
              Object.defineProperty(t3, c2.key, c2);
            }
          }
          function _createClass(t3, r3, o3) {
            r3 && _defineProperties(t3.prototype, r3);
            o3 && _defineProperties(t3, o3);
            Object.defineProperty(t3, "prototype", { writable: false });
            return t3;
          }
          function _classCallCheck(t3, r3) {
            if (!(t3 instanceof r3))
              throw new TypeError("Cannot call a class as a function");
          }
          function _inherits(t3, r3) {
            if (typeof r3 != "function" && r3 !== null)
              throw new TypeError("Super expression must either be null or a function");
            t3.prototype = Object.create(r3 && r3.prototype, { constructor: { value: t3, writable: true, configurable: true } });
            Object.defineProperty(t3, "prototype", { writable: false });
            r3 && _setPrototypeOf(t3, r3);
          }
          function _setPrototypeOf(t3, r3) {
            _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(t4, r4) {
              t4.__proto__ = r4;
              return t4;
            };
            return _setPrototypeOf(t3, r3);
          }
          function _createSuper(t3) {
            var r3 = function _isNativeReflectConstruct() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                }));
                return true;
              } catch (t4) {
                return false;
              }
            }();
            return function _createSuperInternal() {
              var o3, c2 = _getPrototypeOf(t3);
              if (r3) {
                var l2 = _getPrototypeOf(this).constructor;
                o3 = Reflect.construct(c2, arguments, l2);
              } else
                o3 = c2.apply(this, arguments);
              return _possibleConstructorReturn(this, o3);
            };
          }
          function _possibleConstructorReturn(t3, r3) {
            if (r3 && (_typeof(r3) === "object" || typeof r3 == "function"))
              return r3;
            if (r3 !== void 0)
              throw new TypeError("Derived constructors may only return object or undefined");
            return function _assertThisInitialized(t4) {
              if (t4 === void 0)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return t4;
            }(t3);
          }
          function _getPrototypeOf(t3) {
            _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(t4) {
              return t4.__proto__ || Object.getPrototypeOf(t4);
            };
            return _getPrototypeOf(t3);
          }
          var h = c.NamespaceIds.localeSet.id, d = function(t3) {
            _inherits(CalendarSymbols, t3);
            var r3 = _createSuper(CalendarSymbols);
            function CalendarSymbols(t4) {
              var o3;
              _classCallCheck(this, CalendarSymbols);
              (o3 = r3.call(this, h, "calendarSymbols", true)).name = "gregorian";
              o3.dayNames = new l.XFAObjectArray(2);
              o3.eraNames = null;
              o3.meridiemNames = null;
              o3.monthNames = new l.XFAObjectArray(2);
              return o3;
            }
            return _createClass(CalendarSymbols);
          }(l.XFAObject), g = function(t3) {
            _inherits(CurrencySymbol, t3);
            var r3 = _createSuper(CurrencySymbol);
            function CurrencySymbol(t4) {
              var o3;
              _classCallCheck(this, CurrencySymbol);
              (o3 = r3.call(this, h, "currencySymbol")).name = (0, u.getStringOption)(t4.name, ["symbol", "isoname", "decimal"]);
              return o3;
            }
            return _createClass(CurrencySymbol);
          }(l.StringObject), m = function(t3) {
            _inherits(CurrencySymbols, t3);
            var r3 = _createSuper(CurrencySymbols);
            function CurrencySymbols(t4) {
              var o3;
              _classCallCheck(this, CurrencySymbols);
              (o3 = r3.call(this, h, "currencySymbols", true)).currencySymbol = new l.XFAObjectArray(3);
              return o3;
            }
            return _createClass(CurrencySymbols);
          }(l.XFAObject), y = function(t3) {
            _inherits(DatePattern, t3);
            var r3 = _createSuper(DatePattern);
            function DatePattern(t4) {
              var o3;
              _classCallCheck(this, DatePattern);
              (o3 = r3.call(this, h, "datePattern")).name = (0, u.getStringOption)(t4.name, ["full", "long", "med", "short"]);
              return o3;
            }
            return _createClass(DatePattern);
          }(l.StringObject), v = function(t3) {
            _inherits(DatePatterns, t3);
            var r3 = _createSuper(DatePatterns);
            function DatePatterns(t4) {
              var o3;
              _classCallCheck(this, DatePatterns);
              (o3 = r3.call(this, h, "datePatterns", true)).datePattern = new l.XFAObjectArray(4);
              return o3;
            }
            return _createClass(DatePatterns);
          }(l.XFAObject), k = function(t3) {
            _inherits(DateTimeSymbols, t3);
            var r3 = _createSuper(DateTimeSymbols);
            function DateTimeSymbols(t4) {
              _classCallCheck(this, DateTimeSymbols);
              return r3.call(this, h, "dateTimeSymbols");
            }
            return _createClass(DateTimeSymbols);
          }(l.ContentObject), _ = function(t3) {
            _inherits(Day, t3);
            var r3 = _createSuper(Day);
            function Day(t4) {
              _classCallCheck(this, Day);
              return r3.call(this, h, "day");
            }
            return _createClass(Day);
          }(l.StringObject), w = function(t3) {
            _inherits(DayNames, t3);
            var r3 = _createSuper(DayNames);
            function DayNames(t4) {
              var o3;
              _classCallCheck(this, DayNames);
              (o3 = r3.call(this, h, "dayNames", true)).abbr = (0, u.getInteger)({ data: t4.abbr, defaultValue: 0, validate: function validate(t5) {
                return t5 === 1;
              } });
              o3.day = new l.XFAObjectArray(7);
              return o3;
            }
            return _createClass(DayNames);
          }(l.XFAObject), S = function(t3) {
            _inherits(Era, t3);
            var r3 = _createSuper(Era);
            function Era(t4) {
              _classCallCheck(this, Era);
              return r3.call(this, h, "era");
            }
            return _createClass(Era);
          }(l.StringObject), C = function(t3) {
            _inherits(EraNames, t3);
            var r3 = _createSuper(EraNames);
            function EraNames(t4) {
              var o3;
              _classCallCheck(this, EraNames);
              (o3 = r3.call(this, h, "eraNames", true)).era = new l.XFAObjectArray(2);
              return o3;
            }
            return _createClass(EraNames);
          }(l.XFAObject), x = function(t3) {
            _inherits(Locale, t3);
            var r3 = _createSuper(Locale);
            function Locale(t4) {
              var o3;
              _classCallCheck(this, Locale);
              (o3 = r3.call(this, h, "locale", true)).desc = t4.desc || "";
              o3.name = "isoname";
              o3.calendarSymbols = null;
              o3.currencySymbols = null;
              o3.datePatterns = null;
              o3.dateTimeSymbols = null;
              o3.numberPatterns = null;
              o3.numberSymbols = null;
              o3.timePatterns = null;
              o3.typeFaces = null;
              return o3;
            }
            return _createClass(Locale);
          }(l.XFAObject), O = function(t3) {
            _inherits(LocaleSet, t3);
            var r3 = _createSuper(LocaleSet);
            function LocaleSet(t4) {
              var o3;
              _classCallCheck(this, LocaleSet);
              (o3 = r3.call(this, h, "localeSet", true)).locale = new l.XFAObjectArray();
              return o3;
            }
            return _createClass(LocaleSet);
          }(l.XFAObject), T = function(t3) {
            _inherits(Meridiem, t3);
            var r3 = _createSuper(Meridiem);
            function Meridiem(t4) {
              _classCallCheck(this, Meridiem);
              return r3.call(this, h, "meridiem");
            }
            return _createClass(Meridiem);
          }(l.StringObject), E = function(t3) {
            _inherits(MeridiemNames, t3);
            var r3 = _createSuper(MeridiemNames);
            function MeridiemNames(t4) {
              var o3;
              _classCallCheck(this, MeridiemNames);
              (o3 = r3.call(this, h, "meridiemNames", true)).meridiem = new l.XFAObjectArray(2);
              return o3;
            }
            return _createClass(MeridiemNames);
          }(l.XFAObject), M = function(t3) {
            _inherits(Month, t3);
            var r3 = _createSuper(Month);
            function Month(t4) {
              _classCallCheck(this, Month);
              return r3.call(this, h, "month");
            }
            return _createClass(Month);
          }(l.StringObject), R = function(t3) {
            _inherits(MonthNames, t3);
            var r3 = _createSuper(MonthNames);
            function MonthNames(t4) {
              var o3;
              _classCallCheck(this, MonthNames);
              (o3 = r3.call(this, h, "monthNames", true)).abbr = (0, u.getInteger)({ data: t4.abbr, defaultValue: 0, validate: function validate(t5) {
                return t5 === 1;
              } });
              o3.month = new l.XFAObjectArray(12);
              return o3;
            }
            return _createClass(MonthNames);
          }(l.XFAObject), D = function(t3) {
            _inherits(NumberPattern, t3);
            var r3 = _createSuper(NumberPattern);
            function NumberPattern(t4) {
              var o3;
              _classCallCheck(this, NumberPattern);
              (o3 = r3.call(this, h, "numberPattern")).name = (0, u.getStringOption)(t4.name, ["full", "long", "med", "short"]);
              return o3;
            }
            return _createClass(NumberPattern);
          }(l.StringObject), j = function(t3) {
            _inherits(NumberPatterns, t3);
            var r3 = _createSuper(NumberPatterns);
            function NumberPatterns(t4) {
              var o3;
              _classCallCheck(this, NumberPatterns);
              (o3 = r3.call(this, h, "numberPatterns", true)).numberPattern = new l.XFAObjectArray(4);
              return o3;
            }
            return _createClass(NumberPatterns);
          }(l.XFAObject), L = function(t3) {
            _inherits(NumberSymbol, t3);
            var r3 = _createSuper(NumberSymbol);
            function NumberSymbol(t4) {
              var o3;
              _classCallCheck(this, NumberSymbol);
              (o3 = r3.call(this, h, "numberSymbol")).name = (0, u.getStringOption)(t4.name, ["decimal", "grouping", "percent", "minus", "zero"]);
              return o3;
            }
            return _createClass(NumberSymbol);
          }(l.StringObject), N = function(t3) {
            _inherits(NumberSymbols, t3);
            var r3 = _createSuper(NumberSymbols);
            function NumberSymbols(t4) {
              var o3;
              _classCallCheck(this, NumberSymbols);
              (o3 = r3.call(this, h, "numberSymbols", true)).numberSymbol = new l.XFAObjectArray(5);
              return o3;
            }
            return _createClass(NumberSymbols);
          }(l.XFAObject), U = function(t3) {
            _inherits(TimePattern, t3);
            var r3 = _createSuper(TimePattern);
            function TimePattern(t4) {
              var o3;
              _classCallCheck(this, TimePattern);
              (o3 = r3.call(this, h, "timePattern")).name = (0, u.getStringOption)(t4.name, ["full", "long", "med", "short"]);
              return o3;
            }
            return _createClass(TimePattern);
          }(l.StringObject), H = function(t3) {
            _inherits(TimePatterns, t3);
            var r3 = _createSuper(TimePatterns);
            function TimePatterns(t4) {
              var o3;
              _classCallCheck(this, TimePatterns);
              (o3 = r3.call(this, h, "timePatterns", true)).timePattern = new l.XFAObjectArray(4);
              return o3;
            }
            return _createClass(TimePatterns);
          }(l.XFAObject), $ = function(t3) {
            _inherits(TypeFace, t3);
            var r3 = _createSuper(TypeFace);
            function TypeFace(t4) {
              var o3;
              _classCallCheck(this, TypeFace);
              (o3 = r3.call(this, h, "typeFace", true)).name = "" | t4.name;
              return o3;
            }
            return _createClass(TypeFace);
          }(l.XFAObject), X = function(t3) {
            _inherits(TypeFaces, t3);
            var r3 = _createSuper(TypeFaces);
            function TypeFaces(t4) {
              var o3;
              _classCallCheck(this, TypeFaces);
              (o3 = r3.call(this, h, "typeFaces", true)).typeFace = new l.XFAObjectArray();
              return o3;
            }
            return _createClass(TypeFaces);
          }(l.XFAObject), q = function() {
            function LocaleSetNamespace() {
              _classCallCheck(this, LocaleSetNamespace);
            }
            _createClass(LocaleSetNamespace, null, [{ key: c.$buildXFAObject, value: function value(t3, r3) {
              if (LocaleSetNamespace.hasOwnProperty(t3))
                return LocaleSetNamespace[t3](r3);
            } }, { key: "calendarSymbols", value: function calendarSymbols(t3) {
              return new d(t3);
            } }, { key: "currencySymbol", value: function currencySymbol(t3) {
              return new g(t3);
            } }, { key: "currencySymbols", value: function currencySymbols(t3) {
              return new m(t3);
            } }, { key: "datePattern", value: function datePattern(t3) {
              return new y(t3);
            } }, { key: "datePatterns", value: function datePatterns(t3) {
              return new v(t3);
            } }, { key: "dateTimeSymbols", value: function dateTimeSymbols(t3) {
              return new k(t3);
            } }, { key: "day", value: function day(t3) {
              return new _(t3);
            } }, { key: "dayNames", value: function dayNames(t3) {
              return new w(t3);
            } }, { key: "era", value: function era(t3) {
              return new S(t3);
            } }, { key: "eraNames", value: function eraNames(t3) {
              return new C(t3);
            } }, { key: "locale", value: function locale(t3) {
              return new x(t3);
            } }, { key: "localeSet", value: function localeSet(t3) {
              return new O(t3);
            } }, { key: "meridiem", value: function meridiem(t3) {
              return new T(t3);
            } }, { key: "meridiemNames", value: function meridiemNames(t3) {
              return new E(t3);
            } }, { key: "month", value: function month(t3) {
              return new M(t3);
            } }, { key: "monthNames", value: function monthNames(t3) {
              return new R(t3);
            } }, { key: "numberPattern", value: function numberPattern(t3) {
              return new D(t3);
            } }, { key: "numberPatterns", value: function numberPatterns(t3) {
              return new j(t3);
            } }, { key: "numberSymbol", value: function numberSymbol(t3) {
              return new L(t3);
            } }, { key: "numberSymbols", value: function numberSymbols(t3) {
              return new N(t3);
            } }, { key: "timePattern", value: function timePattern(t3) {
              return new U(t3);
            } }, { key: "timePatterns", value: function timePatterns(t3) {
              return new H(t3);
            } }, { key: "typeFace", value: function typeFace(t3) {
              return new $(t3);
            } }, { key: "typeFaces", value: function typeFaces(t3) {
              return new X(t3);
            } }]);
            return LocaleSetNamespace;
          }();
          r2.LocaleSetNamespace = q;
        }, (t2, r2, o2) => {
          "use strict";
          function _typeof(t3) {
            return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t4) {
              return typeof t4;
            } : function(t4) {
              return t4 && typeof Symbol == "function" && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
            }, _typeof(t3);
          }
          Object.defineProperty(r2, "__esModule", { value: true });
          r2.SignatureNamespace = void 0;
          var c = o2(232), l = o2(230);
          function _defineProperties(t3, r3) {
            for (var o3 = 0; o3 < r3.length; o3++) {
              var c2 = r3[o3];
              c2.enumerable = c2.enumerable || false;
              c2.configurable = true;
              "value" in c2 && (c2.writable = true);
              Object.defineProperty(t3, c2.key, c2);
            }
          }
          function _createClass(t3, r3, o3) {
            r3 && _defineProperties(t3.prototype, r3);
            o3 && _defineProperties(t3, o3);
            Object.defineProperty(t3, "prototype", { writable: false });
            return t3;
          }
          function _classCallCheck(t3, r3) {
            if (!(t3 instanceof r3))
              throw new TypeError("Cannot call a class as a function");
          }
          function _setPrototypeOf(t3, r3) {
            _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(t4, r4) {
              t4.__proto__ = r4;
              return t4;
            };
            return _setPrototypeOf(t3, r3);
          }
          function _createSuper(t3) {
            var r3 = function _isNativeReflectConstruct() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                }));
                return true;
              } catch (t4) {
                return false;
              }
            }();
            return function _createSuperInternal() {
              var o3, c2 = _getPrototypeOf(t3);
              if (r3) {
                var l2 = _getPrototypeOf(this).constructor;
                o3 = Reflect.construct(c2, arguments, l2);
              } else
                o3 = c2.apply(this, arguments);
              return _possibleConstructorReturn(this, o3);
            };
          }
          function _possibleConstructorReturn(t3, r3) {
            if (r3 && (_typeof(r3) === "object" || typeof r3 == "function"))
              return r3;
            if (r3 !== void 0)
              throw new TypeError("Derived constructors may only return object or undefined");
            return function _assertThisInitialized(t4) {
              if (t4 === void 0)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return t4;
            }(t3);
          }
          function _getPrototypeOf(t3) {
            _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(t4) {
              return t4.__proto__ || Object.getPrototypeOf(t4);
            };
            return _getPrototypeOf(t3);
          }
          var u = c.NamespaceIds.signature.id, h = function(t3) {
            !function _inherits(t4, r4) {
              if (typeof r4 != "function" && r4 !== null)
                throw new TypeError("Super expression must either be null or a function");
              t4.prototype = Object.create(r4 && r4.prototype, { constructor: { value: t4, writable: true, configurable: true } });
              Object.defineProperty(t4, "prototype", { writable: false });
              r4 && _setPrototypeOf(t4, r4);
            }(Signature, t3);
            var r3 = _createSuper(Signature);
            function Signature(t4) {
              _classCallCheck(this, Signature);
              return r3.call(this, u, "signature", true);
            }
            return _createClass(Signature);
          }(l.XFAObject), d = function() {
            function SignatureNamespace() {
              _classCallCheck(this, SignatureNamespace);
            }
            _createClass(SignatureNamespace, null, [{ key: c.$buildXFAObject, value: function value(t3, r3) {
              if (SignatureNamespace.hasOwnProperty(t3))
                return SignatureNamespace[t3](r3);
            } }, { key: "signature", value: function signature(t3) {
              return new h(t3);
            } }]);
            return SignatureNamespace;
          }();
          r2.SignatureNamespace = d;
        }, (t2, r2, o2) => {
          "use strict";
          function _typeof(t3) {
            return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t4) {
              return typeof t4;
            } : function(t4) {
              return t4 && typeof Symbol == "function" && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
            }, _typeof(t3);
          }
          Object.defineProperty(r2, "__esModule", { value: true });
          r2.StylesheetNamespace = void 0;
          var c = o2(232), l = o2(230);
          function _defineProperties(t3, r3) {
            for (var o3 = 0; o3 < r3.length; o3++) {
              var c2 = r3[o3];
              c2.enumerable = c2.enumerable || false;
              c2.configurable = true;
              "value" in c2 && (c2.writable = true);
              Object.defineProperty(t3, c2.key, c2);
            }
          }
          function _createClass(t3, r3, o3) {
            r3 && _defineProperties(t3.prototype, r3);
            o3 && _defineProperties(t3, o3);
            Object.defineProperty(t3, "prototype", { writable: false });
            return t3;
          }
          function _classCallCheck(t3, r3) {
            if (!(t3 instanceof r3))
              throw new TypeError("Cannot call a class as a function");
          }
          function _setPrototypeOf(t3, r3) {
            _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(t4, r4) {
              t4.__proto__ = r4;
              return t4;
            };
            return _setPrototypeOf(t3, r3);
          }
          function _createSuper(t3) {
            var r3 = function _isNativeReflectConstruct() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                }));
                return true;
              } catch (t4) {
                return false;
              }
            }();
            return function _createSuperInternal() {
              var o3, c2 = _getPrototypeOf(t3);
              if (r3) {
                var l2 = _getPrototypeOf(this).constructor;
                o3 = Reflect.construct(c2, arguments, l2);
              } else
                o3 = c2.apply(this, arguments);
              return _possibleConstructorReturn(this, o3);
            };
          }
          function _possibleConstructorReturn(t3, r3) {
            if (r3 && (_typeof(r3) === "object" || typeof r3 == "function"))
              return r3;
            if (r3 !== void 0)
              throw new TypeError("Derived constructors may only return object or undefined");
            return function _assertThisInitialized(t4) {
              if (t4 === void 0)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return t4;
            }(t3);
          }
          function _getPrototypeOf(t3) {
            _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(t4) {
              return t4.__proto__ || Object.getPrototypeOf(t4);
            };
            return _getPrototypeOf(t3);
          }
          var u = c.NamespaceIds.stylesheet.id, h = function(t3) {
            !function _inherits(t4, r4) {
              if (typeof r4 != "function" && r4 !== null)
                throw new TypeError("Super expression must either be null or a function");
              t4.prototype = Object.create(r4 && r4.prototype, { constructor: { value: t4, writable: true, configurable: true } });
              Object.defineProperty(t4, "prototype", { writable: false });
              r4 && _setPrototypeOf(t4, r4);
            }(Stylesheet, t3);
            var r3 = _createSuper(Stylesheet);
            function Stylesheet(t4) {
              _classCallCheck(this, Stylesheet);
              return r3.call(this, u, "stylesheet", true);
            }
            return _createClass(Stylesheet);
          }(l.XFAObject), d = function() {
            function StylesheetNamespace() {
              _classCallCheck(this, StylesheetNamespace);
            }
            _createClass(StylesheetNamespace, null, [{ key: c.$buildXFAObject, value: function value(t3, r3) {
              if (StylesheetNamespace.hasOwnProperty(t3))
                return StylesheetNamespace[t3](r3);
            } }, { key: "stylesheet", value: function stylesheet(t3) {
              return new h(t3);
            } }]);
            return StylesheetNamespace;
          }();
          r2.StylesheetNamespace = d;
        }, (t2, r2, o2) => {
          "use strict";
          function _typeof(t3) {
            return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t4) {
              return typeof t4;
            } : function(t4) {
              return t4 && typeof Symbol == "function" && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
            }, _typeof(t3);
          }
          Object.defineProperty(r2, "__esModule", { value: true });
          r2.XdpNamespace = void 0;
          var c = o2(232), l = o2(230);
          function _classCallCheck(t3, r3) {
            if (!(t3 instanceof r3))
              throw new TypeError("Cannot call a class as a function");
          }
          function _defineProperties(t3, r3) {
            for (var o3 = 0; o3 < r3.length; o3++) {
              var c2 = r3[o3];
              c2.enumerable = c2.enumerable || false;
              c2.configurable = true;
              "value" in c2 && (c2.writable = true);
              Object.defineProperty(t3, c2.key, c2);
            }
          }
          function _createClass(t3, r3, o3) {
            r3 && _defineProperties(t3.prototype, r3);
            o3 && _defineProperties(t3, o3);
            Object.defineProperty(t3, "prototype", { writable: false });
            return t3;
          }
          function _setPrototypeOf(t3, r3) {
            _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(t4, r4) {
              t4.__proto__ = r4;
              return t4;
            };
            return _setPrototypeOf(t3, r3);
          }
          function _createSuper(t3) {
            var r3 = function _isNativeReflectConstruct() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                }));
                return true;
              } catch (t4) {
                return false;
              }
            }();
            return function _createSuperInternal() {
              var o3, c2 = _getPrototypeOf(t3);
              if (r3) {
                var l2 = _getPrototypeOf(this).constructor;
                o3 = Reflect.construct(c2, arguments, l2);
              } else
                o3 = c2.apply(this, arguments);
              return _possibleConstructorReturn(this, o3);
            };
          }
          function _possibleConstructorReturn(t3, r3) {
            if (r3 && (_typeof(r3) === "object" || typeof r3 == "function"))
              return r3;
            if (r3 !== void 0)
              throw new TypeError("Derived constructors may only return object or undefined");
            return function _assertThisInitialized(t4) {
              if (t4 === void 0)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return t4;
            }(t3);
          }
          function _getPrototypeOf(t3) {
            _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(t4) {
              return t4.__proto__ || Object.getPrototypeOf(t4);
            };
            return _getPrototypeOf(t3);
          }
          var u = c.NamespaceIds.xdp.id, h = function(t3) {
            !function _inherits(t4, r4) {
              if (typeof r4 != "function" && r4 !== null)
                throw new TypeError("Super expression must either be null or a function");
              t4.prototype = Object.create(r4 && r4.prototype, { constructor: { value: t4, writable: true, configurable: true } });
              Object.defineProperty(t4, "prototype", { writable: false });
              r4 && _setPrototypeOf(t4, r4);
            }(Xdp, t3);
            var r3 = _createSuper(Xdp);
            function Xdp(t4) {
              var o3;
              _classCallCheck(this, Xdp);
              (o3 = r3.call(this, u, "xdp", true)).uuid = t4.uuid || "";
              o3.timeStamp = t4.timeStamp || "";
              o3.config = null;
              o3.connectionSet = null;
              o3.datasets = null;
              o3.localeSet = null;
              o3.stylesheet = new l.XFAObjectArray();
              o3.template = null;
              return o3;
            }
            _createClass(Xdp, [{ key: l.$onChildCheck, value: function value(t4) {
              var r4 = c.NamespaceIds[t4[l.$nodeName]];
              return r4 && t4[l.$namespaceId] === r4.id;
            } }]);
            return Xdp;
          }(l.XFAObject), d = function() {
            function XdpNamespace() {
              _classCallCheck(this, XdpNamespace);
            }
            _createClass(XdpNamespace, null, [{ key: c.$buildXFAObject, value: function value(t3, r3) {
              if (XdpNamespace.hasOwnProperty(t3))
                return XdpNamespace[t3](r3);
            } }, { key: "xdp", value: function xdp(t3) {
              return new h(t3);
            } }]);
            return XdpNamespace;
          }();
          r2.XdpNamespace = d;
        }, (t2, r2, o2) => {
          "use strict";
          function _typeof(t3) {
            return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t4) {
              return typeof t4;
            } : function(t4) {
              return t4 && typeof Symbol == "function" && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
            }, _typeof(t3);
          }
          Object.defineProperty(r2, "__esModule", { value: true });
          r2.XhtmlNamespace = void 0;
          var c = o2(230), l = o2(232), u = o2(237), h = o2(231);
          function _classCallCheck(t3, r3) {
            if (!(t3 instanceof r3))
              throw new TypeError("Cannot call a class as a function");
          }
          function _defineProperties(t3, r3) {
            for (var o3 = 0; o3 < r3.length; o3++) {
              var c2 = r3[o3];
              c2.enumerable = c2.enumerable || false;
              c2.configurable = true;
              "value" in c2 && (c2.writable = true);
              Object.defineProperty(t3, c2.key, c2);
            }
          }
          function _createClass(t3, r3, o3) {
            r3 && _defineProperties(t3.prototype, r3);
            o3 && _defineProperties(t3, o3);
            Object.defineProperty(t3, "prototype", { writable: false });
            return t3;
          }
          function _get() {
            _get = typeof Reflect != "undefined" && Reflect.get ? Reflect.get : function _get2(t3, r3, o3) {
              var c2 = _superPropBase(t3, r3);
              if (c2) {
                var l2 = Object.getOwnPropertyDescriptor(c2, r3);
                return l2.get ? l2.get.call(arguments.length < 3 ? t3 : o3) : l2.value;
              }
            };
            return _get.apply(this, arguments);
          }
          function _superPropBase(t3, r3) {
            for (; !Object.prototype.hasOwnProperty.call(t3, r3) && (t3 = _getPrototypeOf(t3)) !== null; )
              ;
            return t3;
          }
          function _inherits(t3, r3) {
            if (typeof r3 != "function" && r3 !== null)
              throw new TypeError("Super expression must either be null or a function");
            t3.prototype = Object.create(r3 && r3.prototype, { constructor: { value: t3, writable: true, configurable: true } });
            Object.defineProperty(t3, "prototype", { writable: false });
            r3 && _setPrototypeOf(t3, r3);
          }
          function _setPrototypeOf(t3, r3) {
            _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(t4, r4) {
              t4.__proto__ = r4;
              return t4;
            };
            return _setPrototypeOf(t3, r3);
          }
          function _createSuper(t3) {
            var r3 = function _isNativeReflectConstruct() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                }));
                return true;
              } catch (t4) {
                return false;
              }
            }();
            return function _createSuperInternal() {
              var o3, c2 = _getPrototypeOf(t3);
              if (r3) {
                var l2 = _getPrototypeOf(this).constructor;
                o3 = Reflect.construct(c2, arguments, l2);
              } else
                o3 = c2.apply(this, arguments);
              return _possibleConstructorReturn(this, o3);
            };
          }
          function _possibleConstructorReturn(t3, r3) {
            if (r3 && (_typeof(r3) === "object" || typeof r3 == "function"))
              return r3;
            if (r3 !== void 0)
              throw new TypeError("Derived constructors may only return object or undefined");
            return function _assertThisInitialized(t4) {
              if (t4 === void 0)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return t4;
            }(t3);
          }
          function _getPrototypeOf(t3) {
            _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(t4) {
              return t4.__proto__ || Object.getPrototypeOf(t4);
            };
            return _getPrototypeOf(t3);
          }
          function _slicedToArray(t3, r3) {
            return function _arrayWithHoles(t4) {
              if (Array.isArray(t4))
                return t4;
            }(t3) || function _iterableToArrayLimit(t4, r4) {
              var o3 = t4 == null ? null : typeof Symbol != "undefined" && t4[Symbol.iterator] || t4["@@iterator"];
              if (o3 == null)
                return;
              var c2, l2, u2 = [], h2 = true, d2 = false;
              try {
                for (o3 = o3.call(t4); !(h2 = (c2 = o3.next()).done); h2 = true) {
                  u2.push(c2.value);
                  if (r4 && u2.length === r4)
                    break;
                }
              } catch (t5) {
                d2 = true;
                l2 = t5;
              } finally {
                try {
                  h2 || o3.return == null || o3.return();
                } finally {
                  if (d2)
                    throw l2;
                }
              }
              return u2;
            }(t3, r3) || _unsupportedIterableToArray(t3, r3) || function _nonIterableRest() {
              throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
            }();
          }
          function _createForOfIteratorHelper(t3, r3) {
            var o3 = typeof Symbol != "undefined" && t3[Symbol.iterator] || t3["@@iterator"];
            if (!o3) {
              if (Array.isArray(t3) || (o3 = _unsupportedIterableToArray(t3)) || r3 && t3 && typeof t3.length == "number") {
                o3 && (t3 = o3);
                var c2 = 0, l2 = function F() {
                };
                return { s: l2, n: function n() {
                  return c2 >= t3.length ? { done: true } : { done: false, value: t3[c2++] };
                }, e: function e(t4) {
                  throw t4;
                }, f: l2 };
              }
              throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
            }
            var u2, h2 = true, d2 = false;
            return { s: function s() {
              o3 = o3.call(t3);
            }, n: function n() {
              var t4 = o3.next();
              h2 = t4.done;
              return t4;
            }, e: function e(t4) {
              d2 = true;
              u2 = t4;
            }, f: function f() {
              try {
                h2 || o3.return == null || o3.return();
              } finally {
                if (d2)
                  throw u2;
              }
            } };
          }
          function _unsupportedIterableToArray(t3, r3) {
            if (t3) {
              if (typeof t3 == "string")
                return _arrayLikeToArray(t3, r3);
              var o3 = Object.prototype.toString.call(t3).slice(8, -1);
              o3 === "Object" && t3.constructor && (o3 = t3.constructor.name);
              return o3 === "Map" || o3 === "Set" ? Array.from(t3) : o3 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(o3) ? _arrayLikeToArray(t3, r3) : void 0;
            }
          }
          function _arrayLikeToArray(t3, r3) {
            (r3 == null || r3 > t3.length) && (r3 = t3.length);
            for (var o3 = 0, c2 = new Array(r3); o3 < r3; o3++)
              c2[o3] = t3[o3];
            return c2;
          }
          var d = l.NamespaceIds.xhtml.id, g = Symbol(), m = /* @__PURE__ */ new Set(["color", "font", "font-family", "font-size", "font-stretch", "font-style", "font-weight", "margin", "margin-bottom", "margin-left", "margin-right", "margin-top", "letter-spacing", "line-height", "orphans", "page-break-after", "page-break-before", "page-break-inside", "tab-interval", "tab-stop", "text-align", "text-decoration", "text-indent", "vertical-align", "widows", "kerning-mode", "xfa-font-horizontal-scale", "xfa-font-vertical-scale", "xfa-spacerun", "xfa-tab-stops"]), y = /* @__PURE__ */ new Map([["page-break-after", "breakAfter"], ["page-break-before", "breakBefore"], ["page-break-inside", "breakInside"], ["kerning-mode", function(t3) {
            return t3 === "none" ? "none" : "normal";
          }], ["xfa-font-horizontal-scale", function(t3) {
            return "scaleX(".concat(Math.max(0, Math.min(parseInt(t3) / 100)).toFixed(2), ")");
          }], ["xfa-font-vertical-scale", function(t3) {
            return "scaleY(".concat(Math.max(0, Math.min(parseInt(t3) / 100)).toFixed(2), ")");
          }], ["xfa-spacerun", ""], ["xfa-tab-stops", ""], ["font-size", function(t3, r3) {
            t3 = r3.fontSize = (0, h.getMeasurement)(t3);
            return (0, u.measureToString)(0.99 * t3);
          }], ["letter-spacing", function(t3) {
            return (0, u.measureToString)((0, h.getMeasurement)(t3));
          }], ["line-height", function(t3) {
            return (0, u.measureToString)((0, h.getMeasurement)(t3));
          }], ["margin", function(t3) {
            return (0, u.measureToString)((0, h.getMeasurement)(t3));
          }], ["margin-bottom", function(t3) {
            return (0, u.measureToString)((0, h.getMeasurement)(t3));
          }], ["margin-left", function(t3) {
            return (0, u.measureToString)((0, h.getMeasurement)(t3));
          }], ["margin-right", function(t3) {
            return (0, u.measureToString)((0, h.getMeasurement)(t3));
          }], ["margin-top", function(t3) {
            return (0, u.measureToString)((0, h.getMeasurement)(t3));
          }], ["text-indent", function(t3) {
            return (0, u.measureToString)((0, h.getMeasurement)(t3));
          }], ["font-family", function(t3) {
            return t3;
          }], ["vertical-align", function(t3) {
            return (0, u.measureToString)((0, h.getMeasurement)(t3));
          }]]), v = /\s+/g, k = /[\r\n]+/g, _ = /\r\n?/g;
          function mapStyle(t3, r3, o3) {
            var l2 = /* @__PURE__ */ Object.create(null);
            if (!t3)
              return l2;
            var d2, g2 = /* @__PURE__ */ Object.create(null), m2 = _createForOfIteratorHelper(t3.split(";").map(function(t4) {
              return t4.split(":", 2);
            }));
            try {
              for (m2.s(); !(d2 = m2.n()).done; ) {
                var v2 = _slicedToArray(d2.value, 2), k2 = v2[0], _2 = v2[1], w2 = y.get(k2);
                if (w2 !== "") {
                  var S2 = _2;
                  w2 && (S2 = typeof w2 == "string" ? w2 : w2(_2, g2));
                  k2.endsWith("scale") ? l2.transform ? l2.transform = "".concat(l2[k2], " ").concat(S2) : l2.transform = S2 : l2[k2.replaceAll(/-([a-zA-Z])/g, function(t4, r4) {
                    return r4.toUpperCase();
                  })] = S2;
                }
              }
            } catch (t4) {
              m2.e(t4);
            } finally {
              m2.f();
            }
            l2.fontFamily && (0, u.setFontFamily)({ typeface: l2.fontFamily, weight: l2.fontWeight || "normal", posture: l2.fontStyle || "normal", size: g2.fontSize || 0 }, r3, r3[c.$globalData].fontFinder, l2);
            if (o3 && l2.verticalAlign && l2.verticalAlign !== "0px" && l2.fontSize) {
              var C2 = (0, h.getMeasurement)(l2.fontSize);
              l2.fontSize = (0, u.measureToString)(0.583 * C2);
              l2.verticalAlign = (0, u.measureToString)(Math.sign((0, h.getMeasurement)(l2.verticalAlign)) * C2 * 0.333);
            }
            (0, u.fixTextIndent)(l2);
            return l2;
          }
          var w = /* @__PURE__ */ new Set(["body", "html"]), S = function(t3) {
            _inherits(XhtmlObject, t3);
            var r3 = _createSuper(XhtmlObject);
            function XhtmlObject(t4, o3) {
              var c2;
              _classCallCheck(this, XhtmlObject);
              (c2 = r3.call(this, d, o3))[g] = false;
              c2.style = t4.style || "";
              return c2;
            }
            _createClass(XhtmlObject, [{ key: c.$clean, value: function value(t4) {
              _get(_getPrototypeOf(XhtmlObject.prototype), c.$clean, this).call(this, t4);
              this.style = function checkStyle(t5) {
                return t5.style ? t5.style.trim().split(/\s*;\s*/).filter(function(t6) {
                  return !!t6;
                }).map(function(t6) {
                  return t6.split(/\s*:\s*/, 2);
                }).filter(function(r4) {
                  var o3 = _slicedToArray(r4, 2), l2 = o3[0], u2 = o3[1];
                  l2 === "font-family" && t5[c.$globalData].usedTypefaces.add(u2);
                  return m.has(l2);
                }).map(function(t6) {
                  return t6.join(":");
                }).join(";") : "";
              }(this);
            } }, { key: c.$acceptWhitespace, value: function value() {
              return !w.has(this[c.$nodeName]);
            } }, { key: c.$onText, value: function value(t4) {
              var r4 = arguments.length > 1 && arguments[1] !== void 0 && arguments[1];
              if (r4)
                this[g] = true;
              else {
                t4 = t4.replace(k, "");
                this.style.includes("xfa-spacerun:yes") || (t4 = t4.replace(v, " "));
              }
              t4 && (this[c.$content] += t4);
            } }, { key: c.$pushGlyphs, value: function value(t4) {
              var r4, o3 = !(arguments.length > 1 && arguments[1] !== void 0) || arguments[1], l2 = /* @__PURE__ */ Object.create(null), u2 = { top: NaN, bottom: NaN, left: NaN, right: NaN }, d2 = null, g2 = _createForOfIteratorHelper(this.style.split(";").map(function(t5) {
                return t5.split(":", 2);
              }));
              try {
                for (g2.s(); !(r4 = g2.n()).done; ) {
                  var m2 = _slicedToArray(r4.value, 2), y2 = m2[0], value2 = m2[1];
                  switch (y2) {
                    case "font-family":
                      l2.typeface = (0, h.stripQuotes)(value2);
                      break;
                    case "font-size":
                      l2.size = (0, h.getMeasurement)(value2);
                      break;
                    case "font-weight":
                      l2.weight = value2;
                      break;
                    case "font-style":
                      l2.posture = value2;
                      break;
                    case "letter-spacing":
                      l2.letterSpacing = (0, h.getMeasurement)(value2);
                      break;
                    case "margin":
                      var v2 = value2.split(/ \t/).map(function(t5) {
                        return (0, h.getMeasurement)(t5);
                      });
                      switch (v2.length) {
                        case 1:
                          u2.top = u2.bottom = u2.left = u2.right = v2[0];
                          break;
                        case 2:
                          u2.top = u2.bottom = v2[0];
                          u2.left = u2.right = v2[1];
                          break;
                        case 3:
                          u2.top = v2[0];
                          u2.bottom = v2[2];
                          u2.left = u2.right = v2[1];
                          break;
                        case 4:
                          u2.top = v2[0];
                          u2.left = v2[1];
                          u2.bottom = v2[2];
                          u2.right = v2[3];
                      }
                      break;
                    case "margin-top":
                      u2.top = (0, h.getMeasurement)(value2);
                      break;
                    case "margin-bottom":
                      u2.bottom = (0, h.getMeasurement)(value2);
                      break;
                    case "margin-left":
                      u2.left = (0, h.getMeasurement)(value2);
                      break;
                    case "margin-right":
                      u2.right = (0, h.getMeasurement)(value2);
                      break;
                    case "line-height":
                      d2 = (0, h.getMeasurement)(value2);
                  }
                }
              } catch (t5) {
                g2.e(t5);
              } finally {
                g2.f();
              }
              t4.pushData(l2, u2, d2);
              if (this[c.$content])
                t4.addString(this[c.$content]);
              else {
                var k2, _2 = _createForOfIteratorHelper(this[c.$getChildren]());
                try {
                  for (_2.s(); !(k2 = _2.n()).done; ) {
                    var w2 = k2.value;
                    w2[c.$nodeName] !== "#text" ? w2[c.$pushGlyphs](t4) : t4.addString(w2[c.$content]);
                  }
                } catch (t5) {
                  _2.e(t5);
                } finally {
                  _2.f();
                }
              }
              o3 && t4.popFont();
            } }, { key: c.$toHTML, value: function value(t4) {
              var value2, r4 = [];
              this[c.$extra] = { children: r4 };
              this[c.$childrenToHTML]({});
              if (r4.length === 0 && !this[c.$content])
                return h.HTMLResult.EMPTY;
              value2 = this[g] ? this[c.$content] ? this[c.$content].replace(_, "\n") : void 0 : this[c.$content] || void 0;
              return h.HTMLResult.success({ name: this[c.$nodeName], attributes: { href: this.href, style: mapStyle(this.style, this, this[g]) }, children: r4, value: value2 });
            } }]);
            return XhtmlObject;
          }(c.XmlObject), C = function(t3) {
            _inherits(A, t3);
            var r3 = _createSuper(A);
            function A(t4) {
              var o3;
              _classCallCheck(this, A);
              (o3 = r3.call(this, t4, "a")).href = (0, u.fixURL)(t4.href) || "";
              return o3;
            }
            return _createClass(A);
          }(S), x = function(t3) {
            _inherits(B, t3);
            var r3 = _createSuper(B);
            function B(t4) {
              _classCallCheck(this, B);
              return r3.call(this, t4, "b");
            }
            _createClass(B, [{ key: c.$pushGlyphs, value: function value(t4) {
              t4.pushFont({ weight: "bold" });
              _get(_getPrototypeOf(B.prototype), c.$pushGlyphs, this).call(this, t4);
              t4.popFont();
            } }]);
            return B;
          }(S), O = function(t3) {
            _inherits(Body, t3);
            var r3 = _createSuper(Body);
            function Body(t4) {
              _classCallCheck(this, Body);
              return r3.call(this, t4, "body");
            }
            _createClass(Body, [{ key: c.$toHTML, value: function value(t4) {
              var r4 = _get(_getPrototypeOf(Body.prototype), c.$toHTML, this).call(this, t4), o3 = r4.html;
              if (!o3)
                return h.HTMLResult.EMPTY;
              o3.name = "div";
              o3.attributes.class = ["xfaRich"];
              return r4;
            } }]);
            return Body;
          }(S), T = function(t3) {
            _inherits(Br, t3);
            var r3 = _createSuper(Br);
            function Br(t4) {
              _classCallCheck(this, Br);
              return r3.call(this, t4, "br");
            }
            _createClass(Br, [{ key: c.$text, value: function value() {
              return "\n";
            } }, { key: c.$pushGlyphs, value: function value(t4) {
              t4.addString("\n");
            } }, { key: c.$toHTML, value: function value(t4) {
              return h.HTMLResult.success({ name: "br" });
            } }]);
            return Br;
          }(S), E = function(t3) {
            _inherits(Html, t3);
            var r3 = _createSuper(Html);
            function Html(t4) {
              _classCallCheck(this, Html);
              return r3.call(this, t4, "html");
            }
            _createClass(Html, [{ key: c.$toHTML, value: function value(t4) {
              var r4 = [];
              this[c.$extra] = { children: r4 };
              this[c.$childrenToHTML]({});
              if (r4.length === 0)
                return h.HTMLResult.success({ name: "div", attributes: { class: ["xfaRich"], style: {} }, value: this[c.$content] || "" });
              if (r4.length === 1) {
                var o3 = r4[0];
                if (o3.attributes && o3.attributes.class.includes("xfaRich"))
                  return h.HTMLResult.success(o3);
              }
              return h.HTMLResult.success({ name: "div", attributes: { class: ["xfaRich"], style: {} }, children: r4 });
            } }]);
            return Html;
          }(S), M = function(t3) {
            _inherits(I, t3);
            var r3 = _createSuper(I);
            function I(t4) {
              _classCallCheck(this, I);
              return r3.call(this, t4, "i");
            }
            _createClass(I, [{ key: c.$pushGlyphs, value: function value(t4) {
              t4.pushFont({ posture: "italic" });
              _get(_getPrototypeOf(I.prototype), c.$pushGlyphs, this).call(this, t4);
              t4.popFont();
            } }]);
            return I;
          }(S), R = function(t3) {
            _inherits(Li, t3);
            var r3 = _createSuper(Li);
            function Li(t4) {
              _classCallCheck(this, Li);
              return r3.call(this, t4, "li");
            }
            return _createClass(Li);
          }(S), D = function(t3) {
            _inherits(Ol, t3);
            var r3 = _createSuper(Ol);
            function Ol(t4) {
              _classCallCheck(this, Ol);
              return r3.call(this, t4, "ol");
            }
            return _createClass(Ol);
          }(S), j = function(t3) {
            _inherits(P, t3);
            var r3 = _createSuper(P);
            function P(t4) {
              _classCallCheck(this, P);
              return r3.call(this, t4, "p");
            }
            _createClass(P, [{ key: c.$pushGlyphs, value: function value(t4) {
              _get(_getPrototypeOf(P.prototype), c.$pushGlyphs, this).call(this, t4, false);
              t4.addString("\n");
              t4.addPara();
              t4.popFont();
            } }, { key: c.$text, value: function value() {
              var t4 = this[c.$getParent]()[c.$getChildren]();
              return t4[t4.length - 1] === this ? _get(_getPrototypeOf(P.prototype), c.$text, this).call(this) : _get(_getPrototypeOf(P.prototype), c.$text, this).call(this) + "\n";
            } }]);
            return P;
          }(S), L = function(t3) {
            _inherits(Span, t3);
            var r3 = _createSuper(Span);
            function Span(t4) {
              _classCallCheck(this, Span);
              return r3.call(this, t4, "span");
            }
            return _createClass(Span);
          }(S), N = function(t3) {
            _inherits(Sub, t3);
            var r3 = _createSuper(Sub);
            function Sub(t4) {
              _classCallCheck(this, Sub);
              return r3.call(this, t4, "sub");
            }
            return _createClass(Sub);
          }(S), U = function(t3) {
            _inherits(Sup, t3);
            var r3 = _createSuper(Sup);
            function Sup(t4) {
              _classCallCheck(this, Sup);
              return r3.call(this, t4, "sup");
            }
            return _createClass(Sup);
          }(S), H = function(t3) {
            _inherits(Ul, t3);
            var r3 = _createSuper(Ul);
            function Ul(t4) {
              _classCallCheck(this, Ul);
              return r3.call(this, t4, "ul");
            }
            return _createClass(Ul);
          }(S), $ = function() {
            function XhtmlNamespace() {
              _classCallCheck(this, XhtmlNamespace);
            }
            _createClass(XhtmlNamespace, null, [{ key: l.$buildXFAObject, value: function value(t3, r3) {
              if (XhtmlNamespace.hasOwnProperty(t3))
                return XhtmlNamespace[t3](r3);
            } }, { key: "a", value: function a(t3) {
              return new C(t3);
            } }, { key: "b", value: function b(t3) {
              return new x(t3);
            } }, { key: "body", value: function body(t3) {
              return new O(t3);
            } }, { key: "br", value: function br(t3) {
              return new T(t3);
            } }, { key: "html", value: function html(t3) {
              return new E(t3);
            } }, { key: "i", value: function i(t3) {
              return new M(t3);
            } }, { key: "li", value: function li(t3) {
              return new R(t3);
            } }, { key: "ol", value: function ol(t3) {
              return new D(t3);
            } }, { key: "p", value: function p(t3) {
              return new j(t3);
            } }, { key: "span", value: function span(t3) {
              return new L(t3);
            } }, { key: "sub", value: function sub(t3) {
              return new N(t3);
            } }, { key: "sup", value: function sup(t3) {
              return new U(t3);
            } }, { key: "ul", value: function ul(t3) {
              return new H(t3);
            } }]);
            return XhtmlNamespace;
          }();
          r2.XhtmlNamespace = $;
        }, (t2, r2, o2) => {
          "use strict";
          Object.defineProperty(r2, "__esModule", { value: true });
          r2.UnknownNamespace = void 0;
          var c = o2(232), l = o2(230);
          function _defineProperties(t3, r3) {
            for (var o3 = 0; o3 < r3.length; o3++) {
              var c2 = r3[o3];
              c2.enumerable = c2.enumerable || false;
              c2.configurable = true;
              "value" in c2 && (c2.writable = true);
              Object.defineProperty(t3, c2.key, c2);
            }
          }
          var u = function() {
            function UnknownNamespace(t3) {
              !function _classCallCheck(t4, r3) {
                if (!(t4 instanceof r3))
                  throw new TypeError("Cannot call a class as a function");
              }(this, UnknownNamespace);
              this.namespaceId = t3;
            }
            !function _createClass(t3, r3, o3) {
              r3 && _defineProperties(t3.prototype, r3);
              o3 && _defineProperties(t3, o3);
              Object.defineProperty(t3, "prototype", { writable: false });
              return t3;
            }(UnknownNamespace, [{ key: c.$buildXFAObject, value: function value(t3, r3) {
              return new l.XmlObject(this.namespaceId, t3, r3);
            } }]);
            return UnknownNamespace;
          }();
          r2.UnknownNamespace = u;
        }, (t2, r2, o2) => {
          "use strict";
          function _typeof(t3) {
            return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t4) {
              return typeof t4;
            } : function(t4) {
              return t4 && typeof Symbol == "function" && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
            }, _typeof(t3);
          }
          Object.defineProperty(r2, "__esModule", { value: true });
          r2.DatasetReader = void 0;
          var c = o2(4), l = o2(161), u = o2(223);
          function _classCallCheck(t3, r3) {
            if (!(t3 instanceof r3))
              throw new TypeError("Cannot call a class as a function");
          }
          function _defineProperties(t3, r3) {
            for (var o3 = 0; o3 < r3.length; o3++) {
              var c2 = r3[o3];
              c2.enumerable = c2.enumerable || false;
              c2.configurable = true;
              "value" in c2 && (c2.writable = true);
              Object.defineProperty(t3, c2.key, c2);
            }
          }
          function _createClass(t3, r3, o3) {
            r3 && _defineProperties(t3.prototype, r3);
            o3 && _defineProperties(t3, o3);
            Object.defineProperty(t3, "prototype", { writable: false });
            return t3;
          }
          function _get() {
            _get = typeof Reflect != "undefined" && Reflect.get ? Reflect.get : function _get2(t3, r3, o3) {
              var c2 = _superPropBase(t3, r3);
              if (c2) {
                var l2 = Object.getOwnPropertyDescriptor(c2, r3);
                return l2.get ? l2.get.call(arguments.length < 3 ? t3 : o3) : l2.value;
              }
            };
            return _get.apply(this, arguments);
          }
          function _superPropBase(t3, r3) {
            for (; !Object.prototype.hasOwnProperty.call(t3, r3) && (t3 = _getPrototypeOf(t3)) !== null; )
              ;
            return t3;
          }
          function _setPrototypeOf(t3, r3) {
            _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(t4, r4) {
              t4.__proto__ = r4;
              return t4;
            };
            return _setPrototypeOf(t3, r3);
          }
          function _createSuper(t3) {
            var r3 = function _isNativeReflectConstruct() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                }));
                return true;
              } catch (t4) {
                return false;
              }
            }();
            return function _createSuperInternal() {
              var o3, c2 = _getPrototypeOf(t3);
              if (r3) {
                var l2 = _getPrototypeOf(this).constructor;
                o3 = Reflect.construct(c2, arguments, l2);
              } else
                o3 = c2.apply(this, arguments);
              return _possibleConstructorReturn(this, o3);
            };
          }
          function _possibleConstructorReturn(t3, r3) {
            if (r3 && (_typeof(r3) === "object" || typeof r3 == "function"))
              return r3;
            if (r3 !== void 0)
              throw new TypeError("Derived constructors may only return object or undefined");
            return function _assertThisInitialized(t4) {
              if (t4 === void 0)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return t4;
            }(t3);
          }
          function _getPrototypeOf(t3) {
            _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(t4) {
              return t4.__proto__ || Object.getPrototypeOf(t4);
            };
            return _getPrototypeOf(t3);
          }
          function decodeString(t3) {
            try {
              return (0, c.stringToUTF8String)(t3);
            } catch (r3) {
              (0, c.warn)('UTF-8 decoding failed: "'.concat(r3, '".'));
              return t3;
            }
          }
          var h = function(t3) {
            !function _inherits(t4, r4) {
              if (typeof r4 != "function" && r4 !== null)
                throw new TypeError("Super expression must either be null or a function");
              t4.prototype = Object.create(r4 && r4.prototype, { constructor: { value: t4, writable: true, configurable: true } });
              Object.defineProperty(t4, "prototype", { writable: false });
              r4 && _setPrototypeOf(t4, r4);
            }(DatasetXMLParser, t3);
            var r3 = _createSuper(DatasetXMLParser);
            function DatasetXMLParser(t4) {
              var o3;
              _classCallCheck(this, DatasetXMLParser);
              (o3 = r3.call(this, t4)).node = null;
              return o3;
            }
            _createClass(DatasetXMLParser, [{ key: "onEndElement", value: function onEndElement(t4) {
              var r4 = _get(_getPrototypeOf(DatasetXMLParser.prototype), "onEndElement", this).call(this, t4);
              if (r4 && t4 === "xfa:datasets") {
                this.node = r4;
                throw new Error("Aborting DatasetXMLParser.");
              }
            } }]);
            return DatasetXMLParser;
          }(u.SimpleXMLParser), d = function() {
            function DatasetReader(t3) {
              _classCallCheck(this, DatasetReader);
              if (t3.datasets)
                this.node = new u.SimpleXMLParser({ hasAttributes: true }).parseFromString(t3.datasets).documentElement;
              else {
                var r3 = new h({ hasAttributes: true });
                try {
                  r3.parseFromString(t3["xdp:xdp"]);
                } catch (t4) {
                }
                this.node = r3.node;
              }
            }
            _createClass(DatasetReader, [{ key: "getValue", value: function getValue(t3) {
              if (!this.node || !t3)
                return "";
              var r3 = this.node.searchNode((0, l.parseXFAPath)(t3), 0);
              if (!r3)
                return "";
              var o3 = r3.firstChild;
              return o3 && o3.nodeName === "value" ? r3.children.map(function(t4) {
                return decodeString(t4.textContent);
              }) : decodeString(r3.textContent);
            } }]);
            return DatasetReader;
          }();
          r2.DatasetReader = d;
        }, (t2, r2, o2) => {
          "use strict";
          Object.defineProperty(r2, "__esModule", { value: true });
          r2.XRef = void 0;
          var c = function _interopRequireDefault(t3) {
            return t3 && t3.__esModule ? t3 : { default: t3 };
          }(o2(2)), l = o2(4), u = o2(158), h = o2(161), d = o2(180), g = o2(162), m = o2(227);
          function asyncGeneratorStep(t3, r3, o3, c2, l2, u2, h2) {
            try {
              var d2 = t3[u2](h2), g2 = d2.value;
            } catch (t4) {
              o3(t4);
              return;
            }
            d2.done ? r3(g2) : Promise.resolve(g2).then(c2, l2);
          }
          function _asyncToGenerator(t3) {
            return function() {
              var r3 = this, o3 = arguments;
              return new Promise(function(c2, l2) {
                var u2 = t3.apply(r3, o3);
                function _next(t4) {
                  asyncGeneratorStep(u2, c2, l2, _next, _throw, "next", t4);
                }
                function _throw(t4) {
                  asyncGeneratorStep(u2, c2, l2, _next, _throw, "throw", t4);
                }
                _next(void 0);
              });
            };
          }
          function _slicedToArray(t3, r3) {
            return function _arrayWithHoles(t4) {
              if (Array.isArray(t4))
                return t4;
            }(t3) || function _iterableToArrayLimit(t4, r4) {
              var o3 = t4 == null ? null : typeof Symbol != "undefined" && t4[Symbol.iterator] || t4["@@iterator"];
              if (o3 == null)
                return;
              var c2, l2, u2 = [], h2 = true, d2 = false;
              try {
                for (o3 = o3.call(t4); !(h2 = (c2 = o3.next()).done); h2 = true) {
                  u2.push(c2.value);
                  if (r4 && u2.length === r4)
                    break;
                }
              } catch (t5) {
                d2 = true;
                l2 = t5;
              } finally {
                try {
                  h2 || o3.return == null || o3.return();
                } finally {
                  if (d2)
                    throw l2;
                }
              }
              return u2;
            }(t3, r3) || function _unsupportedIterableToArray(t4, r4) {
              if (!t4)
                return;
              if (typeof t4 == "string")
                return _arrayLikeToArray(t4, r4);
              var o3 = Object.prototype.toString.call(t4).slice(8, -1);
              o3 === "Object" && t4.constructor && (o3 = t4.constructor.name);
              if (o3 === "Map" || o3 === "Set")
                return Array.from(t4);
              if (o3 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(o3))
                return _arrayLikeToArray(t4, r4);
            }(t3, r3) || function _nonIterableRest() {
              throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
            }();
          }
          function _arrayLikeToArray(t3, r3) {
            (r3 == null || r3 > t3.length) && (r3 = t3.length);
            for (var o3 = 0, c2 = new Array(r3); o3 < r3; o3++)
              c2[o3] = t3[o3];
            return c2;
          }
          function _defineProperties(t3, r3) {
            for (var o3 = 0; o3 < r3.length; o3++) {
              var c2 = r3[o3];
              c2.enumerable = c2.enumerable || false;
              c2.configurable = true;
              "value" in c2 && (c2.writable = true);
              Object.defineProperty(t3, c2.key, c2);
            }
          }
          var y = function() {
            function XRef(t4, r4) {
              !function _classCallCheck(t5, r5) {
                if (!(t5 instanceof r5))
                  throw new TypeError("Cannot call a class as a function");
              }(this, XRef);
              this.stream = t4;
              this.pdfManager = r4;
              this.entries = [];
              this.xrefstms = /* @__PURE__ */ Object.create(null);
              this._cacheMap = /* @__PURE__ */ new Map();
              this._pendingRefs = new u.RefSet();
              this.stats = new h.DocStats(r4.msgHandler);
              this._newRefNum = null;
            }
            !function _createClass(t4, r4, o3) {
              r4 && _defineProperties(t4.prototype, r4);
              o3 && _defineProperties(t4, o3);
              Object.defineProperty(t4, "prototype", { writable: false });
              return t4;
            }(XRef, [{ key: "getNewRef", value: function getNewRef() {
              this._newRefNum === null && (this._newRefNum = this.entries.length);
              return u.Ref.get(this._newRefNum++, 0);
            } }, { key: "resetNewRef", value: function resetNewRef() {
              this._newRefNum = null;
            } }, { key: "setStartXRef", value: function setStartXRef(t4) {
              this.startXRefQueue = [t4];
            } }, { key: "parse", value: function parse() {
              var t4, r4, o3, c2 = arguments.length > 0 && arguments[0] !== void 0 && arguments[0];
              if (c2) {
                (0, l.warn)("Indexing all PDF objects");
                t4 = this.indexObjects();
              } else
                t4 = this.readXRef();
              t4.assignXref(this);
              this.trailer = t4;
              try {
                r4 = t4.get("Encrypt");
              } catch (t5) {
                if (t5 instanceof h.MissingDataException)
                  throw t5;
                (0, l.warn)('XRef.parse - Invalid "Encrypt" reference: "'.concat(t5, '".'));
              }
              if (r4 instanceof u.Dict) {
                var d2 = t4.get("ID"), g2 = d2 && d2.length ? d2[0] : "";
                r4.suppressEncryption = true;
                this.encrypt = new m.CipherTransformFactory(r4, g2, this.pdfManager.password);
              }
              try {
                o3 = t4.get("Root");
              } catch (t5) {
                if (t5 instanceof h.MissingDataException)
                  throw t5;
                (0, l.warn)('XRef.parse - Invalid "Root" reference: "'.concat(t5, '".'));
              }
              if (o3 instanceof u.Dict)
                try {
                  var y2 = o3.get("Pages");
                  if (y2 instanceof u.Dict) {
                    this.root = o3;
                    return;
                  }
                } catch (t5) {
                  if (t5 instanceof h.MissingDataException)
                    throw t5;
                  (0, l.warn)('XRef.parse - Invalid "Pages" reference: "'.concat(t5, '".'));
                }
              if (!c2)
                throw new h.XRefParseException();
              throw new l.InvalidPDFException("Invalid Root reference.");
            } }, { key: "processXRefTable", value: function processXRefTable(t4) {
              "tableState" in this || (this.tableState = { entryNum: 0, streamPos: t4.lexer.stream.pos, parserBuf1: t4.buf1, parserBuf2: t4.buf2 });
              var r4 = this.readXRefTable(t4);
              if (!(0, u.isCmd)(r4, "trailer"))
                throw new l.FormatError("Invalid XRef table: could not find trailer dictionary");
              var o3 = t4.getObj();
              o3 instanceof u.Dict || !o3.dict || (o3 = o3.dict);
              if (!(o3 instanceof u.Dict))
                throw new l.FormatError("Invalid XRef table: could not parse trailer dictionary");
              delete this.tableState;
              return o3;
            } }, { key: "readXRefTable", value: function readXRefTable(t4) {
              var r4, o3 = t4.lexer.stream, c2 = this.tableState;
              o3.pos = c2.streamPos;
              t4.buf1 = c2.parserBuf1;
              t4.buf2 = c2.parserBuf2;
              for (; ; ) {
                if (!("firstEntryNum" in c2) || !("entryCount" in c2)) {
                  if ((0, u.isCmd)(r4 = t4.getObj(), "trailer"))
                    break;
                  c2.firstEntryNum = r4;
                  c2.entryCount = t4.getObj();
                }
                var h2 = c2.firstEntryNum, d2 = c2.entryCount;
                if (!Number.isInteger(h2) || !Number.isInteger(d2))
                  throw new l.FormatError("Invalid XRef table: wrong types in subsection header");
                for (var g2 = c2.entryNum; g2 < d2; g2++) {
                  c2.streamPos = o3.pos;
                  c2.entryNum = g2;
                  c2.parserBuf1 = t4.buf1;
                  c2.parserBuf2 = t4.buf2;
                  var m2 = {};
                  m2.offset = t4.getObj();
                  m2.gen = t4.getObj();
                  var y2 = t4.getObj();
                  if (y2 instanceof u.Cmd)
                    switch (y2.cmd) {
                      case "f":
                        m2.free = true;
                        break;
                      case "n":
                        m2.uncompressed = true;
                    }
                  if (!Number.isInteger(m2.offset) || !Number.isInteger(m2.gen) || !m2.free && !m2.uncompressed)
                    throw new l.FormatError("Invalid entry in XRef subsection: ".concat(h2, ", ").concat(d2));
                  g2 === 0 && m2.free && h2 === 1 && (h2 = 0);
                  this.entries[g2 + h2] || (this.entries[g2 + h2] = m2);
                }
                c2.entryNum = 0;
                c2.streamPos = o3.pos;
                c2.parserBuf1 = t4.buf1;
                c2.parserBuf2 = t4.buf2;
                delete c2.firstEntryNum;
                delete c2.entryCount;
              }
              if (this.entries[0] && !this.entries[0].free)
                throw new l.FormatError("Invalid XRef table: unexpected first object");
              return r4;
            } }, { key: "processXRefStream", value: function processXRefStream(t4) {
              if (!("streamState" in this)) {
                var r4 = t4.dict, o3 = r4.get("W"), c2 = r4.get("Index");
                c2 || (c2 = [0, r4.get("Size")]);
                this.streamState = { entryRanges: c2, byteWidths: o3, entryNum: 0, streamPos: t4.pos };
              }
              this.readXRefStream(t4);
              delete this.streamState;
              return t4.dict;
            } }, { key: "readXRefStream", value: function readXRefStream(t4) {
              var r4 = this.streamState;
              t4.pos = r4.streamPos;
              for (var o3 = _slicedToArray(r4.byteWidths, 3), c2 = o3[0], u2 = o3[1], h2 = o3[2], d2 = r4.entryRanges; d2.length > 0; ) {
                var g2 = _slicedToArray(d2, 2), m2 = g2[0], y2 = g2[1];
                if (!Number.isInteger(m2) || !Number.isInteger(y2))
                  throw new l.FormatError("Invalid XRef range fields: ".concat(m2, ", ").concat(y2));
                if (!Number.isInteger(c2) || !Number.isInteger(u2) || !Number.isInteger(h2))
                  throw new l.FormatError("Invalid XRef entry fields length: ".concat(m2, ", ").concat(y2));
                for (var v = r4.entryNum; v < y2; ++v) {
                  r4.entryNum = v;
                  r4.streamPos = t4.pos;
                  for (var k = 0, _ = 0, w = 0, S = 0; S < c2; ++S) {
                    var C = t4.getByte();
                    if (C === -1)
                      throw new l.FormatError("Invalid XRef byteWidths 'type'.");
                    k = k << 8 | C;
                  }
                  c2 === 0 && (k = 1);
                  for (var x = 0; x < u2; ++x) {
                    var O = t4.getByte();
                    if (O === -1)
                      throw new l.FormatError("Invalid XRef byteWidths 'offset'.");
                    _ = _ << 8 | O;
                  }
                  for (var T = 0; T < h2; ++T) {
                    var E = t4.getByte();
                    if (E === -1)
                      throw new l.FormatError("Invalid XRef byteWidths 'generation'.");
                    w = w << 8 | E;
                  }
                  var M = {};
                  M.offset = _;
                  M.gen = w;
                  switch (k) {
                    case 0:
                      M.free = true;
                      break;
                    case 1:
                      M.uncompressed = true;
                      break;
                    case 2:
                      break;
                    default:
                      throw new l.FormatError("Invalid XRef entry type: ".concat(k));
                  }
                  this.entries[m2 + v] || (this.entries[m2 + v] = M);
                }
                r4.entryNum = 0;
                r4.streamPos = t4.pos;
                d2.splice(0, 2);
              }
            } }, { key: "indexObjects", value: function indexObjects() {
              function readToken(t5, r5) {
                for (var o4 = "", c3 = t5[r5]; c3 !== 10 && c3 !== 13 && c3 !== 60 && !(++r5 >= t5.length); ) {
                  o4 += String.fromCharCode(c3);
                  c3 = t5[r5];
                }
                return o4;
              }
              function skipUntil(t5, r5, o4) {
                for (var c3 = o4.length, l2 = t5.length, u2 = 0; r5 < l2; ) {
                  for (var h2 = 0; h2 < c3 && t5[r5 + h2] === o4[h2]; )
                    ++h2;
                  if (h2 >= c3)
                    break;
                  r5++;
                  u2++;
                }
                return u2;
              }
              var t4 = /^(\d+)\s+(\d+)\s+obj\b/, r4 = /\bendobj[\b\s]$/, o3 = /\s+(\d+\s+\d+\s+obj[\b\s<])$/, c2 = new Uint8Array([116, 114, 97, 105, 108, 101, 114]), g2 = new Uint8Array([115, 116, 97, 114, 116, 120, 114, 101, 102]), m2 = new Uint8Array([111, 98, 106]), y2 = new Uint8Array([47, 88, 82, 101, 102]);
              this.entries.length = 0;
              this._cacheMap.clear();
              var v = this.stream;
              v.pos = 0;
              for (var k, _ = v.getBytes(), w = _.length, S = v.start, C = [], x = []; S < w; ) {
                var O = _[S];
                if (O !== 9 && O !== 10 && O !== 13 && O !== 32)
                  if (O !== 37) {
                    var T = readToken(_, S), E = void 0;
                    if (T.startsWith("xref") && (T.length === 4 || /\s/.test(T[4]))) {
                      S += skipUntil(_, S, c2);
                      C.push(S);
                      S += skipUntil(_, S, g2);
                    } else if (E = t4.exec(T)) {
                      var M = 0 | E[1], R = 0 | E[2], D = void 0, j = S + T.length, L = false;
                      if (this.entries[M]) {
                        if (this.entries[M].gen === R)
                          try {
                            new d.Parser({ lexer: new d.Lexer(v.makeSubStream(j)) }).getObj();
                            L = true;
                          } catch (t5) {
                            t5 instanceof h.ParserEOFException ? (0, l.warn)("indexObjects -- checking object (".concat(T, '): "').concat(t5, '".')) : L = true;
                          }
                      } else
                        L = true;
                      L && (this.entries[M] = { offset: S - v.start, gen: R, uncompressed: true });
                      for (; j < _.length; ) {
                        var N = j + skipUntil(_, j, m2) + 4;
                        D = N - S;
                        var U = Math.max(N - 25, j), H = (0, l.bytesToString)(_.subarray(U, N));
                        if (r4.test(H))
                          break;
                        var $ = o3.exec(H);
                        if ($ && $[1]) {
                          (0, l.warn)('indexObjects: Found new "obj" inside of another "obj", caused by missing "endobj" -- trying to recover.');
                          D -= $[1].length;
                          break;
                        }
                        j = N;
                      }
                      var X = _.subarray(S, S + D), q = skipUntil(X, 0, y2);
                      if (q < D && X[q + 5] < 64) {
                        x.push(S - v.start);
                        this.xrefstms[S - v.start] = 1;
                      }
                      S += D;
                    } else if (T.startsWith("trailer") && (T.length === 7 || /\s/.test(T[7]))) {
                      C.push(S);
                      S += skipUntil(_, S, g2);
                    } else
                      S += T.length + 1;
                  } else
                    do {
                      if (++S >= w)
                        break;
                      O = _[S];
                    } while (O !== 10 && O !== 13);
                else
                  ++S;
              }
              for (var G = 0, z = x.length; G < z; ++G) {
                this.startXRefQueue.push(x[G]);
                this.readXRef(true);
              }
              for (var W = 0, V = C.length; W < V; ++W) {
                v.pos = C[W];
                var K = new d.Parser({ lexer: new d.Lexer(v), xref: this, allowStreams: true, recoveryMode: true }), Y = K.getObj();
                if ((0, u.isCmd)(Y, "trailer")) {
                  var J = K.getObj();
                  if (J instanceof u.Dict) {
                    try {
                      var Z = J.get("Root");
                      if (!(Z instanceof u.Dict))
                        continue;
                      var Q = Z.get("Pages");
                      if (!(Q instanceof u.Dict))
                        continue;
                      var ee = Q.get("Count");
                      if (!Number.isInteger(ee))
                        continue;
                    } catch (t5) {
                      continue;
                    }
                    if (J.has("ID"))
                      return J;
                    k = J;
                  }
                }
              }
              if (k)
                return k;
              if (this.topDict)
                return this.topDict;
              throw new l.InvalidPDFException("Invalid PDF structure.");
            } }, { key: "readXRef", value: function readXRef() {
              var t4 = arguments.length > 0 && arguments[0] !== void 0 && arguments[0], r4 = this.stream, o3 = /* @__PURE__ */ new Set();
              try {
                for (; this.startXRefQueue.length; ) {
                  var c2 = this.startXRefQueue[0];
                  if (o3.has(c2)) {
                    (0, l.warn)("readXRef - skipping XRef table since it was already parsed.");
                    this.startXRefQueue.shift();
                  } else {
                    o3.add(c2);
                    r4.pos = c2 + r4.start;
                    var m2 = new d.Parser({ lexer: new d.Lexer(r4), xref: this, allowStreams: true }), y2 = m2.getObj(), v = void 0;
                    if ((0, u.isCmd)(y2, "xref")) {
                      v = this.processXRefTable(m2);
                      this.topDict || (this.topDict = v);
                      y2 = v.get("XRefStm");
                      if (Number.isInteger(y2)) {
                        var k = y2;
                        if (!(k in this.xrefstms)) {
                          this.xrefstms[k] = 1;
                          this.startXRefQueue.push(k);
                        }
                      }
                    } else {
                      if (!Number.isInteger(y2))
                        throw new l.FormatError("Invalid XRef stream header");
                      if (!(Number.isInteger(m2.getObj()) && (0, u.isCmd)(m2.getObj(), "obj") && (y2 = m2.getObj()) instanceof g.BaseStream))
                        throw new l.FormatError("Invalid XRef stream");
                      v = this.processXRefStream(y2);
                      this.topDict || (this.topDict = v);
                      if (!v)
                        throw new l.FormatError("Failed to read XRef stream");
                    }
                    y2 = v.get("Prev");
                    Number.isInteger(y2) ? this.startXRefQueue.push(y2) : y2 instanceof u.Ref && this.startXRefQueue.push(y2.num);
                    this.startXRefQueue.shift();
                  }
                }
                return this.topDict;
              } catch (t5) {
                if (t5 instanceof h.MissingDataException)
                  throw t5;
                (0, l.info)("(while reading XRef): " + t5);
                this.startXRefQueue.shift();
              }
              if (!t4)
                throw new h.XRefParseException();
            } }, { key: "getEntry", value: function getEntry(t4) {
              var r4 = this.entries[t4];
              return r4 && !r4.free && r4.offset ? r4 : null;
            } }, { key: "fetchIfRef", value: function fetchIfRef(t4) {
              var r4 = arguments.length > 1 && arguments[1] !== void 0 && arguments[1];
              return t4 instanceof u.Ref ? this.fetch(t4, r4) : t4;
            } }, { key: "fetch", value: function fetch2(t4) {
              var r4 = arguments.length > 1 && arguments[1] !== void 0 && arguments[1];
              if (!(t4 instanceof u.Ref))
                throw new Error("ref object is not a reference");
              var o3 = t4.num, c2 = this._cacheMap.get(o3);
              if (c2 !== void 0) {
                c2 instanceof u.Dict && !c2.objId && (c2.objId = t4.toString());
                return c2;
              }
              var h2 = this.getEntry(o3);
              if (h2 === null) {
                this._cacheMap.set(o3, h2);
                return h2;
              }
              if (this._pendingRefs.has(t4)) {
                this._pendingRefs.remove(t4);
                (0, l.warn)("Ignoring circular reference: ".concat(t4, "."));
                return u.CIRCULAR_REF;
              }
              this._pendingRefs.put(t4);
              try {
                h2 = h2.uncompressed ? this.fetchUncompressed(t4, h2, r4) : this.fetchCompressed(t4, h2, r4);
                this._pendingRefs.remove(t4);
              } catch (r5) {
                this._pendingRefs.remove(t4);
                throw r5;
              }
              h2 instanceof u.Dict ? h2.objId = t4.toString() : h2 instanceof g.BaseStream && (h2.dict.objId = t4.toString());
              return h2;
            } }, { key: "fetchUncompressed", value: function fetchUncompressed(t4, r4) {
              var o3 = arguments.length > 2 && arguments[2] !== void 0 && arguments[2], c2 = t4.gen, l2 = t4.num;
              if (r4.gen !== c2)
                throw new h.XRefEntryException("Inconsistent generation in XRef: ".concat(t4));
              var m2 = this.stream.makeSubStream(r4.offset + this.stream.start), y2 = new d.Parser({ lexer: new d.Lexer(m2), xref: this, allowStreams: true }), v = y2.getObj(), k = y2.getObj(), _ = y2.getObj();
              if (v !== l2 || k !== c2 || !(_ instanceof u.Cmd))
                throw new h.XRefEntryException("Bad (uncompressed) XRef entry: ".concat(t4));
              if (_.cmd !== "obj") {
                if (_.cmd.startsWith("obj")) {
                  l2 = parseInt(_.cmd.substring(3), 10);
                  if (!Number.isNaN(l2))
                    return l2;
                }
                throw new h.XRefEntryException("Bad (uncompressed) XRef entry: ".concat(t4));
              }
              (r4 = this.encrypt && !o3 ? y2.getObj(this.encrypt.createCipherTransform(l2, c2)) : y2.getObj()) instanceof g.BaseStream || this._cacheMap.set(l2, r4);
              return r4;
            } }, { key: "fetchCompressed", value: function fetchCompressed(t4, r4) {
              var o3 = r4.offset, c2 = this.fetch(u.Ref.get(o3, 0));
              if (!(c2 instanceof g.BaseStream))
                throw new l.FormatError("bad ObjStm stream");
              var m2 = c2.dict.get("First"), y2 = c2.dict.get("N");
              if (!Number.isInteger(m2) || !Number.isInteger(y2))
                throw new l.FormatError("invalid first and n parameters for ObjStm stream");
              for (var v = new d.Parser({ lexer: new d.Lexer(c2), xref: this, allowStreams: true }), k = new Array(y2), _ = new Array(y2), w = 0; w < y2; ++w) {
                var S = v.getObj();
                if (!Number.isInteger(S))
                  throw new l.FormatError("invalid object number in the ObjStm stream: ".concat(S));
                var C = v.getObj();
                if (!Number.isInteger(C))
                  throw new l.FormatError("invalid object offset in the ObjStm stream: ".concat(C));
                k[w] = S;
                _[w] = C;
              }
              for (var x = (c2.start || 0) + m2, O = new Array(y2), T = 0; T < y2; ++T) {
                var E = T < y2 - 1 ? _[T + 1] - _[T] : void 0;
                if (E < 0)
                  throw new l.FormatError("Invalid offset in the ObjStm stream.");
                var M = (v = new d.Parser({ lexer: new d.Lexer(c2.makeSubStream(x + _[T], E, c2.dict)), xref: this, allowStreams: true })).getObj();
                O[T] = M;
                if (!(M instanceof g.BaseStream)) {
                  var R = k[T], D = this.entries[R];
                  D && D.offset === o3 && D.gen === T && this._cacheMap.set(R, M);
                }
              }
              if ((r4 = O[r4.gen]) === void 0)
                throw new h.XRefEntryException("Bad (compressed) XRef entry: ".concat(t4));
              return r4;
            } }, { key: "fetchIfRefAsync", value: (r3 = _asyncToGenerator(c.default.mark(function _callee(t4, r4) {
              return c.default.wrap(function _callee$(o3) {
                for (; ; )
                  switch (o3.prev = o3.next) {
                    case 0:
                      if (!(t4 instanceof u.Ref)) {
                        o3.next = 2;
                        break;
                      }
                      return o3.abrupt("return", this.fetchAsync(t4, r4));
                    case 2:
                      return o3.abrupt("return", t4);
                    case 3:
                    case "end":
                      return o3.stop();
                  }
              }, _callee, this);
            })), function fetchIfRefAsync(t4, o3) {
              return r3.apply(this, arguments);
            }) }, { key: "fetchAsync", value: (t3 = _asyncToGenerator(c.default.mark(function _callee2(t4, r4) {
              return c.default.wrap(function _callee2$(o3) {
                for (; ; )
                  switch (o3.prev = o3.next) {
                    case 0:
                      o3.prev = 0;
                      return o3.abrupt("return", this.fetch(t4, r4));
                    case 4:
                      o3.prev = 4;
                      o3.t0 = o3.catch(0);
                      if (o3.t0 instanceof h.MissingDataException) {
                        o3.next = 8;
                        break;
                      }
                      throw o3.t0;
                    case 8:
                      o3.next = 10;
                      return this.pdfManager.requestRange(o3.t0.begin, o3.t0.end);
                    case 10:
                      return o3.abrupt("return", this.fetchAsync(t4, r4));
                    case 11:
                    case "end":
                      return o3.stop();
                  }
              }, _callee2, this, [[0, 4]]);
            })), function fetchAsync(r4, o3) {
              return t3.apply(this, arguments);
            }) }, { key: "getCatalogObj", value: function getCatalogObj() {
              return this.root;
            } }]);
            var t3, r3;
            return XRef;
          }();
          r2.XRef = y;
        }, (t2, r2, o2) => {
          "use strict";
          Object.defineProperty(r2, "__esModule", { value: true });
          r2.MessageHandler = void 0;
          var c = function _interopRequireDefault(t3) {
            return t3 && t3.__esModule ? t3 : { default: t3 };
          }(o2(2)), l = o2(4);
          function asyncGeneratorStep(t3, r3, o3, c2, l2, u2, h2) {
            try {
              var d2 = t3[u2](h2), g2 = d2.value;
            } catch (t4) {
              o3(t4);
              return;
            }
            d2.done ? r3(g2) : Promise.resolve(g2).then(c2, l2);
          }
          function _defineProperties(t3, r3) {
            for (var o3 = 0; o3 < r3.length; o3++) {
              var c2 = r3[o3];
              c2.enumerable = c2.enumerable || false;
              c2.configurable = true;
              "value" in c2 && (c2.writable = true);
              Object.defineProperty(t3, c2.key, c2);
            }
          }
          function _typeof(t3) {
            return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t4) {
              return typeof t4;
            } : function(t4) {
              return t4 && typeof Symbol == "function" && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
            }, _typeof(t3);
          }
          var u = 1, h = 2, d = 1, g = 2, m = 3, y = 4, v = 5, k = 6, _ = 7, w = 8;
          function wrapReason(t3) {
            t3 instanceof Error || _typeof(t3) === "object" && t3 !== null || (0, l.unreachable)('wrapReason: Expected "reason" to be a (possibly cloned) Error.');
            switch (t3.name) {
              case "AbortException":
                return new l.AbortException(t3.message);
              case "MissingPDFException":
                return new l.MissingPDFException(t3.message);
              case "PasswordException":
                return new l.PasswordException(t3.message, t3.code);
              case "UnexpectedResponseException":
                return new l.UnexpectedResponseException(t3.message, t3.status);
              case "UnknownErrorException":
                return new l.UnknownErrorException(t3.message, t3.details);
              default:
                return new l.UnknownErrorException(t3.message, t3.toString());
            }
          }
          var S = function() {
            function MessageHandler(t4, r3, o3) {
              var c2 = this;
              !function _classCallCheck(t5, r4) {
                if (!(t5 instanceof r4))
                  throw new TypeError("Cannot call a class as a function");
              }(this, MessageHandler);
              this.sourceName = t4;
              this.targetName = r3;
              this.comObj = o3;
              this.callbackId = 1;
              this.streamId = 1;
              this.streamSinks = /* @__PURE__ */ Object.create(null);
              this.streamControllers = /* @__PURE__ */ Object.create(null);
              this.callbackCapabilities = /* @__PURE__ */ Object.create(null);
              this.actionHandler = /* @__PURE__ */ Object.create(null);
              this._onComObjOnMessage = function(t5) {
                var r4 = t5.data;
                if (r4.targetName === c2.sourceName)
                  if (r4.stream)
                    c2._processStreamMessage(r4);
                  else if (r4.callback) {
                    var l2 = r4.callbackId, d2 = c2.callbackCapabilities[l2];
                    if (!d2)
                      throw new Error("Cannot resolve callback ".concat(l2));
                    delete c2.callbackCapabilities[l2];
                    if (r4.callback === u)
                      d2.resolve(r4.data);
                    else {
                      if (r4.callback !== h)
                        throw new Error("Unexpected callback case");
                      d2.reject(wrapReason(r4.reason));
                    }
                  } else {
                    var g2 = c2.actionHandler[r4.action];
                    if (!g2)
                      throw new Error("Unknown action from worker: ".concat(r4.action));
                    if (r4.callbackId) {
                      var m2 = c2.sourceName, y2 = r4.sourceName;
                      new Promise(function(t6) {
                        t6(g2(r4.data));
                      }).then(function(t6) {
                        o3.postMessage({ sourceName: m2, targetName: y2, callback: u, callbackId: r4.callbackId, data: t6 });
                      }, function(t6) {
                        o3.postMessage({ sourceName: m2, targetName: y2, callback: h, callbackId: r4.callbackId, reason: wrapReason(t6) });
                      });
                    } else
                      r4.streamId ? c2._createStreamSink(r4) : g2(r4.data);
                  }
              };
              o3.addEventListener("message", this._onComObjOnMessage);
            }
            !function _createClass(t4, r3, o3) {
              r3 && _defineProperties(t4.prototype, r3);
              o3 && _defineProperties(t4, o3);
              Object.defineProperty(t4, "prototype", { writable: false });
              return t4;
            }(MessageHandler, [{ key: "on", value: function on(t4, r3) {
              var o3 = this.actionHandler;
              if (o3[t4])
                throw new Error('There is already an actionName called "'.concat(t4, '"'));
              o3[t4] = r3;
            } }, { key: "send", value: function send(t4, r3, o3) {
              this.comObj.postMessage({ sourceName: this.sourceName, targetName: this.targetName, action: t4, data: r3 }, o3);
            } }, { key: "sendWithPromise", value: function sendWithPromise(t4, r3, o3) {
              var c2 = this.callbackId++, u2 = (0, l.createPromiseCapability)();
              this.callbackCapabilities[c2] = u2;
              try {
                this.comObj.postMessage({ sourceName: this.sourceName, targetName: this.targetName, action: t4, callbackId: c2, data: r3 }, o3);
              } catch (t5) {
                u2.reject(t5);
              }
              return u2.promise;
            } }, { key: "sendWithStream", value: function sendWithStream(t4, r3, o3, c2) {
              var u2 = this, h2 = this.streamId++, g2 = this.sourceName, m2 = this.targetName, y2 = this.comObj;
              return new ReadableStream({ start: function start(o4) {
                var d2 = (0, l.createPromiseCapability)();
                u2.streamControllers[h2] = { controller: o4, startCall: d2, pullCall: null, cancelCall: null, isClosed: false };
                y2.postMessage({ sourceName: g2, targetName: m2, action: t4, streamId: h2, data: r3, desiredSize: o4.desiredSize }, c2);
                return d2.promise;
              }, pull: function pull(t5) {
                var r4 = (0, l.createPromiseCapability)();
                u2.streamControllers[h2].pullCall = r4;
                y2.postMessage({ sourceName: g2, targetName: m2, stream: k, streamId: h2, desiredSize: t5.desiredSize });
                return r4.promise;
              }, cancel: function cancel(t5) {
                (0, l.assert)(t5 instanceof Error, "cancel must have a valid reason");
                var r4 = (0, l.createPromiseCapability)();
                u2.streamControllers[h2].cancelCall = r4;
                u2.streamControllers[h2].isClosed = true;
                y2.postMessage({ sourceName: g2, targetName: m2, stream: d, streamId: h2, reason: wrapReason(t5) });
                return r4.promise;
              } }, o3);
            } }, { key: "_createStreamSink", value: function _createStreamSink(t4) {
              var r3 = t4.streamId, o3 = this.sourceName, c2 = t4.sourceName, u2 = this.comObj, h2 = this, d2 = this.actionHandler[t4.action], g2 = { enqueue: function enqueue(t5) {
                var h3 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 1, d3 = arguments.length > 2 ? arguments[2] : void 0;
                if (!this.isCancelled) {
                  var g3 = this.desiredSize;
                  this.desiredSize -= h3;
                  if (g3 > 0 && this.desiredSize <= 0) {
                    this.sinkCapability = (0, l.createPromiseCapability)();
                    this.ready = this.sinkCapability.promise;
                  }
                  u2.postMessage({ sourceName: o3, targetName: c2, stream: y, streamId: r3, chunk: t5 }, d3);
                }
              }, close: function close() {
                if (!this.isCancelled) {
                  this.isCancelled = true;
                  u2.postMessage({ sourceName: o3, targetName: c2, stream: m, streamId: r3 });
                  delete h2.streamSinks[r3];
                }
              }, error: function error(t5) {
                (0, l.assert)(t5 instanceof Error, "error must have a valid reason");
                if (!this.isCancelled) {
                  this.isCancelled = true;
                  u2.postMessage({ sourceName: o3, targetName: c2, stream: v, streamId: r3, reason: wrapReason(t5) });
                }
              }, sinkCapability: (0, l.createPromiseCapability)(), onPull: null, onCancel: null, isCancelled: false, desiredSize: t4.desiredSize, ready: null };
              g2.sinkCapability.resolve();
              g2.ready = g2.sinkCapability.promise;
              this.streamSinks[r3] = g2;
              new Promise(function(r4) {
                r4(d2(t4.data, g2));
              }).then(function() {
                u2.postMessage({ sourceName: o3, targetName: c2, stream: w, streamId: r3, success: true });
              }, function(t5) {
                u2.postMessage({ sourceName: o3, targetName: c2, stream: w, streamId: r3, reason: wrapReason(t5) });
              });
            } }, { key: "_processStreamMessage", value: function _processStreamMessage(t4) {
              var r3 = t4.streamId, o3 = this.sourceName, c2 = t4.sourceName, u2 = this.comObj, h2 = this.streamControllers[r3], S2 = this.streamSinks[r3];
              switch (t4.stream) {
                case w:
                  t4.success ? h2.startCall.resolve() : h2.startCall.reject(wrapReason(t4.reason));
                  break;
                case _:
                  t4.success ? h2.pullCall.resolve() : h2.pullCall.reject(wrapReason(t4.reason));
                  break;
                case k:
                  if (!S2) {
                    u2.postMessage({ sourceName: o3, targetName: c2, stream: _, streamId: r3, success: true });
                    break;
                  }
                  S2.desiredSize <= 0 && t4.desiredSize > 0 && S2.sinkCapability.resolve();
                  S2.desiredSize = t4.desiredSize;
                  new Promise(function(t5) {
                    t5(S2.onPull && S2.onPull());
                  }).then(function() {
                    u2.postMessage({ sourceName: o3, targetName: c2, stream: _, streamId: r3, success: true });
                  }, function(t5) {
                    u2.postMessage({ sourceName: o3, targetName: c2, stream: _, streamId: r3, reason: wrapReason(t5) });
                  });
                  break;
                case y:
                  (0, l.assert)(h2, "enqueue should have stream controller");
                  if (h2.isClosed)
                    break;
                  h2.controller.enqueue(t4.chunk);
                  break;
                case m:
                  (0, l.assert)(h2, "close should have stream controller");
                  if (h2.isClosed)
                    break;
                  h2.isClosed = true;
                  h2.controller.close();
                  this._deleteStreamController(h2, r3);
                  break;
                case v:
                  (0, l.assert)(h2, "error should have stream controller");
                  h2.controller.error(wrapReason(t4.reason));
                  this._deleteStreamController(h2, r3);
                  break;
                case g:
                  t4.success ? h2.cancelCall.resolve() : h2.cancelCall.reject(wrapReason(t4.reason));
                  this._deleteStreamController(h2, r3);
                  break;
                case d:
                  if (!S2)
                    break;
                  new Promise(function(r4) {
                    r4(S2.onCancel && S2.onCancel(wrapReason(t4.reason)));
                  }).then(function() {
                    u2.postMessage({ sourceName: o3, targetName: c2, stream: g, streamId: r3, success: true });
                  }, function(t5) {
                    u2.postMessage({ sourceName: o3, targetName: c2, stream: g, streamId: r3, reason: wrapReason(t5) });
                  });
                  S2.sinkCapability.reject(wrapReason(t4.reason));
                  S2.isCancelled = true;
                  delete this.streamSinks[r3];
                  break;
                default:
                  throw new Error("Unexpected stream case");
              }
            } }, { key: "_deleteStreamController", value: (t3 = function _asyncToGenerator(t4) {
              return function() {
                var r3 = this, o3 = arguments;
                return new Promise(function(c2, l2) {
                  var u2 = t4.apply(r3, o3);
                  function _next(t5) {
                    asyncGeneratorStep(u2, c2, l2, _next, _throw, "next", t5);
                  }
                  function _throw(t5) {
                    asyncGeneratorStep(u2, c2, l2, _next, _throw, "throw", t5);
                  }
                  _next(void 0);
                });
              };
            }(c.default.mark(function _callee(t4, r3) {
              return c.default.wrap(function _callee$(o3) {
                for (; ; )
                  switch (o3.prev = o3.next) {
                    case 0:
                      o3.next = 2;
                      return Promise.allSettled([t4.startCall && t4.startCall.promise, t4.pullCall && t4.pullCall.promise, t4.cancelCall && t4.cancelCall.promise]);
                    case 2:
                      delete this.streamControllers[r3];
                    case 3:
                    case "end":
                      return o3.stop();
                  }
              }, _callee, this);
            })), function _deleteStreamController(r3, o3) {
              return t3.apply(this, arguments);
            }) }, { key: "destroy", value: function destroy() {
              this.comObj.removeEventListener("message", this._onComObjOnMessage);
            } }]);
            var t3;
            return MessageHandler;
          }();
          r2.MessageHandler = S;
        }, (t2, r2, o2) => {
          "use strict";
          Object.defineProperty(r2, "__esModule", { value: true });
          r2.PDFWorkerStream = void 0;
          var c = function _interopRequireDefault(t3) {
            return t3 && t3.__esModule ? t3 : { default: t3 };
          }(o2(2)), l = o2(4);
          function asyncGeneratorStep(t3, r3, o3, c2, l2, u2, h2) {
            try {
              var d2 = t3[u2](h2), g = d2.value;
            } catch (t4) {
              o3(t4);
              return;
            }
            d2.done ? r3(g) : Promise.resolve(g).then(c2, l2);
          }
          function _asyncToGenerator(t3) {
            return function() {
              var r3 = this, o3 = arguments;
              return new Promise(function(c2, l2) {
                var u2 = t3.apply(r3, o3);
                function _next(t4) {
                  asyncGeneratorStep(u2, c2, l2, _next, _throw, "next", t4);
                }
                function _throw(t4) {
                  asyncGeneratorStep(u2, c2, l2, _next, _throw, "throw", t4);
                }
                _next(void 0);
              });
            };
          }
          function _createForOfIteratorHelper(t3, r3) {
            var o3 = typeof Symbol != "undefined" && t3[Symbol.iterator] || t3["@@iterator"];
            if (!o3) {
              if (Array.isArray(t3) || (o3 = function _unsupportedIterableToArray(t4, r4) {
                if (!t4)
                  return;
                if (typeof t4 == "string")
                  return _arrayLikeToArray(t4, r4);
                var o4 = Object.prototype.toString.call(t4).slice(8, -1);
                o4 === "Object" && t4.constructor && (o4 = t4.constructor.name);
                if (o4 === "Map" || o4 === "Set")
                  return Array.from(t4);
                if (o4 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(o4))
                  return _arrayLikeToArray(t4, r4);
              }(t3)) || r3 && t3 && typeof t3.length == "number") {
                o3 && (t3 = o3);
                var c2 = 0, l2 = function F() {
                };
                return { s: l2, n: function n() {
                  return c2 >= t3.length ? { done: true } : { done: false, value: t3[c2++] };
                }, e: function e(t4) {
                  throw t4;
                }, f: l2 };
              }
              throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
            }
            var u2, h2 = true, d2 = false;
            return { s: function s() {
              o3 = o3.call(t3);
            }, n: function n() {
              var t4 = o3.next();
              h2 = t4.done;
              return t4;
            }, e: function e(t4) {
              d2 = true;
              u2 = t4;
            }, f: function f() {
              try {
                h2 || o3.return == null || o3.return();
              } finally {
                if (d2)
                  throw u2;
              }
            } };
          }
          function _arrayLikeToArray(t3, r3) {
            (r3 == null || r3 > t3.length) && (r3 = t3.length);
            for (var o3 = 0, c2 = new Array(r3); o3 < r3; o3++)
              c2[o3] = t3[o3];
            return c2;
          }
          function _classCallCheck(t3, r3) {
            if (!(t3 instanceof r3))
              throw new TypeError("Cannot call a class as a function");
          }
          function _defineProperties(t3, r3) {
            for (var o3 = 0; o3 < r3.length; o3++) {
              var c2 = r3[o3];
              c2.enumerable = c2.enumerable || false;
              c2.configurable = true;
              "value" in c2 && (c2.writable = true);
              Object.defineProperty(t3, c2.key, c2);
            }
          }
          function _createClass(t3, r3, o3) {
            r3 && _defineProperties(t3.prototype, r3);
            o3 && _defineProperties(t3, o3);
            Object.defineProperty(t3, "prototype", { writable: false });
            return t3;
          }
          var u = function() {
            function PDFWorkerStream(t3) {
              _classCallCheck(this, PDFWorkerStream);
              this._msgHandler = t3;
              this._contentLength = null;
              this._fullRequestReader = null;
              this._rangeRequestReaders = [];
            }
            _createClass(PDFWorkerStream, [{ key: "getFullReader", value: function getFullReader() {
              (0, l.assert)(!this._fullRequestReader, "PDFWorkerStream.getFullReader can only be called once.");
              this._fullRequestReader = new h(this._msgHandler);
              return this._fullRequestReader;
            } }, { key: "getRangeReader", value: function getRangeReader(t3, r3) {
              var o3 = new d(t3, r3, this._msgHandler);
              this._rangeRequestReaders.push(o3);
              return o3;
            } }, { key: "cancelAllRequests", value: function cancelAllRequests(t3) {
              this._fullRequestReader && this._fullRequestReader.cancel(t3);
              var r3, o3 = _createForOfIteratorHelper(this._rangeRequestReaders.slice(0));
              try {
                for (o3.s(); !(r3 = o3.n()).done; ) {
                  r3.value.cancel(t3);
                }
              } catch (t4) {
                o3.e(t4);
              } finally {
                o3.f();
              }
            } }]);
            return PDFWorkerStream;
          }();
          r2.PDFWorkerStream = u;
          var h = function() {
            function PDFWorkerStreamReader(t4) {
              var r3 = this;
              _classCallCheck(this, PDFWorkerStreamReader);
              this._msgHandler = t4;
              this.onProgress = null;
              this._contentLength = null;
              this._isRangeSupported = false;
              this._isStreamingSupported = false;
              var o3 = this._msgHandler.sendWithStream("GetReader");
              this._reader = o3.getReader();
              this._headersReady = this._msgHandler.sendWithPromise("ReaderHeadersReady").then(function(t5) {
                r3._isStreamingSupported = t5.isStreamingSupported;
                r3._isRangeSupported = t5.isRangeSupported;
                r3._contentLength = t5.contentLength;
              });
            }
            _createClass(PDFWorkerStreamReader, [{ key: "headersReady", get: function get() {
              return this._headersReady;
            } }, { key: "contentLength", get: function get() {
              return this._contentLength;
            } }, { key: "isStreamingSupported", get: function get() {
              return this._isStreamingSupported;
            } }, { key: "isRangeSupported", get: function get() {
              return this._isRangeSupported;
            } }, { key: "read", value: (t3 = _asyncToGenerator(c.default.mark(function _callee() {
              var t4, r3;
              return c.default.wrap(function _callee$(o3) {
                for (; ; )
                  switch (o3.prev = o3.next) {
                    case 0:
                      o3.next = 2;
                      return this._reader.read();
                    case 2:
                      t4 = o3.sent;
                      r3 = t4.value;
                      if (!t4.done) {
                        o3.next = 7;
                        break;
                      }
                      return o3.abrupt("return", { value: void 0, done: true });
                    case 7:
                      return o3.abrupt("return", { value: r3.buffer, done: false });
                    case 8:
                    case "end":
                      return o3.stop();
                  }
              }, _callee, this);
            })), function read() {
              return t3.apply(this, arguments);
            }) }, { key: "cancel", value: function cancel(t4) {
              this._reader.cancel(t4);
            } }]);
            var t3;
            return PDFWorkerStreamReader;
          }(), d = function() {
            function PDFWorkerStreamRangeReader(t4, r3, o3) {
              _classCallCheck(this, PDFWorkerStreamRangeReader);
              this._msgHandler = o3;
              this.onProgress = null;
              var c2 = this._msgHandler.sendWithStream("GetRangeReader", { begin: t4, end: r3 });
              this._reader = c2.getReader();
            }
            _createClass(PDFWorkerStreamRangeReader, [{ key: "isStreamingSupported", get: function get() {
              return false;
            } }, { key: "read", value: (t3 = _asyncToGenerator(c.default.mark(function _callee2() {
              var t4, r3;
              return c.default.wrap(function _callee2$(o3) {
                for (; ; )
                  switch (o3.prev = o3.next) {
                    case 0:
                      o3.next = 2;
                      return this._reader.read();
                    case 2:
                      t4 = o3.sent;
                      r3 = t4.value;
                      if (!t4.done) {
                        o3.next = 7;
                        break;
                      }
                      return o3.abrupt("return", { value: void 0, done: true });
                    case 7:
                      return o3.abrupt("return", { value: r3.buffer, done: false });
                    case 8:
                    case "end":
                      return o3.stop();
                  }
              }, _callee2, this);
            })), function read() {
              return t3.apply(this, arguments);
            }) }, { key: "cancel", value: function cancel(t4) {
              this._reader.cancel(t4);
            } }]);
            var t3;
            return PDFWorkerStreamRangeReader;
          }();
        }], r = {};
        function __w_pdfjs_require__(o2) {
          var c = r[o2];
          if (c !== void 0)
            return c.exports;
          var l = r[o2] = { id: o2, loaded: false, exports: {} };
          t[o2](l, l.exports, __w_pdfjs_require__);
          l.loaded = true;
          return l.exports;
        }
        __w_pdfjs_require__.d = (t2, r2) => {
          for (var o2 in r2)
            __w_pdfjs_require__.o(r2, o2) && !__w_pdfjs_require__.o(t2, o2) && Object.defineProperty(t2, o2, { enumerable: true, get: r2[o2] });
        };
        __w_pdfjs_require__.o = (t2, r2) => Object.prototype.hasOwnProperty.call(t2, r2);
        __w_pdfjs_require__.r = (t2) => {
          typeof Symbol != "undefined" && Symbol.toStringTag && Object.defineProperty(t2, Symbol.toStringTag, { value: "Module" });
          Object.defineProperty(t2, "__esModule", { value: true });
        };
        __w_pdfjs_require__.nmd = (t2) => {
          t2.paths = [];
          t2.children || (t2.children = []);
          return t2;
        };
        var o = {};
        (() => {
          "use strict";
          var t2 = o;
          Object.defineProperty(t2, "__esModule", { value: true });
          Object.defineProperty(t2, "WorkerMessageHandler", { enumerable: true, get: function get() {
            return r2.WorkerMessageHandler;
          } });
          var r2 = __w_pdfjs_require__(1);
        })();
        return o;
      })());
    }
  });

  // <stdin>
  var import_pdf_worker_min = __toESM(require_pdf_worker_min());
})();
/*!
* DOMMatrix v1.0.3 (https://thednp.github.io/dommatrix/)
* Copyright 2022 © thednp
* Licensed under MIT (https://github.com/thednp/DOMMatrix/blob/master/LICENSE)
*/
