<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Phelipe Teles</title>
    <link>https://phelipetls.github.io/posts/</link>
    <description>Recent content in Posts on Phelipe Teles</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 15 Sep 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://phelipetls.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Making Neovim understand TypeScript path mapping</title>
      <link>https://phelipetls.github.io/posts/making-vim-understand-typescript-path-mapping/</link>
      <pubDate>Wed, 15 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>https://phelipetls.github.io/posts/making-vim-understand-typescript-path-mapping/</guid>
      <description>Vim has this well-known feature of opening the path under cursor with :h gf. This article explains well how this works.</description>
    </item>
    
    <item>
      <title>Automating svg to jsx conversion with svgr</title>
      <link>https://phelipetls.github.io/posts/automating-svg-to-jsx-conversion-with-svgr/</link>
      <pubDate>Wed, 08 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>https://phelipetls.github.io/posts/automating-svg-to-jsx-conversion-with-svgr/</guid>
      <description>I found that getting svg files from Figma ready to be used in your React applications can be a bottleneck and prone to error.</description>
    </item>
    
    <item>
      <title>Extending Vim with ripgrep</title>
      <link>https://phelipetls.github.io/posts/extending-vim-with-ripgrep/</link>
      <pubDate>Fri, 11 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://phelipetls.github.io/posts/extending-vim-with-ripgrep/</guid>
      <description>In this post I want to talk about how I use ripgrep in vim (nvim to me but it doesn&amp;rsquo;t matter here).</description>
    </item>
    
    <item>
      <title>Implementing dark mode for SSR websites</title>
      <link>https://phelipetls.github.io/posts/dark-mode-implementation-for-ssr-websites/</link>
      <pubDate>Thu, 29 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://phelipetls.github.io/posts/dark-mode-implementation-for-ssr-websites/</guid>
      <description>Implementing dark mode in a server side rendered website is not as simple as you may initially think. There are some hacky things we should do to avoid flash of incorrect theme on reload, animation etc.</description>
    </item>
    
    <item>
      <title>My experience testing React applications</title>
      <link>https://phelipetls.github.io/posts/my-experience-testing-react-applications/</link>
      <pubDate>Wed, 28 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://phelipetls.github.io/posts/my-experience-testing-react-applications/</guid>
      <description>Testing is not easy, it&amp;rsquo;s a trade-off: either you slow down new feature development by writing test to avoid regressions later, or you develop untested features and bugs will inevitably be introduced later.</description>
    </item>
    
    <item>
      <title>Migrating from create-react-app to Vite</title>
      <link>https://phelipetls.github.io/posts/migrating-from-cra-to-vite/</link>
      <pubDate>Fri, 23 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://phelipetls.github.io/posts/migrating-from-cra-to-vite/</guid>
      <description>I started to learn React with create-react-app like everyone else, and it really does its job well. I never had to worry too much about tooling but&amp;hellip; it is slow to start up.</description>
    </item>
    
    <item>
      <title>Configuring eslint to work with Neovim LSP</title>
      <link>https://phelipetls.github.io/posts/configuring-eslint-to-work-with-neovim-lsp/</link>
      <pubDate>Mon, 28 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://phelipetls.github.io/posts/configuring-eslint-to-work-with-neovim-lsp/</guid>
      <description>The way we&amp;rsquo;ll get this to work is by using a generic Language Server called efm-langserver, which is written in Go.</description>
    </item>
    
    <item>
      <title>Python f-strings syntax highlighting in Vim</title>
      <link>https://phelipetls.github.io/posts/f-strings-syntax-highlighting-in-vim/</link>
      <pubDate>Wed, 28 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://phelipetls.github.io/posts/f-strings-syntax-highlighting-in-vim/</guid>
      <description>UPDATE 2020-10-30: First iteration of this post was very naive, supporting only the very basic. See the diff that adds support for string modifiers and escape sequences.</description>
    </item>
    
    <item>
      <title>Deploying a Flask app on a Heroku free dyno</title>
      <link>https://phelipetls.github.io/posts/deploying-flask-app-on-heroku/</link>
      <pubDate>Sun, 11 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://phelipetls.github.io/posts/deploying-flask-app-on-heroku/</guid>
      <description>tl;dr: Use waitress instead of gunicorn
diff --git a/Procfile b/Procfile index d49e1a0..0cd38da 100644 --- a/Procfile +++ b/Procfile @@ -1 +1 @@ -web: gunicorn &amp;#34;app:create_app()&amp;#34; +web: waitress-serve --port=$PORT --threads=${WEB_CONCURRENCY:-2} --call &amp;#39;app:create_app&amp;#39; Recently, I had trouble deploying a Flask application using gunicorn as the WSGI server on a Heroku&amp;rsquo;s free dyno tier.</description>
    </item>
    
    <item>
      <title>A Vim errorformat for pytest</title>
      <link>https://phelipetls.github.io/posts/vim-errorformat-for-pytest/</link>
      <pubDate>Wed, 07 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://phelipetls.github.io/posts/vim-errorformat-for-pytest/</guid>
      <description>Ah, errorformat, the feature everybody loves to hate. :) &amp;ndash; lcd047, on Stack Overflow
 I really like Vim&amp;rsquo;s :h errorformat feature, but only when I manage to get it right.</description>
    </item>
    
    <item>
      <title>Asynchronous :make in Neovim with Lua</title>
      <link>https://phelipetls.github.io/posts/async-make-in-nvim-with-lua/</link>
      <pubDate>Wed, 12 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://phelipetls.github.io/posts/async-make-in-nvim-with-lua/</guid>
      <description>The :make command in Vim is quite useful, it runs whatever program is under the makeprg option and returns its output in the quickfix list, where you&amp;rsquo;ll be able to hop through the errors if they were parsed correctly by the errorformat option.</description>
    </item>
    
    <item>
      <title>Getting Salesforce reports with VBA</title>
      <link>https://phelipetls.github.io/posts/getting-salesforce-reports-with-vba/</link>
      <pubDate>Wed, 05 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://phelipetls.github.io/posts/getting-salesforce-reports-with-vba/</guid>
      <description>For those who find themselves in an environment which heavily relies on Excel and Salesforce, you may be interested in a way to automate the process of downloading reports from inside Excel with VBA only.</description>
    </item>
    
  </channel>
</rss>
